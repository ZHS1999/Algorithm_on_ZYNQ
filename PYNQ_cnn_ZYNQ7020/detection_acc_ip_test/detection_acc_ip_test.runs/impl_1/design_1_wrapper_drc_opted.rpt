Copyright 1986-2018 Xilinx, Inc. All Rights Reserved.
---------------------------------------------------------------------------------------------------------------------------------------
| Tool Version : Vivado v.2018.3 (win64) Build 2405991 Thu Dec  6 23:38:27 MST 2018
| Date         : Mon Apr 22 14:38:51 2024
| Host         : SUN running 64-bit major release  (build 9200)
| Command      : report_drc -file design_1_wrapper_drc_opted.rpt -pb design_1_wrapper_drc_opted.pb -rpx design_1_wrapper_drc_opted.rpx
| Design       : design_1_wrapper
| Device       : xc7z020clg400-2
| Speed File   : -2
| Design State : Synthesized
---------------------------------------------------------------------------------------------------------------------------------------

Report DRC

Table of Contents
-----------------
1. REPORT SUMMARY
2. REPORT DETAILS

1. REPORT SUMMARY
-----------------
            Netlist: netlist
          Floorplan: design_1
      Design limits: <entire design considered>
           Ruledeck: default
             Max violations: <unlimited>
             Violations found: 306
+-----------+----------+----------------------------+------------+
| Rule      | Severity | Description                | Violations |
+-----------+----------+----------------------------+------------+
| CHECK-3   | Warning  | Report rule limit reached  | 1          |
| DPIP-1    | Warning  | Input pipelining           | 76         |
| DPOP-1    | Warning  | PREG Output pipelining     | 63         |
| DPOP-2    | Warning  | MREG Output pipelining     | 146        |
| REQP-1840 | Warning  | RAMB18 async control check | 20         |
+-----------+----------+----------------------------+------------+

2. REPORT DETAILS
-----------------
CHECK-3#1 Warning
Report rule limit reached  
REQP-1840 rule limit reached: 20 violations have been found.
Related violations: <none>

DPIP-1#1 Warning
Input pipelining  
DSP design_1_i/detection_acc_0/inst/grp_conv_fu_1033/ret_V_2_1_reg_7872_reg input design_1_i/detection_acc_0/inst/grp_conv_fu_1033/ret_V_2_1_reg_7872_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#2 Warning
Input pipelining  
DSP design_1_i/detection_acc_0/inst/grp_conv_fu_1033/ret_V_2_1_reg_7872_reg input design_1_i/detection_acc_0/inst/grp_conv_fu_1033/ret_V_2_1_reg_7872_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#3 Warning
Input pipelining  
DSP design_1_i/detection_acc_0/inst/grp_conv_fu_1033/ret_V_2_2_reg_7893_reg input design_1_i/detection_acc_0/inst/grp_conv_fu_1033/ret_V_2_2_reg_7893_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#4 Warning
Input pipelining  
DSP design_1_i/detection_acc_0/inst/grp_conv_fu_1033/ret_V_2_2_reg_7893_reg input design_1_i/detection_acc_0/inst/grp_conv_fu_1033/ret_V_2_2_reg_7893_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#5 Warning
Input pipelining  
DSP design_1_i/detection_acc_0/inst/grp_conv_fu_1033/ret_V_2_3_reg_7914_reg input design_1_i/detection_acc_0/inst/grp_conv_fu_1033/ret_V_2_3_reg_7914_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#6 Warning
Input pipelining  
DSP design_1_i/detection_acc_0/inst/grp_conv_fu_1033/ret_V_2_3_reg_7914_reg input design_1_i/detection_acc_0/inst/grp_conv_fu_1033/ret_V_2_3_reg_7914_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#7 Warning
Input pipelining  
DSP design_1_i/detection_acc_0/inst/grp_conv_fu_1033/ret_V_2_reg_7831_reg input design_1_i/detection_acc_0/inst/grp_conv_fu_1033/ret_V_2_reg_7831_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#8 Warning
Input pipelining  
DSP design_1_i/detection_acc_0/inst/grp_conv_fu_1033/ret_V_2_reg_7831_reg input design_1_i/detection_acc_0/inst/grp_conv_fu_1033/ret_V_2_reg_7831_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#9 Warning
Input pipelining  
DSP design_1_i/detection_acc_0/inst/grp_conv_fu_1033/ret_V_8_reg_7882_reg input design_1_i/detection_acc_0/inst/grp_conv_fu_1033/ret_V_8_reg_7882_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#10 Warning
Input pipelining  
DSP design_1_i/detection_acc_0/inst/grp_conv_fu_1033/ret_V_8_reg_7882_reg input design_1_i/detection_acc_0/inst/grp_conv_fu_1033/ret_V_8_reg_7882_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#11 Warning
Input pipelining  
DSP design_1_i/detection_acc_0/inst/grp_conv_fu_1033/ret_V_9_reg_7903_reg input design_1_i/detection_acc_0/inst/grp_conv_fu_1033/ret_V_9_reg_7903_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#12 Warning
Input pipelining  
DSP design_1_i/detection_acc_0/inst/grp_conv_fu_1033/ret_V_9_reg_7903_reg input design_1_i/detection_acc_0/inst/grp_conv_fu_1033/ret_V_9_reg_7903_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#13 Warning
Input pipelining  
DSP design_1_i/detection_acc_0/inst/grp_conv_fu_1033/ret_V_reg_7807_reg input design_1_i/detection_acc_0/inst/grp_conv_fu_1033/ret_V_reg_7807_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#14 Warning
Input pipelining  
DSP design_1_i/detection_acc_0/inst/grp_conv_fu_1033/ret_V_reg_7807_reg input design_1_i/detection_acc_0/inst/grp_conv_fu_1033/ret_V_reg_7807_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#15 Warning
Input pipelining  
DSP design_1_i/detection_acc_0/inst/grp_conv_fu_1033/ret_V_s_reg_7861_reg input design_1_i/detection_acc_0/inst/grp_conv_fu_1033/ret_V_s_reg_7861_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#16 Warning
Input pipelining  
DSP design_1_i/detection_acc_0/inst/grp_conv_fu_1033/ret_V_s_reg_7861_reg input design_1_i/detection_acc_0/inst/grp_conv_fu_1033/ret_V_s_reg_7861_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#17 Warning
Input pipelining  
DSP design_1_i/detection_acc_0/inst/grp_conv_fu_1033/tmp_144_1_reg_8174_reg input design_1_i/detection_acc_0/inst/grp_conv_fu_1033/tmp_144_1_reg_8174_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#18 Warning
Input pipelining  
DSP design_1_i/detection_acc_0/inst/grp_conv_fu_1033/tmp_144_1_reg_8174_reg input design_1_i/detection_acc_0/inst/grp_conv_fu_1033/tmp_144_1_reg_8174_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#19 Warning
Input pipelining  
DSP design_1_i/detection_acc_0/inst/grp_conv_fu_1033/tmp_144_2_reg_8179_reg input design_1_i/detection_acc_0/inst/grp_conv_fu_1033/tmp_144_2_reg_8179_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#20 Warning
Input pipelining  
DSP design_1_i/detection_acc_0/inst/grp_conv_fu_1033/tmp_144_2_reg_8179_reg input design_1_i/detection_acc_0/inst/grp_conv_fu_1033/tmp_144_2_reg_8179_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#21 Warning
Input pipelining  
DSP design_1_i/detection_acc_0/inst/grp_conv_fu_1033/tmp_144_3_reg_8184_reg input design_1_i/detection_acc_0/inst/grp_conv_fu_1033/tmp_144_3_reg_8184_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#22 Warning
Input pipelining  
DSP design_1_i/detection_acc_0/inst/grp_conv_fu_1033/tmp_144_3_reg_8184_reg input design_1_i/detection_acc_0/inst/grp_conv_fu_1033/tmp_144_3_reg_8184_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#23 Warning
Input pipelining  
DSP design_1_i/detection_acc_0/inst/grp_conv_fu_1033/tmp_144_4_reg_8194_reg input design_1_i/detection_acc_0/inst/grp_conv_fu_1033/tmp_144_4_reg_8194_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#24 Warning
Input pipelining  
DSP design_1_i/detection_acc_0/inst/grp_conv_fu_1033/tmp_144_4_reg_8194_reg input design_1_i/detection_acc_0/inst/grp_conv_fu_1033/tmp_144_4_reg_8194_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#25 Warning
Input pipelining  
DSP design_1_i/detection_acc_0/inst/grp_conv_fu_1033/tmp_144_5_reg_8204_reg input design_1_i/detection_acc_0/inst/grp_conv_fu_1033/tmp_144_5_reg_8204_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#26 Warning
Input pipelining  
DSP design_1_i/detection_acc_0/inst/grp_conv_fu_1033/tmp_144_5_reg_8204_reg input design_1_i/detection_acc_0/inst/grp_conv_fu_1033/tmp_144_5_reg_8204_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#27 Warning
Input pipelining  
DSP design_1_i/detection_acc_0/inst/grp_conv_fu_1033/tmp_144_6_reg_8214_reg input design_1_i/detection_acc_0/inst/grp_conv_fu_1033/tmp_144_6_reg_8214_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#28 Warning
Input pipelining  
DSP design_1_i/detection_acc_0/inst/grp_conv_fu_1033/tmp_144_6_reg_8214_reg input design_1_i/detection_acc_0/inst/grp_conv_fu_1033/tmp_144_6_reg_8214_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#29 Warning
Input pipelining  
DSP design_1_i/detection_acc_0/inst/grp_conv_fu_1033/tmp_144_7_reg_8224_reg input design_1_i/detection_acc_0/inst/grp_conv_fu_1033/tmp_144_7_reg_8224_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#30 Warning
Input pipelining  
DSP design_1_i/detection_acc_0/inst/grp_conv_fu_1033/tmp_144_7_reg_8224_reg input design_1_i/detection_acc_0/inst/grp_conv_fu_1033/tmp_144_7_reg_8224_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#31 Warning
Input pipelining  
DSP design_1_i/detection_acc_0/inst/grp_conv_fu_1033/tmp_93_reg_8169_reg input design_1_i/detection_acc_0/inst/grp_conv_fu_1033/tmp_93_reg_8169_reg/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#32 Warning
Input pipelining  
DSP design_1_i/detection_acc_0/inst/grp_conv_fu_1033/tmp_93_reg_8169_reg input design_1_i/detection_acc_0/inst/grp_conv_fu_1033/tmp_93_reg_8169_reg/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#33 Warning
Input pipelining  
DSP design_1_i/detection_acc_0/inst/grp_input_load_conv_fu_1788/detection_acc_mulcud_U1/detection_acc_mulcud_MulnS_0_U/p_reg__0 input design_1_i/detection_acc_0/inst/grp_input_load_conv_fu_1788/detection_acc_mulcud_U1/detection_acc_mulcud_MulnS_0_U/p_reg__0/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#34 Warning
Input pipelining  
DSP design_1_i/detection_acc_0/inst/grp_input_load_conv_fu_1788/detection_acc_mulcud_U1/detection_acc_mulcud_MulnS_0_U/p_reg__2 input design_1_i/detection_acc_0/inst/grp_input_load_conv_fu_1788/detection_acc_mulcud_U1/detection_acc_mulcud_MulnS_0_U/p_reg__2/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#35 Warning
Input pipelining  
DSP design_1_i/detection_acc_0/inst/grp_input_load_conv_fu_1788/detection_acc_mulcud_U1/detection_acc_mulcud_MulnS_0_U/p_reg__4 input design_1_i/detection_acc_0/inst/grp_input_load_conv_fu_1788/detection_acc_mulcud_U1/detection_acc_mulcud_MulnS_0_U/p_reg__4/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#36 Warning
Input pipelining  
DSP design_1_i/detection_acc_0/inst/grp_input_load_conv_fu_1788/detection_acc_mulcud_U1/detection_acc_mulcud_MulnS_0_U/p_reg__6 input design_1_i/detection_acc_0/inst/grp_input_load_conv_fu_1788/detection_acc_mulcud_U1/detection_acc_mulcud_MulnS_0_U/p_reg__6/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#37 Warning
Input pipelining  
DSP design_1_i/detection_acc_0/inst/grp_input_load_conv_fu_1788/detection_acc_mulcud_U1/detection_acc_mulcud_MulnS_0_U/tmp_product input design_1_i/detection_acc_0/inst/grp_input_load_conv_fu_1788/detection_acc_mulcud_U1/detection_acc_mulcud_MulnS_0_U/tmp_product/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#38 Warning
Input pipelining  
DSP design_1_i/detection_acc_0/inst/grp_input_load_conv_fu_1788/detection_acc_mulcud_U1/detection_acc_mulcud_MulnS_0_U/tmp_product__0 input design_1_i/detection_acc_0/inst/grp_input_load_conv_fu_1788/detection_acc_mulcud_U1/detection_acc_mulcud_MulnS_0_U/tmp_product__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#39 Warning
Input pipelining  
DSP design_1_i/detection_acc_0/inst/grp_input_load_conv_fu_1788/detection_acc_mulcud_U1/detection_acc_mulcud_MulnS_0_U/tmp_product__1 input design_1_i/detection_acc_0/inst/grp_input_load_conv_fu_1788/detection_acc_mulcud_U1/detection_acc_mulcud_MulnS_0_U/tmp_product__1/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#40 Warning
Input pipelining  
DSP design_1_i/detection_acc_0/inst/grp_input_load_conv_fu_1788/detection_acc_mulcud_U1/detection_acc_mulcud_MulnS_0_U/tmp_product__2 input design_1_i/detection_acc_0/inst/grp_input_load_conv_fu_1788/detection_acc_mulcud_U1/detection_acc_mulcud_MulnS_0_U/tmp_product__2/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#41 Warning
Input pipelining  
DSP design_1_i/detection_acc_0/inst/grp_output_write_fu_1709/detection_acc_mulcud_U502/detection_acc_mulcud_MulnS_0_U/p_reg__0 input design_1_i/detection_acc_0/inst/grp_output_write_fu_1709/detection_acc_mulcud_U502/detection_acc_mulcud_MulnS_0_U/p_reg__0/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#42 Warning
Input pipelining  
DSP design_1_i/detection_acc_0/inst/grp_output_write_fu_1709/detection_acc_mulcud_U502/detection_acc_mulcud_MulnS_0_U/p_reg__2 input design_1_i/detection_acc_0/inst/grp_output_write_fu_1709/detection_acc_mulcud_U502/detection_acc_mulcud_MulnS_0_U/p_reg__2/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#43 Warning
Input pipelining  
DSP design_1_i/detection_acc_0/inst/grp_output_write_fu_1709/detection_acc_mulcud_U502/detection_acc_mulcud_MulnS_0_U/p_reg__4 input design_1_i/detection_acc_0/inst/grp_output_write_fu_1709/detection_acc_mulcud_U502/detection_acc_mulcud_MulnS_0_U/p_reg__4/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#44 Warning
Input pipelining  
DSP design_1_i/detection_acc_0/inst/grp_output_write_fu_1709/detection_acc_mulcud_U502/detection_acc_mulcud_MulnS_0_U/p_reg__6 input design_1_i/detection_acc_0/inst/grp_output_write_fu_1709/detection_acc_mulcud_U502/detection_acc_mulcud_MulnS_0_U/p_reg__6/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#45 Warning
Input pipelining  
DSP design_1_i/detection_acc_0/inst/grp_output_write_fu_1709/detection_acc_mulcud_U502/detection_acc_mulcud_MulnS_0_U/tmp_product input design_1_i/detection_acc_0/inst/grp_output_write_fu_1709/detection_acc_mulcud_U502/detection_acc_mulcud_MulnS_0_U/tmp_product/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#46 Warning
Input pipelining  
DSP design_1_i/detection_acc_0/inst/grp_output_write_fu_1709/detection_acc_mulcud_U502/detection_acc_mulcud_MulnS_0_U/tmp_product__0 input design_1_i/detection_acc_0/inst/grp_output_write_fu_1709/detection_acc_mulcud_U502/detection_acc_mulcud_MulnS_0_U/tmp_product__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#47 Warning
Input pipelining  
DSP design_1_i/detection_acc_0/inst/grp_output_write_fu_1709/detection_acc_mulcud_U502/detection_acc_mulcud_MulnS_0_U/tmp_product__1 input design_1_i/detection_acc_0/inst/grp_output_write_fu_1709/detection_acc_mulcud_U502/detection_acc_mulcud_MulnS_0_U/tmp_product__1/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#48 Warning
Input pipelining  
DSP design_1_i/detection_acc_0/inst/grp_output_write_fu_1709/detection_acc_mulcud_U502/detection_acc_mulcud_MulnS_0_U/tmp_product__2 input design_1_i/detection_acc_0/inst/grp_output_write_fu_1709/detection_acc_mulcud_U502/detection_acc_mulcud_MulnS_0_U/tmp_product__2/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#49 Warning
Input pipelining  
DSP design_1_i/detection_acc_0/inst/grp_output_write_fu_1709/tmp_30_fu_1160_p2 input design_1_i/detection_acc_0/inst/grp_output_write_fu_1709/tmp_30_fu_1160_p2/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#50 Warning
Input pipelining  
DSP design_1_i/detection_acc_0/inst/grp_pool_fu_962/bound_fu_2735_p2 input design_1_i/detection_acc_0/inst/grp_pool_fu_962/bound_fu_2735_p2/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#51 Warning
Input pipelining  
DSP design_1_i/detection_acc_0/inst/grp_pool_fu_962/bound_reg_4901_reg__0 input design_1_i/detection_acc_0/inst/grp_pool_fu_962/bound_reg_4901_reg__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#52 Warning
Input pipelining  
DSP design_1_i/detection_acc_0/inst/grp_pool_fu_962/bound_reg_4901_reg__0 input design_1_i/detection_acc_0/inst/grp_pool_fu_962/bound_reg_4901_reg__0/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#53 Warning
Input pipelining  
DSP design_1_i/detection_acc_0/inst/grp_pool_fu_962/bound_reg_4901_reg__2 input design_1_i/detection_acc_0/inst/grp_pool_fu_962/bound_reg_4901_reg__2/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#54 Warning
Input pipelining  
DSP design_1_i/detection_acc_0/inst/grp_relu_fc_fu_1941/tmp_13_fu_320_p2__0 input design_1_i/detection_acc_0/inst/grp_relu_fc_fu_1941/tmp_13_fu_320_p2__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#55 Warning
Input pipelining  
DSP design_1_i/detection_acc_0/inst/grp_weight_load_fu_1439/detection_acc_mulcud_U15/detection_acc_mulcud_MulnS_0_U/p_reg__0 input design_1_i/detection_acc_0/inst/grp_weight_load_fu_1439/detection_acc_mulcud_U15/detection_acc_mulcud_MulnS_0_U/p_reg__0/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#56 Warning
Input pipelining  
DSP design_1_i/detection_acc_0/inst/grp_weight_load_fu_1439/detection_acc_mulcud_U15/detection_acc_mulcud_MulnS_0_U/p_reg__2 input design_1_i/detection_acc_0/inst/grp_weight_load_fu_1439/detection_acc_mulcud_U15/detection_acc_mulcud_MulnS_0_U/p_reg__2/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#57 Warning
Input pipelining  
DSP design_1_i/detection_acc_0/inst/grp_weight_load_fu_1439/detection_acc_mulcud_U15/detection_acc_mulcud_MulnS_0_U/p_reg__4 input design_1_i/detection_acc_0/inst/grp_weight_load_fu_1439/detection_acc_mulcud_U15/detection_acc_mulcud_MulnS_0_U/p_reg__4/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#58 Warning
Input pipelining  
DSP design_1_i/detection_acc_0/inst/grp_weight_load_fu_1439/detection_acc_mulcud_U15/detection_acc_mulcud_MulnS_0_U/p_reg__6 input design_1_i/detection_acc_0/inst/grp_weight_load_fu_1439/detection_acc_mulcud_U15/detection_acc_mulcud_MulnS_0_U/p_reg__6/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#59 Warning
Input pipelining  
DSP design_1_i/detection_acc_0/inst/grp_weight_load_fu_1439/detection_acc_mulcud_U15/detection_acc_mulcud_MulnS_0_U/tmp_product input design_1_i/detection_acc_0/inst/grp_weight_load_fu_1439/detection_acc_mulcud_U15/detection_acc_mulcud_MulnS_0_U/tmp_product/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#60 Warning
Input pipelining  
DSP design_1_i/detection_acc_0/inst/grp_weight_load_fu_1439/detection_acc_mulcud_U15/detection_acc_mulcud_MulnS_0_U/tmp_product__0 input design_1_i/detection_acc_0/inst/grp_weight_load_fu_1439/detection_acc_mulcud_U15/detection_acc_mulcud_MulnS_0_U/tmp_product__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#61 Warning
Input pipelining  
DSP design_1_i/detection_acc_0/inst/grp_weight_load_fu_1439/detection_acc_mulcud_U15/detection_acc_mulcud_MulnS_0_U/tmp_product__1 input design_1_i/detection_acc_0/inst/grp_weight_load_fu_1439/detection_acc_mulcud_U15/detection_acc_mulcud_MulnS_0_U/tmp_product__1/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#62 Warning
Input pipelining  
DSP design_1_i/detection_acc_0/inst/grp_weight_load_fu_1439/detection_acc_mulcud_U15/detection_acc_mulcud_MulnS_0_U/tmp_product__2 input design_1_i/detection_acc_0/inst/grp_weight_load_fu_1439/detection_acc_mulcud_U15/detection_acc_mulcud_MulnS_0_U/tmp_product__2/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#63 Warning
Input pipelining  
DSP design_1_i/detection_acc_0/inst/grp_weight_load_fu_1439/tmp_5_fu_2379_p2 input design_1_i/detection_acc_0/inst/grp_weight_load_fu_1439/tmp_5_fu_2379_p2/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#64 Warning
Input pipelining  
DSP design_1_i/detection_acc_0/inst/grp_weight_load_fu_1439/tmp_8_fu_2399_p2 input design_1_i/detection_acc_0/inst/grp_weight_load_fu_1439/tmp_8_fu_2399_p2/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#65 Warning
Input pipelining  
DSP design_1_i/detection_acc_0/inst/tmp3_fu_2378_p2 input design_1_i/detection_acc_0/inst/tmp3_fu_2378_p2/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#66 Warning
Input pipelining  
DSP design_1_i/detection_acc_0/inst/tmp3_fu_2378_p2__0 input design_1_i/detection_acc_0/inst/tmp3_fu_2378_p2__0/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#67 Warning
Input pipelining  
DSP design_1_i/detection_acc_0/inst/tmp3_reg_2667_reg__0 input design_1_i/detection_acc_0/inst/tmp3_reg_2667_reg__0/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#68 Warning
Input pipelining  
DSP design_1_i/detection_acc_0/inst/tmp_81_fu_2358_p2 input design_1_i/detection_acc_0/inst/tmp_81_fu_2358_p2/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#69 Warning
Input pipelining  
DSP design_1_i/detection_acc_0/inst/tmp_81_fu_2358_p2__0 input design_1_i/detection_acc_0/inst/tmp_81_fu_2358_p2__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#70 Warning
Input pipelining  
DSP design_1_i/detection_acc_0/inst/tmp_82_fu_2382_p2 input design_1_i/detection_acc_0/inst/tmp_82_fu_2382_p2/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#71 Warning
Input pipelining  
DSP design_1_i/detection_acc_0/inst/tmp_82_fu_2382_p2 input design_1_i/detection_acc_0/inst/tmp_82_fu_2382_p2/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#72 Warning
Input pipelining  
DSP design_1_i/detection_acc_0/inst/tmp_82_fu_2382_p2__0 input design_1_i/detection_acc_0/inst/tmp_82_fu_2382_p2__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#73 Warning
Input pipelining  
DSP design_1_i/detection_acc_0/inst/tmp_82_fu_2382_p2__0 input design_1_i/detection_acc_0/inst/tmp_82_fu_2382_p2__0/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#74 Warning
Input pipelining  
DSP design_1_i/detection_acc_0/inst/tmp_82_reg_2672_reg__0 input design_1_i/detection_acc_0/inst/tmp_82_reg_2672_reg__0/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#75 Warning
Input pipelining  
DSP design_1_i/detection_acc_0/inst/tmp_84_fu_2369_p2 input design_1_i/detection_acc_0/inst/tmp_84_fu_2369_p2/B[17:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPIP-1#76 Warning
Input pipelining  
DSP design_1_i/detection_acc_0/inst/tmp_84_fu_2369_p2__0 input design_1_i/detection_acc_0/inst/tmp_84_fu_2369_p2__0/A[29:0] is not pipelined. Pipelining DSP48 input will improve performance.
Related violations: <none>

DPOP-1#1 Warning
PREG Output pipelining  
DSP design_1_i/detection_acc_0/inst/grp_conv_fu_1033/bound3_fu_2845_p2 output design_1_i/detection_acc_0/inst/grp_conv_fu_1033/bound3_fu_2845_p2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#2 Warning
PREG Output pipelining  
DSP design_1_i/detection_acc_0/inst/grp_conv_fu_1033/bound3_fu_2845_p2__0 output design_1_i/detection_acc_0/inst/grp_conv_fu_1033/bound3_fu_2845_p2__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#3 Warning
PREG Output pipelining  
DSP design_1_i/detection_acc_0/inst/grp_conv_fu_1033/detection_acc_macibs_U210/detection_acc_macibs_DSP48_0_U/p output design_1_i/detection_acc_0/inst/grp_conv_fu_1033/detection_acc_macibs_U210/detection_acc_macibs_DSP48_0_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#4 Warning
PREG Output pipelining  
DSP design_1_i/detection_acc_0/inst/grp_conv_fu_1033/detection_acc_macibs_U212/detection_acc_macibs_DSP48_0_U/p output design_1_i/detection_acc_0/inst/grp_conv_fu_1033/detection_acc_macibs_U212/detection_acc_macibs_DSP48_0_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#5 Warning
PREG Output pipelining  
DSP design_1_i/detection_acc_0/inst/grp_conv_fu_1033/detection_acc_macibs_U214/detection_acc_macibs_DSP48_0_U/p output design_1_i/detection_acc_0/inst/grp_conv_fu_1033/detection_acc_macibs_U214/detection_acc_macibs_DSP48_0_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#6 Warning
PREG Output pipelining  
DSP design_1_i/detection_acc_0/inst/grp_conv_fu_1033/detection_acc_macibs_U216/detection_acc_macibs_DSP48_0_U/p output design_1_i/detection_acc_0/inst/grp_conv_fu_1033/detection_acc_macibs_U216/detection_acc_macibs_DSP48_0_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#7 Warning
PREG Output pipelining  
DSP design_1_i/detection_acc_0/inst/grp_conv_fu_1033/detection_acc_macibs_U218/detection_acc_macibs_DSP48_0_U/p output design_1_i/detection_acc_0/inst/grp_conv_fu_1033/detection_acc_macibs_U218/detection_acc_macibs_DSP48_0_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#8 Warning
PREG Output pipelining  
DSP design_1_i/detection_acc_0/inst/grp_conv_fu_1033/detection_acc_macibs_U220/detection_acc_macibs_DSP48_0_U/p output design_1_i/detection_acc_0/inst/grp_conv_fu_1033/detection_acc_macibs_U220/detection_acc_macibs_DSP48_0_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#9 Warning
PREG Output pipelining  
DSP design_1_i/detection_acc_0/inst/grp_conv_fu_1033/detection_acc_macibs_U222/detection_acc_macibs_DSP48_0_U/p output design_1_i/detection_acc_0/inst/grp_conv_fu_1033/detection_acc_macibs_U222/detection_acc_macibs_DSP48_0_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#10 Warning
PREG Output pipelining  
DSP design_1_i/detection_acc_0/inst/grp_conv_fu_1033/detection_acc_macibs_U224/detection_acc_macibs_DSP48_0_U/p output design_1_i/detection_acc_0/inst/grp_conv_fu_1033/detection_acc_macibs_U224/detection_acc_macibs_DSP48_0_U/p/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#11 Warning
PREG Output pipelining  
DSP design_1_i/detection_acc_0/inst/grp_fc_fu_1882/tmp_60_fu_611_p2__0 output design_1_i/detection_acc_0/inst/grp_fc_fu_1882/tmp_60_fu_611_p2__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#12 Warning
PREG Output pipelining  
DSP design_1_i/detection_acc_0/inst/grp_fc_fu_1882/tmp_61_fu_562_p2__0 output design_1_i/detection_acc_0/inst/grp_fc_fu_1882/tmp_61_fu_562_p2__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#13 Warning
PREG Output pipelining  
DSP design_1_i/detection_acc_0/inst/grp_fc_fu_1882/tmp_62_fu_566_p2__0 output design_1_i/detection_acc_0/inst/grp_fc_fu_1882/tmp_62_fu_566_p2__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#14 Warning
PREG Output pipelining  
DSP design_1_i/detection_acc_0/inst/grp_fc_fu_1882/tmp_63_fu_570_p2__0 output design_1_i/detection_acc_0/inst/grp_fc_fu_1882/tmp_63_fu_570_p2__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#15 Warning
PREG Output pipelining  
DSP design_1_i/detection_acc_0/inst/grp_fc_fu_1882/tmp_64_fu_574_p2__0 output design_1_i/detection_acc_0/inst/grp_fc_fu_1882/tmp_64_fu_574_p2__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#16 Warning
PREG Output pipelining  
DSP design_1_i/detection_acc_0/inst/grp_fc_fu_1882/tmp_65_fu_578_p2__0 output design_1_i/detection_acc_0/inst/grp_fc_fu_1882/tmp_65_fu_578_p2__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#17 Warning
PREG Output pipelining  
DSP design_1_i/detection_acc_0/inst/grp_fc_fu_1882/tmp_66_fu_582_p2__0 output design_1_i/detection_acc_0/inst/grp_fc_fu_1882/tmp_66_fu_582_p2__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#18 Warning
PREG Output pipelining  
DSP design_1_i/detection_acc_0/inst/grp_fc_fu_1882/tmp_67_fu_586_p2__0 output design_1_i/detection_acc_0/inst/grp_fc_fu_1882/tmp_67_fu_586_p2__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#19 Warning
PREG Output pipelining  
DSP design_1_i/detection_acc_0/inst/grp_input_load_conv_fu_1788/bound_fu_408_p2 output design_1_i/detection_acc_0/inst/grp_input_load_conv_fu_1788/bound_fu_408_p2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#20 Warning
PREG Output pipelining  
DSP design_1_i/detection_acc_0/inst/grp_input_load_conv_fu_1788/bound_fu_408_p2__0 output design_1_i/detection_acc_0/inst/grp_input_load_conv_fu_1788/bound_fu_408_p2__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#21 Warning
PREG Output pipelining  
DSP design_1_i/detection_acc_0/inst/grp_input_load_conv_fu_1788/detection_acc_mulcud_U1/detection_acc_mulcud_MulnS_0_U/tmp_product output design_1_i/detection_acc_0/inst/grp_input_load_conv_fu_1788/detection_acc_mulcud_U1/detection_acc_mulcud_MulnS_0_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#22 Warning
PREG Output pipelining  
DSP design_1_i/detection_acc_0/inst/grp_input_load_conv_fu_1788/detection_acc_mulcud_U1/detection_acc_mulcud_MulnS_0_U/tmp_product__0 output design_1_i/detection_acc_0/inst/grp_input_load_conv_fu_1788/detection_acc_mulcud_U1/detection_acc_mulcud_MulnS_0_U/tmp_product__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#23 Warning
PREG Output pipelining  
DSP design_1_i/detection_acc_0/inst/grp_input_load_conv_fu_1788/detection_acc_mulcud_U1/detection_acc_mulcud_MulnS_0_U/tmp_product__1 output design_1_i/detection_acc_0/inst/grp_input_load_conv_fu_1788/detection_acc_mulcud_U1/detection_acc_mulcud_MulnS_0_U/tmp_product__1/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#24 Warning
PREG Output pipelining  
DSP design_1_i/detection_acc_0/inst/grp_input_load_conv_fu_1788/detection_acc_mulcud_U1/detection_acc_mulcud_MulnS_0_U/tmp_product__2 output design_1_i/detection_acc_0/inst/grp_input_load_conv_fu_1788/detection_acc_mulcud_U1/detection_acc_mulcud_MulnS_0_U/tmp_product__2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#25 Warning
PREG Output pipelining  
DSP design_1_i/detection_acc_0/inst/grp_output_write_fu_1709/bound_fu_1124_p2 output design_1_i/detection_acc_0/inst/grp_output_write_fu_1709/bound_fu_1124_p2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#26 Warning
PREG Output pipelining  
DSP design_1_i/detection_acc_0/inst/grp_output_write_fu_1709/bound_fu_1124_p2__0 output design_1_i/detection_acc_0/inst/grp_output_write_fu_1709/bound_fu_1124_p2__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#27 Warning
PREG Output pipelining  
DSP design_1_i/detection_acc_0/inst/grp_output_write_fu_1709/detection_acc_mulcud_U502/detection_acc_mulcud_MulnS_0_U/tmp_product output design_1_i/detection_acc_0/inst/grp_output_write_fu_1709/detection_acc_mulcud_U502/detection_acc_mulcud_MulnS_0_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#28 Warning
PREG Output pipelining  
DSP design_1_i/detection_acc_0/inst/grp_output_write_fu_1709/detection_acc_mulcud_U502/detection_acc_mulcud_MulnS_0_U/tmp_product__0 output design_1_i/detection_acc_0/inst/grp_output_write_fu_1709/detection_acc_mulcud_U502/detection_acc_mulcud_MulnS_0_U/tmp_product__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#29 Warning
PREG Output pipelining  
DSP design_1_i/detection_acc_0/inst/grp_output_write_fu_1709/detection_acc_mulcud_U502/detection_acc_mulcud_MulnS_0_U/tmp_product__1 output design_1_i/detection_acc_0/inst/grp_output_write_fu_1709/detection_acc_mulcud_U502/detection_acc_mulcud_MulnS_0_U/tmp_product__1/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#30 Warning
PREG Output pipelining  
DSP design_1_i/detection_acc_0/inst/grp_output_write_fu_1709/detection_acc_mulcud_U502/detection_acc_mulcud_MulnS_0_U/tmp_product__2 output design_1_i/detection_acc_0/inst/grp_output_write_fu_1709/detection_acc_mulcud_U502/detection_acc_mulcud_MulnS_0_U/tmp_product__2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#31 Warning
PREG Output pipelining  
DSP design_1_i/detection_acc_0/inst/grp_pool_fu_962/bound_fu_2735_p2 output design_1_i/detection_acc_0/inst/grp_pool_fu_962/bound_fu_2735_p2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#32 Warning
PREG Output pipelining  
DSP design_1_i/detection_acc_0/inst/grp_pool_fu_962/bound_fu_2735_p2__0 output design_1_i/detection_acc_0/inst/grp_pool_fu_962/bound_fu_2735_p2__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#33 Warning
PREG Output pipelining  
DSP design_1_i/detection_acc_0/inst/grp_relu_fc_fu_1941/tmp_13_fu_320_p2 output design_1_i/detection_acc_0/inst/grp_relu_fc_fu_1941/tmp_13_fu_320_p2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#34 Warning
PREG Output pipelining  
DSP design_1_i/detection_acc_0/inst/grp_relu_fc_fu_1941/tmp_13_fu_320_p2__0 output design_1_i/detection_acc_0/inst/grp_relu_fc_fu_1941/tmp_13_fu_320_p2__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#35 Warning
PREG Output pipelining  
DSP design_1_i/detection_acc_0/inst/grp_relu_fc_fu_1941/tmp_13_fu_320_p2__1 output design_1_i/detection_acc_0/inst/grp_relu_fc_fu_1941/tmp_13_fu_320_p2__1/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#36 Warning
PREG Output pipelining  
DSP design_1_i/detection_acc_0/inst/grp_relu_fu_1810/bound2_fu_671_p2 output design_1_i/detection_acc_0/inst/grp_relu_fu_1810/bound2_fu_671_p2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#37 Warning
PREG Output pipelining  
DSP design_1_i/detection_acc_0/inst/grp_relu_fu_1810/bound2_fu_671_p2__0 output design_1_i/detection_acc_0/inst/grp_relu_fu_1810/bound2_fu_671_p2__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#38 Warning
PREG Output pipelining  
DSP design_1_i/detection_acc_0/inst/grp_relu_fu_1810/tmp_17_fu_1095_p2__0 output design_1_i/detection_acc_0/inst/grp_relu_fu_1810/tmp_17_fu_1095_p2__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#39 Warning
PREG Output pipelining  
DSP design_1_i/detection_acc_0/inst/grp_relu_fu_1810/tmp_25_1_fu_1117_p2__0 output design_1_i/detection_acc_0/inst/grp_relu_fu_1810/tmp_25_1_fu_1117_p2__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#40 Warning
PREG Output pipelining  
DSP design_1_i/detection_acc_0/inst/grp_relu_fu_1810/tmp_25_2_fu_1138_p2__0 output design_1_i/detection_acc_0/inst/grp_relu_fu_1810/tmp_25_2_fu_1138_p2__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#41 Warning
PREG Output pipelining  
DSP design_1_i/detection_acc_0/inst/grp_relu_fu_1810/tmp_25_3_fu_1159_p2__0 output design_1_i/detection_acc_0/inst/grp_relu_fu_1810/tmp_25_3_fu_1159_p2__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#42 Warning
PREG Output pipelining  
DSP design_1_i/detection_acc_0/inst/grp_relu_fu_1810/tmp_25_4_fu_1180_p2__0 output design_1_i/detection_acc_0/inst/grp_relu_fu_1810/tmp_25_4_fu_1180_p2__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#43 Warning
PREG Output pipelining  
DSP design_1_i/detection_acc_0/inst/grp_relu_fu_1810/tmp_25_5_fu_1201_p2__0 output design_1_i/detection_acc_0/inst/grp_relu_fu_1810/tmp_25_5_fu_1201_p2__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#44 Warning
PREG Output pipelining  
DSP design_1_i/detection_acc_0/inst/grp_relu_fu_1810/tmp_25_6_fu_1222_p2__0 output design_1_i/detection_acc_0/inst/grp_relu_fu_1810/tmp_25_6_fu_1222_p2__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#45 Warning
PREG Output pipelining  
DSP design_1_i/detection_acc_0/inst/grp_relu_fu_1810/tmp_25_7_fu_1243_p2__0 output design_1_i/detection_acc_0/inst/grp_relu_fu_1810/tmp_25_7_fu_1243_p2__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#46 Warning
PREG Output pipelining  
DSP design_1_i/detection_acc_0/inst/grp_weight_load_fu_1439/bound_fu_2326_p2 output design_1_i/detection_acc_0/inst/grp_weight_load_fu_1439/bound_fu_2326_p2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#47 Warning
PREG Output pipelining  
DSP design_1_i/detection_acc_0/inst/grp_weight_load_fu_1439/bound_fu_2326_p2__0 output design_1_i/detection_acc_0/inst/grp_weight_load_fu_1439/bound_fu_2326_p2__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#48 Warning
PREG Output pipelining  
DSP design_1_i/detection_acc_0/inst/grp_weight_load_fu_1439/detection_acc_mulcud_U15/detection_acc_mulcud_MulnS_0_U/tmp_product output design_1_i/detection_acc_0/inst/grp_weight_load_fu_1439/detection_acc_mulcud_U15/detection_acc_mulcud_MulnS_0_U/tmp_product/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#49 Warning
PREG Output pipelining  
DSP design_1_i/detection_acc_0/inst/grp_weight_load_fu_1439/detection_acc_mulcud_U15/detection_acc_mulcud_MulnS_0_U/tmp_product__0 output design_1_i/detection_acc_0/inst/grp_weight_load_fu_1439/detection_acc_mulcud_U15/detection_acc_mulcud_MulnS_0_U/tmp_product__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#50 Warning
PREG Output pipelining  
DSP design_1_i/detection_acc_0/inst/grp_weight_load_fu_1439/detection_acc_mulcud_U15/detection_acc_mulcud_MulnS_0_U/tmp_product__1 output design_1_i/detection_acc_0/inst/grp_weight_load_fu_1439/detection_acc_mulcud_U15/detection_acc_mulcud_MulnS_0_U/tmp_product__1/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#51 Warning
PREG Output pipelining  
DSP design_1_i/detection_acc_0/inst/grp_weight_load_fu_1439/detection_acc_mulcud_U15/detection_acc_mulcud_MulnS_0_U/tmp_product__2 output design_1_i/detection_acc_0/inst/grp_weight_load_fu_1439/detection_acc_mulcud_U15/detection_acc_mulcud_MulnS_0_U/tmp_product__2/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#52 Warning
PREG Output pipelining  
DSP design_1_i/detection_acc_0/inst/grp_weight_load_fu_1439/detection_acc_muleOg_U16/detection_acc_muleOg_MulnS_1_U/tmp_product__0 output design_1_i/detection_acc_0/inst/grp_weight_load_fu_1439/detection_acc_muleOg_U16/detection_acc_muleOg_MulnS_1_U/tmp_product__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#53 Warning
PREG Output pipelining  
DSP design_1_i/detection_acc_0/inst/grp_weight_load_fu_1439/detection_acc_muleOg_U16/detection_acc_muleOg_MulnS_1_U/tmp_product__1 output design_1_i/detection_acc_0/inst/grp_weight_load_fu_1439/detection_acc_muleOg_U16/detection_acc_muleOg_MulnS_1_U/tmp_product__1/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#54 Warning
PREG Output pipelining  
DSP design_1_i/detection_acc_0/inst/grp_weight_load_fu_1439/detection_acc_muleOg_U16/detection_acc_muleOg_MulnS_1_U/tmp_product__4 output design_1_i/detection_acc_0/inst/grp_weight_load_fu_1439/detection_acc_muleOg_U16/detection_acc_muleOg_MulnS_1_U/tmp_product__4/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#55 Warning
PREG Output pipelining  
DSP design_1_i/detection_acc_0/inst/grp_weight_load_fu_1439/detection_acc_muleOg_U16/detection_acc_muleOg_MulnS_1_U/tmp_product__5 output design_1_i/detection_acc_0/inst/grp_weight_load_fu_1439/detection_acc_muleOg_U16/detection_acc_muleOg_MulnS_1_U/tmp_product__5/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#56 Warning
PREG Output pipelining  
DSP design_1_i/detection_acc_0/inst/tmp2_fu_2288_p2__0 output design_1_i/detection_acc_0/inst/tmp2_fu_2288_p2__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#57 Warning
PREG Output pipelining  
DSP design_1_i/detection_acc_0/inst/tmp3_fu_2378_p2__0 output design_1_i/detection_acc_0/inst/tmp3_fu_2378_p2__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#58 Warning
PREG Output pipelining  
DSP design_1_i/detection_acc_0/inst/tmp4_fu_2374_p2__0 output design_1_i/detection_acc_0/inst/tmp4_fu_2374_p2__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#59 Warning
PREG Output pipelining  
DSP design_1_i/detection_acc_0/inst/tmp5_fu_2292_p2__0 output design_1_i/detection_acc_0/inst/tmp5_fu_2292_p2__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#60 Warning
PREG Output pipelining  
DSP design_1_i/detection_acc_0/inst/tmp_81_fu_2358_p2__0 output design_1_i/detection_acc_0/inst/tmp_81_fu_2358_p2__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#61 Warning
PREG Output pipelining  
DSP design_1_i/detection_acc_0/inst/tmp_82_fu_2382_p2__0 output design_1_i/detection_acc_0/inst/tmp_82_fu_2382_p2__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#62 Warning
PREG Output pipelining  
DSP design_1_i/detection_acc_0/inst/tmp_84_fu_2369_p2__0 output design_1_i/detection_acc_0/inst/tmp_84_fu_2369_p2__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-1#63 Warning
PREG Output pipelining  
DSP design_1_i/detection_acc_0/inst/tmp_fu_2284_p2__0 output design_1_i/detection_acc_0/inst/tmp_fu_2284_p2__0/P[47:0] is not pipelined (PREG=0). Pipelining the DSP48 output will improve performance and often saves power so it is suggested whenever possible to fully pipeline this function.  If this DSP48 function was inferred, it is suggested to describe an additional register stage after this function.  If the DSP48 was instantiated in the design, it is suggested to set the PREG attribute to 1.
Related violations: <none>

DPOP-2#1 Warning
MREG Output pipelining  
DSP design_1_i/detection_acc_0/inst/grp_conv_fu_1033/bound3_fu_2845_p2 multiplier stage design_1_i/detection_acc_0/inst/grp_conv_fu_1033/bound3_fu_2845_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#2 Warning
MREG Output pipelining  
DSP design_1_i/detection_acc_0/inst/grp_conv_fu_1033/bound3_fu_2845_p2__0 multiplier stage design_1_i/detection_acc_0/inst/grp_conv_fu_1033/bound3_fu_2845_p2__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#3 Warning
MREG Output pipelining  
DSP design_1_i/detection_acc_0/inst/grp_conv_fu_1033/bound3_reg_6362_reg__0 multiplier stage design_1_i/detection_acc_0/inst/grp_conv_fu_1033/bound3_reg_6362_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#4 Warning
MREG Output pipelining  
DSP design_1_i/detection_acc_0/inst/grp_conv_fu_1033/bound3_reg_6362_reg__2 multiplier stage design_1_i/detection_acc_0/inst/grp_conv_fu_1033/bound3_reg_6362_reg__2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#5 Warning
MREG Output pipelining  
DSP design_1_i/detection_acc_0/inst/grp_conv_fu_1033/detection_acc_macibs_U210/detection_acc_macibs_DSP48_0_U/p multiplier stage design_1_i/detection_acc_0/inst/grp_conv_fu_1033/detection_acc_macibs_U210/detection_acc_macibs_DSP48_0_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#6 Warning
MREG Output pipelining  
DSP design_1_i/detection_acc_0/inst/grp_conv_fu_1033/detection_acc_macibs_U212/detection_acc_macibs_DSP48_0_U/p multiplier stage design_1_i/detection_acc_0/inst/grp_conv_fu_1033/detection_acc_macibs_U212/detection_acc_macibs_DSP48_0_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#7 Warning
MREG Output pipelining  
DSP design_1_i/detection_acc_0/inst/grp_conv_fu_1033/detection_acc_macibs_U214/detection_acc_macibs_DSP48_0_U/p multiplier stage design_1_i/detection_acc_0/inst/grp_conv_fu_1033/detection_acc_macibs_U214/detection_acc_macibs_DSP48_0_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#8 Warning
MREG Output pipelining  
DSP design_1_i/detection_acc_0/inst/grp_conv_fu_1033/detection_acc_macibs_U216/detection_acc_macibs_DSP48_0_U/p multiplier stage design_1_i/detection_acc_0/inst/grp_conv_fu_1033/detection_acc_macibs_U216/detection_acc_macibs_DSP48_0_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#9 Warning
MREG Output pipelining  
DSP design_1_i/detection_acc_0/inst/grp_conv_fu_1033/detection_acc_macibs_U218/detection_acc_macibs_DSP48_0_U/p multiplier stage design_1_i/detection_acc_0/inst/grp_conv_fu_1033/detection_acc_macibs_U218/detection_acc_macibs_DSP48_0_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#10 Warning
MREG Output pipelining  
DSP design_1_i/detection_acc_0/inst/grp_conv_fu_1033/detection_acc_macibs_U220/detection_acc_macibs_DSP48_0_U/p multiplier stage design_1_i/detection_acc_0/inst/grp_conv_fu_1033/detection_acc_macibs_U220/detection_acc_macibs_DSP48_0_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#11 Warning
MREG Output pipelining  
DSP design_1_i/detection_acc_0/inst/grp_conv_fu_1033/detection_acc_macibs_U222/detection_acc_macibs_DSP48_0_U/p multiplier stage design_1_i/detection_acc_0/inst/grp_conv_fu_1033/detection_acc_macibs_U222/detection_acc_macibs_DSP48_0_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#12 Warning
MREG Output pipelining  
DSP design_1_i/detection_acc_0/inst/grp_conv_fu_1033/detection_acc_macibs_U224/detection_acc_macibs_DSP48_0_U/p multiplier stage design_1_i/detection_acc_0/inst/grp_conv_fu_1033/detection_acc_macibs_U224/detection_acc_macibs_DSP48_0_U/p/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#13 Warning
MREG Output pipelining  
DSP design_1_i/detection_acc_0/inst/grp_conv_fu_1033/ret_V_8_reg_7882_reg multiplier stage design_1_i/detection_acc_0/inst/grp_conv_fu_1033/ret_V_8_reg_7882_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#14 Warning
MREG Output pipelining  
DSP design_1_i/detection_acc_0/inst/grp_conv_fu_1033/ret_V_9_reg_7903_reg multiplier stage design_1_i/detection_acc_0/inst/grp_conv_fu_1033/ret_V_9_reg_7903_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#15 Warning
MREG Output pipelining  
DSP design_1_i/detection_acc_0/inst/grp_conv_fu_1033/ret_V_reg_7807_reg multiplier stage design_1_i/detection_acc_0/inst/grp_conv_fu_1033/ret_V_reg_7807_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#16 Warning
MREG Output pipelining  
DSP design_1_i/detection_acc_0/inst/grp_conv_fu_1033/ret_V_s_reg_7861_reg multiplier stage design_1_i/detection_acc_0/inst/grp_conv_fu_1033/ret_V_s_reg_7861_reg/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#17 Warning
MREG Output pipelining  
DSP design_1_i/detection_acc_0/inst/grp_fc_fu_1882/tmp_60_fu_611_p2 multiplier stage design_1_i/detection_acc_0/inst/grp_fc_fu_1882/tmp_60_fu_611_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#18 Warning
MREG Output pipelining  
DSP design_1_i/detection_acc_0/inst/grp_fc_fu_1882/tmp_60_fu_611_p2__0 multiplier stage design_1_i/detection_acc_0/inst/grp_fc_fu_1882/tmp_60_fu_611_p2__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#19 Warning
MREG Output pipelining  
DSP design_1_i/detection_acc_0/inst/grp_fc_fu_1882/tmp_60_reg_953_reg__0 multiplier stage design_1_i/detection_acc_0/inst/grp_fc_fu_1882/tmp_60_reg_953_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#20 Warning
MREG Output pipelining  
DSP design_1_i/detection_acc_0/inst/grp_fc_fu_1882/tmp_61_fu_562_p2 multiplier stage design_1_i/detection_acc_0/inst/grp_fc_fu_1882/tmp_61_fu_562_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#21 Warning
MREG Output pipelining  
DSP design_1_i/detection_acc_0/inst/grp_fc_fu_1882/tmp_61_fu_562_p2__0 multiplier stage design_1_i/detection_acc_0/inst/grp_fc_fu_1882/tmp_61_fu_562_p2__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#22 Warning
MREG Output pipelining  
DSP design_1_i/detection_acc_0/inst/grp_fc_fu_1882/tmp_61_reg_913_reg__0 multiplier stage design_1_i/detection_acc_0/inst/grp_fc_fu_1882/tmp_61_reg_913_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#23 Warning
MREG Output pipelining  
DSP design_1_i/detection_acc_0/inst/grp_fc_fu_1882/tmp_62_fu_566_p2 multiplier stage design_1_i/detection_acc_0/inst/grp_fc_fu_1882/tmp_62_fu_566_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#24 Warning
MREG Output pipelining  
DSP design_1_i/detection_acc_0/inst/grp_fc_fu_1882/tmp_62_fu_566_p2__0 multiplier stage design_1_i/detection_acc_0/inst/grp_fc_fu_1882/tmp_62_fu_566_p2__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#25 Warning
MREG Output pipelining  
DSP design_1_i/detection_acc_0/inst/grp_fc_fu_1882/tmp_62_reg_918_reg__0 multiplier stage design_1_i/detection_acc_0/inst/grp_fc_fu_1882/tmp_62_reg_918_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#26 Warning
MREG Output pipelining  
DSP design_1_i/detection_acc_0/inst/grp_fc_fu_1882/tmp_63_fu_570_p2 multiplier stage design_1_i/detection_acc_0/inst/grp_fc_fu_1882/tmp_63_fu_570_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#27 Warning
MREG Output pipelining  
DSP design_1_i/detection_acc_0/inst/grp_fc_fu_1882/tmp_63_fu_570_p2__0 multiplier stage design_1_i/detection_acc_0/inst/grp_fc_fu_1882/tmp_63_fu_570_p2__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#28 Warning
MREG Output pipelining  
DSP design_1_i/detection_acc_0/inst/grp_fc_fu_1882/tmp_63_reg_923_reg__0 multiplier stage design_1_i/detection_acc_0/inst/grp_fc_fu_1882/tmp_63_reg_923_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#29 Warning
MREG Output pipelining  
DSP design_1_i/detection_acc_0/inst/grp_fc_fu_1882/tmp_64_fu_574_p2 multiplier stage design_1_i/detection_acc_0/inst/grp_fc_fu_1882/tmp_64_fu_574_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#30 Warning
MREG Output pipelining  
DSP design_1_i/detection_acc_0/inst/grp_fc_fu_1882/tmp_64_fu_574_p2__0 multiplier stage design_1_i/detection_acc_0/inst/grp_fc_fu_1882/tmp_64_fu_574_p2__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#31 Warning
MREG Output pipelining  
DSP design_1_i/detection_acc_0/inst/grp_fc_fu_1882/tmp_64_reg_928_reg__0 multiplier stage design_1_i/detection_acc_0/inst/grp_fc_fu_1882/tmp_64_reg_928_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#32 Warning
MREG Output pipelining  
DSP design_1_i/detection_acc_0/inst/grp_fc_fu_1882/tmp_65_fu_578_p2 multiplier stage design_1_i/detection_acc_0/inst/grp_fc_fu_1882/tmp_65_fu_578_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#33 Warning
MREG Output pipelining  
DSP design_1_i/detection_acc_0/inst/grp_fc_fu_1882/tmp_65_fu_578_p2__0 multiplier stage design_1_i/detection_acc_0/inst/grp_fc_fu_1882/tmp_65_fu_578_p2__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#34 Warning
MREG Output pipelining  
DSP design_1_i/detection_acc_0/inst/grp_fc_fu_1882/tmp_65_reg_933_reg__0 multiplier stage design_1_i/detection_acc_0/inst/grp_fc_fu_1882/tmp_65_reg_933_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#35 Warning
MREG Output pipelining  
DSP design_1_i/detection_acc_0/inst/grp_fc_fu_1882/tmp_66_fu_582_p2 multiplier stage design_1_i/detection_acc_0/inst/grp_fc_fu_1882/tmp_66_fu_582_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#36 Warning
MREG Output pipelining  
DSP design_1_i/detection_acc_0/inst/grp_fc_fu_1882/tmp_66_fu_582_p2__0 multiplier stage design_1_i/detection_acc_0/inst/grp_fc_fu_1882/tmp_66_fu_582_p2__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#37 Warning
MREG Output pipelining  
DSP design_1_i/detection_acc_0/inst/grp_fc_fu_1882/tmp_66_reg_938_reg__0 multiplier stage design_1_i/detection_acc_0/inst/grp_fc_fu_1882/tmp_66_reg_938_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#38 Warning
MREG Output pipelining  
DSP design_1_i/detection_acc_0/inst/grp_fc_fu_1882/tmp_67_fu_586_p2 multiplier stage design_1_i/detection_acc_0/inst/grp_fc_fu_1882/tmp_67_fu_586_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#39 Warning
MREG Output pipelining  
DSP design_1_i/detection_acc_0/inst/grp_fc_fu_1882/tmp_67_fu_586_p2__0 multiplier stage design_1_i/detection_acc_0/inst/grp_fc_fu_1882/tmp_67_fu_586_p2__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#40 Warning
MREG Output pipelining  
DSP design_1_i/detection_acc_0/inst/grp_fc_fu_1882/tmp_67_reg_943_reg__0 multiplier stage design_1_i/detection_acc_0/inst/grp_fc_fu_1882/tmp_67_reg_943_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#41 Warning
MREG Output pipelining  
DSP design_1_i/detection_acc_0/inst/grp_input_load_conv_fu_1788/bound_fu_408_p2 multiplier stage design_1_i/detection_acc_0/inst/grp_input_load_conv_fu_1788/bound_fu_408_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#42 Warning
MREG Output pipelining  
DSP design_1_i/detection_acc_0/inst/grp_input_load_conv_fu_1788/bound_fu_408_p2__0 multiplier stage design_1_i/detection_acc_0/inst/grp_input_load_conv_fu_1788/bound_fu_408_p2__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#43 Warning
MREG Output pipelining  
DSP design_1_i/detection_acc_0/inst/grp_input_load_conv_fu_1788/bound_reg_895_reg__0 multiplier stage design_1_i/detection_acc_0/inst/grp_input_load_conv_fu_1788/bound_reg_895_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#44 Warning
MREG Output pipelining  
DSP design_1_i/detection_acc_0/inst/grp_input_load_conv_fu_1788/bound_reg_895_reg__2 multiplier stage design_1_i/detection_acc_0/inst/grp_input_load_conv_fu_1788/bound_reg_895_reg__2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#45 Warning
MREG Output pipelining  
DSP design_1_i/detection_acc_0/inst/grp_input_load_conv_fu_1788/detection_acc_mulcud_U1/detection_acc_mulcud_MulnS_0_U/p_reg__0 multiplier stage design_1_i/detection_acc_0/inst/grp_input_load_conv_fu_1788/detection_acc_mulcud_U1/detection_acc_mulcud_MulnS_0_U/p_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#46 Warning
MREG Output pipelining  
DSP design_1_i/detection_acc_0/inst/grp_input_load_conv_fu_1788/detection_acc_mulcud_U1/detection_acc_mulcud_MulnS_0_U/p_reg__2 multiplier stage design_1_i/detection_acc_0/inst/grp_input_load_conv_fu_1788/detection_acc_mulcud_U1/detection_acc_mulcud_MulnS_0_U/p_reg__2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#47 Warning
MREG Output pipelining  
DSP design_1_i/detection_acc_0/inst/grp_input_load_conv_fu_1788/detection_acc_mulcud_U1/detection_acc_mulcud_MulnS_0_U/p_reg__4 multiplier stage design_1_i/detection_acc_0/inst/grp_input_load_conv_fu_1788/detection_acc_mulcud_U1/detection_acc_mulcud_MulnS_0_U/p_reg__4/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#48 Warning
MREG Output pipelining  
DSP design_1_i/detection_acc_0/inst/grp_input_load_conv_fu_1788/detection_acc_mulcud_U1/detection_acc_mulcud_MulnS_0_U/p_reg__6 multiplier stage design_1_i/detection_acc_0/inst/grp_input_load_conv_fu_1788/detection_acc_mulcud_U1/detection_acc_mulcud_MulnS_0_U/p_reg__6/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#49 Warning
MREG Output pipelining  
DSP design_1_i/detection_acc_0/inst/grp_input_load_conv_fu_1788/detection_acc_mulcud_U1/detection_acc_mulcud_MulnS_0_U/tmp_product multiplier stage design_1_i/detection_acc_0/inst/grp_input_load_conv_fu_1788/detection_acc_mulcud_U1/detection_acc_mulcud_MulnS_0_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#50 Warning
MREG Output pipelining  
DSP design_1_i/detection_acc_0/inst/grp_input_load_conv_fu_1788/detection_acc_mulcud_U1/detection_acc_mulcud_MulnS_0_U/tmp_product__0 multiplier stage design_1_i/detection_acc_0/inst/grp_input_load_conv_fu_1788/detection_acc_mulcud_U1/detection_acc_mulcud_MulnS_0_U/tmp_product__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#51 Warning
MREG Output pipelining  
DSP design_1_i/detection_acc_0/inst/grp_input_load_conv_fu_1788/detection_acc_mulcud_U1/detection_acc_mulcud_MulnS_0_U/tmp_product__1 multiplier stage design_1_i/detection_acc_0/inst/grp_input_load_conv_fu_1788/detection_acc_mulcud_U1/detection_acc_mulcud_MulnS_0_U/tmp_product__1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#52 Warning
MREG Output pipelining  
DSP design_1_i/detection_acc_0/inst/grp_input_load_conv_fu_1788/detection_acc_mulcud_U1/detection_acc_mulcud_MulnS_0_U/tmp_product__2 multiplier stage design_1_i/detection_acc_0/inst/grp_input_load_conv_fu_1788/detection_acc_mulcud_U1/detection_acc_mulcud_MulnS_0_U/tmp_product__2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#53 Warning
MREG Output pipelining  
DSP design_1_i/detection_acc_0/inst/grp_output_write_fu_1709/bound_fu_1124_p2 multiplier stage design_1_i/detection_acc_0/inst/grp_output_write_fu_1709/bound_fu_1124_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#54 Warning
MREG Output pipelining  
DSP design_1_i/detection_acc_0/inst/grp_output_write_fu_1709/bound_fu_1124_p2__0 multiplier stage design_1_i/detection_acc_0/inst/grp_output_write_fu_1709/bound_fu_1124_p2__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#55 Warning
MREG Output pipelining  
DSP design_1_i/detection_acc_0/inst/grp_output_write_fu_1709/bound_reg_1495_reg__0 multiplier stage design_1_i/detection_acc_0/inst/grp_output_write_fu_1709/bound_reg_1495_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#56 Warning
MREG Output pipelining  
DSP design_1_i/detection_acc_0/inst/grp_output_write_fu_1709/bound_reg_1495_reg__2 multiplier stage design_1_i/detection_acc_0/inst/grp_output_write_fu_1709/bound_reg_1495_reg__2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#57 Warning
MREG Output pipelining  
DSP design_1_i/detection_acc_0/inst/grp_output_write_fu_1709/detection_acc_mulcud_U502/detection_acc_mulcud_MulnS_0_U/p_reg__0 multiplier stage design_1_i/detection_acc_0/inst/grp_output_write_fu_1709/detection_acc_mulcud_U502/detection_acc_mulcud_MulnS_0_U/p_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#58 Warning
MREG Output pipelining  
DSP design_1_i/detection_acc_0/inst/grp_output_write_fu_1709/detection_acc_mulcud_U502/detection_acc_mulcud_MulnS_0_U/p_reg__2 multiplier stage design_1_i/detection_acc_0/inst/grp_output_write_fu_1709/detection_acc_mulcud_U502/detection_acc_mulcud_MulnS_0_U/p_reg__2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#59 Warning
MREG Output pipelining  
DSP design_1_i/detection_acc_0/inst/grp_output_write_fu_1709/detection_acc_mulcud_U502/detection_acc_mulcud_MulnS_0_U/p_reg__4 multiplier stage design_1_i/detection_acc_0/inst/grp_output_write_fu_1709/detection_acc_mulcud_U502/detection_acc_mulcud_MulnS_0_U/p_reg__4/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#60 Warning
MREG Output pipelining  
DSP design_1_i/detection_acc_0/inst/grp_output_write_fu_1709/detection_acc_mulcud_U502/detection_acc_mulcud_MulnS_0_U/p_reg__6 multiplier stage design_1_i/detection_acc_0/inst/grp_output_write_fu_1709/detection_acc_mulcud_U502/detection_acc_mulcud_MulnS_0_U/p_reg__6/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#61 Warning
MREG Output pipelining  
DSP design_1_i/detection_acc_0/inst/grp_output_write_fu_1709/detection_acc_mulcud_U502/detection_acc_mulcud_MulnS_0_U/tmp_product multiplier stage design_1_i/detection_acc_0/inst/grp_output_write_fu_1709/detection_acc_mulcud_U502/detection_acc_mulcud_MulnS_0_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#62 Warning
MREG Output pipelining  
DSP design_1_i/detection_acc_0/inst/grp_output_write_fu_1709/detection_acc_mulcud_U502/detection_acc_mulcud_MulnS_0_U/tmp_product__0 multiplier stage design_1_i/detection_acc_0/inst/grp_output_write_fu_1709/detection_acc_mulcud_U502/detection_acc_mulcud_MulnS_0_U/tmp_product__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#63 Warning
MREG Output pipelining  
DSP design_1_i/detection_acc_0/inst/grp_output_write_fu_1709/detection_acc_mulcud_U502/detection_acc_mulcud_MulnS_0_U/tmp_product__1 multiplier stage design_1_i/detection_acc_0/inst/grp_output_write_fu_1709/detection_acc_mulcud_U502/detection_acc_mulcud_MulnS_0_U/tmp_product__1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#64 Warning
MREG Output pipelining  
DSP design_1_i/detection_acc_0/inst/grp_output_write_fu_1709/detection_acc_mulcud_U502/detection_acc_mulcud_MulnS_0_U/tmp_product__2 multiplier stage design_1_i/detection_acc_0/inst/grp_output_write_fu_1709/detection_acc_mulcud_U502/detection_acc_mulcud_MulnS_0_U/tmp_product__2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#65 Warning
MREG Output pipelining  
DSP design_1_i/detection_acc_0/inst/grp_output_write_fu_1709/tmp_30_fu_1160_p2 multiplier stage design_1_i/detection_acc_0/inst/grp_output_write_fu_1709/tmp_30_fu_1160_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#66 Warning
MREG Output pipelining  
DSP design_1_i/detection_acc_0/inst/grp_pool_fu_962/bound_fu_2735_p2 multiplier stage design_1_i/detection_acc_0/inst/grp_pool_fu_962/bound_fu_2735_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#67 Warning
MREG Output pipelining  
DSP design_1_i/detection_acc_0/inst/grp_pool_fu_962/bound_fu_2735_p2__0 multiplier stage design_1_i/detection_acc_0/inst/grp_pool_fu_962/bound_fu_2735_p2__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#68 Warning
MREG Output pipelining  
DSP design_1_i/detection_acc_0/inst/grp_pool_fu_962/bound_reg_4901_reg__0 multiplier stage design_1_i/detection_acc_0/inst/grp_pool_fu_962/bound_reg_4901_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#69 Warning
MREG Output pipelining  
DSP design_1_i/detection_acc_0/inst/grp_pool_fu_962/bound_reg_4901_reg__2 multiplier stage design_1_i/detection_acc_0/inst/grp_pool_fu_962/bound_reg_4901_reg__2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#70 Warning
MREG Output pipelining  
DSP design_1_i/detection_acc_0/inst/grp_relu_fc_fu_1941/tmp_13_fu_320_p2 multiplier stage design_1_i/detection_acc_0/inst/grp_relu_fc_fu_1941/tmp_13_fu_320_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#71 Warning
MREG Output pipelining  
DSP design_1_i/detection_acc_0/inst/grp_relu_fc_fu_1941/tmp_13_fu_320_p2__0 multiplier stage design_1_i/detection_acc_0/inst/grp_relu_fc_fu_1941/tmp_13_fu_320_p2__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#72 Warning
MREG Output pipelining  
DSP design_1_i/detection_acc_0/inst/grp_relu_fc_fu_1941/tmp_13_fu_320_p2__1 multiplier stage design_1_i/detection_acc_0/inst/grp_relu_fc_fu_1941/tmp_13_fu_320_p2__1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#73 Warning
MREG Output pipelining  
DSP design_1_i/detection_acc_0/inst/grp_relu_fu_1810/bound2_fu_671_p2 multiplier stage design_1_i/detection_acc_0/inst/grp_relu_fu_1810/bound2_fu_671_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#74 Warning
MREG Output pipelining  
DSP design_1_i/detection_acc_0/inst/grp_relu_fu_1810/bound2_fu_671_p2__0 multiplier stage design_1_i/detection_acc_0/inst/grp_relu_fu_1810/bound2_fu_671_p2__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#75 Warning
MREG Output pipelining  
DSP design_1_i/detection_acc_0/inst/grp_relu_fu_1810/p_0_out__0__0 multiplier stage design_1_i/detection_acc_0/inst/grp_relu_fu_1810/p_0_out__0__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#76 Warning
MREG Output pipelining  
DSP design_1_i/detection_acc_0/inst/grp_relu_fu_1810/p_0_out__10 multiplier stage design_1_i/detection_acc_0/inst/grp_relu_fu_1810/p_0_out__10/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#77 Warning
MREG Output pipelining  
DSP design_1_i/detection_acc_0/inst/grp_relu_fu_1810/p_0_out__12 multiplier stage design_1_i/detection_acc_0/inst/grp_relu_fu_1810/p_0_out__12/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#78 Warning
MREG Output pipelining  
DSP design_1_i/detection_acc_0/inst/grp_relu_fu_1810/p_0_out__14 multiplier stage design_1_i/detection_acc_0/inst/grp_relu_fu_1810/p_0_out__14/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#79 Warning
MREG Output pipelining  
DSP design_1_i/detection_acc_0/inst/grp_relu_fu_1810/p_0_out__16 multiplier stage design_1_i/detection_acc_0/inst/grp_relu_fu_1810/p_0_out__16/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#80 Warning
MREG Output pipelining  
DSP design_1_i/detection_acc_0/inst/grp_relu_fu_1810/p_0_out__18 multiplier stage design_1_i/detection_acc_0/inst/grp_relu_fu_1810/p_0_out__18/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#81 Warning
MREG Output pipelining  
DSP design_1_i/detection_acc_0/inst/grp_relu_fu_1810/p_0_out__2 multiplier stage design_1_i/detection_acc_0/inst/grp_relu_fu_1810/p_0_out__2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#82 Warning
MREG Output pipelining  
DSP design_1_i/detection_acc_0/inst/grp_relu_fu_1810/p_0_out__4 multiplier stage design_1_i/detection_acc_0/inst/grp_relu_fu_1810/p_0_out__4/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#83 Warning
MREG Output pipelining  
DSP design_1_i/detection_acc_0/inst/grp_relu_fu_1810/p_0_out__6 multiplier stage design_1_i/detection_acc_0/inst/grp_relu_fu_1810/p_0_out__6/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#84 Warning
MREG Output pipelining  
DSP design_1_i/detection_acc_0/inst/grp_relu_fu_1810/p_0_out__8 multiplier stage design_1_i/detection_acc_0/inst/grp_relu_fu_1810/p_0_out__8/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#85 Warning
MREG Output pipelining  
DSP design_1_i/detection_acc_0/inst/grp_relu_fu_1810/tmp_17_fu_1095_p2 multiplier stage design_1_i/detection_acc_0/inst/grp_relu_fu_1810/tmp_17_fu_1095_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#86 Warning
MREG Output pipelining  
DSP design_1_i/detection_acc_0/inst/grp_relu_fu_1810/tmp_17_fu_1095_p2__0 multiplier stage design_1_i/detection_acc_0/inst/grp_relu_fu_1810/tmp_17_fu_1095_p2__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#87 Warning
MREG Output pipelining  
DSP design_1_i/detection_acc_0/inst/grp_relu_fu_1810/tmp_25_1_fu_1117_p2 multiplier stage design_1_i/detection_acc_0/inst/grp_relu_fu_1810/tmp_25_1_fu_1117_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#88 Warning
MREG Output pipelining  
DSP design_1_i/detection_acc_0/inst/grp_relu_fu_1810/tmp_25_1_fu_1117_p2__0 multiplier stage design_1_i/detection_acc_0/inst/grp_relu_fu_1810/tmp_25_1_fu_1117_p2__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#89 Warning
MREG Output pipelining  
DSP design_1_i/detection_acc_0/inst/grp_relu_fu_1810/tmp_25_2_fu_1138_p2 multiplier stage design_1_i/detection_acc_0/inst/grp_relu_fu_1810/tmp_25_2_fu_1138_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#90 Warning
MREG Output pipelining  
DSP design_1_i/detection_acc_0/inst/grp_relu_fu_1810/tmp_25_2_fu_1138_p2__0 multiplier stage design_1_i/detection_acc_0/inst/grp_relu_fu_1810/tmp_25_2_fu_1138_p2__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#91 Warning
MREG Output pipelining  
DSP design_1_i/detection_acc_0/inst/grp_relu_fu_1810/tmp_25_3_fu_1159_p2 multiplier stage design_1_i/detection_acc_0/inst/grp_relu_fu_1810/tmp_25_3_fu_1159_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#92 Warning
MREG Output pipelining  
DSP design_1_i/detection_acc_0/inst/grp_relu_fu_1810/tmp_25_3_fu_1159_p2__0 multiplier stage design_1_i/detection_acc_0/inst/grp_relu_fu_1810/tmp_25_3_fu_1159_p2__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#93 Warning
MREG Output pipelining  
DSP design_1_i/detection_acc_0/inst/grp_relu_fu_1810/tmp_25_4_fu_1180_p2 multiplier stage design_1_i/detection_acc_0/inst/grp_relu_fu_1810/tmp_25_4_fu_1180_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#94 Warning
MREG Output pipelining  
DSP design_1_i/detection_acc_0/inst/grp_relu_fu_1810/tmp_25_4_fu_1180_p2__0 multiplier stage design_1_i/detection_acc_0/inst/grp_relu_fu_1810/tmp_25_4_fu_1180_p2__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#95 Warning
MREG Output pipelining  
DSP design_1_i/detection_acc_0/inst/grp_relu_fu_1810/tmp_25_5_fu_1201_p2 multiplier stage design_1_i/detection_acc_0/inst/grp_relu_fu_1810/tmp_25_5_fu_1201_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#96 Warning
MREG Output pipelining  
DSP design_1_i/detection_acc_0/inst/grp_relu_fu_1810/tmp_25_5_fu_1201_p2__0 multiplier stage design_1_i/detection_acc_0/inst/grp_relu_fu_1810/tmp_25_5_fu_1201_p2__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#97 Warning
MREG Output pipelining  
DSP design_1_i/detection_acc_0/inst/grp_relu_fu_1810/tmp_25_6_fu_1222_p2 multiplier stage design_1_i/detection_acc_0/inst/grp_relu_fu_1810/tmp_25_6_fu_1222_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#98 Warning
MREG Output pipelining  
DSP design_1_i/detection_acc_0/inst/grp_relu_fu_1810/tmp_25_6_fu_1222_p2__0 multiplier stage design_1_i/detection_acc_0/inst/grp_relu_fu_1810/tmp_25_6_fu_1222_p2__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#99 Warning
MREG Output pipelining  
DSP design_1_i/detection_acc_0/inst/grp_relu_fu_1810/tmp_25_7_fu_1243_p2 multiplier stage design_1_i/detection_acc_0/inst/grp_relu_fu_1810/tmp_25_7_fu_1243_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#100 Warning
MREG Output pipelining  
DSP design_1_i/detection_acc_0/inst/grp_relu_fu_1810/tmp_25_7_fu_1243_p2__0 multiplier stage design_1_i/detection_acc_0/inst/grp_relu_fu_1810/tmp_25_7_fu_1243_p2__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#101 Warning
MREG Output pipelining  
DSP design_1_i/detection_acc_0/inst/grp_weight_load_fu_1439/bound_fu_2326_p2 multiplier stage design_1_i/detection_acc_0/inst/grp_weight_load_fu_1439/bound_fu_2326_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#102 Warning
MREG Output pipelining  
DSP design_1_i/detection_acc_0/inst/grp_weight_load_fu_1439/bound_fu_2326_p2__0 multiplier stage design_1_i/detection_acc_0/inst/grp_weight_load_fu_1439/bound_fu_2326_p2__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#103 Warning
MREG Output pipelining  
DSP design_1_i/detection_acc_0/inst/grp_weight_load_fu_1439/bound_reg_3040_reg__0 multiplier stage design_1_i/detection_acc_0/inst/grp_weight_load_fu_1439/bound_reg_3040_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#104 Warning
MREG Output pipelining  
DSP design_1_i/detection_acc_0/inst/grp_weight_load_fu_1439/bound_reg_3040_reg__2 multiplier stage design_1_i/detection_acc_0/inst/grp_weight_load_fu_1439/bound_reg_3040_reg__2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#105 Warning
MREG Output pipelining  
DSP design_1_i/detection_acc_0/inst/grp_weight_load_fu_1439/detection_acc_mulcud_U15/detection_acc_mulcud_MulnS_0_U/p_reg__0 multiplier stage design_1_i/detection_acc_0/inst/grp_weight_load_fu_1439/detection_acc_mulcud_U15/detection_acc_mulcud_MulnS_0_U/p_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#106 Warning
MREG Output pipelining  
DSP design_1_i/detection_acc_0/inst/grp_weight_load_fu_1439/detection_acc_mulcud_U15/detection_acc_mulcud_MulnS_0_U/p_reg__2 multiplier stage design_1_i/detection_acc_0/inst/grp_weight_load_fu_1439/detection_acc_mulcud_U15/detection_acc_mulcud_MulnS_0_U/p_reg__2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#107 Warning
MREG Output pipelining  
DSP design_1_i/detection_acc_0/inst/grp_weight_load_fu_1439/detection_acc_mulcud_U15/detection_acc_mulcud_MulnS_0_U/p_reg__4 multiplier stage design_1_i/detection_acc_0/inst/grp_weight_load_fu_1439/detection_acc_mulcud_U15/detection_acc_mulcud_MulnS_0_U/p_reg__4/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#108 Warning
MREG Output pipelining  
DSP design_1_i/detection_acc_0/inst/grp_weight_load_fu_1439/detection_acc_mulcud_U15/detection_acc_mulcud_MulnS_0_U/p_reg__6 multiplier stage design_1_i/detection_acc_0/inst/grp_weight_load_fu_1439/detection_acc_mulcud_U15/detection_acc_mulcud_MulnS_0_U/p_reg__6/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#109 Warning
MREG Output pipelining  
DSP design_1_i/detection_acc_0/inst/grp_weight_load_fu_1439/detection_acc_mulcud_U15/detection_acc_mulcud_MulnS_0_U/tmp_product multiplier stage design_1_i/detection_acc_0/inst/grp_weight_load_fu_1439/detection_acc_mulcud_U15/detection_acc_mulcud_MulnS_0_U/tmp_product/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#110 Warning
MREG Output pipelining  
DSP design_1_i/detection_acc_0/inst/grp_weight_load_fu_1439/detection_acc_mulcud_U15/detection_acc_mulcud_MulnS_0_U/tmp_product__0 multiplier stage design_1_i/detection_acc_0/inst/grp_weight_load_fu_1439/detection_acc_mulcud_U15/detection_acc_mulcud_MulnS_0_U/tmp_product__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#111 Warning
MREG Output pipelining  
DSP design_1_i/detection_acc_0/inst/grp_weight_load_fu_1439/detection_acc_mulcud_U15/detection_acc_mulcud_MulnS_0_U/tmp_product__1 multiplier stage design_1_i/detection_acc_0/inst/grp_weight_load_fu_1439/detection_acc_mulcud_U15/detection_acc_mulcud_MulnS_0_U/tmp_product__1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#112 Warning
MREG Output pipelining  
DSP design_1_i/detection_acc_0/inst/grp_weight_load_fu_1439/detection_acc_mulcud_U15/detection_acc_mulcud_MulnS_0_U/tmp_product__2 multiplier stage design_1_i/detection_acc_0/inst/grp_weight_load_fu_1439/detection_acc_mulcud_U15/detection_acc_mulcud_MulnS_0_U/tmp_product__2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#113 Warning
MREG Output pipelining  
DSP design_1_i/detection_acc_0/inst/grp_weight_load_fu_1439/detection_acc_muleOg_U16/detection_acc_muleOg_MulnS_1_U/p_reg__0 multiplier stage design_1_i/detection_acc_0/inst/grp_weight_load_fu_1439/detection_acc_muleOg_U16/detection_acc_muleOg_MulnS_1_U/p_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#114 Warning
MREG Output pipelining  
DSP design_1_i/detection_acc_0/inst/grp_weight_load_fu_1439/detection_acc_muleOg_U16/detection_acc_muleOg_MulnS_1_U/p_reg__2 multiplier stage design_1_i/detection_acc_0/inst/grp_weight_load_fu_1439/detection_acc_muleOg_U16/detection_acc_muleOg_MulnS_1_U/p_reg__2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#115 Warning
MREG Output pipelining  
DSP design_1_i/detection_acc_0/inst/grp_weight_load_fu_1439/detection_acc_muleOg_U16/detection_acc_muleOg_MulnS_1_U/p_reg__4 multiplier stage design_1_i/detection_acc_0/inst/grp_weight_load_fu_1439/detection_acc_muleOg_U16/detection_acc_muleOg_MulnS_1_U/p_reg__4/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#116 Warning
MREG Output pipelining  
DSP design_1_i/detection_acc_0/inst/grp_weight_load_fu_1439/detection_acc_muleOg_U16/detection_acc_muleOg_MulnS_1_U/p_reg__6 multiplier stage design_1_i/detection_acc_0/inst/grp_weight_load_fu_1439/detection_acc_muleOg_U16/detection_acc_muleOg_MulnS_1_U/p_reg__6/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#117 Warning
MREG Output pipelining  
DSP design_1_i/detection_acc_0/inst/grp_weight_load_fu_1439/detection_acc_muleOg_U16/detection_acc_muleOg_MulnS_1_U/tmp_product__0 multiplier stage design_1_i/detection_acc_0/inst/grp_weight_load_fu_1439/detection_acc_muleOg_U16/detection_acc_muleOg_MulnS_1_U/tmp_product__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#118 Warning
MREG Output pipelining  
DSP design_1_i/detection_acc_0/inst/grp_weight_load_fu_1439/detection_acc_muleOg_U16/detection_acc_muleOg_MulnS_1_U/tmp_product__1 multiplier stage design_1_i/detection_acc_0/inst/grp_weight_load_fu_1439/detection_acc_muleOg_U16/detection_acc_muleOg_MulnS_1_U/tmp_product__1/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#119 Warning
MREG Output pipelining  
DSP design_1_i/detection_acc_0/inst/grp_weight_load_fu_1439/detection_acc_muleOg_U16/detection_acc_muleOg_MulnS_1_U/tmp_product__4 multiplier stage design_1_i/detection_acc_0/inst/grp_weight_load_fu_1439/detection_acc_muleOg_U16/detection_acc_muleOg_MulnS_1_U/tmp_product__4/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#120 Warning
MREG Output pipelining  
DSP design_1_i/detection_acc_0/inst/grp_weight_load_fu_1439/detection_acc_muleOg_U16/detection_acc_muleOg_MulnS_1_U/tmp_product__5 multiplier stage design_1_i/detection_acc_0/inst/grp_weight_load_fu_1439/detection_acc_muleOg_U16/detection_acc_muleOg_MulnS_1_U/tmp_product__5/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#121 Warning
MREG Output pipelining  
DSP design_1_i/detection_acc_0/inst/grp_weight_load_fu_1439/tmp_5_fu_2379_p2 multiplier stage design_1_i/detection_acc_0/inst/grp_weight_load_fu_1439/tmp_5_fu_2379_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#122 Warning
MREG Output pipelining  
DSP design_1_i/detection_acc_0/inst/grp_weight_load_fu_1439/tmp_8_fu_2399_p2 multiplier stage design_1_i/detection_acc_0/inst/grp_weight_load_fu_1439/tmp_8_fu_2399_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#123 Warning
MREG Output pipelining  
DSP design_1_i/detection_acc_0/inst/tmp2_fu_2288_p2 multiplier stage design_1_i/detection_acc_0/inst/tmp2_fu_2288_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#124 Warning
MREG Output pipelining  
DSP design_1_i/detection_acc_0/inst/tmp2_fu_2288_p2__0 multiplier stage design_1_i/detection_acc_0/inst/tmp2_fu_2288_p2__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#125 Warning
MREG Output pipelining  
DSP design_1_i/detection_acc_0/inst/tmp2_reg_2596_reg__0 multiplier stage design_1_i/detection_acc_0/inst/tmp2_reg_2596_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#126 Warning
MREG Output pipelining  
DSP design_1_i/detection_acc_0/inst/tmp3_fu_2378_p2 multiplier stage design_1_i/detection_acc_0/inst/tmp3_fu_2378_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#127 Warning
MREG Output pipelining  
DSP design_1_i/detection_acc_0/inst/tmp3_fu_2378_p2__0 multiplier stage design_1_i/detection_acc_0/inst/tmp3_fu_2378_p2__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#128 Warning
MREG Output pipelining  
DSP design_1_i/detection_acc_0/inst/tmp3_reg_2667_reg__0 multiplier stage design_1_i/detection_acc_0/inst/tmp3_reg_2667_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#129 Warning
MREG Output pipelining  
DSP design_1_i/detection_acc_0/inst/tmp4_fu_2374_p2 multiplier stage design_1_i/detection_acc_0/inst/tmp4_fu_2374_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#130 Warning
MREG Output pipelining  
DSP design_1_i/detection_acc_0/inst/tmp4_fu_2374_p2__0 multiplier stage design_1_i/detection_acc_0/inst/tmp4_fu_2374_p2__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#131 Warning
MREG Output pipelining  
DSP design_1_i/detection_acc_0/inst/tmp4_reg_2662_reg__0 multiplier stage design_1_i/detection_acc_0/inst/tmp4_reg_2662_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#132 Warning
MREG Output pipelining  
DSP design_1_i/detection_acc_0/inst/tmp5_fu_2292_p2 multiplier stage design_1_i/detection_acc_0/inst/tmp5_fu_2292_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#133 Warning
MREG Output pipelining  
DSP design_1_i/detection_acc_0/inst/tmp5_fu_2292_p2__0 multiplier stage design_1_i/detection_acc_0/inst/tmp5_fu_2292_p2__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#134 Warning
MREG Output pipelining  
DSP design_1_i/detection_acc_0/inst/tmp5_reg_2601_reg__0 multiplier stage design_1_i/detection_acc_0/inst/tmp5_reg_2601_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#135 Warning
MREG Output pipelining  
DSP design_1_i/detection_acc_0/inst/tmp_81_fu_2358_p2 multiplier stage design_1_i/detection_acc_0/inst/tmp_81_fu_2358_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#136 Warning
MREG Output pipelining  
DSP design_1_i/detection_acc_0/inst/tmp_81_fu_2358_p2__0 multiplier stage design_1_i/detection_acc_0/inst/tmp_81_fu_2358_p2__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#137 Warning
MREG Output pipelining  
DSP design_1_i/detection_acc_0/inst/tmp_81_reg_2647_reg__0 multiplier stage design_1_i/detection_acc_0/inst/tmp_81_reg_2647_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#138 Warning
MREG Output pipelining  
DSP design_1_i/detection_acc_0/inst/tmp_82_fu_2382_p2 multiplier stage design_1_i/detection_acc_0/inst/tmp_82_fu_2382_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#139 Warning
MREG Output pipelining  
DSP design_1_i/detection_acc_0/inst/tmp_82_fu_2382_p2__0 multiplier stage design_1_i/detection_acc_0/inst/tmp_82_fu_2382_p2__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#140 Warning
MREG Output pipelining  
DSP design_1_i/detection_acc_0/inst/tmp_82_reg_2672_reg__0 multiplier stage design_1_i/detection_acc_0/inst/tmp_82_reg_2672_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#141 Warning
MREG Output pipelining  
DSP design_1_i/detection_acc_0/inst/tmp_84_fu_2369_p2 multiplier stage design_1_i/detection_acc_0/inst/tmp_84_fu_2369_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#142 Warning
MREG Output pipelining  
DSP design_1_i/detection_acc_0/inst/tmp_84_fu_2369_p2__0 multiplier stage design_1_i/detection_acc_0/inst/tmp_84_fu_2369_p2__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#143 Warning
MREG Output pipelining  
DSP design_1_i/detection_acc_0/inst/tmp_84_reg_2657_reg__0 multiplier stage design_1_i/detection_acc_0/inst/tmp_84_reg_2657_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#144 Warning
MREG Output pipelining  
DSP design_1_i/detection_acc_0/inst/tmp_fu_2284_p2 multiplier stage design_1_i/detection_acc_0/inst/tmp_fu_2284_p2/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#145 Warning
MREG Output pipelining  
DSP design_1_i/detection_acc_0/inst/tmp_fu_2284_p2__0 multiplier stage design_1_i/detection_acc_0/inst/tmp_fu_2284_p2__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

DPOP-2#146 Warning
MREG Output pipelining  
DSP design_1_i/detection_acc_0/inst/tmp_reg_2591_reg__0 multiplier stage design_1_i/detection_acc_0/inst/tmp_reg_2591_reg__0/P[47:0] is not pipelined (MREG=0). Pipelining the multiplier function will improve performance and will save significant power so it is suggested whenever possible to fully pipeline this function.  If this multiplier was inferred, it is suggested to describe an additional register stage after this function.  If there is no registered adder/accumulator following the multiply function, two pipeline stages are suggested to allow both the MREG and PREG registers to be used.  If the DSP48 was instantiated in the design, it is suggested to set both the MREG and PREG attributes to 1 when performing multiply functions.
Related violations: <none>

REQP-1840#1 Warning
RAMB18 async control check  
The RAMB18E1 design_1_i/detection_acc_0/inst/detection_acc_Beta_m_axi_U/bus_read/buff_rdata/mem_reg has an input control pin design_1_i/detection_acc_0/inst/detection_acc_Beta_m_axi_U/bus_read/buff_rdata/mem_reg/WEBWE[0] (net: design_1_i/detection_acc_0/inst/detection_acc_Beta_m_axi_U/bus_read/buff_rdata/m_axi_Beta_RVALID) which is driven by a register (design_1_i/axi_mem_intercon_3/s00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_READ.USE_SPLIT_R.read_addr_inst/USE_R_CHANNEL.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/empty_fwft_i_reg) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
Related violations: <none>

REQP-1840#2 Warning
RAMB18 async control check  
The RAMB18E1 design_1_i/detection_acc_0/inst/detection_acc_Beta_m_axi_U/bus_read/buff_rdata/mem_reg has an input control pin design_1_i/detection_acc_0/inst/detection_acc_Beta_m_axi_U/bus_read/buff_rdata/mem_reg/WEBWE[1] (net: design_1_i/detection_acc_0/inst/detection_acc_Beta_m_axi_U/bus_read/buff_rdata/m_axi_Beta_RVALID) which is driven by a register (design_1_i/axi_mem_intercon_3/s00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_READ.USE_SPLIT_R.read_addr_inst/USE_R_CHANNEL.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/empty_fwft_i_reg) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
Related violations: <none>

REQP-1840#3 Warning
RAMB18 async control check  
The RAMB18E1 design_1_i/detection_acc_0/inst/detection_acc_Beta_m_axi_U/bus_read/buff_rdata/mem_reg has an input control pin design_1_i/detection_acc_0/inst/detection_acc_Beta_m_axi_U/bus_read/buff_rdata/mem_reg/WEBWE[2] (net: design_1_i/detection_acc_0/inst/detection_acc_Beta_m_axi_U/bus_read/buff_rdata/m_axi_Beta_RVALID) which is driven by a register (design_1_i/axi_mem_intercon_3/s00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_READ.USE_SPLIT_R.read_addr_inst/USE_R_CHANNEL.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/empty_fwft_i_reg) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
Related violations: <none>

REQP-1840#4 Warning
RAMB18 async control check  
The RAMB18E1 design_1_i/detection_acc_0/inst/detection_acc_Beta_m_axi_U/bus_read/buff_rdata/mem_reg has an input control pin design_1_i/detection_acc_0/inst/detection_acc_Beta_m_axi_U/bus_read/buff_rdata/mem_reg/WEBWE[3] (net: design_1_i/detection_acc_0/inst/detection_acc_Beta_m_axi_U/bus_read/buff_rdata/m_axi_Beta_RVALID) which is driven by a register (design_1_i/axi_mem_intercon_3/s00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_READ.USE_SPLIT_R.read_addr_inst/USE_R_CHANNEL.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/empty_fwft_i_reg) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
Related violations: <none>

REQP-1840#5 Warning
RAMB18 async control check  
The RAMB18E1 design_1_i/detection_acc_0/inst/detection_acc_Input_r_m_axi_U/bus_read/buff_rdata/mem_reg has an input control pin design_1_i/detection_acc_0/inst/detection_acc_Input_r_m_axi_U/bus_read/buff_rdata/mem_reg/WEBWE[0] (net: design_1_i/detection_acc_0/inst/detection_acc_Input_r_m_axi_U/bus_read/buff_rdata/m_axi_Input_r_RVALID) which is driven by a register (design_1_i/axi_mem_intercon/s00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_READ.USE_SPLIT_R.read_addr_inst/USE_R_CHANNEL.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/empty_fwft_i_reg) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
Related violations: <none>

REQP-1840#6 Warning
RAMB18 async control check  
The RAMB18E1 design_1_i/detection_acc_0/inst/detection_acc_Input_r_m_axi_U/bus_read/buff_rdata/mem_reg has an input control pin design_1_i/detection_acc_0/inst/detection_acc_Input_r_m_axi_U/bus_read/buff_rdata/mem_reg/WEBWE[1] (net: design_1_i/detection_acc_0/inst/detection_acc_Input_r_m_axi_U/bus_read/buff_rdata/m_axi_Input_r_RVALID) which is driven by a register (design_1_i/axi_mem_intercon/s00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_READ.USE_SPLIT_R.read_addr_inst/USE_R_CHANNEL.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/empty_fwft_i_reg) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
Related violations: <none>

REQP-1840#7 Warning
RAMB18 async control check  
The RAMB18E1 design_1_i/detection_acc_0/inst/detection_acc_Input_r_m_axi_U/bus_read/buff_rdata/mem_reg has an input control pin design_1_i/detection_acc_0/inst/detection_acc_Input_r_m_axi_U/bus_read/buff_rdata/mem_reg/WEBWE[2] (net: design_1_i/detection_acc_0/inst/detection_acc_Input_r_m_axi_U/bus_read/buff_rdata/m_axi_Input_r_RVALID) which is driven by a register (design_1_i/axi_mem_intercon/s00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_READ.USE_SPLIT_R.read_addr_inst/USE_R_CHANNEL.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/empty_fwft_i_reg) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
Related violations: <none>

REQP-1840#8 Warning
RAMB18 async control check  
The RAMB18E1 design_1_i/detection_acc_0/inst/detection_acc_Input_r_m_axi_U/bus_read/buff_rdata/mem_reg has an input control pin design_1_i/detection_acc_0/inst/detection_acc_Input_r_m_axi_U/bus_read/buff_rdata/mem_reg/WEBWE[3] (net: design_1_i/detection_acc_0/inst/detection_acc_Input_r_m_axi_U/bus_read/buff_rdata/m_axi_Input_r_RVALID) which is driven by a register (design_1_i/axi_mem_intercon/s00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_READ.USE_SPLIT_R.read_addr_inst/USE_R_CHANNEL.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/empty_fwft_i_reg) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
Related violations: <none>

REQP-1840#9 Warning
RAMB18 async control check  
The RAMB18E1 design_1_i/detection_acc_0/inst/detection_acc_Output_r_m_axi_U/bus_write/buff_wdata/mem_reg has an input control pin design_1_i/detection_acc_0/inst/detection_acc_Output_r_m_axi_U/bus_write/buff_wdata/mem_reg/ADDRARDADDR[10] (net: design_1_i/detection_acc_0/inst/detection_acc_Output_r_m_axi_U/bus_write/buff_wdata/rnext[5]) which is driven by a register (design_1_i/axi_mem_intercon_2/s00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_BURSTS.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/empty_fwft_i_reg) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
Related violations: <none>

REQP-1840#10 Warning
RAMB18 async control check  
The RAMB18E1 design_1_i/detection_acc_0/inst/detection_acc_Output_r_m_axi_U/bus_write/buff_wdata/mem_reg has an input control pin design_1_i/detection_acc_0/inst/detection_acc_Output_r_m_axi_U/bus_write/buff_wdata/mem_reg/ADDRARDADDR[11] (net: design_1_i/detection_acc_0/inst/detection_acc_Output_r_m_axi_U/bus_write/buff_wdata/rnext[6]) which is driven by a register (design_1_i/axi_mem_intercon_2/s00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_BURSTS.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/empty_fwft_i_reg) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
Related violations: <none>

REQP-1840#11 Warning
RAMB18 async control check  
The RAMB18E1 design_1_i/detection_acc_0/inst/detection_acc_Output_r_m_axi_U/bus_write/buff_wdata/mem_reg has an input control pin design_1_i/detection_acc_0/inst/detection_acc_Output_r_m_axi_U/bus_write/buff_wdata/mem_reg/ADDRARDADDR[12] (net: design_1_i/detection_acc_0/inst/detection_acc_Output_r_m_axi_U/bus_write/buff_wdata/rnext[7]) which is driven by a register (design_1_i/axi_mem_intercon_2/s00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_BURSTS.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/empty_fwft_i_reg) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
Related violations: <none>

REQP-1840#12 Warning
RAMB18 async control check  
The RAMB18E1 design_1_i/detection_acc_0/inst/detection_acc_Output_r_m_axi_U/bus_write/buff_wdata/mem_reg has an input control pin design_1_i/detection_acc_0/inst/detection_acc_Output_r_m_axi_U/bus_write/buff_wdata/mem_reg/ADDRARDADDR[5] (net: design_1_i/detection_acc_0/inst/detection_acc_Output_r_m_axi_U/bus_write/buff_wdata/rnext[0]) which is driven by a register (design_1_i/axi_mem_intercon_2/s00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_BURSTS.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/empty_fwft_i_reg) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
Related violations: <none>

REQP-1840#13 Warning
RAMB18 async control check  
The RAMB18E1 design_1_i/detection_acc_0/inst/detection_acc_Output_r_m_axi_U/bus_write/buff_wdata/mem_reg has an input control pin design_1_i/detection_acc_0/inst/detection_acc_Output_r_m_axi_U/bus_write/buff_wdata/mem_reg/ADDRARDADDR[6] (net: design_1_i/detection_acc_0/inst/detection_acc_Output_r_m_axi_U/bus_write/buff_wdata/rnext[1]) which is driven by a register (design_1_i/axi_mem_intercon_2/s00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_BURSTS.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/empty_fwft_i_reg) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
Related violations: <none>

REQP-1840#14 Warning
RAMB18 async control check  
The RAMB18E1 design_1_i/detection_acc_0/inst/detection_acc_Output_r_m_axi_U/bus_write/buff_wdata/mem_reg has an input control pin design_1_i/detection_acc_0/inst/detection_acc_Output_r_m_axi_U/bus_write/buff_wdata/mem_reg/ADDRARDADDR[7] (net: design_1_i/detection_acc_0/inst/detection_acc_Output_r_m_axi_U/bus_write/buff_wdata/rnext[2]) which is driven by a register (design_1_i/axi_mem_intercon_2/s00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_BURSTS.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/empty_fwft_i_reg) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
Related violations: <none>

REQP-1840#15 Warning
RAMB18 async control check  
The RAMB18E1 design_1_i/detection_acc_0/inst/detection_acc_Output_r_m_axi_U/bus_write/buff_wdata/mem_reg has an input control pin design_1_i/detection_acc_0/inst/detection_acc_Output_r_m_axi_U/bus_write/buff_wdata/mem_reg/ADDRARDADDR[8] (net: design_1_i/detection_acc_0/inst/detection_acc_Output_r_m_axi_U/bus_write/buff_wdata/rnext[3]) which is driven by a register (design_1_i/axi_mem_intercon_2/s00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_BURSTS.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/empty_fwft_i_reg) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
Related violations: <none>

REQP-1840#16 Warning
RAMB18 async control check  
The RAMB18E1 design_1_i/detection_acc_0/inst/detection_acc_Output_r_m_axi_U/bus_write/buff_wdata/mem_reg has an input control pin design_1_i/detection_acc_0/inst/detection_acc_Output_r_m_axi_U/bus_write/buff_wdata/mem_reg/ADDRARDADDR[9] (net: design_1_i/detection_acc_0/inst/detection_acc_Output_r_m_axi_U/bus_write/buff_wdata/rnext[4]) which is driven by a register (design_1_i/axi_mem_intercon_2/s00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_WRITE.write_addr_inst/USE_BURSTS.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/empty_fwft_i_reg) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
Related violations: <none>

REQP-1840#17 Warning
RAMB18 async control check  
The RAMB18E1 design_1_i/detection_acc_0/inst/detection_acc_Weight_m_axi_U/bus_read/buff_rdata/mem_reg has an input control pin design_1_i/detection_acc_0/inst/detection_acc_Weight_m_axi_U/bus_read/buff_rdata/mem_reg/WEBWE[0] (net: design_1_i/detection_acc_0/inst/detection_acc_Weight_m_axi_U/bus_read/buff_rdata/m_axi_Weight_RVALID) which is driven by a register (design_1_i/axi_mem_intercon_1/s00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_READ.USE_SPLIT_R.read_addr_inst/USE_R_CHANNEL.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/empty_fwft_i_reg) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
Related violations: <none>

REQP-1840#18 Warning
RAMB18 async control check  
The RAMB18E1 design_1_i/detection_acc_0/inst/detection_acc_Weight_m_axi_U/bus_read/buff_rdata/mem_reg has an input control pin design_1_i/detection_acc_0/inst/detection_acc_Weight_m_axi_U/bus_read/buff_rdata/mem_reg/WEBWE[1] (net: design_1_i/detection_acc_0/inst/detection_acc_Weight_m_axi_U/bus_read/buff_rdata/m_axi_Weight_RVALID) which is driven by a register (design_1_i/axi_mem_intercon_1/s00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_READ.USE_SPLIT_R.read_addr_inst/USE_R_CHANNEL.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/empty_fwft_i_reg) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
Related violations: <none>

REQP-1840#19 Warning
RAMB18 async control check  
The RAMB18E1 design_1_i/detection_acc_0/inst/detection_acc_Weight_m_axi_U/bus_read/buff_rdata/mem_reg has an input control pin design_1_i/detection_acc_0/inst/detection_acc_Weight_m_axi_U/bus_read/buff_rdata/mem_reg/WEBWE[2] (net: design_1_i/detection_acc_0/inst/detection_acc_Weight_m_axi_U/bus_read/buff_rdata/m_axi_Weight_RVALID) which is driven by a register (design_1_i/axi_mem_intercon_1/s00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_READ.USE_SPLIT_R.read_addr_inst/USE_R_CHANNEL.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/empty_fwft_i_reg) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
Related violations: <none>

REQP-1840#20 Warning
RAMB18 async control check  
The RAMB18E1 design_1_i/detection_acc_0/inst/detection_acc_Weight_m_axi_U/bus_read/buff_rdata/mem_reg has an input control pin design_1_i/detection_acc_0/inst/detection_acc_Weight_m_axi_U/bus_read/buff_rdata/mem_reg/WEBWE[3] (net: design_1_i/detection_acc_0/inst/detection_acc_Weight_m_axi_U/bus_read/buff_rdata/m_axi_Weight_RVALID) which is driven by a register (design_1_i/axi_mem_intercon_1/s00_couplers/auto_pc/inst/gen_axi4_axi3.axi3_conv_inst/USE_READ.USE_SPLIT_R.read_addr_inst/USE_R_CHANNEL.cmd_queue/inst/fifo_gen_inst/inst_fifo_gen/gconvfifo.rf/grf.rf/gntv_or_sync_fifo.gl0.rd/gr1.gr1_int.rfwft/empty_fwft_i_reg) that has an active asychronous set or reset. This may cause corruption of the memory contents and/or read values when the set/reset is asserted and is not analyzed by the default static timing analysis. It is suggested to eliminate the use of a set/reset to registers driving this RAMB pin or else use a synchronous reset in which the assertion of the reset is timed by default.
Related violations: <none>


