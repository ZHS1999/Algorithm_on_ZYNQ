// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module conv (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        output_buffer_0_address0,
        output_buffer_0_ce0,
        output_buffer_0_we0,
        output_buffer_0_d0,
        output_buffer_0_q0,
        output_buffer_1_address0,
        output_buffer_1_ce0,
        output_buffer_1_we0,
        output_buffer_1_d0,
        output_buffer_1_q0,
        output_buffer_2_address0,
        output_buffer_2_ce0,
        output_buffer_2_we0,
        output_buffer_2_d0,
        output_buffer_2_q0,
        output_buffer_3_address0,
        output_buffer_3_ce0,
        output_buffer_3_we0,
        output_buffer_3_d0,
        output_buffer_3_q0,
        output_buffer_4_address0,
        output_buffer_4_ce0,
        output_buffer_4_we0,
        output_buffer_4_d0,
        output_buffer_4_q0,
        output_buffer_5_address0,
        output_buffer_5_ce0,
        output_buffer_5_we0,
        output_buffer_5_d0,
        output_buffer_5_q0,
        output_buffer_6_address0,
        output_buffer_6_ce0,
        output_buffer_6_we0,
        output_buffer_6_d0,
        output_buffer_6_q0,
        output_buffer_7_address0,
        output_buffer_7_ce0,
        output_buffer_7_we0,
        output_buffer_7_d0,
        output_buffer_7_q0,
        output_buffer_8_address0,
        output_buffer_8_ce0,
        output_buffer_8_we0,
        output_buffer_8_d0,
        output_buffer_8_q0,
        output_buffer_9_address0,
        output_buffer_9_ce0,
        output_buffer_9_we0,
        output_buffer_9_d0,
        output_buffer_9_q0,
        output_buffer_10_address0,
        output_buffer_10_ce0,
        output_buffer_10_we0,
        output_buffer_10_d0,
        output_buffer_10_q0,
        output_buffer_11_address0,
        output_buffer_11_ce0,
        output_buffer_11_we0,
        output_buffer_11_d0,
        output_buffer_11_q0,
        output_buffer_12_address0,
        output_buffer_12_ce0,
        output_buffer_12_we0,
        output_buffer_12_d0,
        output_buffer_12_q0,
        output_buffer_13_address0,
        output_buffer_13_ce0,
        output_buffer_13_we0,
        output_buffer_13_d0,
        output_buffer_13_q0,
        output_buffer_14_address0,
        output_buffer_14_ce0,
        output_buffer_14_we0,
        output_buffer_14_d0,
        output_buffer_14_q0,
        output_buffer_15_address0,
        output_buffer_15_ce0,
        output_buffer_15_we0,
        output_buffer_15_d0,
        output_buffer_15_q0,
        output_buffer_16_address0,
        output_buffer_16_ce0,
        output_buffer_16_we0,
        output_buffer_16_d0,
        output_buffer_16_q0,
        output_buffer_17_address0,
        output_buffer_17_ce0,
        output_buffer_17_we0,
        output_buffer_17_d0,
        output_buffer_17_q0,
        output_buffer_18_address0,
        output_buffer_18_ce0,
        output_buffer_18_we0,
        output_buffer_18_d0,
        output_buffer_18_q0,
        output_buffer_19_address0,
        output_buffer_19_ce0,
        output_buffer_19_we0,
        output_buffer_19_d0,
        output_buffer_19_q0,
        output_buffer_20_address0,
        output_buffer_20_ce0,
        output_buffer_20_we0,
        output_buffer_20_d0,
        output_buffer_20_q0,
        output_buffer_21_address0,
        output_buffer_21_ce0,
        output_buffer_21_we0,
        output_buffer_21_d0,
        output_buffer_21_q0,
        output_buffer_22_address0,
        output_buffer_22_ce0,
        output_buffer_22_we0,
        output_buffer_22_d0,
        output_buffer_22_q0,
        output_buffer_23_address0,
        output_buffer_23_ce0,
        output_buffer_23_we0,
        output_buffer_23_d0,
        output_buffer_23_q0,
        output_buffer_24_address0,
        output_buffer_24_ce0,
        output_buffer_24_we0,
        output_buffer_24_d0,
        output_buffer_24_q0,
        output_buffer_25_address0,
        output_buffer_25_ce0,
        output_buffer_25_we0,
        output_buffer_25_d0,
        output_buffer_25_q0,
        output_buffer_26_address0,
        output_buffer_26_ce0,
        output_buffer_26_we0,
        output_buffer_26_d0,
        output_buffer_26_q0,
        output_buffer_27_address0,
        output_buffer_27_ce0,
        output_buffer_27_we0,
        output_buffer_27_d0,
        output_buffer_27_q0,
        output_buffer_28_address0,
        output_buffer_28_ce0,
        output_buffer_28_we0,
        output_buffer_28_d0,
        output_buffer_28_q0,
        output_buffer_29_address0,
        output_buffer_29_ce0,
        output_buffer_29_we0,
        output_buffer_29_d0,
        output_buffer_29_q0,
        output_buffer_30_address0,
        output_buffer_30_ce0,
        output_buffer_30_we0,
        output_buffer_30_d0,
        output_buffer_30_q0,
        output_buffer_31_address0,
        output_buffer_31_ce0,
        output_buffer_31_we0,
        output_buffer_31_d0,
        output_buffer_31_q0,
        beta_buffer_address0,
        beta_buffer_ce0,
        beta_buffer_q0,
        TM_offset,
        TN,
        TR,
        TC,
        enable,
        n,
        weight_buffer_V_0_25_address0,
        weight_buffer_V_0_25_ce0,
        weight_buffer_V_0_25_q0,
        weight_buffer_V_0_1_address0,
        weight_buffer_V_0_1_ce0,
        weight_buffer_V_0_1_q0,
        weight_buffer_V_0_9_address0,
        weight_buffer_V_0_9_ce0,
        weight_buffer_V_0_9_q0,
        weight_buffer_V_0_17_address0,
        weight_buffer_V_0_17_ce0,
        weight_buffer_V_0_17_q0,
        weight_buffer_V_1_25_address0,
        weight_buffer_V_1_25_ce0,
        weight_buffer_V_1_25_q0,
        weight_buffer_V_1_1_address0,
        weight_buffer_V_1_1_ce0,
        weight_buffer_V_1_1_q0,
        weight_buffer_V_1_9_address0,
        weight_buffer_V_1_9_ce0,
        weight_buffer_V_1_9_q0,
        weight_buffer_V_1_17_address0,
        weight_buffer_V_1_17_ce0,
        weight_buffer_V_1_17_q0,
        weight_buffer_V_2_25_address0,
        weight_buffer_V_2_25_ce0,
        weight_buffer_V_2_25_q0,
        weight_buffer_V_2_1_address0,
        weight_buffer_V_2_1_ce0,
        weight_buffer_V_2_1_q0,
        weight_buffer_V_2_9_address0,
        weight_buffer_V_2_9_ce0,
        weight_buffer_V_2_9_q0,
        weight_buffer_V_2_17_address0,
        weight_buffer_V_2_17_ce0,
        weight_buffer_V_2_17_q0,
        weight_buffer_V_3_25_address0,
        weight_buffer_V_3_25_ce0,
        weight_buffer_V_3_25_q0,
        weight_buffer_V_3_1_address0,
        weight_buffer_V_3_1_ce0,
        weight_buffer_V_3_1_q0,
        weight_buffer_V_3_9_address0,
        weight_buffer_V_3_9_ce0,
        weight_buffer_V_3_9_q0,
        weight_buffer_V_3_17_address0,
        weight_buffer_V_3_17_ce0,
        weight_buffer_V_3_17_q0,
        weight_buffer_V_0_26_address0,
        weight_buffer_V_0_26_ce0,
        weight_buffer_V_0_26_q0,
        weight_buffer_V_0_2_address0,
        weight_buffer_V_0_2_ce0,
        weight_buffer_V_0_2_q0,
        weight_buffer_V_0_10_address0,
        weight_buffer_V_0_10_ce0,
        weight_buffer_V_0_10_q0,
        weight_buffer_V_0_18_address0,
        weight_buffer_V_0_18_ce0,
        weight_buffer_V_0_18_q0,
        weight_buffer_V_1_26_address0,
        weight_buffer_V_1_26_ce0,
        weight_buffer_V_1_26_q0,
        weight_buffer_V_1_2_address0,
        weight_buffer_V_1_2_ce0,
        weight_buffer_V_1_2_q0,
        weight_buffer_V_1_10_address0,
        weight_buffer_V_1_10_ce0,
        weight_buffer_V_1_10_q0,
        weight_buffer_V_1_18_address0,
        weight_buffer_V_1_18_ce0,
        weight_buffer_V_1_18_q0,
        weight_buffer_V_2_26_address0,
        weight_buffer_V_2_26_ce0,
        weight_buffer_V_2_26_q0,
        weight_buffer_V_2_2_address0,
        weight_buffer_V_2_2_ce0,
        weight_buffer_V_2_2_q0,
        weight_buffer_V_2_10_address0,
        weight_buffer_V_2_10_ce0,
        weight_buffer_V_2_10_q0,
        weight_buffer_V_2_18_address0,
        weight_buffer_V_2_18_ce0,
        weight_buffer_V_2_18_q0,
        weight_buffer_V_3_26_address0,
        weight_buffer_V_3_26_ce0,
        weight_buffer_V_3_26_q0,
        weight_buffer_V_3_2_address0,
        weight_buffer_V_3_2_ce0,
        weight_buffer_V_3_2_q0,
        weight_buffer_V_3_10_address0,
        weight_buffer_V_3_10_ce0,
        weight_buffer_V_3_10_q0,
        weight_buffer_V_3_18_address0,
        weight_buffer_V_3_18_ce0,
        weight_buffer_V_3_18_q0,
        weight_buffer_V_0_27_address0,
        weight_buffer_V_0_27_ce0,
        weight_buffer_V_0_27_q0,
        weight_buffer_V_0_3_address0,
        weight_buffer_V_0_3_ce0,
        weight_buffer_V_0_3_q0,
        weight_buffer_V_0_11_address0,
        weight_buffer_V_0_11_ce0,
        weight_buffer_V_0_11_q0,
        weight_buffer_V_0_19_address0,
        weight_buffer_V_0_19_ce0,
        weight_buffer_V_0_19_q0,
        weight_buffer_V_1_27_address0,
        weight_buffer_V_1_27_ce0,
        weight_buffer_V_1_27_q0,
        weight_buffer_V_1_3_address0,
        weight_buffer_V_1_3_ce0,
        weight_buffer_V_1_3_q0,
        weight_buffer_V_1_11_address0,
        weight_buffer_V_1_11_ce0,
        weight_buffer_V_1_11_q0,
        weight_buffer_V_1_19_address0,
        weight_buffer_V_1_19_ce0,
        weight_buffer_V_1_19_q0,
        weight_buffer_V_2_27_address0,
        weight_buffer_V_2_27_ce0,
        weight_buffer_V_2_27_q0,
        weight_buffer_V_2_3_address0,
        weight_buffer_V_2_3_ce0,
        weight_buffer_V_2_3_q0,
        weight_buffer_V_2_11_address0,
        weight_buffer_V_2_11_ce0,
        weight_buffer_V_2_11_q0,
        weight_buffer_V_2_19_address0,
        weight_buffer_V_2_19_ce0,
        weight_buffer_V_2_19_q0,
        weight_buffer_V_3_27_address0,
        weight_buffer_V_3_27_ce0,
        weight_buffer_V_3_27_q0,
        weight_buffer_V_3_3_address0,
        weight_buffer_V_3_3_ce0,
        weight_buffer_V_3_3_q0,
        weight_buffer_V_3_11_address0,
        weight_buffer_V_3_11_ce0,
        weight_buffer_V_3_11_q0,
        weight_buffer_V_3_19_address0,
        weight_buffer_V_3_19_ce0,
        weight_buffer_V_3_19_q0,
        weight_buffer_V_0_28_address0,
        weight_buffer_V_0_28_ce0,
        weight_buffer_V_0_28_q0,
        weight_buffer_V_0_4_address0,
        weight_buffer_V_0_4_ce0,
        weight_buffer_V_0_4_q0,
        weight_buffer_V_0_12_address0,
        weight_buffer_V_0_12_ce0,
        weight_buffer_V_0_12_q0,
        weight_buffer_V_0_20_address0,
        weight_buffer_V_0_20_ce0,
        weight_buffer_V_0_20_q0,
        weight_buffer_V_1_28_address0,
        weight_buffer_V_1_28_ce0,
        weight_buffer_V_1_28_q0,
        weight_buffer_V_1_4_address0,
        weight_buffer_V_1_4_ce0,
        weight_buffer_V_1_4_q0,
        weight_buffer_V_1_12_address0,
        weight_buffer_V_1_12_ce0,
        weight_buffer_V_1_12_q0,
        weight_buffer_V_1_20_address0,
        weight_buffer_V_1_20_ce0,
        weight_buffer_V_1_20_q0,
        weight_buffer_V_2_28_address0,
        weight_buffer_V_2_28_ce0,
        weight_buffer_V_2_28_q0,
        weight_buffer_V_2_4_address0,
        weight_buffer_V_2_4_ce0,
        weight_buffer_V_2_4_q0,
        weight_buffer_V_2_12_address0,
        weight_buffer_V_2_12_ce0,
        weight_buffer_V_2_12_q0,
        weight_buffer_V_2_20_address0,
        weight_buffer_V_2_20_ce0,
        weight_buffer_V_2_20_q0,
        weight_buffer_V_3_28_address0,
        weight_buffer_V_3_28_ce0,
        weight_buffer_V_3_28_q0,
        weight_buffer_V_3_4_address0,
        weight_buffer_V_3_4_ce0,
        weight_buffer_V_3_4_q0,
        weight_buffer_V_3_12_address0,
        weight_buffer_V_3_12_ce0,
        weight_buffer_V_3_12_q0,
        weight_buffer_V_3_20_address0,
        weight_buffer_V_3_20_ce0,
        weight_buffer_V_3_20_q0,
        weight_buffer_V_0_29_address0,
        weight_buffer_V_0_29_ce0,
        weight_buffer_V_0_29_q0,
        weight_buffer_V_0_5_address0,
        weight_buffer_V_0_5_ce0,
        weight_buffer_V_0_5_q0,
        weight_buffer_V_0_13_address0,
        weight_buffer_V_0_13_ce0,
        weight_buffer_V_0_13_q0,
        weight_buffer_V_0_21_address0,
        weight_buffer_V_0_21_ce0,
        weight_buffer_V_0_21_q0,
        weight_buffer_V_1_29_address0,
        weight_buffer_V_1_29_ce0,
        weight_buffer_V_1_29_q0,
        weight_buffer_V_1_5_address0,
        weight_buffer_V_1_5_ce0,
        weight_buffer_V_1_5_q0,
        weight_buffer_V_1_13_address0,
        weight_buffer_V_1_13_ce0,
        weight_buffer_V_1_13_q0,
        weight_buffer_V_1_21_address0,
        weight_buffer_V_1_21_ce0,
        weight_buffer_V_1_21_q0,
        weight_buffer_V_2_29_address0,
        weight_buffer_V_2_29_ce0,
        weight_buffer_V_2_29_q0,
        weight_buffer_V_2_5_address0,
        weight_buffer_V_2_5_ce0,
        weight_buffer_V_2_5_q0,
        weight_buffer_V_2_13_address0,
        weight_buffer_V_2_13_ce0,
        weight_buffer_V_2_13_q0,
        weight_buffer_V_2_21_address0,
        weight_buffer_V_2_21_ce0,
        weight_buffer_V_2_21_q0,
        weight_buffer_V_3_29_address0,
        weight_buffer_V_3_29_ce0,
        weight_buffer_V_3_29_q0,
        weight_buffer_V_3_5_address0,
        weight_buffer_V_3_5_ce0,
        weight_buffer_V_3_5_q0,
        weight_buffer_V_3_13_address0,
        weight_buffer_V_3_13_ce0,
        weight_buffer_V_3_13_q0,
        weight_buffer_V_3_21_address0,
        weight_buffer_V_3_21_ce0,
        weight_buffer_V_3_21_q0,
        weight_buffer_V_0_30_address0,
        weight_buffer_V_0_30_ce0,
        weight_buffer_V_0_30_q0,
        weight_buffer_V_0_6_address0,
        weight_buffer_V_0_6_ce0,
        weight_buffer_V_0_6_q0,
        weight_buffer_V_0_14_address0,
        weight_buffer_V_0_14_ce0,
        weight_buffer_V_0_14_q0,
        weight_buffer_V_0_22_address0,
        weight_buffer_V_0_22_ce0,
        weight_buffer_V_0_22_q0,
        weight_buffer_V_1_30_address0,
        weight_buffer_V_1_30_ce0,
        weight_buffer_V_1_30_q0,
        weight_buffer_V_1_6_address0,
        weight_buffer_V_1_6_ce0,
        weight_buffer_V_1_6_q0,
        weight_buffer_V_1_14_address0,
        weight_buffer_V_1_14_ce0,
        weight_buffer_V_1_14_q0,
        weight_buffer_V_1_22_address0,
        weight_buffer_V_1_22_ce0,
        weight_buffer_V_1_22_q0,
        weight_buffer_V_2_30_address0,
        weight_buffer_V_2_30_ce0,
        weight_buffer_V_2_30_q0,
        weight_buffer_V_2_6_address0,
        weight_buffer_V_2_6_ce0,
        weight_buffer_V_2_6_q0,
        weight_buffer_V_2_14_address0,
        weight_buffer_V_2_14_ce0,
        weight_buffer_V_2_14_q0,
        weight_buffer_V_2_22_address0,
        weight_buffer_V_2_22_ce0,
        weight_buffer_V_2_22_q0,
        weight_buffer_V_3_30_address0,
        weight_buffer_V_3_30_ce0,
        weight_buffer_V_3_30_q0,
        weight_buffer_V_3_6_address0,
        weight_buffer_V_3_6_ce0,
        weight_buffer_V_3_6_q0,
        weight_buffer_V_3_14_address0,
        weight_buffer_V_3_14_ce0,
        weight_buffer_V_3_14_q0,
        weight_buffer_V_3_22_address0,
        weight_buffer_V_3_22_ce0,
        weight_buffer_V_3_22_q0,
        weight_buffer_V_0_31_address0,
        weight_buffer_V_0_31_ce0,
        weight_buffer_V_0_31_q0,
        weight_buffer_V_0_7_address0,
        weight_buffer_V_0_7_ce0,
        weight_buffer_V_0_7_q0,
        weight_buffer_V_0_15_address0,
        weight_buffer_V_0_15_ce0,
        weight_buffer_V_0_15_q0,
        weight_buffer_V_0_23_address0,
        weight_buffer_V_0_23_ce0,
        weight_buffer_V_0_23_q0,
        weight_buffer_V_1_31_address0,
        weight_buffer_V_1_31_ce0,
        weight_buffer_V_1_31_q0,
        weight_buffer_V_1_7_address0,
        weight_buffer_V_1_7_ce0,
        weight_buffer_V_1_7_q0,
        weight_buffer_V_1_15_address0,
        weight_buffer_V_1_15_ce0,
        weight_buffer_V_1_15_q0,
        weight_buffer_V_1_23_address0,
        weight_buffer_V_1_23_ce0,
        weight_buffer_V_1_23_q0,
        weight_buffer_V_2_31_address0,
        weight_buffer_V_2_31_ce0,
        weight_buffer_V_2_31_q0,
        weight_buffer_V_2_7_address0,
        weight_buffer_V_2_7_ce0,
        weight_buffer_V_2_7_q0,
        weight_buffer_V_2_15_address0,
        weight_buffer_V_2_15_ce0,
        weight_buffer_V_2_15_q0,
        weight_buffer_V_2_23_address0,
        weight_buffer_V_2_23_ce0,
        weight_buffer_V_2_23_q0,
        weight_buffer_V_3_31_address0,
        weight_buffer_V_3_31_ce0,
        weight_buffer_V_3_31_q0,
        weight_buffer_V_3_7_address0,
        weight_buffer_V_3_7_ce0,
        weight_buffer_V_3_7_q0,
        weight_buffer_V_3_15_address0,
        weight_buffer_V_3_15_ce0,
        weight_buffer_V_3_15_q0,
        weight_buffer_V_3_23_address0,
        weight_buffer_V_3_23_ce0,
        weight_buffer_V_3_23_q0,
        input_buffer_V_0_address0,
        input_buffer_V_0_ce0,
        input_buffer_V_0_q0,
        weight_buffer_V_0_24_address0,
        weight_buffer_V_0_24_ce0,
        weight_buffer_V_0_24_q0,
        weight_buffer_V_0_0_address0,
        weight_buffer_V_0_0_ce0,
        weight_buffer_V_0_0_q0,
        weight_buffer_V_0_8_address0,
        weight_buffer_V_0_8_ce0,
        weight_buffer_V_0_8_q0,
        weight_buffer_V_0_16_address0,
        weight_buffer_V_0_16_ce0,
        weight_buffer_V_0_16_q0,
        input_buffer_V_1_address0,
        input_buffer_V_1_ce0,
        input_buffer_V_1_q0,
        weight_buffer_V_1_24_address0,
        weight_buffer_V_1_24_ce0,
        weight_buffer_V_1_24_q0,
        weight_buffer_V_1_0_address0,
        weight_buffer_V_1_0_ce0,
        weight_buffer_V_1_0_q0,
        weight_buffer_V_1_8_address0,
        weight_buffer_V_1_8_ce0,
        weight_buffer_V_1_8_q0,
        weight_buffer_V_1_16_address0,
        weight_buffer_V_1_16_ce0,
        weight_buffer_V_1_16_q0,
        input_buffer_V_2_address0,
        input_buffer_V_2_ce0,
        input_buffer_V_2_q0,
        weight_buffer_V_2_24_address0,
        weight_buffer_V_2_24_ce0,
        weight_buffer_V_2_24_q0,
        weight_buffer_V_2_0_address0,
        weight_buffer_V_2_0_ce0,
        weight_buffer_V_2_0_q0,
        weight_buffer_V_2_8_address0,
        weight_buffer_V_2_8_ce0,
        weight_buffer_V_2_8_q0,
        weight_buffer_V_2_16_address0,
        weight_buffer_V_2_16_ce0,
        weight_buffer_V_2_16_q0,
        input_buffer_V_3_address0,
        input_buffer_V_3_ce0,
        input_buffer_V_3_q0,
        weight_buffer_V_3_24_address0,
        weight_buffer_V_3_24_ce0,
        weight_buffer_V_3_24_q0,
        weight_buffer_V_3_0_address0,
        weight_buffer_V_3_0_ce0,
        weight_buffer_V_3_0_q0,
        weight_buffer_V_3_8_address0,
        weight_buffer_V_3_8_ce0,
        weight_buffer_V_3_8_q0,
        weight_buffer_V_3_16_address0,
        weight_buffer_V_3_16_ce0,
        weight_buffer_V_3_16_q0
);

parameter    ap_ST_fsm_state1 = 8'd1;
parameter    ap_ST_fsm_state2 = 8'd2;
parameter    ap_ST_fsm_state3 = 8'd4;
parameter    ap_ST_fsm_state4 = 8'd8;
parameter    ap_ST_fsm_state5 = 8'd16;
parameter    ap_ST_fsm_pp0_stage0 = 8'd32;
parameter    ap_ST_fsm_pp0_stage1 = 8'd64;
parameter    ap_ST_fsm_state11 = 8'd128;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [9:0] output_buffer_0_address0;
output   output_buffer_0_ce0;
output   output_buffer_0_we0;
output  [31:0] output_buffer_0_d0;
input  [31:0] output_buffer_0_q0;
output  [9:0] output_buffer_1_address0;
output   output_buffer_1_ce0;
output   output_buffer_1_we0;
output  [31:0] output_buffer_1_d0;
input  [31:0] output_buffer_1_q0;
output  [9:0] output_buffer_2_address0;
output   output_buffer_2_ce0;
output   output_buffer_2_we0;
output  [31:0] output_buffer_2_d0;
input  [31:0] output_buffer_2_q0;
output  [9:0] output_buffer_3_address0;
output   output_buffer_3_ce0;
output   output_buffer_3_we0;
output  [31:0] output_buffer_3_d0;
input  [31:0] output_buffer_3_q0;
output  [9:0] output_buffer_4_address0;
output   output_buffer_4_ce0;
output   output_buffer_4_we0;
output  [31:0] output_buffer_4_d0;
input  [31:0] output_buffer_4_q0;
output  [9:0] output_buffer_5_address0;
output   output_buffer_5_ce0;
output   output_buffer_5_we0;
output  [31:0] output_buffer_5_d0;
input  [31:0] output_buffer_5_q0;
output  [9:0] output_buffer_6_address0;
output   output_buffer_6_ce0;
output   output_buffer_6_we0;
output  [31:0] output_buffer_6_d0;
input  [31:0] output_buffer_6_q0;
output  [9:0] output_buffer_7_address0;
output   output_buffer_7_ce0;
output   output_buffer_7_we0;
output  [31:0] output_buffer_7_d0;
input  [31:0] output_buffer_7_q0;
output  [9:0] output_buffer_8_address0;
output   output_buffer_8_ce0;
output   output_buffer_8_we0;
output  [31:0] output_buffer_8_d0;
input  [31:0] output_buffer_8_q0;
output  [9:0] output_buffer_9_address0;
output   output_buffer_9_ce0;
output   output_buffer_9_we0;
output  [31:0] output_buffer_9_d0;
input  [31:0] output_buffer_9_q0;
output  [9:0] output_buffer_10_address0;
output   output_buffer_10_ce0;
output   output_buffer_10_we0;
output  [31:0] output_buffer_10_d0;
input  [31:0] output_buffer_10_q0;
output  [9:0] output_buffer_11_address0;
output   output_buffer_11_ce0;
output   output_buffer_11_we0;
output  [31:0] output_buffer_11_d0;
input  [31:0] output_buffer_11_q0;
output  [9:0] output_buffer_12_address0;
output   output_buffer_12_ce0;
output   output_buffer_12_we0;
output  [31:0] output_buffer_12_d0;
input  [31:0] output_buffer_12_q0;
output  [9:0] output_buffer_13_address0;
output   output_buffer_13_ce0;
output   output_buffer_13_we0;
output  [31:0] output_buffer_13_d0;
input  [31:0] output_buffer_13_q0;
output  [9:0] output_buffer_14_address0;
output   output_buffer_14_ce0;
output   output_buffer_14_we0;
output  [31:0] output_buffer_14_d0;
input  [31:0] output_buffer_14_q0;
output  [9:0] output_buffer_15_address0;
output   output_buffer_15_ce0;
output   output_buffer_15_we0;
output  [31:0] output_buffer_15_d0;
input  [31:0] output_buffer_15_q0;
output  [9:0] output_buffer_16_address0;
output   output_buffer_16_ce0;
output   output_buffer_16_we0;
output  [31:0] output_buffer_16_d0;
input  [31:0] output_buffer_16_q0;
output  [9:0] output_buffer_17_address0;
output   output_buffer_17_ce0;
output   output_buffer_17_we0;
output  [31:0] output_buffer_17_d0;
input  [31:0] output_buffer_17_q0;
output  [9:0] output_buffer_18_address0;
output   output_buffer_18_ce0;
output   output_buffer_18_we0;
output  [31:0] output_buffer_18_d0;
input  [31:0] output_buffer_18_q0;
output  [9:0] output_buffer_19_address0;
output   output_buffer_19_ce0;
output   output_buffer_19_we0;
output  [31:0] output_buffer_19_d0;
input  [31:0] output_buffer_19_q0;
output  [9:0] output_buffer_20_address0;
output   output_buffer_20_ce0;
output   output_buffer_20_we0;
output  [31:0] output_buffer_20_d0;
input  [31:0] output_buffer_20_q0;
output  [9:0] output_buffer_21_address0;
output   output_buffer_21_ce0;
output   output_buffer_21_we0;
output  [31:0] output_buffer_21_d0;
input  [31:0] output_buffer_21_q0;
output  [9:0] output_buffer_22_address0;
output   output_buffer_22_ce0;
output   output_buffer_22_we0;
output  [31:0] output_buffer_22_d0;
input  [31:0] output_buffer_22_q0;
output  [9:0] output_buffer_23_address0;
output   output_buffer_23_ce0;
output   output_buffer_23_we0;
output  [31:0] output_buffer_23_d0;
input  [31:0] output_buffer_23_q0;
output  [9:0] output_buffer_24_address0;
output   output_buffer_24_ce0;
output   output_buffer_24_we0;
output  [31:0] output_buffer_24_d0;
input  [31:0] output_buffer_24_q0;
output  [9:0] output_buffer_25_address0;
output   output_buffer_25_ce0;
output   output_buffer_25_we0;
output  [31:0] output_buffer_25_d0;
input  [31:0] output_buffer_25_q0;
output  [9:0] output_buffer_26_address0;
output   output_buffer_26_ce0;
output   output_buffer_26_we0;
output  [31:0] output_buffer_26_d0;
input  [31:0] output_buffer_26_q0;
output  [9:0] output_buffer_27_address0;
output   output_buffer_27_ce0;
output   output_buffer_27_we0;
output  [31:0] output_buffer_27_d0;
input  [31:0] output_buffer_27_q0;
output  [9:0] output_buffer_28_address0;
output   output_buffer_28_ce0;
output   output_buffer_28_we0;
output  [31:0] output_buffer_28_d0;
input  [31:0] output_buffer_28_q0;
output  [9:0] output_buffer_29_address0;
output   output_buffer_29_ce0;
output   output_buffer_29_we0;
output  [31:0] output_buffer_29_d0;
input  [31:0] output_buffer_29_q0;
output  [9:0] output_buffer_30_address0;
output   output_buffer_30_ce0;
output   output_buffer_30_we0;
output  [31:0] output_buffer_30_d0;
input  [31:0] output_buffer_30_q0;
output  [9:0] output_buffer_31_address0;
output   output_buffer_31_ce0;
output   output_buffer_31_we0;
output  [31:0] output_buffer_31_d0;
input  [31:0] output_buffer_31_q0;
output  [9:0] beta_buffer_address0;
output   beta_buffer_ce0;
input  [31:0] beta_buffer_q0;
input  [31:0] TM_offset;
input  [31:0] TN;
input  [31:0] TR;
input  [31:0] TC;
input   enable;
input  [30:0] n;
output  [4:0] weight_buffer_V_0_25_address0;
output   weight_buffer_V_0_25_ce0;
input  [7:0] weight_buffer_V_0_25_q0;
output  [4:0] weight_buffer_V_0_1_address0;
output   weight_buffer_V_0_1_ce0;
input  [7:0] weight_buffer_V_0_1_q0;
output  [4:0] weight_buffer_V_0_9_address0;
output   weight_buffer_V_0_9_ce0;
input  [7:0] weight_buffer_V_0_9_q0;
output  [4:0] weight_buffer_V_0_17_address0;
output   weight_buffer_V_0_17_ce0;
input  [7:0] weight_buffer_V_0_17_q0;
output  [4:0] weight_buffer_V_1_25_address0;
output   weight_buffer_V_1_25_ce0;
input  [7:0] weight_buffer_V_1_25_q0;
output  [4:0] weight_buffer_V_1_1_address0;
output   weight_buffer_V_1_1_ce0;
input  [7:0] weight_buffer_V_1_1_q0;
output  [4:0] weight_buffer_V_1_9_address0;
output   weight_buffer_V_1_9_ce0;
input  [7:0] weight_buffer_V_1_9_q0;
output  [4:0] weight_buffer_V_1_17_address0;
output   weight_buffer_V_1_17_ce0;
input  [7:0] weight_buffer_V_1_17_q0;
output  [4:0] weight_buffer_V_2_25_address0;
output   weight_buffer_V_2_25_ce0;
input  [7:0] weight_buffer_V_2_25_q0;
output  [4:0] weight_buffer_V_2_1_address0;
output   weight_buffer_V_2_1_ce0;
input  [7:0] weight_buffer_V_2_1_q0;
output  [4:0] weight_buffer_V_2_9_address0;
output   weight_buffer_V_2_9_ce0;
input  [7:0] weight_buffer_V_2_9_q0;
output  [4:0] weight_buffer_V_2_17_address0;
output   weight_buffer_V_2_17_ce0;
input  [7:0] weight_buffer_V_2_17_q0;
output  [4:0] weight_buffer_V_3_25_address0;
output   weight_buffer_V_3_25_ce0;
input  [7:0] weight_buffer_V_3_25_q0;
output  [4:0] weight_buffer_V_3_1_address0;
output   weight_buffer_V_3_1_ce0;
input  [7:0] weight_buffer_V_3_1_q0;
output  [4:0] weight_buffer_V_3_9_address0;
output   weight_buffer_V_3_9_ce0;
input  [7:0] weight_buffer_V_3_9_q0;
output  [4:0] weight_buffer_V_3_17_address0;
output   weight_buffer_V_3_17_ce0;
input  [7:0] weight_buffer_V_3_17_q0;
output  [4:0] weight_buffer_V_0_26_address0;
output   weight_buffer_V_0_26_ce0;
input  [7:0] weight_buffer_V_0_26_q0;
output  [4:0] weight_buffer_V_0_2_address0;
output   weight_buffer_V_0_2_ce0;
input  [7:0] weight_buffer_V_0_2_q0;
output  [4:0] weight_buffer_V_0_10_address0;
output   weight_buffer_V_0_10_ce0;
input  [7:0] weight_buffer_V_0_10_q0;
output  [4:0] weight_buffer_V_0_18_address0;
output   weight_buffer_V_0_18_ce0;
input  [7:0] weight_buffer_V_0_18_q0;
output  [4:0] weight_buffer_V_1_26_address0;
output   weight_buffer_V_1_26_ce0;
input  [7:0] weight_buffer_V_1_26_q0;
output  [4:0] weight_buffer_V_1_2_address0;
output   weight_buffer_V_1_2_ce0;
input  [7:0] weight_buffer_V_1_2_q0;
output  [4:0] weight_buffer_V_1_10_address0;
output   weight_buffer_V_1_10_ce0;
input  [7:0] weight_buffer_V_1_10_q0;
output  [4:0] weight_buffer_V_1_18_address0;
output   weight_buffer_V_1_18_ce0;
input  [7:0] weight_buffer_V_1_18_q0;
output  [4:0] weight_buffer_V_2_26_address0;
output   weight_buffer_V_2_26_ce0;
input  [7:0] weight_buffer_V_2_26_q0;
output  [4:0] weight_buffer_V_2_2_address0;
output   weight_buffer_V_2_2_ce0;
input  [7:0] weight_buffer_V_2_2_q0;
output  [4:0] weight_buffer_V_2_10_address0;
output   weight_buffer_V_2_10_ce0;
input  [7:0] weight_buffer_V_2_10_q0;
output  [4:0] weight_buffer_V_2_18_address0;
output   weight_buffer_V_2_18_ce0;
input  [7:0] weight_buffer_V_2_18_q0;
output  [4:0] weight_buffer_V_3_26_address0;
output   weight_buffer_V_3_26_ce0;
input  [7:0] weight_buffer_V_3_26_q0;
output  [4:0] weight_buffer_V_3_2_address0;
output   weight_buffer_V_3_2_ce0;
input  [7:0] weight_buffer_V_3_2_q0;
output  [4:0] weight_buffer_V_3_10_address0;
output   weight_buffer_V_3_10_ce0;
input  [7:0] weight_buffer_V_3_10_q0;
output  [4:0] weight_buffer_V_3_18_address0;
output   weight_buffer_V_3_18_ce0;
input  [7:0] weight_buffer_V_3_18_q0;
output  [4:0] weight_buffer_V_0_27_address0;
output   weight_buffer_V_0_27_ce0;
input  [7:0] weight_buffer_V_0_27_q0;
output  [4:0] weight_buffer_V_0_3_address0;
output   weight_buffer_V_0_3_ce0;
input  [7:0] weight_buffer_V_0_3_q0;
output  [4:0] weight_buffer_V_0_11_address0;
output   weight_buffer_V_0_11_ce0;
input  [7:0] weight_buffer_V_0_11_q0;
output  [4:0] weight_buffer_V_0_19_address0;
output   weight_buffer_V_0_19_ce0;
input  [7:0] weight_buffer_V_0_19_q0;
output  [4:0] weight_buffer_V_1_27_address0;
output   weight_buffer_V_1_27_ce0;
input  [7:0] weight_buffer_V_1_27_q0;
output  [4:0] weight_buffer_V_1_3_address0;
output   weight_buffer_V_1_3_ce0;
input  [7:0] weight_buffer_V_1_3_q0;
output  [4:0] weight_buffer_V_1_11_address0;
output   weight_buffer_V_1_11_ce0;
input  [7:0] weight_buffer_V_1_11_q0;
output  [4:0] weight_buffer_V_1_19_address0;
output   weight_buffer_V_1_19_ce0;
input  [7:0] weight_buffer_V_1_19_q0;
output  [4:0] weight_buffer_V_2_27_address0;
output   weight_buffer_V_2_27_ce0;
input  [7:0] weight_buffer_V_2_27_q0;
output  [4:0] weight_buffer_V_2_3_address0;
output   weight_buffer_V_2_3_ce0;
input  [7:0] weight_buffer_V_2_3_q0;
output  [4:0] weight_buffer_V_2_11_address0;
output   weight_buffer_V_2_11_ce0;
input  [7:0] weight_buffer_V_2_11_q0;
output  [4:0] weight_buffer_V_2_19_address0;
output   weight_buffer_V_2_19_ce0;
input  [7:0] weight_buffer_V_2_19_q0;
output  [4:0] weight_buffer_V_3_27_address0;
output   weight_buffer_V_3_27_ce0;
input  [7:0] weight_buffer_V_3_27_q0;
output  [4:0] weight_buffer_V_3_3_address0;
output   weight_buffer_V_3_3_ce0;
input  [7:0] weight_buffer_V_3_3_q0;
output  [4:0] weight_buffer_V_3_11_address0;
output   weight_buffer_V_3_11_ce0;
input  [7:0] weight_buffer_V_3_11_q0;
output  [4:0] weight_buffer_V_3_19_address0;
output   weight_buffer_V_3_19_ce0;
input  [7:0] weight_buffer_V_3_19_q0;
output  [4:0] weight_buffer_V_0_28_address0;
output   weight_buffer_V_0_28_ce0;
input  [7:0] weight_buffer_V_0_28_q0;
output  [4:0] weight_buffer_V_0_4_address0;
output   weight_buffer_V_0_4_ce0;
input  [7:0] weight_buffer_V_0_4_q0;
output  [4:0] weight_buffer_V_0_12_address0;
output   weight_buffer_V_0_12_ce0;
input  [7:0] weight_buffer_V_0_12_q0;
output  [4:0] weight_buffer_V_0_20_address0;
output   weight_buffer_V_0_20_ce0;
input  [7:0] weight_buffer_V_0_20_q0;
output  [4:0] weight_buffer_V_1_28_address0;
output   weight_buffer_V_1_28_ce0;
input  [7:0] weight_buffer_V_1_28_q0;
output  [4:0] weight_buffer_V_1_4_address0;
output   weight_buffer_V_1_4_ce0;
input  [7:0] weight_buffer_V_1_4_q0;
output  [4:0] weight_buffer_V_1_12_address0;
output   weight_buffer_V_1_12_ce0;
input  [7:0] weight_buffer_V_1_12_q0;
output  [4:0] weight_buffer_V_1_20_address0;
output   weight_buffer_V_1_20_ce0;
input  [7:0] weight_buffer_V_1_20_q0;
output  [4:0] weight_buffer_V_2_28_address0;
output   weight_buffer_V_2_28_ce0;
input  [7:0] weight_buffer_V_2_28_q0;
output  [4:0] weight_buffer_V_2_4_address0;
output   weight_buffer_V_2_4_ce0;
input  [7:0] weight_buffer_V_2_4_q0;
output  [4:0] weight_buffer_V_2_12_address0;
output   weight_buffer_V_2_12_ce0;
input  [7:0] weight_buffer_V_2_12_q0;
output  [4:0] weight_buffer_V_2_20_address0;
output   weight_buffer_V_2_20_ce0;
input  [7:0] weight_buffer_V_2_20_q0;
output  [4:0] weight_buffer_V_3_28_address0;
output   weight_buffer_V_3_28_ce0;
input  [7:0] weight_buffer_V_3_28_q0;
output  [4:0] weight_buffer_V_3_4_address0;
output   weight_buffer_V_3_4_ce0;
input  [7:0] weight_buffer_V_3_4_q0;
output  [4:0] weight_buffer_V_3_12_address0;
output   weight_buffer_V_3_12_ce0;
input  [7:0] weight_buffer_V_3_12_q0;
output  [4:0] weight_buffer_V_3_20_address0;
output   weight_buffer_V_3_20_ce0;
input  [7:0] weight_buffer_V_3_20_q0;
output  [4:0] weight_buffer_V_0_29_address0;
output   weight_buffer_V_0_29_ce0;
input  [7:0] weight_buffer_V_0_29_q0;
output  [4:0] weight_buffer_V_0_5_address0;
output   weight_buffer_V_0_5_ce0;
input  [7:0] weight_buffer_V_0_5_q0;
output  [4:0] weight_buffer_V_0_13_address0;
output   weight_buffer_V_0_13_ce0;
input  [7:0] weight_buffer_V_0_13_q0;
output  [4:0] weight_buffer_V_0_21_address0;
output   weight_buffer_V_0_21_ce0;
input  [7:0] weight_buffer_V_0_21_q0;
output  [4:0] weight_buffer_V_1_29_address0;
output   weight_buffer_V_1_29_ce0;
input  [7:0] weight_buffer_V_1_29_q0;
output  [4:0] weight_buffer_V_1_5_address0;
output   weight_buffer_V_1_5_ce0;
input  [7:0] weight_buffer_V_1_5_q0;
output  [4:0] weight_buffer_V_1_13_address0;
output   weight_buffer_V_1_13_ce0;
input  [7:0] weight_buffer_V_1_13_q0;
output  [4:0] weight_buffer_V_1_21_address0;
output   weight_buffer_V_1_21_ce0;
input  [7:0] weight_buffer_V_1_21_q0;
output  [4:0] weight_buffer_V_2_29_address0;
output   weight_buffer_V_2_29_ce0;
input  [7:0] weight_buffer_V_2_29_q0;
output  [4:0] weight_buffer_V_2_5_address0;
output   weight_buffer_V_2_5_ce0;
input  [7:0] weight_buffer_V_2_5_q0;
output  [4:0] weight_buffer_V_2_13_address0;
output   weight_buffer_V_2_13_ce0;
input  [7:0] weight_buffer_V_2_13_q0;
output  [4:0] weight_buffer_V_2_21_address0;
output   weight_buffer_V_2_21_ce0;
input  [7:0] weight_buffer_V_2_21_q0;
output  [4:0] weight_buffer_V_3_29_address0;
output   weight_buffer_V_3_29_ce0;
input  [7:0] weight_buffer_V_3_29_q0;
output  [4:0] weight_buffer_V_3_5_address0;
output   weight_buffer_V_3_5_ce0;
input  [7:0] weight_buffer_V_3_5_q0;
output  [4:0] weight_buffer_V_3_13_address0;
output   weight_buffer_V_3_13_ce0;
input  [7:0] weight_buffer_V_3_13_q0;
output  [4:0] weight_buffer_V_3_21_address0;
output   weight_buffer_V_3_21_ce0;
input  [7:0] weight_buffer_V_3_21_q0;
output  [4:0] weight_buffer_V_0_30_address0;
output   weight_buffer_V_0_30_ce0;
input  [7:0] weight_buffer_V_0_30_q0;
output  [4:0] weight_buffer_V_0_6_address0;
output   weight_buffer_V_0_6_ce0;
input  [7:0] weight_buffer_V_0_6_q0;
output  [4:0] weight_buffer_V_0_14_address0;
output   weight_buffer_V_0_14_ce0;
input  [7:0] weight_buffer_V_0_14_q0;
output  [4:0] weight_buffer_V_0_22_address0;
output   weight_buffer_V_0_22_ce0;
input  [7:0] weight_buffer_V_0_22_q0;
output  [4:0] weight_buffer_V_1_30_address0;
output   weight_buffer_V_1_30_ce0;
input  [7:0] weight_buffer_V_1_30_q0;
output  [4:0] weight_buffer_V_1_6_address0;
output   weight_buffer_V_1_6_ce0;
input  [7:0] weight_buffer_V_1_6_q0;
output  [4:0] weight_buffer_V_1_14_address0;
output   weight_buffer_V_1_14_ce0;
input  [7:0] weight_buffer_V_1_14_q0;
output  [4:0] weight_buffer_V_1_22_address0;
output   weight_buffer_V_1_22_ce0;
input  [7:0] weight_buffer_V_1_22_q0;
output  [4:0] weight_buffer_V_2_30_address0;
output   weight_buffer_V_2_30_ce0;
input  [7:0] weight_buffer_V_2_30_q0;
output  [4:0] weight_buffer_V_2_6_address0;
output   weight_buffer_V_2_6_ce0;
input  [7:0] weight_buffer_V_2_6_q0;
output  [4:0] weight_buffer_V_2_14_address0;
output   weight_buffer_V_2_14_ce0;
input  [7:0] weight_buffer_V_2_14_q0;
output  [4:0] weight_buffer_V_2_22_address0;
output   weight_buffer_V_2_22_ce0;
input  [7:0] weight_buffer_V_2_22_q0;
output  [4:0] weight_buffer_V_3_30_address0;
output   weight_buffer_V_3_30_ce0;
input  [7:0] weight_buffer_V_3_30_q0;
output  [4:0] weight_buffer_V_3_6_address0;
output   weight_buffer_V_3_6_ce0;
input  [7:0] weight_buffer_V_3_6_q0;
output  [4:0] weight_buffer_V_3_14_address0;
output   weight_buffer_V_3_14_ce0;
input  [7:0] weight_buffer_V_3_14_q0;
output  [4:0] weight_buffer_V_3_22_address0;
output   weight_buffer_V_3_22_ce0;
input  [7:0] weight_buffer_V_3_22_q0;
output  [4:0] weight_buffer_V_0_31_address0;
output   weight_buffer_V_0_31_ce0;
input  [7:0] weight_buffer_V_0_31_q0;
output  [4:0] weight_buffer_V_0_7_address0;
output   weight_buffer_V_0_7_ce0;
input  [7:0] weight_buffer_V_0_7_q0;
output  [4:0] weight_buffer_V_0_15_address0;
output   weight_buffer_V_0_15_ce0;
input  [7:0] weight_buffer_V_0_15_q0;
output  [4:0] weight_buffer_V_0_23_address0;
output   weight_buffer_V_0_23_ce0;
input  [7:0] weight_buffer_V_0_23_q0;
output  [4:0] weight_buffer_V_1_31_address0;
output   weight_buffer_V_1_31_ce0;
input  [7:0] weight_buffer_V_1_31_q0;
output  [4:0] weight_buffer_V_1_7_address0;
output   weight_buffer_V_1_7_ce0;
input  [7:0] weight_buffer_V_1_7_q0;
output  [4:0] weight_buffer_V_1_15_address0;
output   weight_buffer_V_1_15_ce0;
input  [7:0] weight_buffer_V_1_15_q0;
output  [4:0] weight_buffer_V_1_23_address0;
output   weight_buffer_V_1_23_ce0;
input  [7:0] weight_buffer_V_1_23_q0;
output  [4:0] weight_buffer_V_2_31_address0;
output   weight_buffer_V_2_31_ce0;
input  [7:0] weight_buffer_V_2_31_q0;
output  [4:0] weight_buffer_V_2_7_address0;
output   weight_buffer_V_2_7_ce0;
input  [7:0] weight_buffer_V_2_7_q0;
output  [4:0] weight_buffer_V_2_15_address0;
output   weight_buffer_V_2_15_ce0;
input  [7:0] weight_buffer_V_2_15_q0;
output  [4:0] weight_buffer_V_2_23_address0;
output   weight_buffer_V_2_23_ce0;
input  [7:0] weight_buffer_V_2_23_q0;
output  [4:0] weight_buffer_V_3_31_address0;
output   weight_buffer_V_3_31_ce0;
input  [7:0] weight_buffer_V_3_31_q0;
output  [4:0] weight_buffer_V_3_7_address0;
output   weight_buffer_V_3_7_ce0;
input  [7:0] weight_buffer_V_3_7_q0;
output  [4:0] weight_buffer_V_3_15_address0;
output   weight_buffer_V_3_15_ce0;
input  [7:0] weight_buffer_V_3_15_q0;
output  [4:0] weight_buffer_V_3_23_address0;
output   weight_buffer_V_3_23_ce0;
input  [7:0] weight_buffer_V_3_23_q0;
output  [10:0] input_buffer_V_0_address0;
output   input_buffer_V_0_ce0;
input  [7:0] input_buffer_V_0_q0;
output  [4:0] weight_buffer_V_0_24_address0;
output   weight_buffer_V_0_24_ce0;
input  [7:0] weight_buffer_V_0_24_q0;
output  [4:0] weight_buffer_V_0_0_address0;
output   weight_buffer_V_0_0_ce0;
input  [7:0] weight_buffer_V_0_0_q0;
output  [4:0] weight_buffer_V_0_8_address0;
output   weight_buffer_V_0_8_ce0;
input  [7:0] weight_buffer_V_0_8_q0;
output  [4:0] weight_buffer_V_0_16_address0;
output   weight_buffer_V_0_16_ce0;
input  [7:0] weight_buffer_V_0_16_q0;
output  [10:0] input_buffer_V_1_address0;
output   input_buffer_V_1_ce0;
input  [7:0] input_buffer_V_1_q0;
output  [4:0] weight_buffer_V_1_24_address0;
output   weight_buffer_V_1_24_ce0;
input  [7:0] weight_buffer_V_1_24_q0;
output  [4:0] weight_buffer_V_1_0_address0;
output   weight_buffer_V_1_0_ce0;
input  [7:0] weight_buffer_V_1_0_q0;
output  [4:0] weight_buffer_V_1_8_address0;
output   weight_buffer_V_1_8_ce0;
input  [7:0] weight_buffer_V_1_8_q0;
output  [4:0] weight_buffer_V_1_16_address0;
output   weight_buffer_V_1_16_ce0;
input  [7:0] weight_buffer_V_1_16_q0;
output  [10:0] input_buffer_V_2_address0;
output   input_buffer_V_2_ce0;
input  [7:0] input_buffer_V_2_q0;
output  [4:0] weight_buffer_V_2_24_address0;
output   weight_buffer_V_2_24_ce0;
input  [7:0] weight_buffer_V_2_24_q0;
output  [4:0] weight_buffer_V_2_0_address0;
output   weight_buffer_V_2_0_ce0;
input  [7:0] weight_buffer_V_2_0_q0;
output  [4:0] weight_buffer_V_2_8_address0;
output   weight_buffer_V_2_8_ce0;
input  [7:0] weight_buffer_V_2_8_q0;
output  [4:0] weight_buffer_V_2_16_address0;
output   weight_buffer_V_2_16_ce0;
input  [7:0] weight_buffer_V_2_16_q0;
output  [10:0] input_buffer_V_3_address0;
output   input_buffer_V_3_ce0;
input  [7:0] input_buffer_V_3_q0;
output  [4:0] weight_buffer_V_3_24_address0;
output   weight_buffer_V_3_24_ce0;
input  [7:0] weight_buffer_V_3_24_q0;
output  [4:0] weight_buffer_V_3_0_address0;
output   weight_buffer_V_3_0_ce0;
input  [7:0] weight_buffer_V_3_0_q0;
output  [4:0] weight_buffer_V_3_8_address0;
output   weight_buffer_V_3_8_ce0;
input  [7:0] weight_buffer_V_3_8_q0;
output  [4:0] weight_buffer_V_3_16_address0;
output   weight_buffer_V_3_16_ce0;
input  [7:0] weight_buffer_V_3_16_q0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[9:0] output_buffer_0_address0;
reg output_buffer_0_ce0;
reg output_buffer_0_we0;
reg[9:0] output_buffer_1_address0;
reg output_buffer_1_ce0;
reg output_buffer_1_we0;
reg[9:0] output_buffer_2_address0;
reg output_buffer_2_ce0;
reg output_buffer_2_we0;
reg[9:0] output_buffer_3_address0;
reg output_buffer_3_ce0;
reg output_buffer_3_we0;
reg[9:0] output_buffer_4_address0;
reg output_buffer_4_ce0;
reg output_buffer_4_we0;
reg[9:0] output_buffer_5_address0;
reg output_buffer_5_ce0;
reg output_buffer_5_we0;
reg[9:0] output_buffer_6_address0;
reg output_buffer_6_ce0;
reg output_buffer_6_we0;
reg[9:0] output_buffer_7_address0;
reg output_buffer_7_ce0;
reg output_buffer_7_we0;
reg[9:0] output_buffer_8_address0;
reg output_buffer_8_ce0;
reg output_buffer_8_we0;
reg[9:0] output_buffer_9_address0;
reg output_buffer_9_ce0;
reg output_buffer_9_we0;
reg[9:0] output_buffer_10_address0;
reg output_buffer_10_ce0;
reg output_buffer_10_we0;
reg[9:0] output_buffer_11_address0;
reg output_buffer_11_ce0;
reg output_buffer_11_we0;
reg[9:0] output_buffer_12_address0;
reg output_buffer_12_ce0;
reg output_buffer_12_we0;
reg[9:0] output_buffer_13_address0;
reg output_buffer_13_ce0;
reg output_buffer_13_we0;
reg[9:0] output_buffer_14_address0;
reg output_buffer_14_ce0;
reg output_buffer_14_we0;
reg[9:0] output_buffer_15_address0;
reg output_buffer_15_ce0;
reg output_buffer_15_we0;
reg[9:0] output_buffer_16_address0;
reg output_buffer_16_ce0;
reg output_buffer_16_we0;
reg[9:0] output_buffer_17_address0;
reg output_buffer_17_ce0;
reg output_buffer_17_we0;
reg[9:0] output_buffer_18_address0;
reg output_buffer_18_ce0;
reg output_buffer_18_we0;
reg[9:0] output_buffer_19_address0;
reg output_buffer_19_ce0;
reg output_buffer_19_we0;
reg[9:0] output_buffer_20_address0;
reg output_buffer_20_ce0;
reg output_buffer_20_we0;
reg[9:0] output_buffer_21_address0;
reg output_buffer_21_ce0;
reg output_buffer_21_we0;
reg[9:0] output_buffer_22_address0;
reg output_buffer_22_ce0;
reg output_buffer_22_we0;
reg[9:0] output_buffer_23_address0;
reg output_buffer_23_ce0;
reg output_buffer_23_we0;
reg[9:0] output_buffer_24_address0;
reg output_buffer_24_ce0;
reg output_buffer_24_we0;
reg[9:0] output_buffer_25_address0;
reg output_buffer_25_ce0;
reg output_buffer_25_we0;
reg[9:0] output_buffer_26_address0;
reg output_buffer_26_ce0;
reg output_buffer_26_we0;
reg[9:0] output_buffer_27_address0;
reg output_buffer_27_ce0;
reg output_buffer_27_we0;
reg[9:0] output_buffer_28_address0;
reg output_buffer_28_ce0;
reg output_buffer_28_we0;
reg[9:0] output_buffer_29_address0;
reg output_buffer_29_ce0;
reg output_buffer_29_we0;
reg[9:0] output_buffer_30_address0;
reg output_buffer_30_ce0;
reg output_buffer_30_we0;
reg[9:0] output_buffer_31_address0;
reg output_buffer_31_ce0;
reg output_buffer_31_we0;
reg weight_buffer_V_0_25_ce0;
reg weight_buffer_V_0_1_ce0;
reg weight_buffer_V_0_9_ce0;
reg weight_buffer_V_0_17_ce0;
reg weight_buffer_V_1_25_ce0;
reg weight_buffer_V_1_1_ce0;
reg weight_buffer_V_1_9_ce0;
reg weight_buffer_V_1_17_ce0;
reg weight_buffer_V_2_25_ce0;
reg weight_buffer_V_2_1_ce0;
reg weight_buffer_V_2_9_ce0;
reg weight_buffer_V_2_17_ce0;
reg weight_buffer_V_3_25_ce0;
reg weight_buffer_V_3_1_ce0;
reg weight_buffer_V_3_9_ce0;
reg weight_buffer_V_3_17_ce0;
reg weight_buffer_V_0_26_ce0;
reg weight_buffer_V_0_2_ce0;
reg weight_buffer_V_0_10_ce0;
reg weight_buffer_V_0_18_ce0;
reg weight_buffer_V_1_26_ce0;
reg weight_buffer_V_1_2_ce0;
reg weight_buffer_V_1_10_ce0;
reg weight_buffer_V_1_18_ce0;
reg weight_buffer_V_2_26_ce0;
reg weight_buffer_V_2_2_ce0;
reg weight_buffer_V_2_10_ce0;
reg weight_buffer_V_2_18_ce0;
reg weight_buffer_V_3_26_ce0;
reg weight_buffer_V_3_2_ce0;
reg weight_buffer_V_3_10_ce0;
reg weight_buffer_V_3_18_ce0;
reg weight_buffer_V_0_27_ce0;
reg weight_buffer_V_0_3_ce0;
reg weight_buffer_V_0_11_ce0;
reg weight_buffer_V_0_19_ce0;
reg weight_buffer_V_1_27_ce0;
reg weight_buffer_V_1_3_ce0;
reg weight_buffer_V_1_11_ce0;
reg weight_buffer_V_1_19_ce0;
reg weight_buffer_V_2_27_ce0;
reg weight_buffer_V_2_3_ce0;
reg weight_buffer_V_2_11_ce0;
reg weight_buffer_V_2_19_ce0;
reg weight_buffer_V_3_27_ce0;
reg weight_buffer_V_3_3_ce0;
reg weight_buffer_V_3_11_ce0;
reg weight_buffer_V_3_19_ce0;
reg weight_buffer_V_0_28_ce0;
reg weight_buffer_V_0_4_ce0;
reg weight_buffer_V_0_12_ce0;
reg weight_buffer_V_0_20_ce0;
reg weight_buffer_V_1_28_ce0;
reg weight_buffer_V_1_4_ce0;
reg weight_buffer_V_1_12_ce0;
reg weight_buffer_V_1_20_ce0;
reg weight_buffer_V_2_28_ce0;
reg weight_buffer_V_2_4_ce0;
reg weight_buffer_V_2_12_ce0;
reg weight_buffer_V_2_20_ce0;
reg weight_buffer_V_3_28_ce0;
reg weight_buffer_V_3_4_ce0;
reg weight_buffer_V_3_12_ce0;
reg weight_buffer_V_3_20_ce0;
reg weight_buffer_V_0_29_ce0;
reg weight_buffer_V_0_5_ce0;
reg weight_buffer_V_0_13_ce0;
reg weight_buffer_V_0_21_ce0;
reg weight_buffer_V_1_29_ce0;
reg weight_buffer_V_1_5_ce0;
reg weight_buffer_V_1_13_ce0;
reg weight_buffer_V_1_21_ce0;
reg weight_buffer_V_2_29_ce0;
reg weight_buffer_V_2_5_ce0;
reg weight_buffer_V_2_13_ce0;
reg weight_buffer_V_2_21_ce0;
reg weight_buffer_V_3_29_ce0;
reg weight_buffer_V_3_5_ce0;
reg weight_buffer_V_3_13_ce0;
reg weight_buffer_V_3_21_ce0;
reg weight_buffer_V_0_30_ce0;
reg weight_buffer_V_0_6_ce0;
reg weight_buffer_V_0_14_ce0;
reg weight_buffer_V_0_22_ce0;
reg weight_buffer_V_1_30_ce0;
reg weight_buffer_V_1_6_ce0;
reg weight_buffer_V_1_14_ce0;
reg weight_buffer_V_1_22_ce0;
reg weight_buffer_V_2_30_ce0;
reg weight_buffer_V_2_6_ce0;
reg weight_buffer_V_2_14_ce0;
reg weight_buffer_V_2_22_ce0;
reg weight_buffer_V_3_30_ce0;
reg weight_buffer_V_3_6_ce0;
reg weight_buffer_V_3_14_ce0;
reg weight_buffer_V_3_22_ce0;
reg weight_buffer_V_0_31_ce0;
reg weight_buffer_V_0_7_ce0;
reg weight_buffer_V_0_15_ce0;
reg weight_buffer_V_0_23_ce0;
reg weight_buffer_V_1_31_ce0;
reg weight_buffer_V_1_7_ce0;
reg weight_buffer_V_1_15_ce0;
reg weight_buffer_V_1_23_ce0;
reg weight_buffer_V_2_31_ce0;
reg weight_buffer_V_2_7_ce0;
reg weight_buffer_V_2_15_ce0;
reg weight_buffer_V_2_23_ce0;
reg weight_buffer_V_3_31_ce0;
reg weight_buffer_V_3_7_ce0;
reg weight_buffer_V_3_15_ce0;
reg weight_buffer_V_3_23_ce0;
reg input_buffer_V_0_ce0;
reg weight_buffer_V_0_24_ce0;
reg weight_buffer_V_0_0_ce0;
reg weight_buffer_V_0_8_ce0;
reg weight_buffer_V_0_16_ce0;
reg input_buffer_V_1_ce0;
reg weight_buffer_V_1_24_ce0;
reg weight_buffer_V_1_0_ce0;
reg weight_buffer_V_1_8_ce0;
reg weight_buffer_V_1_16_ce0;
reg input_buffer_V_2_ce0;
reg weight_buffer_V_2_24_ce0;
reg weight_buffer_V_2_0_ce0;
reg weight_buffer_V_2_8_ce0;
reg weight_buffer_V_2_16_ce0;
reg input_buffer_V_3_ce0;
reg weight_buffer_V_3_24_ce0;
reg weight_buffer_V_3_0_ce0;
reg weight_buffer_V_3_8_ce0;
reg weight_buffer_V_3_16_ce0;

(* fsm_encoding = "none" *) reg   [7:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [7:0] local_beta_buffer_V_s;
reg   [7:0] local_beta_buffer_V_1;
reg   [7:0] local_beta_buffer_V_2;
reg   [7:0] local_beta_buffer_V_3;
reg   [7:0] local_beta_buffer_V_4;
reg   [7:0] local_beta_buffer_V_5;
reg   [7:0] local_beta_buffer_V_6;
reg   [7:0] local_beta_buffer_V_7;
reg   [7:0] local_beta_buffer_V_8;
reg   [7:0] local_beta_buffer_V_9;
reg   [7:0] local_beta_buffer_V_10;
reg   [7:0] local_beta_buffer_V_11;
reg   [7:0] local_beta_buffer_V_12;
reg   [7:0] local_beta_buffer_V_13;
reg   [7:0] local_beta_buffer_V_14;
reg   [7:0] local_beta_buffer_V_15;
reg   [7:0] local_beta_buffer_V_16;
reg   [7:0] local_beta_buffer_V_17;
reg   [7:0] local_beta_buffer_V_18;
reg   [7:0] local_beta_buffer_V_19;
reg   [7:0] local_beta_buffer_V_20;
reg   [7:0] local_beta_buffer_V_21;
reg   [7:0] local_beta_buffer_V_22;
reg   [7:0] local_beta_buffer_V_23;
reg   [7:0] local_beta_buffer_V_24;
reg   [7:0] local_beta_buffer_V_25;
reg   [7:0] local_beta_buffer_V_26;
reg   [7:0] local_beta_buffer_V_27;
reg   [7:0] local_beta_buffer_V_28;
reg   [7:0] local_beta_buffer_V_29;
reg   [7:0] local_beta_buffer_V_30;
reg   [7:0] local_beta_buffer_V_31;
reg   [70:0] indvar_flatten6_reg_2684;
reg   [2:0] i_reg_2695;
reg   [69:0] indvar_flatten7_reg_2706;
reg   [2:0] j_reg_2717;
reg   [66:0] indvar_flatten8_reg_2728;
reg   [30:0] tr_reg_2739;
reg   [34:0] indvar_flatten_reg_2751;
reg   [30:0] tc_reg_2762;
reg   [2:0] tm0_reg_2773;
wire   [0:0] enable_read_read_fu_522_p2;
wire   [0:0] tmp_s_fu_2823_p2;
reg   [0:0] tmp_s_reg_6345;
wire   [33:0] tmp_119_fu_2829_p3;
reg   [33:0] tmp_119_reg_6357;
wire   [65:0] bound3_fu_2845_p2;
reg   [65:0] bound3_reg_6362;
wire   [0:0] exitcond_flatten_mid_fu_2851_p2;
reg   [0:0] exitcond_flatten_mid_reg_6369;
wire    ap_CS_fsm_state2;
wire   [68:0] grp_fu_2860_p2;
reg   [68:0] bound4_reg_6380;
wire    ap_CS_fsm_state3;
wire    ap_CS_fsm_state4;
reg   [7:0] local_beta_buffer_V_97_reg_6551;
wire    ap_CS_fsm_state5;
wire    grp_copy_local_beta_fu_2784_ap_ready;
wire    grp_copy_local_beta_fu_2784_ap_done;
reg   [7:0] local_beta_buffer_V_1_reg_6556;
reg   [7:0] local_beta_buffer_V_2_reg_6561;
reg   [7:0] local_beta_buffer_V_3_reg_6566;
reg   [7:0] local_beta_buffer_V_4_reg_6571;
reg   [7:0] local_beta_buffer_V_5_reg_6576;
reg   [7:0] local_beta_buffer_V_6_reg_6581;
reg   [7:0] local_beta_buffer_V_7_reg_6586;
reg   [7:0] local_beta_buffer_V_8_reg_6591;
reg   [7:0] local_beta_buffer_V_9_reg_6596;
reg   [7:0] local_beta_buffer_V_10_reg_6601;
reg   [7:0] local_beta_buffer_V_11_reg_6606;
reg   [7:0] local_beta_buffer_V_12_reg_6611;
reg   [7:0] local_beta_buffer_V_13_reg_6616;
reg   [7:0] local_beta_buffer_V_14_reg_6621;
reg   [7:0] local_beta_buffer_V_15_reg_6626;
reg   [7:0] local_beta_buffer_V_16_reg_6631;
reg   [7:0] local_beta_buffer_V_17_reg_6636;
reg   [7:0] local_beta_buffer_V_18_reg_6641;
reg   [7:0] local_beta_buffer_V_19_reg_6646;
reg   [7:0] local_beta_buffer_V_20_reg_6651;
reg   [7:0] local_beta_buffer_V_21_reg_6656;
reg   [7:0] local_beta_buffer_V_22_reg_6661;
reg   [7:0] local_beta_buffer_V_23_reg_6666;
reg   [7:0] local_beta_buffer_V_24_reg_6671;
reg   [7:0] local_beta_buffer_V_25_reg_6704;
reg   [7:0] local_beta_buffer_V_26_reg_6737;
reg   [7:0] local_beta_buffer_V_27_reg_6770;
reg   [7:0] local_beta_buffer_V_28_reg_6803;
reg   [7:0] local_beta_buffer_V_29_reg_6836;
reg   [7:0] local_beta_buffer_V_30_reg_6869;
reg   [7:0] local_beta_buffer_V_31_reg_6902;
wire   [2:0] tmp_205_fu_3355_p1;
reg   [2:0] tmp_205_reg_6935;
wire   [34:0] bound_fu_3358_p1;
reg   [34:0] bound_reg_6942;
wire   [66:0] bound3_cast_fu_3361_p1;
reg   [66:0] bound3_cast_reg_6947;
wire   [69:0] bound4_cast_fu_3364_p1;
reg   [69:0] bound4_cast_reg_6952;
wire   [70:0] grp_fu_3029_p2;
reg   [70:0] bound5_reg_6957;
reg   [27:0] tmp_15_reg_6962;
wire   [0:0] exitcond_flatten93_m_fu_3376_p2;
reg   [0:0] exitcond_flatten93_m_reg_6969;
wire   [31:0] tmp_88_fu_3417_p2;
reg   [31:0] tmp_88_reg_6974;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state6_pp0_stage0_iter0;
wire    ap_block_state8_pp0_stage0_iter1;
wire    ap_block_state10_pp0_stage0_iter2;
wire    ap_block_pp0_stage0_11001;
wire   [0:0] exitcond_flatten8_fu_3433_p2;
reg   [0:0] exitcond_flatten8_reg_6979;
reg   [0:0] exitcond_flatten8_reg_6979_pp0_iter1_reg;
wire   [70:0] indvar_flatten_next8_fu_3438_p2;
reg   [70:0] indvar_flatten_next8_reg_6983;
reg    ap_enable_reg_pp0_iter0;
wire   [2:0] i_3_fu_3444_p2;
reg   [2:0] i_3_reg_6988;
wire   [0:0] exitcond_flatten_fu_3450_p2;
reg   [0:0] exitcond_flatten_reg_6993;
wire   [2:0] i_cast_mid2_fu_3463_p3;
reg   [2:0] i_cast_mid2_reg_6998;
wire   [0:0] exitcond_flatten93_m_1_fu_3532_p3;
reg   [0:0] exitcond_flatten93_m_1_reg_7006;
wire   [0:0] tmp_123_fu_3545_p2;
reg   [0:0] tmp_123_reg_7011;
wire   [30:0] tr_mid_fu_3551_p3;
reg   [30:0] tr_mid_reg_7016;
wire   [2:0] j_cast_mid2_fu_3559_p3;
reg   [2:0] j_cast_mid2_reg_7021;
wire   [0:0] tmp_89_mid2_fu_3591_p3;
reg   [0:0] tmp_89_mid2_reg_7028;
reg   [0:0] tmp_89_mid2_reg_7028_pp0_iter1_reg;
wire   [0:0] exitcond_flatten_mid_6_fu_3611_p3;
reg   [0:0] exitcond_flatten_mid_6_reg_7035;
wire   [30:0] tr_5_fu_3618_p2;
reg   [30:0] tr_5_reg_7042;
wire   [0:0] exitcond4_mid2_fu_3650_p2;
reg   [0:0] exitcond4_mid2_reg_7049;
wire   [11:0] tmp_215_fu_3682_p1;
reg   [11:0] tmp_215_reg_7054;
wire   [11:0] tmp_220_fu_3710_p3;
reg   [11:0] tmp_220_reg_7059;
wire   [11:0] tmp_225_fu_3734_p3;
reg   [11:0] tmp_225_reg_7064;
wire   [30:0] tc_mid2_fu_3742_p3;
reg   [30:0] tc_mid2_reg_7069;
wire   [1:0] tmp_226_fu_3750_p1;
reg   [1:0] tmp_226_reg_7074;
reg   [1:0] tmp_226_reg_7074_pp0_iter1_reg;
wire   [2:0] tm0_2_fu_3754_p2;
reg   [2:0] tm0_2_reg_7082;
wire   [34:0] indvar_flatten_next_fu_3766_p3;
reg   [34:0] indvar_flatten_next_reg_7087;
wire   [66:0] indvar_flatten_next6_fu_3780_p3;
reg   [66:0] indvar_flatten_next6_reg_7092;
wire   [69:0] indvar_flatten_next7_fu_3794_p3;
reg   [69:0] indvar_flatten_next7_reg_7097;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_state7_pp0_stage1_iter0;
wire    ap_block_state9_pp0_stage1_iter1;
wire    ap_block_pp0_stage1_11001;
wire   [30:0] tr_mid2_fu_4060_p3;
reg   [30:0] tr_mid2_reg_7742;
wire   [11:0] tmp_129_fu_4090_p2;
reg   [11:0] tmp_129_reg_7767;
wire   [4:0] tmp_136_t_fu_4095_p3;
reg   [4:0] tmp_136_t_reg_7772;
wire   [0:0] sel_tmp_fu_4102_p2;
reg   [0:0] sel_tmp_reg_7784;
wire   [0:0] sel_tmp18_fu_4108_p2;
reg   [0:0] sel_tmp18_reg_7789;
wire   [0:0] sel_tmp20_fu_4114_p2;
reg   [0:0] sel_tmp20_reg_7794;
wire  signed [15:0] lhs_V_fu_4120_p1;
reg  signed [15:0] lhs_V_reg_7799;
wire  signed [15:0] ret_V_fu_4158_p2;
reg  signed [15:0] ret_V_reg_7807;
reg   [7:0] input_buffer_V_1_loa_reg_7813;
wire   [7:0] newSel9_fu_4180_p3;
reg  signed [7:0] newSel9_reg_7818;
wire  signed [15:0] lhs_V_2_fu_4188_p1;
reg  signed [15:0] lhs_V_2_reg_7823;
wire   [15:0] ret_V_2_fu_4220_p2;
reg  signed [15:0] ret_V_2_reg_7831;
reg   [7:0] input_buffer_V_3_loa_reg_7836;
wire   [7:0] newSel15_fu_4242_p3;
reg  signed [7:0] newSel15_reg_7841;
wire   [0:0] sel_tmp22_fu_4250_p2;
reg   [0:0] sel_tmp22_reg_7846;
wire   [0:0] sel_tmp24_fu_4255_p2;
reg   [0:0] sel_tmp24_reg_7851;
wire   [0:0] sel_tmp26_fu_4260_p2;
reg   [0:0] sel_tmp26_reg_7856;
wire  signed [15:0] ret_V_s_fu_4299_p2;
reg  signed [15:0] ret_V_s_reg_7861;
wire   [7:0] newSel25_fu_4321_p3;
reg  signed [7:0] newSel25_reg_7867;
wire   [15:0] ret_V_2_1_fu_4357_p2;
reg  signed [15:0] ret_V_2_1_reg_7872;
wire   [7:0] newSel31_fu_4379_p3;
reg  signed [7:0] newSel31_reg_7877;
wire  signed [15:0] ret_V_8_fu_4415_p2;
reg  signed [15:0] ret_V_8_reg_7882;
wire   [7:0] newSel41_fu_4437_p3;
reg  signed [7:0] newSel41_reg_7888;
wire   [15:0] ret_V_2_2_fu_4473_p2;
reg  signed [15:0] ret_V_2_2_reg_7893;
wire   [7:0] newSel47_fu_4495_p3;
reg  signed [7:0] newSel47_reg_7898;
wire  signed [15:0] ret_V_9_fu_4531_p2;
reg  signed [15:0] ret_V_9_reg_7903;
wire   [7:0] newSel57_fu_4553_p3;
reg  signed [7:0] newSel57_reg_7909;
wire   [15:0] ret_V_2_3_fu_4589_p2;
reg  signed [15:0] ret_V_2_3_reg_7914;
wire   [7:0] newSel63_fu_4611_p3;
reg  signed [7:0] newSel63_reg_7919;
wire   [7:0] newSel70_fu_4635_p3;
reg   [7:0] newSel70_reg_7924;
wire   [7:0] newSel73_fu_4659_p3;
reg  signed [7:0] newSel73_reg_7929;
wire   [7:0] newSel76_fu_4683_p3;
reg   [7:0] newSel76_reg_7934;
wire   [7:0] newSel79_fu_4707_p3;
reg  signed [7:0] newSel79_reg_7939;
wire   [7:0] newSel86_fu_4731_p3;
reg   [7:0] newSel86_reg_7944;
wire   [7:0] newSel89_fu_4755_p3;
reg  signed [7:0] newSel89_reg_7949;
wire   [7:0] newSel92_fu_4779_p3;
reg   [7:0] newSel92_reg_7954;
wire   [7:0] newSel95_fu_4803_p3;
reg  signed [7:0] newSel95_reg_7959;
wire   [7:0] newSel102_fu_4827_p3;
reg   [7:0] newSel102_reg_7964;
wire   [7:0] newSel105_fu_4851_p3;
reg  signed [7:0] newSel105_reg_7969;
wire   [7:0] newSel108_fu_4875_p3;
reg   [7:0] newSel108_reg_7974;
wire   [7:0] newSel111_fu_4899_p3;
reg  signed [7:0] newSel111_reg_7979;
wire   [7:0] newSel118_fu_4923_p3;
reg   [7:0] newSel118_reg_7984;
wire   [7:0] newSel121_fu_4947_p3;
reg  signed [7:0] newSel121_reg_7989;
wire   [7:0] newSel124_fu_4971_p3;
reg   [7:0] newSel124_reg_7994;
wire   [7:0] newSel127_fu_4995_p3;
reg  signed [7:0] newSel127_reg_7999;
reg   [9:0] output_buffer_0_add_reg_8004;
reg   [9:0] output_buffer_1_add_reg_8009;
reg   [9:0] output_buffer_2_add_reg_8014;
reg   [9:0] output_buffer_3_add_reg_8019;
reg   [9:0] output_buffer_4_add_reg_8024;
reg   [9:0] output_buffer_5_add_reg_8029;
reg   [9:0] output_buffer_6_add_reg_8034;
reg   [9:0] output_buffer_7_add_reg_8039;
reg   [9:0] output_buffer_8_add_reg_8044;
reg   [9:0] output_buffer_9_add_reg_8049;
reg   [9:0] output_buffer_10_ad_reg_8054;
reg   [9:0] output_buffer_11_ad_reg_8059;
reg   [9:0] output_buffer_12_ad_reg_8064;
reg   [9:0] output_buffer_13_ad_reg_8069;
reg   [9:0] output_buffer_14_ad_reg_8074;
reg   [9:0] output_buffer_15_ad_reg_8079;
reg   [9:0] output_buffer_16_ad_reg_8084;
reg   [9:0] output_buffer_17_ad_reg_8089;
reg   [9:0] output_buffer_18_ad_reg_8094;
reg   [9:0] output_buffer_19_ad_reg_8099;
reg   [9:0] output_buffer_20_ad_reg_8104;
reg   [9:0] output_buffer_21_ad_reg_8109;
reg   [9:0] output_buffer_22_ad_reg_8114;
reg   [9:0] output_buffer_23_ad_reg_8119;
reg   [9:0] output_buffer_24_ad_reg_8124;
reg   [9:0] output_buffer_25_ad_reg_8129;
reg   [9:0] output_buffer_26_ad_reg_8134;
reg   [9:0] output_buffer_27_ad_reg_8139;
reg   [9:0] output_buffer_28_ad_reg_8144;
reg   [9:0] output_buffer_29_ad_reg_8149;
reg   [9:0] output_buffer_30_ad_reg_8154;
reg   [9:0] output_buffer_31_ad_reg_8159;
wire   [7:0] local_beta_buffer_V_32_fu_5038_p34;
reg   [7:0] local_beta_buffer_V_32_reg_8164;
wire   [17:0] tmp_93_fu_5099_p2;
reg   [17:0] tmp_93_reg_8169;
wire   [17:0] tmp_144_1_fu_5123_p2;
reg   [17:0] tmp_144_1_reg_8174;
wire   [17:0] tmp_144_2_fu_5147_p2;
reg   [17:0] tmp_144_2_reg_8179;
wire   [17:0] tmp_144_3_fu_5171_p2;
reg   [17:0] tmp_144_3_reg_8184;
wire  signed [15:0] ret_V_4_fu_5180_p2;
reg  signed [15:0] ret_V_4_reg_8189;
wire   [17:0] tmp_144_4_fu_5213_p2;
reg   [17:0] tmp_144_4_reg_8194;
wire  signed [15:0] ret_V_5_fu_5222_p2;
reg  signed [15:0] ret_V_5_reg_8199;
wire   [17:0] tmp_144_5_fu_5255_p2;
reg   [17:0] tmp_144_5_reg_8204;
wire  signed [15:0] ret_V_6_fu_5264_p2;
reg  signed [15:0] ret_V_6_reg_8209;
wire   [17:0] tmp_144_6_fu_5297_p2;
reg   [17:0] tmp_144_6_reg_8214;
wire  signed [15:0] ret_V_7_fu_5306_p2;
reg  signed [15:0] ret_V_7_reg_8219;
wire   [17:0] tmp_144_7_fu_5339_p2;
reg   [17:0] tmp_144_7_reg_8224;
wire    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state6;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage1_subdone;
reg    ap_enable_reg_pp0_iter2;
wire    grp_copy_local_beta_fu_2784_ap_start;
wire    grp_copy_local_beta_fu_2784_ap_idle;
wire   [9:0] grp_copy_local_beta_fu_2784_beta_buffer_address0;
wire    grp_copy_local_beta_fu_2784_beta_buffer_ce0;
wire   [7:0] grp_copy_local_beta_fu_2784_ap_return_0;
wire   [7:0] grp_copy_local_beta_fu_2784_ap_return_1;
wire   [7:0] grp_copy_local_beta_fu_2784_ap_return_2;
wire   [7:0] grp_copy_local_beta_fu_2784_ap_return_3;
wire   [7:0] grp_copy_local_beta_fu_2784_ap_return_4;
wire   [7:0] grp_copy_local_beta_fu_2784_ap_return_5;
wire   [7:0] grp_copy_local_beta_fu_2784_ap_return_6;
wire   [7:0] grp_copy_local_beta_fu_2784_ap_return_7;
wire   [7:0] grp_copy_local_beta_fu_2784_ap_return_8;
wire   [7:0] grp_copy_local_beta_fu_2784_ap_return_9;
wire   [7:0] grp_copy_local_beta_fu_2784_ap_return_10;
wire   [7:0] grp_copy_local_beta_fu_2784_ap_return_11;
wire   [7:0] grp_copy_local_beta_fu_2784_ap_return_12;
wire   [7:0] grp_copy_local_beta_fu_2784_ap_return_13;
wire   [7:0] grp_copy_local_beta_fu_2784_ap_return_14;
wire   [7:0] grp_copy_local_beta_fu_2784_ap_return_15;
wire   [7:0] grp_copy_local_beta_fu_2784_ap_return_16;
wire   [7:0] grp_copy_local_beta_fu_2784_ap_return_17;
wire   [7:0] grp_copy_local_beta_fu_2784_ap_return_18;
wire   [7:0] grp_copy_local_beta_fu_2784_ap_return_19;
wire   [7:0] grp_copy_local_beta_fu_2784_ap_return_20;
wire   [7:0] grp_copy_local_beta_fu_2784_ap_return_21;
wire   [7:0] grp_copy_local_beta_fu_2784_ap_return_22;
wire   [7:0] grp_copy_local_beta_fu_2784_ap_return_23;
wire   [7:0] grp_copy_local_beta_fu_2784_ap_return_24;
wire   [7:0] grp_copy_local_beta_fu_2784_ap_return_25;
wire   [7:0] grp_copy_local_beta_fu_2784_ap_return_26;
wire   [7:0] grp_copy_local_beta_fu_2784_ap_return_27;
wire   [7:0] grp_copy_local_beta_fu_2784_ap_return_28;
wire   [7:0] grp_copy_local_beta_fu_2784_ap_return_29;
wire   [7:0] grp_copy_local_beta_fu_2784_ap_return_30;
wire   [7:0] grp_copy_local_beta_fu_2784_ap_return_31;
reg   [70:0] ap_phi_mux_indvar_flatten6_phi_fu_2688_p4;
wire    ap_block_pp0_stage0;
reg   [2:0] ap_phi_mux_i_phi_fu_2699_p4;
reg   [69:0] ap_phi_mux_indvar_flatten7_phi_fu_2710_p4;
reg   [2:0] ap_phi_mux_j_phi_fu_2721_p4;
reg   [66:0] ap_phi_mux_indvar_flatten8_phi_fu_2732_p4;
reg   [30:0] ap_phi_mux_tr_phi_fu_2743_p4;
reg   [34:0] ap_phi_mux_indvar_flatten_phi_fu_2755_p4;
reg   [30:0] ap_phi_mux_tc_phi_fu_2766_p4;
reg   [2:0] ap_phi_mux_tm0_phi_fu_2777_p4;
reg    grp_copy_local_beta_fu_2784_ap_start_reg;
wire   [63:0] tmp_141_cast_fu_3846_p1;
wire    ap_block_pp0_stage1;
wire   [63:0] tmp_154_cast_fu_4082_p1;
wire   [63:0] tmp_155_cast_fu_5003_p1;
wire   [31:0] tmp_94_fu_5430_p2;
wire   [31:0] tmp_145_1_fu_5564_p2;
wire   [31:0] tmp_145_2_fu_5666_p2;
wire   [31:0] tmp_145_3_fu_5768_p2;
wire   [31:0] tmp_145_4_fu_5870_p2;
wire   [31:0] tmp_145_5_fu_5972_p2;
wire   [31:0] tmp_145_6_fu_6074_p2;
wire   [31:0] tmp_145_7_fu_6176_p2;
wire   [33:0] bound3_fu_2845_p0;
wire   [31:0] bound3_fu_2845_p1;
wire   [3:0] grp_fu_2860_p0;
wire   [65:0] grp_fu_2860_p1;
wire   [3:0] grp_fu_3029_p0;
wire   [68:0] grp_fu_3029_p1;
wire   [2:0] tmp_14_fu_3389_p2;
wire   [2:0] tmp_16_fu_3394_p2;
wire   [30:0] tmp_85_fu_3400_p3;
wire   [31:0] i_cast_fu_3381_p1;
wire   [31:0] tmp_120_fu_3413_p1;
wire   [11:0] j_cast_fu_3385_p1;
wire   [11:0] tmp_206_fu_3423_p1;
wire   [2:0] tmp_16_mid_fu_3471_p2;
wire   [30:0] tmp_88_mid_fu_3476_p3;
wire   [0:0] tmp_89_mid_fu_3483_p2;
wire   [0:0] tmp_86_fu_3407_p2;
wire   [0:0] exitcond_fu_3503_p2;
wire   [0:0] not_exitcond_flatten_fu_3497_p2;
wire   [0:0] exitcond_flatten2_fu_3515_p2;
wire   [0:0] exitcond_flatten3_fu_3527_p2;
wire   [2:0] j_mid_fu_3455_p3;
wire   [2:0] j_2_fu_3539_p2;
wire   [2:0] tmp_14_mid1_fu_3567_p2;
wire   [2:0] tmp_16_mid1_fu_3572_p2;
wire   [30:0] tmp_88_mid1_fu_3578_p3;
wire   [0:0] tmp_89_mid1_fu_3585_p2;
wire   [0:0] tmp_89_mid3_fu_3489_p3;
wire   [0:0] exitcond4_mid_fu_3509_p2;
wire   [0:0] not_exitcond_flatten_1_fu_3599_p2;
wire   [0:0] exitcond_flatten_mid_5_fu_3520_p3;
wire   [0:0] tmp_125_fu_3624_p2;
wire   [0:0] tmp_207_fu_3630_p2;
wire   [0:0] exitcond4_mid1_fu_3605_p2;
wire   [0:0] not_exitcond_flatten_2_fu_3644_p2;
wire   [30:0] tc_mid1_fu_3636_p3;
wire   [0:0] tmp_127_fu_3662_p2;
wire   [0:0] tmp_214_fu_3668_p2;
wire   [30:0] tc_5_fu_3656_p2;
wire   [11:0] tmp_90_fu_3427_p2;
wire   [11:0] tmp_217_fu_3690_p1;
wire   [11:0] tmp_218_fu_3694_p3;
wire   [11:0] tmp_216_fu_3686_p1;
wire   [11:0] tmp_219_fu_3702_p3;
wire   [11:0] tmp_223_fu_3722_p1;
wire   [11:0] tmp_222_fu_3718_p1;
wire   [11:0] tmp_224_fu_3726_p3;
wire   [2:0] tm0_mid2_fu_3674_p3;
wire   [34:0] indvar_flatten_op_fu_3760_p2;
wire   [66:0] indvar_flatten91_op_fu_3774_p2;
wire   [69:0] indvar_flatten258_op_fu_3788_p2;
wire   [4:0] tmp_121_fu_3808_p3;
wire   [5:0] tmp_87_mid2_cast_fu_3805_p1;
wire   [5:0] p_shl4_cast_fu_3815_p1;
wire   [31:0] tmp_93_mid_cast_fu_3825_p1;
wire   [5:0] tmp_122_fu_3819_p2;
wire   [5:0] tmp_90_mid2_cast_fu_3837_p1;
wire   [5:0] tmp_124_fu_3840_p2;
wire   [31:0] i_cast_mid2_cast_fu_3802_p1;
wire   [31:0] tmp_93_mid3_fu_3828_p3;
wire   [31:0] p_mid_fu_3985_p1;
wire   [31:0] tmp_92_mid1_fu_3988_p2;
wire   [31:0] tmp_93_mid5_fu_3978_p3;
wire   [31:0] tmp_93_mid2_fu_3994_p3;
wire   [6:0] tmp_208_fu_4001_p1;
wire   [9:0] tmp_209_fu_4013_p1;
wire   [11:0] p_shl3_cast_fu_4017_p3;
wire   [11:0] p_shl_cast_fu_4005_p3;
wire   [6:0] tmp_211_fu_4034_p1;
wire   [6:0] tmp_210_fu_4031_p1;
wire   [6:0] tmp_212_fu_4038_p3;
wire   [6:0] tmp_213_fu_4045_p3;
wire   [11:0] j_cast_mid2_cast_fu_3834_p1;
wire   [11:0] tmp_96_mid1_fu_4065_p2;
wire   [11:0] tmp_126_fu_4025_p2;
wire   [11:0] tmp_221_fu_4070_p3;
wire   [11:0] tmp_128_fu_4076_p2;
wire   [11:0] tmp_151_cast_fu_4052_p3;
wire   [0:0] or_cond3_fu_4132_p2;
wire   [7:0] newSel4_fu_4124_p3;
wire   [7:0] newSel5_fu_4138_p3;
wire   [7:0] newSel6_fu_4146_p3;
wire  signed [7:0] ret_V_fu_4158_p0;
wire  signed [7:0] ret_V_fu_4158_p1;
wire   [7:0] newSel7_fu_4164_p3;
wire   [7:0] newSel8_fu_4172_p3;
wire   [7:0] newSel10_fu_4192_p3;
wire   [7:0] newSel11_fu_4200_p3;
wire   [7:0] newSel12_fu_4208_p3;
wire  signed [7:0] ret_V_2_fu_4220_p0;
wire  signed [7:0] ret_V_2_fu_4220_p1;
wire   [7:0] newSel13_fu_4226_p3;
wire   [7:0] newSel14_fu_4234_p3;
wire   [0:0] or_cond4_fu_4273_p2;
wire   [7:0] newSel20_fu_4265_p3;
wire   [7:0] newSel21_fu_4279_p3;
wire   [7:0] newSel22_fu_4287_p3;
wire  signed [7:0] ret_V_s_fu_4299_p0;
wire  signed [7:0] ret_V_s_fu_4299_p1;
wire   [7:0] newSel23_fu_4305_p3;
wire   [7:0] newSel24_fu_4313_p3;
wire   [7:0] newSel26_fu_4329_p3;
wire   [7:0] newSel27_fu_4337_p3;
wire   [7:0] newSel28_fu_4345_p3;
wire  signed [7:0] ret_V_2_1_fu_4357_p0;
wire  signed [7:0] ret_V_2_1_fu_4357_p1;
wire   [7:0] newSel29_fu_4363_p3;
wire   [7:0] newSel30_fu_4371_p3;
wire   [7:0] newSel36_fu_4387_p3;
wire   [7:0] newSel37_fu_4395_p3;
wire   [7:0] newSel38_fu_4403_p3;
wire  signed [7:0] ret_V_8_fu_4415_p0;
wire  signed [7:0] ret_V_8_fu_4415_p1;
wire   [7:0] newSel39_fu_4421_p3;
wire   [7:0] newSel40_fu_4429_p3;
wire   [7:0] newSel42_fu_4445_p3;
wire   [7:0] newSel43_fu_4453_p3;
wire   [7:0] newSel44_fu_4461_p3;
wire  signed [7:0] ret_V_2_2_fu_4473_p0;
wire  signed [7:0] ret_V_2_2_fu_4473_p1;
wire   [7:0] newSel45_fu_4479_p3;
wire   [7:0] newSel46_fu_4487_p3;
wire   [7:0] newSel52_fu_4503_p3;
wire   [7:0] newSel53_fu_4511_p3;
wire   [7:0] newSel54_fu_4519_p3;
wire  signed [7:0] ret_V_9_fu_4531_p0;
wire  signed [7:0] ret_V_9_fu_4531_p1;
wire   [7:0] newSel55_fu_4537_p3;
wire   [7:0] newSel56_fu_4545_p3;
wire   [7:0] newSel58_fu_4561_p3;
wire   [7:0] newSel59_fu_4569_p3;
wire   [7:0] newSel60_fu_4577_p3;
wire  signed [7:0] ret_V_2_3_fu_4589_p0;
wire  signed [7:0] ret_V_2_3_fu_4589_p1;
wire   [7:0] newSel61_fu_4595_p3;
wire   [7:0] newSel62_fu_4603_p3;
wire   [7:0] newSel68_fu_4619_p3;
wire   [7:0] newSel69_fu_4627_p3;
wire   [7:0] newSel71_fu_4643_p3;
wire   [7:0] newSel72_fu_4651_p3;
wire   [7:0] newSel74_fu_4667_p3;
wire   [7:0] newSel75_fu_4675_p3;
wire   [7:0] newSel77_fu_4691_p3;
wire   [7:0] newSel78_fu_4699_p3;
wire   [7:0] newSel84_fu_4715_p3;
wire   [7:0] newSel85_fu_4723_p3;
wire   [7:0] newSel87_fu_4739_p3;
wire   [7:0] newSel88_fu_4747_p3;
wire   [7:0] newSel90_fu_4763_p3;
wire   [7:0] newSel91_fu_4771_p3;
wire   [7:0] newSel93_fu_4787_p3;
wire   [7:0] newSel94_fu_4795_p3;
wire   [7:0] newSel100_fu_4811_p3;
wire   [7:0] newSel101_fu_4819_p3;
wire   [7:0] newSel103_fu_4835_p3;
wire   [7:0] newSel104_fu_4843_p3;
wire   [7:0] newSel106_fu_4859_p3;
wire   [7:0] newSel107_fu_4867_p3;
wire   [7:0] newSel109_fu_4883_p3;
wire   [7:0] newSel110_fu_4891_p3;
wire   [7:0] newSel116_fu_4907_p3;
wire   [7:0] newSel117_fu_4915_p3;
wire   [7:0] newSel119_fu_4931_p3;
wire   [7:0] newSel120_fu_4939_p3;
wire   [7:0] newSel122_fu_4955_p3;
wire   [7:0] newSel123_fu_4963_p3;
wire   [7:0] newSel125_fu_4979_p3;
wire   [7:0] newSel126_fu_4987_p3;
wire  signed [16:0] grp_fu_6186_p3;
wire  signed [16:0] grp_fu_6195_p3;
wire  signed [17:0] tmp479_cast_fu_5096_p1;
wire  signed [17:0] tmp478_cast_fu_5093_p1;
wire  signed [16:0] grp_fu_6204_p3;
wire  signed [16:0] grp_fu_6213_p3;
wire  signed [17:0] tmp481_cast_fu_5120_p1;
wire  signed [17:0] tmp480_cast_fu_5117_p1;
wire  signed [16:0] grp_fu_6222_p3;
wire  signed [16:0] grp_fu_6231_p3;
wire  signed [17:0] tmp483_cast_fu_5144_p1;
wire  signed [17:0] tmp482_cast_fu_5141_p1;
wire  signed [16:0] grp_fu_6240_p3;
wire  signed [16:0] grp_fu_6249_p3;
wire  signed [17:0] tmp485_cast_fu_5168_p1;
wire  signed [17:0] tmp484_cast_fu_5165_p1;
wire  signed [7:0] ret_V_4_fu_5180_p0;
wire  signed [7:0] ret_V_4_fu_5180_p1;
wire  signed [7:0] ret_V_2_4_fu_5195_p0;
wire  signed [7:0] ret_V_2_4_fu_5195_p1;
wire  signed [15:0] ret_V_2_4_fu_5195_p2;
wire  signed [16:0] grp_fu_6258_p3;
wire  signed [16:0] grp_fu_6267_p3;
wire  signed [17:0] tmp487_cast_fu_5210_p1;
wire  signed [17:0] tmp486_cast_fu_5207_p1;
wire  signed [7:0] ret_V_5_fu_5222_p0;
wire  signed [7:0] ret_V_5_fu_5222_p1;
wire  signed [7:0] ret_V_2_5_fu_5237_p0;
wire  signed [7:0] ret_V_2_5_fu_5237_p1;
wire  signed [15:0] ret_V_2_5_fu_5237_p2;
wire  signed [16:0] grp_fu_6276_p3;
wire  signed [16:0] grp_fu_6285_p3;
wire  signed [17:0] tmp489_cast_fu_5252_p1;
wire  signed [17:0] tmp488_cast_fu_5249_p1;
wire  signed [7:0] ret_V_6_fu_5264_p0;
wire  signed [7:0] ret_V_6_fu_5264_p1;
wire  signed [7:0] ret_V_2_6_fu_5279_p0;
wire  signed [7:0] ret_V_2_6_fu_5279_p1;
wire  signed [15:0] ret_V_2_6_fu_5279_p2;
wire  signed [16:0] grp_fu_6294_p3;
wire  signed [16:0] grp_fu_6303_p3;
wire  signed [17:0] tmp491_cast_fu_5294_p1;
wire  signed [17:0] tmp490_cast_fu_5291_p1;
wire  signed [7:0] ret_V_7_fu_5306_p0;
wire  signed [7:0] ret_V_7_fu_5306_p1;
wire  signed [7:0] ret_V_2_7_fu_5321_p0;
wire  signed [7:0] ret_V_2_7_fu_5321_p1;
wire  signed [15:0] ret_V_2_7_fu_5321_p2;
wire  signed [16:0] grp_fu_6312_p3;
wire  signed [16:0] grp_fu_6321_p3;
wire  signed [17:0] tmp493_cast_fu_5336_p1;
wire  signed [17:0] tmp492_cast_fu_5333_p1;
wire   [0:0] sel_tmp17_mid2_fu_5345_p2;
wire   [0:0] sel_tmp21_fu_5363_p2;
wire   [0:0] sel_tmp19_fu_5358_p2;
wire   [0:0] sel_tmp17_fu_5353_p2;
wire  signed [31:0] tmp_add_result_fu_5350_p1;
wire   [0:0] or_cond_fu_5376_p2;
wire   [31:0] newSel_fu_5368_p3;
wire   [31:0] newSel1_fu_5382_p3;
wire   [0:0] or_cond1_fu_5390_p2;
wire   [0:0] or_cond2_fu_5403_p2;
wire   [31:0] newSel2_fu_5395_p3;
wire  signed [17:0] tmp_106_cast_fu_5417_p1;
wire   [17:0] tmp_10_fu_5420_p3;
wire  signed [31:0] tmp_10_cast_fu_5426_p1;
wire   [31:0] newSel3_fu_5409_p3;
wire   [4:0] local_beta_buffer_V_33_fu_5445_p33;
wire   [7:0] local_beta_buffer_V_33_fu_5445_p34;
wire   [0:0] sel_tmp27_fu_5497_p2;
wire   [0:0] sel_tmp25_fu_5492_p2;
wire   [0:0] sel_tmp23_fu_5487_p2;
wire  signed [31:0] tmp_add_result_1_fu_5483_p1;
wire   [0:0] or_cond7_fu_5510_p2;
wire   [31:0] newSel16_fu_5502_p3;
wire   [31:0] newSel17_fu_5516_p3;
wire   [0:0] or_cond8_fu_5524_p2;
wire   [0:0] or_cond9_fu_5537_p2;
wire   [31:0] newSel18_fu_5529_p3;
wire  signed [17:0] tmp_140_1_cast_fu_5551_p1;
wire   [17:0] tmp_10_1_fu_5554_p3;
wire   [31:0] newSel19_fu_5543_p3;
wire  signed [31:0] tmp_10_1_cast_fu_5560_p1;
wire   [4:0] local_beta_buffer_V_34_fu_5579_p33;
wire   [7:0] local_beta_buffer_V_34_fu_5579_p34;
wire  signed [31:0] tmp_add_result_s_fu_5617_p1;
wire   [31:0] newSel32_fu_5621_p3;
wire   [31:0] newSel33_fu_5629_p3;
wire   [31:0] newSel34_fu_5637_p3;
wire  signed [17:0] tmp_140_2_cast_fu_5653_p1;
wire   [17:0] tmp_10_2_fu_5656_p3;
wire   [31:0] newSel35_fu_5645_p3;
wire  signed [31:0] tmp_10_2_cast_fu_5662_p1;
wire   [4:0] local_beta_buffer_V_35_fu_5681_p33;
wire   [7:0] local_beta_buffer_V_35_fu_5681_p34;
wire  signed [31:0] tmp_add_result_3_fu_5719_p1;
wire   [31:0] newSel48_fu_5723_p3;
wire   [31:0] newSel49_fu_5731_p3;
wire   [31:0] newSel50_fu_5739_p3;
wire  signed [17:0] tmp_140_3_cast_fu_5755_p1;
wire   [17:0] tmp_10_3_fu_5758_p3;
wire   [31:0] newSel51_fu_5747_p3;
wire  signed [31:0] tmp_10_3_cast_fu_5764_p1;
wire   [4:0] local_beta_buffer_V_36_fu_5783_p33;
wire   [7:0] local_beta_buffer_V_36_fu_5783_p34;
wire  signed [31:0] tmp_add_result_4_fu_5821_p1;
wire   [31:0] newSel64_fu_5825_p3;
wire   [31:0] newSel65_fu_5833_p3;
wire   [31:0] newSel66_fu_5841_p3;
wire  signed [17:0] tmp_140_4_cast_fu_5857_p1;
wire   [17:0] tmp_10_4_fu_5860_p3;
wire   [31:0] newSel67_fu_5849_p3;
wire  signed [31:0] tmp_10_4_cast_fu_5866_p1;
wire   [4:0] local_beta_buffer_V_37_fu_5885_p33;
wire   [7:0] local_beta_buffer_V_37_fu_5885_p34;
wire  signed [31:0] tmp_add_result_5_fu_5923_p1;
wire   [31:0] newSel80_fu_5927_p3;
wire   [31:0] newSel81_fu_5935_p3;
wire   [31:0] newSel82_fu_5943_p3;
wire  signed [17:0] tmp_140_5_cast_fu_5959_p1;
wire   [17:0] tmp_10_5_fu_5962_p3;
wire   [31:0] newSel83_fu_5951_p3;
wire  signed [31:0] tmp_10_5_cast_fu_5968_p1;
wire   [4:0] local_beta_buffer_V_38_fu_5987_p33;
wire   [7:0] local_beta_buffer_V_38_fu_5987_p34;
wire  signed [31:0] tmp_add_result_6_fu_6025_p1;
wire   [31:0] newSel96_fu_6029_p3;
wire   [31:0] newSel97_fu_6037_p3;
wire   [31:0] newSel98_fu_6045_p3;
wire  signed [17:0] tmp_140_6_cast_fu_6061_p1;
wire   [17:0] tmp_10_6_fu_6064_p3;
wire   [31:0] newSel99_fu_6053_p3;
wire  signed [31:0] tmp_10_6_cast_fu_6070_p1;
wire   [4:0] local_beta_buffer_V_39_fu_6089_p33;
wire   [7:0] local_beta_buffer_V_39_fu_6089_p34;
wire  signed [31:0] tmp_add_result_7_fu_6127_p1;
wire   [31:0] newSel112_fu_6131_p3;
wire   [31:0] newSel113_fu_6139_p3;
wire   [31:0] newSel114_fu_6147_p3;
wire  signed [17:0] tmp_140_7_cast_fu_6163_p1;
wire   [17:0] tmp_10_7_fu_6166_p3;
wire   [31:0] newSel115_fu_6155_p3;
wire  signed [31:0] tmp_10_7_cast_fu_6172_p1;
wire  signed [7:0] grp_fu_6186_p0;
wire  signed [15:0] lhs_V_1_fu_5078_p1;
wire  signed [7:0] grp_fu_6195_p0;
wire  signed [15:0] lhs_V_3_fu_5087_p1;
wire  signed [7:0] grp_fu_6204_p1;
wire  signed [7:0] grp_fu_6213_p0;
wire  signed [7:0] grp_fu_6222_p1;
wire  signed [7:0] grp_fu_6231_p0;
wire  signed [7:0] grp_fu_6240_p1;
wire  signed [7:0] grp_fu_6249_p0;
wire  signed [7:0] grp_fu_6258_p1;
wire  signed [7:0] grp_fu_6267_p0;
wire  signed [7:0] grp_fu_6276_p1;
wire  signed [7:0] grp_fu_6285_p0;
wire  signed [7:0] grp_fu_6294_p1;
wire  signed [7:0] grp_fu_6303_p0;
wire  signed [7:0] grp_fu_6312_p1;
wire  signed [7:0] grp_fu_6321_p0;
reg    grp_fu_3029_ce;
wire    ap_CS_fsm_state11;
reg   [7:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
wire   [65:0] bound3_fu_2845_p00;
wire   [65:0] bound3_fu_2845_p10;
wire   [68:0] grp_fu_2860_p10;
wire   [70:0] grp_fu_3029_p10;

// power-on initialization
initial begin
#0 ap_CS_fsm = 8'd1;
#0 local_beta_buffer_V_s = 8'd0;
#0 local_beta_buffer_V_1 = 8'd0;
#0 local_beta_buffer_V_2 = 8'd0;
#0 local_beta_buffer_V_3 = 8'd0;
#0 local_beta_buffer_V_4 = 8'd0;
#0 local_beta_buffer_V_5 = 8'd0;
#0 local_beta_buffer_V_6 = 8'd0;
#0 local_beta_buffer_V_7 = 8'd0;
#0 local_beta_buffer_V_8 = 8'd0;
#0 local_beta_buffer_V_9 = 8'd0;
#0 local_beta_buffer_V_10 = 8'd0;
#0 local_beta_buffer_V_11 = 8'd0;
#0 local_beta_buffer_V_12 = 8'd0;
#0 local_beta_buffer_V_13 = 8'd0;
#0 local_beta_buffer_V_14 = 8'd0;
#0 local_beta_buffer_V_15 = 8'd0;
#0 local_beta_buffer_V_16 = 8'd0;
#0 local_beta_buffer_V_17 = 8'd0;
#0 local_beta_buffer_V_18 = 8'd0;
#0 local_beta_buffer_V_19 = 8'd0;
#0 local_beta_buffer_V_20 = 8'd0;
#0 local_beta_buffer_V_21 = 8'd0;
#0 local_beta_buffer_V_22 = 8'd0;
#0 local_beta_buffer_V_23 = 8'd0;
#0 local_beta_buffer_V_24 = 8'd0;
#0 local_beta_buffer_V_25 = 8'd0;
#0 local_beta_buffer_V_26 = 8'd0;
#0 local_beta_buffer_V_27 = 8'd0;
#0 local_beta_buffer_V_28 = 8'd0;
#0 local_beta_buffer_V_29 = 8'd0;
#0 local_beta_buffer_V_30 = 8'd0;
#0 local_beta_buffer_V_31 = 8'd0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 grp_copy_local_beta_fu_2784_ap_start_reg = 1'b0;
end

copy_local_beta grp_copy_local_beta_fu_2784(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_copy_local_beta_fu_2784_ap_start),
    .ap_done(grp_copy_local_beta_fu_2784_ap_done),
    .ap_idle(grp_copy_local_beta_fu_2784_ap_idle),
    .ap_ready(grp_copy_local_beta_fu_2784_ap_ready),
    .beta_buffer_address0(grp_copy_local_beta_fu_2784_beta_buffer_address0),
    .beta_buffer_ce0(grp_copy_local_beta_fu_2784_beta_buffer_ce0),
    .beta_buffer_q0(beta_buffer_q0),
    .local_beta_buffer_0(local_beta_buffer_V_s),
    .local_beta_buffer_1(local_beta_buffer_V_1),
    .local_beta_buffer_2(local_beta_buffer_V_2),
    .local_beta_buffer_3(local_beta_buffer_V_3),
    .local_beta_buffer_4(local_beta_buffer_V_4),
    .local_beta_buffer_5(local_beta_buffer_V_5),
    .local_beta_buffer_6(local_beta_buffer_V_6),
    .local_beta_buffer_7(local_beta_buffer_V_7),
    .local_beta_buffer_8(local_beta_buffer_V_8),
    .local_beta_buffer_9(local_beta_buffer_V_9),
    .local_beta_buffer_10(local_beta_buffer_V_10),
    .local_beta_buffer_11(local_beta_buffer_V_11),
    .local_beta_buffer_12(local_beta_buffer_V_12),
    .local_beta_buffer_13(local_beta_buffer_V_13),
    .local_beta_buffer_14(local_beta_buffer_V_14),
    .local_beta_buffer_15(local_beta_buffer_V_15),
    .local_beta_buffer_16(local_beta_buffer_V_16),
    .local_beta_buffer_17(local_beta_buffer_V_17),
    .local_beta_buffer_18(local_beta_buffer_V_18),
    .local_beta_buffer_19(local_beta_buffer_V_19),
    .local_beta_buffer_20(local_beta_buffer_V_20),
    .local_beta_buffer_21(local_beta_buffer_V_21),
    .local_beta_buffer_22(local_beta_buffer_V_22),
    .local_beta_buffer_23(local_beta_buffer_V_23),
    .local_beta_buffer_24(local_beta_buffer_V_24),
    .local_beta_buffer_25(local_beta_buffer_V_25),
    .local_beta_buffer_26(local_beta_buffer_V_26),
    .local_beta_buffer_27(local_beta_buffer_V_27),
    .local_beta_buffer_28(local_beta_buffer_V_28),
    .local_beta_buffer_29(local_beta_buffer_V_29),
    .local_beta_buffer_30(local_beta_buffer_V_30),
    .local_beta_buffer_31(local_beta_buffer_V_31),
    .m(TM_offset),
    .ap_return_0(grp_copy_local_beta_fu_2784_ap_return_0),
    .ap_return_1(grp_copy_local_beta_fu_2784_ap_return_1),
    .ap_return_2(grp_copy_local_beta_fu_2784_ap_return_2),
    .ap_return_3(grp_copy_local_beta_fu_2784_ap_return_3),
    .ap_return_4(grp_copy_local_beta_fu_2784_ap_return_4),
    .ap_return_5(grp_copy_local_beta_fu_2784_ap_return_5),
    .ap_return_6(grp_copy_local_beta_fu_2784_ap_return_6),
    .ap_return_7(grp_copy_local_beta_fu_2784_ap_return_7),
    .ap_return_8(grp_copy_local_beta_fu_2784_ap_return_8),
    .ap_return_9(grp_copy_local_beta_fu_2784_ap_return_9),
    .ap_return_10(grp_copy_local_beta_fu_2784_ap_return_10),
    .ap_return_11(grp_copy_local_beta_fu_2784_ap_return_11),
    .ap_return_12(grp_copy_local_beta_fu_2784_ap_return_12),
    .ap_return_13(grp_copy_local_beta_fu_2784_ap_return_13),
    .ap_return_14(grp_copy_local_beta_fu_2784_ap_return_14),
    .ap_return_15(grp_copy_local_beta_fu_2784_ap_return_15),
    .ap_return_16(grp_copy_local_beta_fu_2784_ap_return_16),
    .ap_return_17(grp_copy_local_beta_fu_2784_ap_return_17),
    .ap_return_18(grp_copy_local_beta_fu_2784_ap_return_18),
    .ap_return_19(grp_copy_local_beta_fu_2784_ap_return_19),
    .ap_return_20(grp_copy_local_beta_fu_2784_ap_return_20),
    .ap_return_21(grp_copy_local_beta_fu_2784_ap_return_21),
    .ap_return_22(grp_copy_local_beta_fu_2784_ap_return_22),
    .ap_return_23(grp_copy_local_beta_fu_2784_ap_return_23),
    .ap_return_24(grp_copy_local_beta_fu_2784_ap_return_24),
    .ap_return_25(grp_copy_local_beta_fu_2784_ap_return_25),
    .ap_return_26(grp_copy_local_beta_fu_2784_ap_return_26),
    .ap_return_27(grp_copy_local_beta_fu_2784_ap_return_27),
    .ap_return_28(grp_copy_local_beta_fu_2784_ap_return_28),
    .ap_return_29(grp_copy_local_beta_fu_2784_ap_return_29),
    .ap_return_30(grp_copy_local_beta_fu_2784_ap_return_30),
    .ap_return_31(grp_copy_local_beta_fu_2784_ap_return_31)
);

detection_acc_mulfYi #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 4 ),
    .din1_WIDTH( 66 ),
    .dout_WIDTH( 69 ))
detection_acc_mulfYi_U200(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_2860_p0),
    .din1(grp_fu_2860_p1),
    .ce(1'b1),
    .dout(grp_fu_2860_p2)
);

detection_acc_mulg8j #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 4 ),
    .din1_WIDTH( 69 ),
    .dout_WIDTH( 71 ))
detection_acc_mulg8j_U201(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_3029_p0),
    .din1(grp_fu_3029_p1),
    .ce(grp_fu_3029_ce),
    .dout(grp_fu_3029_p2)
);

detection_acc_muxhbi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 8 ),
    .din5_WIDTH( 8 ),
    .din6_WIDTH( 8 ),
    .din7_WIDTH( 8 ),
    .din8_WIDTH( 8 ),
    .din9_WIDTH( 8 ),
    .din10_WIDTH( 8 ),
    .din11_WIDTH( 8 ),
    .din12_WIDTH( 8 ),
    .din13_WIDTH( 8 ),
    .din14_WIDTH( 8 ),
    .din15_WIDTH( 8 ),
    .din16_WIDTH( 8 ),
    .din17_WIDTH( 8 ),
    .din18_WIDTH( 8 ),
    .din19_WIDTH( 8 ),
    .din20_WIDTH( 8 ),
    .din21_WIDTH( 8 ),
    .din22_WIDTH( 8 ),
    .din23_WIDTH( 8 ),
    .din24_WIDTH( 8 ),
    .din25_WIDTH( 8 ),
    .din26_WIDTH( 8 ),
    .din27_WIDTH( 8 ),
    .din28_WIDTH( 8 ),
    .din29_WIDTH( 8 ),
    .din30_WIDTH( 8 ),
    .din31_WIDTH( 8 ),
    .din32_WIDTH( 5 ),
    .dout_WIDTH( 8 ))
detection_acc_muxhbi_U202(
    .din0(local_beta_buffer_V_97_reg_6551),
    .din1(local_beta_buffer_V_24_reg_6671),
    .din2(local_beta_buffer_V_24_reg_6671),
    .din3(local_beta_buffer_V_24_reg_6671),
    .din4(local_beta_buffer_V_24_reg_6671),
    .din5(local_beta_buffer_V_24_reg_6671),
    .din6(local_beta_buffer_V_24_reg_6671),
    .din7(local_beta_buffer_V_24_reg_6671),
    .din8(local_beta_buffer_V_8_reg_6591),
    .din9(local_beta_buffer_V_24_reg_6671),
    .din10(local_beta_buffer_V_24_reg_6671),
    .din11(local_beta_buffer_V_24_reg_6671),
    .din12(local_beta_buffer_V_24_reg_6671),
    .din13(local_beta_buffer_V_24_reg_6671),
    .din14(local_beta_buffer_V_24_reg_6671),
    .din15(local_beta_buffer_V_24_reg_6671),
    .din16(local_beta_buffer_V_16_reg_6631),
    .din17(local_beta_buffer_V_24_reg_6671),
    .din18(local_beta_buffer_V_24_reg_6671),
    .din19(local_beta_buffer_V_24_reg_6671),
    .din20(local_beta_buffer_V_24_reg_6671),
    .din21(local_beta_buffer_V_24_reg_6671),
    .din22(local_beta_buffer_V_24_reg_6671),
    .din23(local_beta_buffer_V_24_reg_6671),
    .din24(local_beta_buffer_V_24_reg_6671),
    .din25(local_beta_buffer_V_24_reg_6671),
    .din26(local_beta_buffer_V_24_reg_6671),
    .din27(local_beta_buffer_V_24_reg_6671),
    .din28(local_beta_buffer_V_24_reg_6671),
    .din29(local_beta_buffer_V_24_reg_6671),
    .din30(local_beta_buffer_V_24_reg_6671),
    .din31(local_beta_buffer_V_24_reg_6671),
    .din32(tmp_136_t_reg_7772),
    .dout(local_beta_buffer_V_32_fu_5038_p34)
);

detection_acc_muxhbi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 8 ),
    .din5_WIDTH( 8 ),
    .din6_WIDTH( 8 ),
    .din7_WIDTH( 8 ),
    .din8_WIDTH( 8 ),
    .din9_WIDTH( 8 ),
    .din10_WIDTH( 8 ),
    .din11_WIDTH( 8 ),
    .din12_WIDTH( 8 ),
    .din13_WIDTH( 8 ),
    .din14_WIDTH( 8 ),
    .din15_WIDTH( 8 ),
    .din16_WIDTH( 8 ),
    .din17_WIDTH( 8 ),
    .din18_WIDTH( 8 ),
    .din19_WIDTH( 8 ),
    .din20_WIDTH( 8 ),
    .din21_WIDTH( 8 ),
    .din22_WIDTH( 8 ),
    .din23_WIDTH( 8 ),
    .din24_WIDTH( 8 ),
    .din25_WIDTH( 8 ),
    .din26_WIDTH( 8 ),
    .din27_WIDTH( 8 ),
    .din28_WIDTH( 8 ),
    .din29_WIDTH( 8 ),
    .din30_WIDTH( 8 ),
    .din31_WIDTH( 8 ),
    .din32_WIDTH( 5 ),
    .dout_WIDTH( 8 ))
detection_acc_muxhbi_U203(
    .din0(local_beta_buffer_V_25_reg_6704),
    .din1(local_beta_buffer_V_1_reg_6556),
    .din2(local_beta_buffer_V_25_reg_6704),
    .din3(local_beta_buffer_V_25_reg_6704),
    .din4(local_beta_buffer_V_25_reg_6704),
    .din5(local_beta_buffer_V_25_reg_6704),
    .din6(local_beta_buffer_V_25_reg_6704),
    .din7(local_beta_buffer_V_25_reg_6704),
    .din8(local_beta_buffer_V_25_reg_6704),
    .din9(local_beta_buffer_V_9_reg_6596),
    .din10(local_beta_buffer_V_25_reg_6704),
    .din11(local_beta_buffer_V_25_reg_6704),
    .din12(local_beta_buffer_V_25_reg_6704),
    .din13(local_beta_buffer_V_25_reg_6704),
    .din14(local_beta_buffer_V_25_reg_6704),
    .din15(local_beta_buffer_V_25_reg_6704),
    .din16(local_beta_buffer_V_25_reg_6704),
    .din17(local_beta_buffer_V_17_reg_6636),
    .din18(local_beta_buffer_V_25_reg_6704),
    .din19(local_beta_buffer_V_25_reg_6704),
    .din20(local_beta_buffer_V_25_reg_6704),
    .din21(local_beta_buffer_V_25_reg_6704),
    .din22(local_beta_buffer_V_25_reg_6704),
    .din23(local_beta_buffer_V_25_reg_6704),
    .din24(local_beta_buffer_V_25_reg_6704),
    .din25(local_beta_buffer_V_25_reg_6704),
    .din26(local_beta_buffer_V_25_reg_6704),
    .din27(local_beta_buffer_V_25_reg_6704),
    .din28(local_beta_buffer_V_25_reg_6704),
    .din29(local_beta_buffer_V_25_reg_6704),
    .din30(local_beta_buffer_V_25_reg_6704),
    .din31(local_beta_buffer_V_25_reg_6704),
    .din32(local_beta_buffer_V_33_fu_5445_p33),
    .dout(local_beta_buffer_V_33_fu_5445_p34)
);

detection_acc_muxhbi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 8 ),
    .din5_WIDTH( 8 ),
    .din6_WIDTH( 8 ),
    .din7_WIDTH( 8 ),
    .din8_WIDTH( 8 ),
    .din9_WIDTH( 8 ),
    .din10_WIDTH( 8 ),
    .din11_WIDTH( 8 ),
    .din12_WIDTH( 8 ),
    .din13_WIDTH( 8 ),
    .din14_WIDTH( 8 ),
    .din15_WIDTH( 8 ),
    .din16_WIDTH( 8 ),
    .din17_WIDTH( 8 ),
    .din18_WIDTH( 8 ),
    .din19_WIDTH( 8 ),
    .din20_WIDTH( 8 ),
    .din21_WIDTH( 8 ),
    .din22_WIDTH( 8 ),
    .din23_WIDTH( 8 ),
    .din24_WIDTH( 8 ),
    .din25_WIDTH( 8 ),
    .din26_WIDTH( 8 ),
    .din27_WIDTH( 8 ),
    .din28_WIDTH( 8 ),
    .din29_WIDTH( 8 ),
    .din30_WIDTH( 8 ),
    .din31_WIDTH( 8 ),
    .din32_WIDTH( 5 ),
    .dout_WIDTH( 8 ))
detection_acc_muxhbi_U204(
    .din0(local_beta_buffer_V_26_reg_6737),
    .din1(local_beta_buffer_V_26_reg_6737),
    .din2(local_beta_buffer_V_2_reg_6561),
    .din3(local_beta_buffer_V_26_reg_6737),
    .din4(local_beta_buffer_V_26_reg_6737),
    .din5(local_beta_buffer_V_26_reg_6737),
    .din6(local_beta_buffer_V_26_reg_6737),
    .din7(local_beta_buffer_V_26_reg_6737),
    .din8(local_beta_buffer_V_26_reg_6737),
    .din9(local_beta_buffer_V_26_reg_6737),
    .din10(local_beta_buffer_V_10_reg_6601),
    .din11(local_beta_buffer_V_26_reg_6737),
    .din12(local_beta_buffer_V_26_reg_6737),
    .din13(local_beta_buffer_V_26_reg_6737),
    .din14(local_beta_buffer_V_26_reg_6737),
    .din15(local_beta_buffer_V_26_reg_6737),
    .din16(local_beta_buffer_V_26_reg_6737),
    .din17(local_beta_buffer_V_26_reg_6737),
    .din18(local_beta_buffer_V_18_reg_6641),
    .din19(local_beta_buffer_V_26_reg_6737),
    .din20(local_beta_buffer_V_26_reg_6737),
    .din21(local_beta_buffer_V_26_reg_6737),
    .din22(local_beta_buffer_V_26_reg_6737),
    .din23(local_beta_buffer_V_26_reg_6737),
    .din24(local_beta_buffer_V_26_reg_6737),
    .din25(local_beta_buffer_V_26_reg_6737),
    .din26(local_beta_buffer_V_26_reg_6737),
    .din27(local_beta_buffer_V_26_reg_6737),
    .din28(local_beta_buffer_V_26_reg_6737),
    .din29(local_beta_buffer_V_26_reg_6737),
    .din30(local_beta_buffer_V_26_reg_6737),
    .din31(local_beta_buffer_V_26_reg_6737),
    .din32(local_beta_buffer_V_34_fu_5579_p33),
    .dout(local_beta_buffer_V_34_fu_5579_p34)
);

detection_acc_muxhbi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 8 ),
    .din5_WIDTH( 8 ),
    .din6_WIDTH( 8 ),
    .din7_WIDTH( 8 ),
    .din8_WIDTH( 8 ),
    .din9_WIDTH( 8 ),
    .din10_WIDTH( 8 ),
    .din11_WIDTH( 8 ),
    .din12_WIDTH( 8 ),
    .din13_WIDTH( 8 ),
    .din14_WIDTH( 8 ),
    .din15_WIDTH( 8 ),
    .din16_WIDTH( 8 ),
    .din17_WIDTH( 8 ),
    .din18_WIDTH( 8 ),
    .din19_WIDTH( 8 ),
    .din20_WIDTH( 8 ),
    .din21_WIDTH( 8 ),
    .din22_WIDTH( 8 ),
    .din23_WIDTH( 8 ),
    .din24_WIDTH( 8 ),
    .din25_WIDTH( 8 ),
    .din26_WIDTH( 8 ),
    .din27_WIDTH( 8 ),
    .din28_WIDTH( 8 ),
    .din29_WIDTH( 8 ),
    .din30_WIDTH( 8 ),
    .din31_WIDTH( 8 ),
    .din32_WIDTH( 5 ),
    .dout_WIDTH( 8 ))
detection_acc_muxhbi_U205(
    .din0(local_beta_buffer_V_27_reg_6770),
    .din1(local_beta_buffer_V_27_reg_6770),
    .din2(local_beta_buffer_V_27_reg_6770),
    .din3(local_beta_buffer_V_3_reg_6566),
    .din4(local_beta_buffer_V_27_reg_6770),
    .din5(local_beta_buffer_V_27_reg_6770),
    .din6(local_beta_buffer_V_27_reg_6770),
    .din7(local_beta_buffer_V_27_reg_6770),
    .din8(local_beta_buffer_V_27_reg_6770),
    .din9(local_beta_buffer_V_27_reg_6770),
    .din10(local_beta_buffer_V_27_reg_6770),
    .din11(local_beta_buffer_V_11_reg_6606),
    .din12(local_beta_buffer_V_27_reg_6770),
    .din13(local_beta_buffer_V_27_reg_6770),
    .din14(local_beta_buffer_V_27_reg_6770),
    .din15(local_beta_buffer_V_27_reg_6770),
    .din16(local_beta_buffer_V_27_reg_6770),
    .din17(local_beta_buffer_V_27_reg_6770),
    .din18(local_beta_buffer_V_27_reg_6770),
    .din19(local_beta_buffer_V_19_reg_6646),
    .din20(local_beta_buffer_V_27_reg_6770),
    .din21(local_beta_buffer_V_27_reg_6770),
    .din22(local_beta_buffer_V_27_reg_6770),
    .din23(local_beta_buffer_V_27_reg_6770),
    .din24(local_beta_buffer_V_27_reg_6770),
    .din25(local_beta_buffer_V_27_reg_6770),
    .din26(local_beta_buffer_V_27_reg_6770),
    .din27(local_beta_buffer_V_27_reg_6770),
    .din28(local_beta_buffer_V_27_reg_6770),
    .din29(local_beta_buffer_V_27_reg_6770),
    .din30(local_beta_buffer_V_27_reg_6770),
    .din31(local_beta_buffer_V_27_reg_6770),
    .din32(local_beta_buffer_V_35_fu_5681_p33),
    .dout(local_beta_buffer_V_35_fu_5681_p34)
);

detection_acc_muxhbi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 8 ),
    .din5_WIDTH( 8 ),
    .din6_WIDTH( 8 ),
    .din7_WIDTH( 8 ),
    .din8_WIDTH( 8 ),
    .din9_WIDTH( 8 ),
    .din10_WIDTH( 8 ),
    .din11_WIDTH( 8 ),
    .din12_WIDTH( 8 ),
    .din13_WIDTH( 8 ),
    .din14_WIDTH( 8 ),
    .din15_WIDTH( 8 ),
    .din16_WIDTH( 8 ),
    .din17_WIDTH( 8 ),
    .din18_WIDTH( 8 ),
    .din19_WIDTH( 8 ),
    .din20_WIDTH( 8 ),
    .din21_WIDTH( 8 ),
    .din22_WIDTH( 8 ),
    .din23_WIDTH( 8 ),
    .din24_WIDTH( 8 ),
    .din25_WIDTH( 8 ),
    .din26_WIDTH( 8 ),
    .din27_WIDTH( 8 ),
    .din28_WIDTH( 8 ),
    .din29_WIDTH( 8 ),
    .din30_WIDTH( 8 ),
    .din31_WIDTH( 8 ),
    .din32_WIDTH( 5 ),
    .dout_WIDTH( 8 ))
detection_acc_muxhbi_U206(
    .din0(local_beta_buffer_V_28_reg_6803),
    .din1(local_beta_buffer_V_28_reg_6803),
    .din2(local_beta_buffer_V_28_reg_6803),
    .din3(local_beta_buffer_V_28_reg_6803),
    .din4(local_beta_buffer_V_4_reg_6571),
    .din5(local_beta_buffer_V_28_reg_6803),
    .din6(local_beta_buffer_V_28_reg_6803),
    .din7(local_beta_buffer_V_28_reg_6803),
    .din8(local_beta_buffer_V_28_reg_6803),
    .din9(local_beta_buffer_V_28_reg_6803),
    .din10(local_beta_buffer_V_28_reg_6803),
    .din11(local_beta_buffer_V_28_reg_6803),
    .din12(local_beta_buffer_V_12_reg_6611),
    .din13(local_beta_buffer_V_28_reg_6803),
    .din14(local_beta_buffer_V_28_reg_6803),
    .din15(local_beta_buffer_V_28_reg_6803),
    .din16(local_beta_buffer_V_28_reg_6803),
    .din17(local_beta_buffer_V_28_reg_6803),
    .din18(local_beta_buffer_V_28_reg_6803),
    .din19(local_beta_buffer_V_28_reg_6803),
    .din20(local_beta_buffer_V_20_reg_6651),
    .din21(local_beta_buffer_V_28_reg_6803),
    .din22(local_beta_buffer_V_28_reg_6803),
    .din23(local_beta_buffer_V_28_reg_6803),
    .din24(local_beta_buffer_V_28_reg_6803),
    .din25(local_beta_buffer_V_28_reg_6803),
    .din26(local_beta_buffer_V_28_reg_6803),
    .din27(local_beta_buffer_V_28_reg_6803),
    .din28(local_beta_buffer_V_28_reg_6803),
    .din29(local_beta_buffer_V_28_reg_6803),
    .din30(local_beta_buffer_V_28_reg_6803),
    .din31(local_beta_buffer_V_28_reg_6803),
    .din32(local_beta_buffer_V_36_fu_5783_p33),
    .dout(local_beta_buffer_V_36_fu_5783_p34)
);

detection_acc_muxhbi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 8 ),
    .din5_WIDTH( 8 ),
    .din6_WIDTH( 8 ),
    .din7_WIDTH( 8 ),
    .din8_WIDTH( 8 ),
    .din9_WIDTH( 8 ),
    .din10_WIDTH( 8 ),
    .din11_WIDTH( 8 ),
    .din12_WIDTH( 8 ),
    .din13_WIDTH( 8 ),
    .din14_WIDTH( 8 ),
    .din15_WIDTH( 8 ),
    .din16_WIDTH( 8 ),
    .din17_WIDTH( 8 ),
    .din18_WIDTH( 8 ),
    .din19_WIDTH( 8 ),
    .din20_WIDTH( 8 ),
    .din21_WIDTH( 8 ),
    .din22_WIDTH( 8 ),
    .din23_WIDTH( 8 ),
    .din24_WIDTH( 8 ),
    .din25_WIDTH( 8 ),
    .din26_WIDTH( 8 ),
    .din27_WIDTH( 8 ),
    .din28_WIDTH( 8 ),
    .din29_WIDTH( 8 ),
    .din30_WIDTH( 8 ),
    .din31_WIDTH( 8 ),
    .din32_WIDTH( 5 ),
    .dout_WIDTH( 8 ))
detection_acc_muxhbi_U207(
    .din0(local_beta_buffer_V_29_reg_6836),
    .din1(local_beta_buffer_V_29_reg_6836),
    .din2(local_beta_buffer_V_29_reg_6836),
    .din3(local_beta_buffer_V_29_reg_6836),
    .din4(local_beta_buffer_V_29_reg_6836),
    .din5(local_beta_buffer_V_5_reg_6576),
    .din6(local_beta_buffer_V_29_reg_6836),
    .din7(local_beta_buffer_V_29_reg_6836),
    .din8(local_beta_buffer_V_29_reg_6836),
    .din9(local_beta_buffer_V_29_reg_6836),
    .din10(local_beta_buffer_V_29_reg_6836),
    .din11(local_beta_buffer_V_29_reg_6836),
    .din12(local_beta_buffer_V_29_reg_6836),
    .din13(local_beta_buffer_V_13_reg_6616),
    .din14(local_beta_buffer_V_29_reg_6836),
    .din15(local_beta_buffer_V_29_reg_6836),
    .din16(local_beta_buffer_V_29_reg_6836),
    .din17(local_beta_buffer_V_29_reg_6836),
    .din18(local_beta_buffer_V_29_reg_6836),
    .din19(local_beta_buffer_V_29_reg_6836),
    .din20(local_beta_buffer_V_29_reg_6836),
    .din21(local_beta_buffer_V_21_reg_6656),
    .din22(local_beta_buffer_V_29_reg_6836),
    .din23(local_beta_buffer_V_29_reg_6836),
    .din24(local_beta_buffer_V_29_reg_6836),
    .din25(local_beta_buffer_V_29_reg_6836),
    .din26(local_beta_buffer_V_29_reg_6836),
    .din27(local_beta_buffer_V_29_reg_6836),
    .din28(local_beta_buffer_V_29_reg_6836),
    .din29(local_beta_buffer_V_29_reg_6836),
    .din30(local_beta_buffer_V_29_reg_6836),
    .din31(local_beta_buffer_V_29_reg_6836),
    .din32(local_beta_buffer_V_37_fu_5885_p33),
    .dout(local_beta_buffer_V_37_fu_5885_p34)
);

detection_acc_muxhbi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 8 ),
    .din5_WIDTH( 8 ),
    .din6_WIDTH( 8 ),
    .din7_WIDTH( 8 ),
    .din8_WIDTH( 8 ),
    .din9_WIDTH( 8 ),
    .din10_WIDTH( 8 ),
    .din11_WIDTH( 8 ),
    .din12_WIDTH( 8 ),
    .din13_WIDTH( 8 ),
    .din14_WIDTH( 8 ),
    .din15_WIDTH( 8 ),
    .din16_WIDTH( 8 ),
    .din17_WIDTH( 8 ),
    .din18_WIDTH( 8 ),
    .din19_WIDTH( 8 ),
    .din20_WIDTH( 8 ),
    .din21_WIDTH( 8 ),
    .din22_WIDTH( 8 ),
    .din23_WIDTH( 8 ),
    .din24_WIDTH( 8 ),
    .din25_WIDTH( 8 ),
    .din26_WIDTH( 8 ),
    .din27_WIDTH( 8 ),
    .din28_WIDTH( 8 ),
    .din29_WIDTH( 8 ),
    .din30_WIDTH( 8 ),
    .din31_WIDTH( 8 ),
    .din32_WIDTH( 5 ),
    .dout_WIDTH( 8 ))
detection_acc_muxhbi_U208(
    .din0(local_beta_buffer_V_30_reg_6869),
    .din1(local_beta_buffer_V_30_reg_6869),
    .din2(local_beta_buffer_V_30_reg_6869),
    .din3(local_beta_buffer_V_30_reg_6869),
    .din4(local_beta_buffer_V_30_reg_6869),
    .din5(local_beta_buffer_V_30_reg_6869),
    .din6(local_beta_buffer_V_6_reg_6581),
    .din7(local_beta_buffer_V_30_reg_6869),
    .din8(local_beta_buffer_V_30_reg_6869),
    .din9(local_beta_buffer_V_30_reg_6869),
    .din10(local_beta_buffer_V_30_reg_6869),
    .din11(local_beta_buffer_V_30_reg_6869),
    .din12(local_beta_buffer_V_30_reg_6869),
    .din13(local_beta_buffer_V_30_reg_6869),
    .din14(local_beta_buffer_V_14_reg_6621),
    .din15(local_beta_buffer_V_30_reg_6869),
    .din16(local_beta_buffer_V_30_reg_6869),
    .din17(local_beta_buffer_V_30_reg_6869),
    .din18(local_beta_buffer_V_30_reg_6869),
    .din19(local_beta_buffer_V_30_reg_6869),
    .din20(local_beta_buffer_V_30_reg_6869),
    .din21(local_beta_buffer_V_30_reg_6869),
    .din22(local_beta_buffer_V_22_reg_6661),
    .din23(local_beta_buffer_V_30_reg_6869),
    .din24(local_beta_buffer_V_30_reg_6869),
    .din25(local_beta_buffer_V_30_reg_6869),
    .din26(local_beta_buffer_V_30_reg_6869),
    .din27(local_beta_buffer_V_30_reg_6869),
    .din28(local_beta_buffer_V_30_reg_6869),
    .din29(local_beta_buffer_V_30_reg_6869),
    .din30(local_beta_buffer_V_30_reg_6869),
    .din31(local_beta_buffer_V_30_reg_6869),
    .din32(local_beta_buffer_V_38_fu_5987_p33),
    .dout(local_beta_buffer_V_38_fu_5987_p34)
);

detection_acc_muxhbi #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 8 ),
    .din3_WIDTH( 8 ),
    .din4_WIDTH( 8 ),
    .din5_WIDTH( 8 ),
    .din6_WIDTH( 8 ),
    .din7_WIDTH( 8 ),
    .din8_WIDTH( 8 ),
    .din9_WIDTH( 8 ),
    .din10_WIDTH( 8 ),
    .din11_WIDTH( 8 ),
    .din12_WIDTH( 8 ),
    .din13_WIDTH( 8 ),
    .din14_WIDTH( 8 ),
    .din15_WIDTH( 8 ),
    .din16_WIDTH( 8 ),
    .din17_WIDTH( 8 ),
    .din18_WIDTH( 8 ),
    .din19_WIDTH( 8 ),
    .din20_WIDTH( 8 ),
    .din21_WIDTH( 8 ),
    .din22_WIDTH( 8 ),
    .din23_WIDTH( 8 ),
    .din24_WIDTH( 8 ),
    .din25_WIDTH( 8 ),
    .din26_WIDTH( 8 ),
    .din27_WIDTH( 8 ),
    .din28_WIDTH( 8 ),
    .din29_WIDTH( 8 ),
    .din30_WIDTH( 8 ),
    .din31_WIDTH( 8 ),
    .din32_WIDTH( 5 ),
    .dout_WIDTH( 8 ))
detection_acc_muxhbi_U209(
    .din0(local_beta_buffer_V_31_reg_6902),
    .din1(local_beta_buffer_V_31_reg_6902),
    .din2(local_beta_buffer_V_31_reg_6902),
    .din3(local_beta_buffer_V_31_reg_6902),
    .din4(local_beta_buffer_V_31_reg_6902),
    .din5(local_beta_buffer_V_31_reg_6902),
    .din6(local_beta_buffer_V_31_reg_6902),
    .din7(local_beta_buffer_V_7_reg_6586),
    .din8(local_beta_buffer_V_31_reg_6902),
    .din9(local_beta_buffer_V_31_reg_6902),
    .din10(local_beta_buffer_V_31_reg_6902),
    .din11(local_beta_buffer_V_31_reg_6902),
    .din12(local_beta_buffer_V_31_reg_6902),
    .din13(local_beta_buffer_V_31_reg_6902),
    .din14(local_beta_buffer_V_31_reg_6902),
    .din15(local_beta_buffer_V_15_reg_6626),
    .din16(local_beta_buffer_V_31_reg_6902),
    .din17(local_beta_buffer_V_31_reg_6902),
    .din18(local_beta_buffer_V_31_reg_6902),
    .din19(local_beta_buffer_V_31_reg_6902),
    .din20(local_beta_buffer_V_31_reg_6902),
    .din21(local_beta_buffer_V_31_reg_6902),
    .din22(local_beta_buffer_V_31_reg_6902),
    .din23(local_beta_buffer_V_23_reg_6666),
    .din24(local_beta_buffer_V_31_reg_6902),
    .din25(local_beta_buffer_V_31_reg_6902),
    .din26(local_beta_buffer_V_31_reg_6902),
    .din27(local_beta_buffer_V_31_reg_6902),
    .din28(local_beta_buffer_V_31_reg_6902),
    .din29(local_beta_buffer_V_31_reg_6902),
    .din30(local_beta_buffer_V_31_reg_6902),
    .din31(local_beta_buffer_V_31_reg_6902),
    .din32(local_beta_buffer_V_39_fu_6089_p33),
    .dout(local_beta_buffer_V_39_fu_6089_p34)
);

detection_acc_macibs #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
detection_acc_macibs_U210(
    .din0(grp_fu_6186_p0),
    .din1(newSel9_reg_7818),
    .din2(ret_V_reg_7807),
    .dout(grp_fu_6186_p3)
);

detection_acc_macibs #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
detection_acc_macibs_U211(
    .din0(grp_fu_6195_p0),
    .din1(newSel15_reg_7841),
    .din2(ret_V_2_reg_7831),
    .dout(grp_fu_6195_p3)
);

detection_acc_macibs #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
detection_acc_macibs_U212(
    .din0(newSel25_reg_7867),
    .din1(grp_fu_6204_p1),
    .din2(ret_V_s_reg_7861),
    .dout(grp_fu_6204_p3)
);

detection_acc_macibs #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
detection_acc_macibs_U213(
    .din0(grp_fu_6213_p0),
    .din1(newSel31_reg_7877),
    .din2(ret_V_2_1_reg_7872),
    .dout(grp_fu_6213_p3)
);

detection_acc_macibs #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
detection_acc_macibs_U214(
    .din0(newSel41_reg_7888),
    .din1(grp_fu_6222_p1),
    .din2(ret_V_8_reg_7882),
    .dout(grp_fu_6222_p3)
);

detection_acc_macibs #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
detection_acc_macibs_U215(
    .din0(grp_fu_6231_p0),
    .din1(newSel47_reg_7898),
    .din2(ret_V_2_2_reg_7893),
    .dout(grp_fu_6231_p3)
);

detection_acc_macibs #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
detection_acc_macibs_U216(
    .din0(newSel57_reg_7909),
    .din1(grp_fu_6240_p1),
    .din2(ret_V_9_reg_7903),
    .dout(grp_fu_6240_p3)
);

detection_acc_macibs #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
detection_acc_macibs_U217(
    .din0(grp_fu_6249_p0),
    .din1(newSel63_reg_7919),
    .din2(ret_V_2_3_reg_7914),
    .dout(grp_fu_6249_p3)
);

detection_acc_macibs #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
detection_acc_macibs_U218(
    .din0(newSel73_reg_7929),
    .din1(grp_fu_6258_p1),
    .din2(ret_V_4_fu_5180_p2),
    .dout(grp_fu_6258_p3)
);

detection_acc_macibs #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
detection_acc_macibs_U219(
    .din0(grp_fu_6267_p0),
    .din1(newSel79_reg_7939),
    .din2(ret_V_2_4_fu_5195_p2),
    .dout(grp_fu_6267_p3)
);

detection_acc_macibs #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
detection_acc_macibs_U220(
    .din0(newSel89_reg_7949),
    .din1(grp_fu_6276_p1),
    .din2(ret_V_5_fu_5222_p2),
    .dout(grp_fu_6276_p3)
);

detection_acc_macibs #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
detection_acc_macibs_U221(
    .din0(grp_fu_6285_p0),
    .din1(newSel95_reg_7959),
    .din2(ret_V_2_5_fu_5237_p2),
    .dout(grp_fu_6285_p3)
);

detection_acc_macibs #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
detection_acc_macibs_U222(
    .din0(newSel105_reg_7969),
    .din1(grp_fu_6294_p1),
    .din2(ret_V_6_fu_5264_p2),
    .dout(grp_fu_6294_p3)
);

detection_acc_macibs #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
detection_acc_macibs_U223(
    .din0(grp_fu_6303_p0),
    .din1(newSel111_reg_7979),
    .din2(ret_V_2_6_fu_5279_p2),
    .dout(grp_fu_6303_p3)
);

detection_acc_macibs #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
detection_acc_macibs_U224(
    .din0(newSel121_reg_7989),
    .din1(grp_fu_6312_p1),
    .din2(ret_V_7_fu_5306_p2),
    .dout(grp_fu_6312_p3)
);

detection_acc_macibs #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
detection_acc_macibs_U225(
    .din0(grp_fu_6321_p0),
    .din1(newSel127_reg_7999),
    .din2(ret_V_2_7_fu_5321_p2),
    .dout(grp_fu_6321_p3)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp0_exit_iter0_state6) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state5) & (grp_copy_local_beta_fu_2784_ap_done == 1'b1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_subdone)) | ((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone)))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end else if (((1'b1 == ap_CS_fsm_state5) & (grp_copy_local_beta_fu_2784_ap_done == 1'b1))) begin
            ap_enable_reg_pp0_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_copy_local_beta_fu_2784_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state4)) begin
            grp_copy_local_beta_fu_2784_ap_start_reg <= 1'b1;
        end else if ((grp_copy_local_beta_fu_2784_ap_ready == 1'b1)) begin
            grp_copy_local_beta_fu_2784_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (exitcond_flatten8_reg_6979 == 1'd0))) begin
        i_reg_2695 <= i_cast_mid2_reg_6998;
    end else if (((1'b1 == ap_CS_fsm_state5) & (grp_copy_local_beta_fu_2784_ap_done == 1'b1))) begin
        i_reg_2695 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (exitcond_flatten8_reg_6979 == 1'd0))) begin
        indvar_flatten6_reg_2684 <= indvar_flatten_next8_reg_6983;
    end else if (((1'b1 == ap_CS_fsm_state5) & (grp_copy_local_beta_fu_2784_ap_done == 1'b1))) begin
        indvar_flatten6_reg_2684 <= 71'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (exitcond_flatten8_reg_6979 == 1'd0))) begin
        indvar_flatten7_reg_2706 <= indvar_flatten_next7_reg_7097;
    end else if (((1'b1 == ap_CS_fsm_state5) & (grp_copy_local_beta_fu_2784_ap_done == 1'b1))) begin
        indvar_flatten7_reg_2706 <= 70'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (exitcond_flatten8_reg_6979 == 1'd0))) begin
        indvar_flatten8_reg_2728 <= indvar_flatten_next6_reg_7092;
    end else if (((1'b1 == ap_CS_fsm_state5) & (grp_copy_local_beta_fu_2784_ap_done == 1'b1))) begin
        indvar_flatten8_reg_2728 <= 67'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (exitcond_flatten8_reg_6979 == 1'd0))) begin
        indvar_flatten_reg_2751 <= indvar_flatten_next_reg_7087;
    end else if (((1'b1 == ap_CS_fsm_state5) & (grp_copy_local_beta_fu_2784_ap_done == 1'b1))) begin
        indvar_flatten_reg_2751 <= 35'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (exitcond_flatten8_reg_6979 == 1'd0))) begin
        j_reg_2717 <= j_cast_mid2_reg_7021;
    end else if (((1'b1 == ap_CS_fsm_state5) & (grp_copy_local_beta_fu_2784_ap_done == 1'b1))) begin
        j_reg_2717 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (exitcond_flatten8_reg_6979 == 1'd0))) begin
        tc_reg_2762 <= tc_mid2_reg_7069;
    end else if (((1'b1 == ap_CS_fsm_state5) & (grp_copy_local_beta_fu_2784_ap_done == 1'b1))) begin
        tc_reg_2762 <= 31'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (exitcond_flatten8_reg_6979 == 1'd0))) begin
        tm0_reg_2773 <= tm0_2_reg_7082;
    end else if (((1'b1 == ap_CS_fsm_state5) & (grp_copy_local_beta_fu_2784_ap_done == 1'b1))) begin
        tm0_reg_2773 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (exitcond_flatten8_reg_6979 == 1'd0))) begin
        tr_reg_2739 <= tr_mid2_reg_7742;
    end else if (((1'b1 == ap_CS_fsm_state5) & (grp_copy_local_beta_fu_2784_ap_done == 1'b1))) begin
        tr_reg_2739 <= 31'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) & (grp_copy_local_beta_fu_2784_ap_done == 1'b1))) begin
        bound3_cast_reg_6947[65 : 0] <= bound3_cast_fu_3361_p1[65 : 0];
        bound4_cast_reg_6952[68 : 0] <= bound4_cast_fu_3364_p1[68 : 0];
        bound5_reg_6957 <= grp_fu_3029_p2;
        bound_reg_6942[33 : 2] <= bound_fu_3358_p1[33 : 2];
        exitcond_flatten93_m_reg_6969 <= exitcond_flatten93_m_fu_3376_p2;
        local_beta_buffer_V_1 <= grp_copy_local_beta_fu_2784_ap_return_1;
        local_beta_buffer_V_10 <= grp_copy_local_beta_fu_2784_ap_return_10;
        local_beta_buffer_V_10_reg_6601 <= grp_copy_local_beta_fu_2784_ap_return_10;
        local_beta_buffer_V_11 <= grp_copy_local_beta_fu_2784_ap_return_11;
        local_beta_buffer_V_11_reg_6606 <= grp_copy_local_beta_fu_2784_ap_return_11;
        local_beta_buffer_V_12 <= grp_copy_local_beta_fu_2784_ap_return_12;
        local_beta_buffer_V_12_reg_6611 <= grp_copy_local_beta_fu_2784_ap_return_12;
        local_beta_buffer_V_13 <= grp_copy_local_beta_fu_2784_ap_return_13;
        local_beta_buffer_V_13_reg_6616 <= grp_copy_local_beta_fu_2784_ap_return_13;
        local_beta_buffer_V_14 <= grp_copy_local_beta_fu_2784_ap_return_14;
        local_beta_buffer_V_14_reg_6621 <= grp_copy_local_beta_fu_2784_ap_return_14;
        local_beta_buffer_V_15 <= grp_copy_local_beta_fu_2784_ap_return_15;
        local_beta_buffer_V_15_reg_6626 <= grp_copy_local_beta_fu_2784_ap_return_15;
        local_beta_buffer_V_16 <= grp_copy_local_beta_fu_2784_ap_return_16;
        local_beta_buffer_V_16_reg_6631 <= grp_copy_local_beta_fu_2784_ap_return_16;
        local_beta_buffer_V_17 <= grp_copy_local_beta_fu_2784_ap_return_17;
        local_beta_buffer_V_17_reg_6636 <= grp_copy_local_beta_fu_2784_ap_return_17;
        local_beta_buffer_V_18 <= grp_copy_local_beta_fu_2784_ap_return_18;
        local_beta_buffer_V_18_reg_6641 <= grp_copy_local_beta_fu_2784_ap_return_18;
        local_beta_buffer_V_19 <= grp_copy_local_beta_fu_2784_ap_return_19;
        local_beta_buffer_V_19_reg_6646 <= grp_copy_local_beta_fu_2784_ap_return_19;
        local_beta_buffer_V_1_reg_6556 <= grp_copy_local_beta_fu_2784_ap_return_1;
        local_beta_buffer_V_2 <= grp_copy_local_beta_fu_2784_ap_return_2;
        local_beta_buffer_V_20 <= grp_copy_local_beta_fu_2784_ap_return_20;
        local_beta_buffer_V_20_reg_6651 <= grp_copy_local_beta_fu_2784_ap_return_20;
        local_beta_buffer_V_21 <= grp_copy_local_beta_fu_2784_ap_return_21;
        local_beta_buffer_V_21_reg_6656 <= grp_copy_local_beta_fu_2784_ap_return_21;
        local_beta_buffer_V_22 <= grp_copy_local_beta_fu_2784_ap_return_22;
        local_beta_buffer_V_22_reg_6661 <= grp_copy_local_beta_fu_2784_ap_return_22;
        local_beta_buffer_V_23 <= grp_copy_local_beta_fu_2784_ap_return_23;
        local_beta_buffer_V_23_reg_6666 <= grp_copy_local_beta_fu_2784_ap_return_23;
        local_beta_buffer_V_24 <= grp_copy_local_beta_fu_2784_ap_return_24;
        local_beta_buffer_V_24_reg_6671 <= grp_copy_local_beta_fu_2784_ap_return_24;
        local_beta_buffer_V_25 <= grp_copy_local_beta_fu_2784_ap_return_25;
        local_beta_buffer_V_25_reg_6704 <= grp_copy_local_beta_fu_2784_ap_return_25;
        local_beta_buffer_V_26 <= grp_copy_local_beta_fu_2784_ap_return_26;
        local_beta_buffer_V_26_reg_6737 <= grp_copy_local_beta_fu_2784_ap_return_26;
        local_beta_buffer_V_27 <= grp_copy_local_beta_fu_2784_ap_return_27;
        local_beta_buffer_V_27_reg_6770 <= grp_copy_local_beta_fu_2784_ap_return_27;
        local_beta_buffer_V_28 <= grp_copy_local_beta_fu_2784_ap_return_28;
        local_beta_buffer_V_28_reg_6803 <= grp_copy_local_beta_fu_2784_ap_return_28;
        local_beta_buffer_V_29 <= grp_copy_local_beta_fu_2784_ap_return_29;
        local_beta_buffer_V_29_reg_6836 <= grp_copy_local_beta_fu_2784_ap_return_29;
        local_beta_buffer_V_2_reg_6561 <= grp_copy_local_beta_fu_2784_ap_return_2;
        local_beta_buffer_V_3 <= grp_copy_local_beta_fu_2784_ap_return_3;
        local_beta_buffer_V_30 <= grp_copy_local_beta_fu_2784_ap_return_30;
        local_beta_buffer_V_30_reg_6869 <= grp_copy_local_beta_fu_2784_ap_return_30;
        local_beta_buffer_V_31 <= grp_copy_local_beta_fu_2784_ap_return_31;
        local_beta_buffer_V_31_reg_6902 <= grp_copy_local_beta_fu_2784_ap_return_31;
        local_beta_buffer_V_3_reg_6566 <= grp_copy_local_beta_fu_2784_ap_return_3;
        local_beta_buffer_V_4 <= grp_copy_local_beta_fu_2784_ap_return_4;
        local_beta_buffer_V_4_reg_6571 <= grp_copy_local_beta_fu_2784_ap_return_4;
        local_beta_buffer_V_5 <= grp_copy_local_beta_fu_2784_ap_return_5;
        local_beta_buffer_V_5_reg_6576 <= grp_copy_local_beta_fu_2784_ap_return_5;
        local_beta_buffer_V_6 <= grp_copy_local_beta_fu_2784_ap_return_6;
        local_beta_buffer_V_6_reg_6581 <= grp_copy_local_beta_fu_2784_ap_return_6;
        local_beta_buffer_V_7 <= grp_copy_local_beta_fu_2784_ap_return_7;
        local_beta_buffer_V_7_reg_6586 <= grp_copy_local_beta_fu_2784_ap_return_7;
        local_beta_buffer_V_8 <= grp_copy_local_beta_fu_2784_ap_return_8;
        local_beta_buffer_V_8_reg_6591 <= grp_copy_local_beta_fu_2784_ap_return_8;
        local_beta_buffer_V_9 <= grp_copy_local_beta_fu_2784_ap_return_9;
        local_beta_buffer_V_97_reg_6551 <= grp_copy_local_beta_fu_2784_ap_return_0;
        local_beta_buffer_V_9_reg_6596 <= grp_copy_local_beta_fu_2784_ap_return_9;
        local_beta_buffer_V_s <= grp_copy_local_beta_fu_2784_ap_return_0;
        tmp_15_reg_6962 <= {{n[30:3]}};
        tmp_205_reg_6935 <= tmp_205_fu_3355_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1) & (enable_read_read_fu_522_p2 == 1'd0))) begin
        bound3_reg_6362 <= bound3_fu_2845_p2;
        exitcond_flatten_mid_reg_6369 <= exitcond_flatten_mid_fu_2851_p2;
        tmp_119_reg_6357[33 : 2] <= tmp_119_fu_2829_p3[33 : 2];
        tmp_s_reg_6345 <= tmp_s_fu_2823_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        bound4_reg_6380 <= grp_fu_2860_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (exitcond_flatten8_fu_3433_p2 == 1'd0))) begin
        exitcond4_mid2_reg_7049 <= exitcond4_mid2_fu_3650_p2;
        exitcond_flatten93_m_1_reg_7006 <= exitcond_flatten93_m_1_fu_3532_p3;
        exitcond_flatten_mid_6_reg_7035 <= exitcond_flatten_mid_6_fu_3611_p3;
        exitcond_flatten_reg_6993 <= exitcond_flatten_fu_3450_p2;
        i_3_reg_6988 <= i_3_fu_3444_p2;
        tmp_123_reg_7011 <= tmp_123_fu_3545_p2;
        tmp_215_reg_7054 <= tmp_215_fu_3682_p1;
        tmp_220_reg_7059 <= tmp_220_fu_3710_p3;
        tmp_225_reg_7064 <= tmp_225_fu_3734_p3;
        tmp_226_reg_7074 <= tmp_226_fu_3750_p1;
        tmp_89_mid2_reg_7028 <= tmp_89_mid2_fu_3591_p3;
        tr_5_reg_7042 <= tr_5_fu_3618_p2;
        tr_mid_reg_7016 <= tr_mid_fu_3551_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        exitcond_flatten8_reg_6979 <= exitcond_flatten8_fu_3433_p2;
        exitcond_flatten8_reg_6979_pp0_iter1_reg <= exitcond_flatten8_reg_6979;
        newSel102_reg_7964 <= newSel102_fu_4827_p3;
        newSel118_reg_7984 <= newSel118_fu_4923_p3;
        newSel70_reg_7924 <= newSel70_fu_4635_p3;
        newSel86_reg_7944 <= newSel86_fu_4731_p3;
        ret_V_8_reg_7882 <= ret_V_8_fu_4415_p2;
        ret_V_9_reg_7903 <= ret_V_9_fu_4531_p2;
        ret_V_s_reg_7861 <= ret_V_s_fu_4299_p2;
        sel_tmp22_reg_7846 <= sel_tmp22_fu_4250_p2;
        sel_tmp24_reg_7851 <= sel_tmp24_fu_4255_p2;
        sel_tmp26_reg_7856 <= sel_tmp26_fu_4260_p2;
        tmp_226_reg_7074_pp0_iter1_reg <= tmp_226_reg_7074;
        tmp_88_reg_6974 <= tmp_88_fu_3417_p2;
        tmp_89_mid2_reg_7028_pp0_iter1_reg <= tmp_89_mid2_reg_7028;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (exitcond_flatten8_fu_3433_p2 == 1'd0))) begin
        i_cast_mid2_reg_6998 <= i_cast_mid2_fu_3463_p3;
        indvar_flatten_next6_reg_7092 <= indvar_flatten_next6_fu_3780_p3;
        indvar_flatten_next7_reg_7097 <= indvar_flatten_next7_fu_3794_p3;
        indvar_flatten_next_reg_7087 <= indvar_flatten_next_fu_3766_p3;
        j_cast_mid2_reg_7021 <= j_cast_mid2_fu_3559_p3;
        tc_mid2_reg_7069 <= tc_mid2_fu_3742_p3;
        tm0_2_reg_7082 <= tm0_2_fu_3754_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        indvar_flatten_next8_reg_6983 <= indvar_flatten_next8_fu_3438_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (exitcond_flatten8_reg_6979 == 1'd0))) begin
        input_buffer_V_1_loa_reg_7813 <= input_buffer_V_1_q0;
        input_buffer_V_3_loa_reg_7836 <= input_buffer_V_3_q0;
        lhs_V_2_reg_7823 <= lhs_V_2_fu_4188_p1;
        lhs_V_reg_7799 <= lhs_V_fu_4120_p1;
        ret_V_reg_7807 <= ret_V_fu_4158_p2;
        sel_tmp18_reg_7789 <= sel_tmp18_fu_4108_p2;
        sel_tmp20_reg_7794 <= sel_tmp20_fu_4114_p2;
        sel_tmp_reg_7784 <= sel_tmp_fu_4102_p2;
        tmp_136_t_reg_7772[4 : 3] <= tmp_136_t_fu_4095_p3[4 : 3];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001) & (exitcond_flatten8_reg_6979_pp0_iter1_reg == 1'd0))) begin
        local_beta_buffer_V_32_reg_8164 <= local_beta_buffer_V_32_fu_5038_p34;
        output_buffer_0_add_reg_8004 <= tmp_155_cast_fu_5003_p1;
        output_buffer_10_ad_reg_8054 <= tmp_155_cast_fu_5003_p1;
        output_buffer_11_ad_reg_8059 <= tmp_155_cast_fu_5003_p1;
        output_buffer_12_ad_reg_8064 <= tmp_155_cast_fu_5003_p1;
        output_buffer_13_ad_reg_8069 <= tmp_155_cast_fu_5003_p1;
        output_buffer_14_ad_reg_8074 <= tmp_155_cast_fu_5003_p1;
        output_buffer_15_ad_reg_8079 <= tmp_155_cast_fu_5003_p1;
        output_buffer_16_ad_reg_8084 <= tmp_155_cast_fu_5003_p1;
        output_buffer_17_ad_reg_8089 <= tmp_155_cast_fu_5003_p1;
        output_buffer_18_ad_reg_8094 <= tmp_155_cast_fu_5003_p1;
        output_buffer_19_ad_reg_8099 <= tmp_155_cast_fu_5003_p1;
        output_buffer_1_add_reg_8009 <= tmp_155_cast_fu_5003_p1;
        output_buffer_20_ad_reg_8104 <= tmp_155_cast_fu_5003_p1;
        output_buffer_21_ad_reg_8109 <= tmp_155_cast_fu_5003_p1;
        output_buffer_22_ad_reg_8114 <= tmp_155_cast_fu_5003_p1;
        output_buffer_23_ad_reg_8119 <= tmp_155_cast_fu_5003_p1;
        output_buffer_24_ad_reg_8124 <= tmp_155_cast_fu_5003_p1;
        output_buffer_25_ad_reg_8129 <= tmp_155_cast_fu_5003_p1;
        output_buffer_26_ad_reg_8134 <= tmp_155_cast_fu_5003_p1;
        output_buffer_27_ad_reg_8139 <= tmp_155_cast_fu_5003_p1;
        output_buffer_28_ad_reg_8144 <= tmp_155_cast_fu_5003_p1;
        output_buffer_29_ad_reg_8149 <= tmp_155_cast_fu_5003_p1;
        output_buffer_2_add_reg_8014 <= tmp_155_cast_fu_5003_p1;
        output_buffer_30_ad_reg_8154 <= tmp_155_cast_fu_5003_p1;
        output_buffer_31_ad_reg_8159 <= tmp_155_cast_fu_5003_p1;
        output_buffer_3_add_reg_8019 <= tmp_155_cast_fu_5003_p1;
        output_buffer_4_add_reg_8024 <= tmp_155_cast_fu_5003_p1;
        output_buffer_5_add_reg_8029 <= tmp_155_cast_fu_5003_p1;
        output_buffer_6_add_reg_8034 <= tmp_155_cast_fu_5003_p1;
        output_buffer_7_add_reg_8039 <= tmp_155_cast_fu_5003_p1;
        output_buffer_8_add_reg_8044 <= tmp_155_cast_fu_5003_p1;
        output_buffer_9_add_reg_8049 <= tmp_155_cast_fu_5003_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (tmp_s_reg_6345 == 1'd0))) begin
        newSel105_reg_7969 <= newSel105_fu_4851_p3;
        newSel108_reg_7974 <= newSel108_fu_4875_p3;
        newSel111_reg_7979 <= newSel111_fu_4899_p3;
        newSel121_reg_7989 <= newSel121_fu_4947_p3;
        newSel124_reg_7994 <= newSel124_fu_4971_p3;
        newSel127_reg_7999 <= newSel127_fu_4995_p3;
        newSel25_reg_7867 <= newSel25_fu_4321_p3;
        newSel31_reg_7877 <= newSel31_fu_4379_p3;
        newSel41_reg_7888 <= newSel41_fu_4437_p3;
        newSel47_reg_7898 <= newSel47_fu_4495_p3;
        newSel57_reg_7909 <= newSel57_fu_4553_p3;
        newSel63_reg_7919 <= newSel63_fu_4611_p3;
        newSel73_reg_7929 <= newSel73_fu_4659_p3;
        newSel76_reg_7934 <= newSel76_fu_4683_p3;
        newSel79_reg_7939 <= newSel79_fu_4707_p3;
        newSel89_reg_7949 <= newSel89_fu_4755_p3;
        newSel92_reg_7954 <= newSel92_fu_4779_p3;
        newSel95_reg_7959 <= newSel95_fu_4803_p3;
        ret_V_2_1_reg_7872 <= ret_V_2_1_fu_4357_p2;
        ret_V_2_2_reg_7893 <= ret_V_2_2_fu_4473_p2;
        ret_V_2_3_reg_7914 <= ret_V_2_3_fu_4589_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (exitcond_flatten8_reg_6979 == 1'd0) & (tmp_s_reg_6345 == 1'd0))) begin
        newSel15_reg_7841 <= newSel15_fu_4242_p3;
        newSel9_reg_7818 <= newSel9_fu_4180_p3;
        ret_V_2_reg_7831 <= ret_V_2_fu_4220_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        ret_V_4_reg_8189 <= ret_V_4_fu_5180_p2;
        ret_V_5_reg_8199 <= ret_V_5_fu_5222_p2;
        ret_V_6_reg_8209 <= ret_V_6_fu_5264_p2;
        ret_V_7_reg_8219 <= ret_V_7_fu_5306_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001) & (exitcond_flatten8_reg_6979 == 1'd0))) begin
        tmp_129_reg_7767 <= tmp_129_fu_4090_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001) & (tmp_s_reg_6345 == 1'd0))) begin
        tmp_144_1_reg_8174 <= tmp_144_1_fu_5123_p2;
        tmp_144_2_reg_8179 <= tmp_144_2_fu_5147_p2;
        tmp_144_3_reg_8184 <= tmp_144_3_fu_5171_p2;
        tmp_144_4_reg_8194 <= tmp_144_4_fu_5213_p2;
        tmp_144_5_reg_8204 <= tmp_144_5_fu_5255_p2;
        tmp_144_6_reg_8214 <= tmp_144_6_fu_5297_p2;
        tmp_144_7_reg_8224 <= tmp_144_7_fu_5339_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001) & (exitcond_flatten8_reg_6979_pp0_iter1_reg == 1'd0) & (tmp_s_reg_6345 == 1'd0))) begin
        tmp_93_reg_8169 <= tmp_93_fu_5099_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001) & (exitcond_flatten8_reg_6979 == 1'd0))) begin
        tr_mid2_reg_7742 <= tr_mid2_fu_4060_p3;
    end
end

always @ (*) begin
    if ((exitcond_flatten8_fu_3433_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state6 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state6 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (exitcond_flatten8_reg_6979 == 1'd0))) begin
        ap_phi_mux_i_phi_fu_2699_p4 = i_cast_mid2_reg_6998;
    end else begin
        ap_phi_mux_i_phi_fu_2699_p4 = i_reg_2695;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (exitcond_flatten8_reg_6979 == 1'd0))) begin
        ap_phi_mux_indvar_flatten6_phi_fu_2688_p4 = indvar_flatten_next8_reg_6983;
    end else begin
        ap_phi_mux_indvar_flatten6_phi_fu_2688_p4 = indvar_flatten6_reg_2684;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (exitcond_flatten8_reg_6979 == 1'd0))) begin
        ap_phi_mux_indvar_flatten7_phi_fu_2710_p4 = indvar_flatten_next7_reg_7097;
    end else begin
        ap_phi_mux_indvar_flatten7_phi_fu_2710_p4 = indvar_flatten7_reg_2706;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (exitcond_flatten8_reg_6979 == 1'd0))) begin
        ap_phi_mux_indvar_flatten8_phi_fu_2732_p4 = indvar_flatten_next6_reg_7092;
    end else begin
        ap_phi_mux_indvar_flatten8_phi_fu_2732_p4 = indvar_flatten8_reg_2728;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (exitcond_flatten8_reg_6979 == 1'd0))) begin
        ap_phi_mux_indvar_flatten_phi_fu_2755_p4 = indvar_flatten_next_reg_7087;
    end else begin
        ap_phi_mux_indvar_flatten_phi_fu_2755_p4 = indvar_flatten_reg_2751;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (exitcond_flatten8_reg_6979 == 1'd0))) begin
        ap_phi_mux_j_phi_fu_2721_p4 = j_cast_mid2_reg_7021;
    end else begin
        ap_phi_mux_j_phi_fu_2721_p4 = j_reg_2717;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (exitcond_flatten8_reg_6979 == 1'd0))) begin
        ap_phi_mux_tc_phi_fu_2766_p4 = tc_mid2_reg_7069;
    end else begin
        ap_phi_mux_tc_phi_fu_2766_p4 = tc_reg_2762;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (exitcond_flatten8_reg_6979 == 1'd0))) begin
        ap_phi_mux_tm0_phi_fu_2777_p4 = tm0_2_reg_7082;
    end else begin
        ap_phi_mux_tm0_phi_fu_2777_p4 = tm0_reg_2773;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0) & (exitcond_flatten8_reg_6979 == 1'd0))) begin
        ap_phi_mux_tr_phi_fu_2743_p4 = tr_mid2_reg_7742;
    end else begin
        ap_phi_mux_tr_phi_fu_2743_p4 = tr_reg_2739;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | ((1'b1 == ap_CS_fsm_state5) & (grp_copy_local_beta_fu_2784_ap_done == 1'b1)))) begin
        grp_fu_3029_ce = 1'b1;
    end else begin
        grp_fu_3029_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        input_buffer_V_0_ce0 = 1'b1;
    end else begin
        input_buffer_V_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        input_buffer_V_1_ce0 = 1'b1;
    end else begin
        input_buffer_V_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        input_buffer_V_2_ce0 = 1'b1;
    end else begin
        input_buffer_V_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        input_buffer_V_3_ce0 = 1'b1;
    end else begin
        input_buffer_V_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        output_buffer_0_address0 = output_buffer_0_add_reg_8004;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        output_buffer_0_address0 = tmp_155_cast_fu_5003_p1;
    end else begin
        output_buffer_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        output_buffer_0_ce0 = 1'b1;
    end else begin
        output_buffer_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_226_reg_7074_pp0_iter1_reg == 2'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        output_buffer_0_we0 = 1'b1;
    end else begin
        output_buffer_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        output_buffer_10_address0 = output_buffer_10_ad_reg_8054;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        output_buffer_10_address0 = tmp_155_cast_fu_5003_p1;
    end else begin
        output_buffer_10_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        output_buffer_10_ce0 = 1'b1;
    end else begin
        output_buffer_10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_226_reg_7074_pp0_iter1_reg == 2'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        output_buffer_10_we0 = 1'b1;
    end else begin
        output_buffer_10_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        output_buffer_11_address0 = output_buffer_11_ad_reg_8059;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        output_buffer_11_address0 = tmp_155_cast_fu_5003_p1;
    end else begin
        output_buffer_11_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        output_buffer_11_ce0 = 1'b1;
    end else begin
        output_buffer_11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_226_reg_7074_pp0_iter1_reg == 2'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        output_buffer_11_we0 = 1'b1;
    end else begin
        output_buffer_11_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        output_buffer_12_address0 = output_buffer_12_ad_reg_8064;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        output_buffer_12_address0 = tmp_155_cast_fu_5003_p1;
    end else begin
        output_buffer_12_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        output_buffer_12_ce0 = 1'b1;
    end else begin
        output_buffer_12_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_226_reg_7074_pp0_iter1_reg == 2'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        output_buffer_12_we0 = 1'b1;
    end else begin
        output_buffer_12_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        output_buffer_13_address0 = output_buffer_13_ad_reg_8069;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        output_buffer_13_address0 = tmp_155_cast_fu_5003_p1;
    end else begin
        output_buffer_13_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        output_buffer_13_ce0 = 1'b1;
    end else begin
        output_buffer_13_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_226_reg_7074_pp0_iter1_reg == 2'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        output_buffer_13_we0 = 1'b1;
    end else begin
        output_buffer_13_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        output_buffer_14_address0 = output_buffer_14_ad_reg_8074;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        output_buffer_14_address0 = tmp_155_cast_fu_5003_p1;
    end else begin
        output_buffer_14_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        output_buffer_14_ce0 = 1'b1;
    end else begin
        output_buffer_14_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_226_reg_7074_pp0_iter1_reg == 2'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        output_buffer_14_we0 = 1'b1;
    end else begin
        output_buffer_14_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        output_buffer_15_address0 = output_buffer_15_ad_reg_8079;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        output_buffer_15_address0 = tmp_155_cast_fu_5003_p1;
    end else begin
        output_buffer_15_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        output_buffer_15_ce0 = 1'b1;
    end else begin
        output_buffer_15_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_226_reg_7074_pp0_iter1_reg == 2'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        output_buffer_15_we0 = 1'b1;
    end else begin
        output_buffer_15_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        output_buffer_16_address0 = output_buffer_16_ad_reg_8084;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        output_buffer_16_address0 = tmp_155_cast_fu_5003_p1;
    end else begin
        output_buffer_16_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        output_buffer_16_ce0 = 1'b1;
    end else begin
        output_buffer_16_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_226_reg_7074_pp0_iter1_reg == 2'd2) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        output_buffer_16_we0 = 1'b1;
    end else begin
        output_buffer_16_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        output_buffer_17_address0 = output_buffer_17_ad_reg_8089;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        output_buffer_17_address0 = tmp_155_cast_fu_5003_p1;
    end else begin
        output_buffer_17_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        output_buffer_17_ce0 = 1'b1;
    end else begin
        output_buffer_17_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_226_reg_7074_pp0_iter1_reg == 2'd2) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        output_buffer_17_we0 = 1'b1;
    end else begin
        output_buffer_17_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        output_buffer_18_address0 = output_buffer_18_ad_reg_8094;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        output_buffer_18_address0 = tmp_155_cast_fu_5003_p1;
    end else begin
        output_buffer_18_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        output_buffer_18_ce0 = 1'b1;
    end else begin
        output_buffer_18_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_226_reg_7074_pp0_iter1_reg == 2'd2) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        output_buffer_18_we0 = 1'b1;
    end else begin
        output_buffer_18_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        output_buffer_19_address0 = output_buffer_19_ad_reg_8099;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        output_buffer_19_address0 = tmp_155_cast_fu_5003_p1;
    end else begin
        output_buffer_19_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        output_buffer_19_ce0 = 1'b1;
    end else begin
        output_buffer_19_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_226_reg_7074_pp0_iter1_reg == 2'd2) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        output_buffer_19_we0 = 1'b1;
    end else begin
        output_buffer_19_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        output_buffer_1_address0 = output_buffer_1_add_reg_8009;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        output_buffer_1_address0 = tmp_155_cast_fu_5003_p1;
    end else begin
        output_buffer_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        output_buffer_1_ce0 = 1'b1;
    end else begin
        output_buffer_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_226_reg_7074_pp0_iter1_reg == 2'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        output_buffer_1_we0 = 1'b1;
    end else begin
        output_buffer_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        output_buffer_20_address0 = output_buffer_20_ad_reg_8104;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        output_buffer_20_address0 = tmp_155_cast_fu_5003_p1;
    end else begin
        output_buffer_20_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        output_buffer_20_ce0 = 1'b1;
    end else begin
        output_buffer_20_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_226_reg_7074_pp0_iter1_reg == 2'd2) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        output_buffer_20_we0 = 1'b1;
    end else begin
        output_buffer_20_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        output_buffer_21_address0 = output_buffer_21_ad_reg_8109;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        output_buffer_21_address0 = tmp_155_cast_fu_5003_p1;
    end else begin
        output_buffer_21_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        output_buffer_21_ce0 = 1'b1;
    end else begin
        output_buffer_21_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_226_reg_7074_pp0_iter1_reg == 2'd2) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        output_buffer_21_we0 = 1'b1;
    end else begin
        output_buffer_21_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        output_buffer_22_address0 = output_buffer_22_ad_reg_8114;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        output_buffer_22_address0 = tmp_155_cast_fu_5003_p1;
    end else begin
        output_buffer_22_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        output_buffer_22_ce0 = 1'b1;
    end else begin
        output_buffer_22_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_226_reg_7074_pp0_iter1_reg == 2'd2) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        output_buffer_22_we0 = 1'b1;
    end else begin
        output_buffer_22_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        output_buffer_23_address0 = output_buffer_23_ad_reg_8119;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        output_buffer_23_address0 = tmp_155_cast_fu_5003_p1;
    end else begin
        output_buffer_23_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        output_buffer_23_ce0 = 1'b1;
    end else begin
        output_buffer_23_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_226_reg_7074_pp0_iter1_reg == 2'd2) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        output_buffer_23_we0 = 1'b1;
    end else begin
        output_buffer_23_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        output_buffer_24_address0 = output_buffer_24_ad_reg_8124;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        output_buffer_24_address0 = tmp_155_cast_fu_5003_p1;
    end else begin
        output_buffer_24_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        output_buffer_24_ce0 = 1'b1;
    end else begin
        output_buffer_24_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_226_reg_7074_pp0_iter1_reg == 2'd3) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        output_buffer_24_we0 = 1'b1;
    end else begin
        output_buffer_24_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        output_buffer_25_address0 = output_buffer_25_ad_reg_8129;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        output_buffer_25_address0 = tmp_155_cast_fu_5003_p1;
    end else begin
        output_buffer_25_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        output_buffer_25_ce0 = 1'b1;
    end else begin
        output_buffer_25_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_226_reg_7074_pp0_iter1_reg == 2'd3) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        output_buffer_25_we0 = 1'b1;
    end else begin
        output_buffer_25_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        output_buffer_26_address0 = output_buffer_26_ad_reg_8134;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        output_buffer_26_address0 = tmp_155_cast_fu_5003_p1;
    end else begin
        output_buffer_26_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        output_buffer_26_ce0 = 1'b1;
    end else begin
        output_buffer_26_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_226_reg_7074_pp0_iter1_reg == 2'd3) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        output_buffer_26_we0 = 1'b1;
    end else begin
        output_buffer_26_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        output_buffer_27_address0 = output_buffer_27_ad_reg_8139;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        output_buffer_27_address0 = tmp_155_cast_fu_5003_p1;
    end else begin
        output_buffer_27_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        output_buffer_27_ce0 = 1'b1;
    end else begin
        output_buffer_27_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_226_reg_7074_pp0_iter1_reg == 2'd3) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        output_buffer_27_we0 = 1'b1;
    end else begin
        output_buffer_27_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        output_buffer_28_address0 = output_buffer_28_ad_reg_8144;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        output_buffer_28_address0 = tmp_155_cast_fu_5003_p1;
    end else begin
        output_buffer_28_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        output_buffer_28_ce0 = 1'b1;
    end else begin
        output_buffer_28_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_226_reg_7074_pp0_iter1_reg == 2'd3) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        output_buffer_28_we0 = 1'b1;
    end else begin
        output_buffer_28_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        output_buffer_29_address0 = output_buffer_29_ad_reg_8149;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        output_buffer_29_address0 = tmp_155_cast_fu_5003_p1;
    end else begin
        output_buffer_29_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        output_buffer_29_ce0 = 1'b1;
    end else begin
        output_buffer_29_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_226_reg_7074_pp0_iter1_reg == 2'd3) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        output_buffer_29_we0 = 1'b1;
    end else begin
        output_buffer_29_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        output_buffer_2_address0 = output_buffer_2_add_reg_8014;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        output_buffer_2_address0 = tmp_155_cast_fu_5003_p1;
    end else begin
        output_buffer_2_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        output_buffer_2_ce0 = 1'b1;
    end else begin
        output_buffer_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_226_reg_7074_pp0_iter1_reg == 2'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        output_buffer_2_we0 = 1'b1;
    end else begin
        output_buffer_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        output_buffer_30_address0 = output_buffer_30_ad_reg_8154;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        output_buffer_30_address0 = tmp_155_cast_fu_5003_p1;
    end else begin
        output_buffer_30_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        output_buffer_30_ce0 = 1'b1;
    end else begin
        output_buffer_30_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_226_reg_7074_pp0_iter1_reg == 2'd3) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        output_buffer_30_we0 = 1'b1;
    end else begin
        output_buffer_30_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        output_buffer_31_address0 = output_buffer_31_ad_reg_8159;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        output_buffer_31_address0 = tmp_155_cast_fu_5003_p1;
    end else begin
        output_buffer_31_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        output_buffer_31_ce0 = 1'b1;
    end else begin
        output_buffer_31_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_226_reg_7074_pp0_iter1_reg == 2'd3) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        output_buffer_31_we0 = 1'b1;
    end else begin
        output_buffer_31_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        output_buffer_3_address0 = output_buffer_3_add_reg_8019;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        output_buffer_3_address0 = tmp_155_cast_fu_5003_p1;
    end else begin
        output_buffer_3_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        output_buffer_3_ce0 = 1'b1;
    end else begin
        output_buffer_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_226_reg_7074_pp0_iter1_reg == 2'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        output_buffer_3_we0 = 1'b1;
    end else begin
        output_buffer_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        output_buffer_4_address0 = output_buffer_4_add_reg_8024;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        output_buffer_4_address0 = tmp_155_cast_fu_5003_p1;
    end else begin
        output_buffer_4_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        output_buffer_4_ce0 = 1'b1;
    end else begin
        output_buffer_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_226_reg_7074_pp0_iter1_reg == 2'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        output_buffer_4_we0 = 1'b1;
    end else begin
        output_buffer_4_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        output_buffer_5_address0 = output_buffer_5_add_reg_8029;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        output_buffer_5_address0 = tmp_155_cast_fu_5003_p1;
    end else begin
        output_buffer_5_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        output_buffer_5_ce0 = 1'b1;
    end else begin
        output_buffer_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_226_reg_7074_pp0_iter1_reg == 2'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        output_buffer_5_we0 = 1'b1;
    end else begin
        output_buffer_5_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        output_buffer_6_address0 = output_buffer_6_add_reg_8034;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        output_buffer_6_address0 = tmp_155_cast_fu_5003_p1;
    end else begin
        output_buffer_6_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        output_buffer_6_ce0 = 1'b1;
    end else begin
        output_buffer_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_226_reg_7074_pp0_iter1_reg == 2'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        output_buffer_6_we0 = 1'b1;
    end else begin
        output_buffer_6_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        output_buffer_7_address0 = output_buffer_7_add_reg_8039;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        output_buffer_7_address0 = tmp_155_cast_fu_5003_p1;
    end else begin
        output_buffer_7_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        output_buffer_7_ce0 = 1'b1;
    end else begin
        output_buffer_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_226_reg_7074_pp0_iter1_reg == 2'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        output_buffer_7_we0 = 1'b1;
    end else begin
        output_buffer_7_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        output_buffer_8_address0 = output_buffer_8_add_reg_8044;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        output_buffer_8_address0 = tmp_155_cast_fu_5003_p1;
    end else begin
        output_buffer_8_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        output_buffer_8_ce0 = 1'b1;
    end else begin
        output_buffer_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_226_reg_7074_pp0_iter1_reg == 2'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        output_buffer_8_we0 = 1'b1;
    end else begin
        output_buffer_8_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        output_buffer_9_address0 = output_buffer_9_add_reg_8049;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1))) begin
        output_buffer_9_address0 = tmp_155_cast_fu_5003_p1;
    end else begin
        output_buffer_9_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        output_buffer_9_ce0 = 1'b1;
    end else begin
        output_buffer_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (tmp_226_reg_7074_pp0_iter1_reg == 2'd1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        output_buffer_9_we0 = 1'b1;
    end else begin
        output_buffer_9_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        weight_buffer_V_0_0_ce0 = 1'b1;
    end else begin
        weight_buffer_V_0_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        weight_buffer_V_0_10_ce0 = 1'b1;
    end else begin
        weight_buffer_V_0_10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        weight_buffer_V_0_11_ce0 = 1'b1;
    end else begin
        weight_buffer_V_0_11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        weight_buffer_V_0_12_ce0 = 1'b1;
    end else begin
        weight_buffer_V_0_12_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        weight_buffer_V_0_13_ce0 = 1'b1;
    end else begin
        weight_buffer_V_0_13_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        weight_buffer_V_0_14_ce0 = 1'b1;
    end else begin
        weight_buffer_V_0_14_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        weight_buffer_V_0_15_ce0 = 1'b1;
    end else begin
        weight_buffer_V_0_15_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        weight_buffer_V_0_16_ce0 = 1'b1;
    end else begin
        weight_buffer_V_0_16_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        weight_buffer_V_0_17_ce0 = 1'b1;
    end else begin
        weight_buffer_V_0_17_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        weight_buffer_V_0_18_ce0 = 1'b1;
    end else begin
        weight_buffer_V_0_18_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        weight_buffer_V_0_19_ce0 = 1'b1;
    end else begin
        weight_buffer_V_0_19_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        weight_buffer_V_0_1_ce0 = 1'b1;
    end else begin
        weight_buffer_V_0_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        weight_buffer_V_0_20_ce0 = 1'b1;
    end else begin
        weight_buffer_V_0_20_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        weight_buffer_V_0_21_ce0 = 1'b1;
    end else begin
        weight_buffer_V_0_21_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        weight_buffer_V_0_22_ce0 = 1'b1;
    end else begin
        weight_buffer_V_0_22_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        weight_buffer_V_0_23_ce0 = 1'b1;
    end else begin
        weight_buffer_V_0_23_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        weight_buffer_V_0_24_ce0 = 1'b1;
    end else begin
        weight_buffer_V_0_24_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        weight_buffer_V_0_25_ce0 = 1'b1;
    end else begin
        weight_buffer_V_0_25_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        weight_buffer_V_0_26_ce0 = 1'b1;
    end else begin
        weight_buffer_V_0_26_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        weight_buffer_V_0_27_ce0 = 1'b1;
    end else begin
        weight_buffer_V_0_27_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        weight_buffer_V_0_28_ce0 = 1'b1;
    end else begin
        weight_buffer_V_0_28_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        weight_buffer_V_0_29_ce0 = 1'b1;
    end else begin
        weight_buffer_V_0_29_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        weight_buffer_V_0_2_ce0 = 1'b1;
    end else begin
        weight_buffer_V_0_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        weight_buffer_V_0_30_ce0 = 1'b1;
    end else begin
        weight_buffer_V_0_30_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        weight_buffer_V_0_31_ce0 = 1'b1;
    end else begin
        weight_buffer_V_0_31_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        weight_buffer_V_0_3_ce0 = 1'b1;
    end else begin
        weight_buffer_V_0_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        weight_buffer_V_0_4_ce0 = 1'b1;
    end else begin
        weight_buffer_V_0_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        weight_buffer_V_0_5_ce0 = 1'b1;
    end else begin
        weight_buffer_V_0_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        weight_buffer_V_0_6_ce0 = 1'b1;
    end else begin
        weight_buffer_V_0_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        weight_buffer_V_0_7_ce0 = 1'b1;
    end else begin
        weight_buffer_V_0_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        weight_buffer_V_0_8_ce0 = 1'b1;
    end else begin
        weight_buffer_V_0_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        weight_buffer_V_0_9_ce0 = 1'b1;
    end else begin
        weight_buffer_V_0_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        weight_buffer_V_1_0_ce0 = 1'b1;
    end else begin
        weight_buffer_V_1_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        weight_buffer_V_1_10_ce0 = 1'b1;
    end else begin
        weight_buffer_V_1_10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        weight_buffer_V_1_11_ce0 = 1'b1;
    end else begin
        weight_buffer_V_1_11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        weight_buffer_V_1_12_ce0 = 1'b1;
    end else begin
        weight_buffer_V_1_12_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        weight_buffer_V_1_13_ce0 = 1'b1;
    end else begin
        weight_buffer_V_1_13_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        weight_buffer_V_1_14_ce0 = 1'b1;
    end else begin
        weight_buffer_V_1_14_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        weight_buffer_V_1_15_ce0 = 1'b1;
    end else begin
        weight_buffer_V_1_15_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        weight_buffer_V_1_16_ce0 = 1'b1;
    end else begin
        weight_buffer_V_1_16_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        weight_buffer_V_1_17_ce0 = 1'b1;
    end else begin
        weight_buffer_V_1_17_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        weight_buffer_V_1_18_ce0 = 1'b1;
    end else begin
        weight_buffer_V_1_18_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        weight_buffer_V_1_19_ce0 = 1'b1;
    end else begin
        weight_buffer_V_1_19_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        weight_buffer_V_1_1_ce0 = 1'b1;
    end else begin
        weight_buffer_V_1_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        weight_buffer_V_1_20_ce0 = 1'b1;
    end else begin
        weight_buffer_V_1_20_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        weight_buffer_V_1_21_ce0 = 1'b1;
    end else begin
        weight_buffer_V_1_21_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        weight_buffer_V_1_22_ce0 = 1'b1;
    end else begin
        weight_buffer_V_1_22_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        weight_buffer_V_1_23_ce0 = 1'b1;
    end else begin
        weight_buffer_V_1_23_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        weight_buffer_V_1_24_ce0 = 1'b1;
    end else begin
        weight_buffer_V_1_24_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        weight_buffer_V_1_25_ce0 = 1'b1;
    end else begin
        weight_buffer_V_1_25_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        weight_buffer_V_1_26_ce0 = 1'b1;
    end else begin
        weight_buffer_V_1_26_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        weight_buffer_V_1_27_ce0 = 1'b1;
    end else begin
        weight_buffer_V_1_27_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        weight_buffer_V_1_28_ce0 = 1'b1;
    end else begin
        weight_buffer_V_1_28_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        weight_buffer_V_1_29_ce0 = 1'b1;
    end else begin
        weight_buffer_V_1_29_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        weight_buffer_V_1_2_ce0 = 1'b1;
    end else begin
        weight_buffer_V_1_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        weight_buffer_V_1_30_ce0 = 1'b1;
    end else begin
        weight_buffer_V_1_30_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        weight_buffer_V_1_31_ce0 = 1'b1;
    end else begin
        weight_buffer_V_1_31_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        weight_buffer_V_1_3_ce0 = 1'b1;
    end else begin
        weight_buffer_V_1_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        weight_buffer_V_1_4_ce0 = 1'b1;
    end else begin
        weight_buffer_V_1_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        weight_buffer_V_1_5_ce0 = 1'b1;
    end else begin
        weight_buffer_V_1_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        weight_buffer_V_1_6_ce0 = 1'b1;
    end else begin
        weight_buffer_V_1_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        weight_buffer_V_1_7_ce0 = 1'b1;
    end else begin
        weight_buffer_V_1_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        weight_buffer_V_1_8_ce0 = 1'b1;
    end else begin
        weight_buffer_V_1_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        weight_buffer_V_1_9_ce0 = 1'b1;
    end else begin
        weight_buffer_V_1_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        weight_buffer_V_2_0_ce0 = 1'b1;
    end else begin
        weight_buffer_V_2_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        weight_buffer_V_2_10_ce0 = 1'b1;
    end else begin
        weight_buffer_V_2_10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        weight_buffer_V_2_11_ce0 = 1'b1;
    end else begin
        weight_buffer_V_2_11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        weight_buffer_V_2_12_ce0 = 1'b1;
    end else begin
        weight_buffer_V_2_12_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        weight_buffer_V_2_13_ce0 = 1'b1;
    end else begin
        weight_buffer_V_2_13_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        weight_buffer_V_2_14_ce0 = 1'b1;
    end else begin
        weight_buffer_V_2_14_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        weight_buffer_V_2_15_ce0 = 1'b1;
    end else begin
        weight_buffer_V_2_15_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        weight_buffer_V_2_16_ce0 = 1'b1;
    end else begin
        weight_buffer_V_2_16_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        weight_buffer_V_2_17_ce0 = 1'b1;
    end else begin
        weight_buffer_V_2_17_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        weight_buffer_V_2_18_ce0 = 1'b1;
    end else begin
        weight_buffer_V_2_18_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        weight_buffer_V_2_19_ce0 = 1'b1;
    end else begin
        weight_buffer_V_2_19_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        weight_buffer_V_2_1_ce0 = 1'b1;
    end else begin
        weight_buffer_V_2_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        weight_buffer_V_2_20_ce0 = 1'b1;
    end else begin
        weight_buffer_V_2_20_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        weight_buffer_V_2_21_ce0 = 1'b1;
    end else begin
        weight_buffer_V_2_21_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        weight_buffer_V_2_22_ce0 = 1'b1;
    end else begin
        weight_buffer_V_2_22_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        weight_buffer_V_2_23_ce0 = 1'b1;
    end else begin
        weight_buffer_V_2_23_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        weight_buffer_V_2_24_ce0 = 1'b1;
    end else begin
        weight_buffer_V_2_24_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        weight_buffer_V_2_25_ce0 = 1'b1;
    end else begin
        weight_buffer_V_2_25_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        weight_buffer_V_2_26_ce0 = 1'b1;
    end else begin
        weight_buffer_V_2_26_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        weight_buffer_V_2_27_ce0 = 1'b1;
    end else begin
        weight_buffer_V_2_27_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        weight_buffer_V_2_28_ce0 = 1'b1;
    end else begin
        weight_buffer_V_2_28_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        weight_buffer_V_2_29_ce0 = 1'b1;
    end else begin
        weight_buffer_V_2_29_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        weight_buffer_V_2_2_ce0 = 1'b1;
    end else begin
        weight_buffer_V_2_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        weight_buffer_V_2_30_ce0 = 1'b1;
    end else begin
        weight_buffer_V_2_30_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        weight_buffer_V_2_31_ce0 = 1'b1;
    end else begin
        weight_buffer_V_2_31_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        weight_buffer_V_2_3_ce0 = 1'b1;
    end else begin
        weight_buffer_V_2_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        weight_buffer_V_2_4_ce0 = 1'b1;
    end else begin
        weight_buffer_V_2_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        weight_buffer_V_2_5_ce0 = 1'b1;
    end else begin
        weight_buffer_V_2_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        weight_buffer_V_2_6_ce0 = 1'b1;
    end else begin
        weight_buffer_V_2_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        weight_buffer_V_2_7_ce0 = 1'b1;
    end else begin
        weight_buffer_V_2_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        weight_buffer_V_2_8_ce0 = 1'b1;
    end else begin
        weight_buffer_V_2_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        weight_buffer_V_2_9_ce0 = 1'b1;
    end else begin
        weight_buffer_V_2_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        weight_buffer_V_3_0_ce0 = 1'b1;
    end else begin
        weight_buffer_V_3_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        weight_buffer_V_3_10_ce0 = 1'b1;
    end else begin
        weight_buffer_V_3_10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        weight_buffer_V_3_11_ce0 = 1'b1;
    end else begin
        weight_buffer_V_3_11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        weight_buffer_V_3_12_ce0 = 1'b1;
    end else begin
        weight_buffer_V_3_12_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        weight_buffer_V_3_13_ce0 = 1'b1;
    end else begin
        weight_buffer_V_3_13_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        weight_buffer_V_3_14_ce0 = 1'b1;
    end else begin
        weight_buffer_V_3_14_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        weight_buffer_V_3_15_ce0 = 1'b1;
    end else begin
        weight_buffer_V_3_15_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        weight_buffer_V_3_16_ce0 = 1'b1;
    end else begin
        weight_buffer_V_3_16_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        weight_buffer_V_3_17_ce0 = 1'b1;
    end else begin
        weight_buffer_V_3_17_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        weight_buffer_V_3_18_ce0 = 1'b1;
    end else begin
        weight_buffer_V_3_18_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        weight_buffer_V_3_19_ce0 = 1'b1;
    end else begin
        weight_buffer_V_3_19_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        weight_buffer_V_3_1_ce0 = 1'b1;
    end else begin
        weight_buffer_V_3_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        weight_buffer_V_3_20_ce0 = 1'b1;
    end else begin
        weight_buffer_V_3_20_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        weight_buffer_V_3_21_ce0 = 1'b1;
    end else begin
        weight_buffer_V_3_21_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        weight_buffer_V_3_22_ce0 = 1'b1;
    end else begin
        weight_buffer_V_3_22_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        weight_buffer_V_3_23_ce0 = 1'b1;
    end else begin
        weight_buffer_V_3_23_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        weight_buffer_V_3_24_ce0 = 1'b1;
    end else begin
        weight_buffer_V_3_24_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        weight_buffer_V_3_25_ce0 = 1'b1;
    end else begin
        weight_buffer_V_3_25_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        weight_buffer_V_3_26_ce0 = 1'b1;
    end else begin
        weight_buffer_V_3_26_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        weight_buffer_V_3_27_ce0 = 1'b1;
    end else begin
        weight_buffer_V_3_27_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        weight_buffer_V_3_28_ce0 = 1'b1;
    end else begin
        weight_buffer_V_3_28_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        weight_buffer_V_3_29_ce0 = 1'b1;
    end else begin
        weight_buffer_V_3_29_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        weight_buffer_V_3_2_ce0 = 1'b1;
    end else begin
        weight_buffer_V_3_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        weight_buffer_V_3_30_ce0 = 1'b1;
    end else begin
        weight_buffer_V_3_30_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        weight_buffer_V_3_31_ce0 = 1'b1;
    end else begin
        weight_buffer_V_3_31_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        weight_buffer_V_3_3_ce0 = 1'b1;
    end else begin
        weight_buffer_V_3_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        weight_buffer_V_3_4_ce0 = 1'b1;
    end else begin
        weight_buffer_V_3_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        weight_buffer_V_3_5_ce0 = 1'b1;
    end else begin
        weight_buffer_V_3_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        weight_buffer_V_3_6_ce0 = 1'b1;
    end else begin
        weight_buffer_V_3_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        weight_buffer_V_3_7_ce0 = 1'b1;
    end else begin
        weight_buffer_V_3_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        weight_buffer_V_3_8_ce0 = 1'b1;
    end else begin
        weight_buffer_V_3_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001))) begin
        weight_buffer_V_3_9_ce0 = 1'b1;
    end else begin
        weight_buffer_V_3_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1) & (enable_read_read_fu_522_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1) & (enable_read_read_fu_522_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            if (((1'b1 == ap_CS_fsm_state5) & (grp_copy_local_beta_fu_2784_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_enable_reg_pp0_iter0 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (exitcond_flatten8_fu_3433_p2 == 1'd1)) & ~((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else if ((((ap_enable_reg_pp0_iter0 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (exitcond_flatten8_fu_3433_p2 == 1'd1)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone)))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign beta_buffer_address0 = grp_copy_local_beta_fu_2784_beta_buffer_address0;

assign beta_buffer_ce0 = grp_copy_local_beta_fu_2784_beta_buffer_ce0;

assign bound3_cast_fu_3361_p1 = bound3_reg_6362;

assign bound3_fu_2845_p0 = bound3_fu_2845_p00;

assign bound3_fu_2845_p00 = tmp_119_fu_2829_p3;

assign bound3_fu_2845_p1 = bound3_fu_2845_p10;

assign bound3_fu_2845_p10 = TR;

assign bound3_fu_2845_p2 = (bound3_fu_2845_p0 * bound3_fu_2845_p1);

assign bound4_cast_fu_3364_p1 = bound4_reg_6380;

assign bound_fu_3358_p1 = tmp_119_reg_6357;

assign enable_read_read_fu_522_p2 = enable;

assign exitcond4_mid1_fu_3605_p2 = (not_exitcond_flatten_1_fu_3599_p2 & exitcond4_mid_fu_3509_p2);

assign exitcond4_mid2_fu_3650_p2 = (not_exitcond_flatten_2_fu_3644_p2 & exitcond4_mid1_fu_3605_p2);

assign exitcond4_mid_fu_3509_p2 = (not_exitcond_flatten_fu_3497_p2 & exitcond_fu_3503_p2);

assign exitcond_flatten2_fu_3515_p2 = ((ap_phi_mux_indvar_flatten_phi_fu_2755_p4 == bound_reg_6942) ? 1'b1 : 1'b0);

assign exitcond_flatten3_fu_3527_p2 = ((ap_phi_mux_indvar_flatten8_phi_fu_2732_p4 == bound3_cast_reg_6947) ? 1'b1 : 1'b0);

assign exitcond_flatten8_fu_3433_p2 = ((ap_phi_mux_indvar_flatten6_phi_fu_2688_p4 == bound5_reg_6957) ? 1'b1 : 1'b0);

assign exitcond_flatten93_m_1_fu_3532_p3 = ((exitcond_flatten_fu_3450_p2[0:0] === 1'b1) ? exitcond_flatten93_m_reg_6969 : exitcond_flatten3_fu_3527_p2);

assign exitcond_flatten93_m_fu_3376_p2 = ((bound3_reg_6362 == 66'd0) ? 1'b1 : 1'b0);

assign exitcond_flatten_fu_3450_p2 = ((ap_phi_mux_indvar_flatten7_phi_fu_2710_p4 == bound4_cast_reg_6952) ? 1'b1 : 1'b0);

assign exitcond_flatten_mid_5_fu_3520_p3 = ((exitcond_flatten_fu_3450_p2[0:0] === 1'b1) ? exitcond_flatten_mid_reg_6369 : exitcond_flatten2_fu_3515_p2);

assign exitcond_flatten_mid_6_fu_3611_p3 = ((exitcond_flatten93_m_1_fu_3532_p3[0:0] === 1'b1) ? exitcond_flatten_mid_reg_6369 : exitcond_flatten_mid_5_fu_3520_p3);

assign exitcond_flatten_mid_fu_2851_p2 = ((TC == 32'd0) ? 1'b1 : 1'b0);

assign exitcond_fu_3503_p2 = ((ap_phi_mux_tm0_phi_fu_2777_p4 == 3'd4) ? 1'b1 : 1'b0);

assign grp_copy_local_beta_fu_2784_ap_start = grp_copy_local_beta_fu_2784_ap_start_reg;

assign grp_fu_2860_p0 = 69'd5;

assign grp_fu_2860_p1 = grp_fu_2860_p10;

assign grp_fu_2860_p10 = bound3_reg_6362;

assign grp_fu_3029_p0 = 71'd5;

assign grp_fu_3029_p1 = grp_fu_3029_p10;

assign grp_fu_3029_p10 = bound4_reg_6380;

assign grp_fu_6186_p0 = lhs_V_1_fu_5078_p1;

assign grp_fu_6195_p0 = lhs_V_3_fu_5087_p1;

assign grp_fu_6204_p1 = lhs_V_1_fu_5078_p1;

assign grp_fu_6213_p0 = lhs_V_3_fu_5087_p1;

assign grp_fu_6222_p1 = lhs_V_1_fu_5078_p1;

assign grp_fu_6231_p0 = lhs_V_3_fu_5087_p1;

assign grp_fu_6240_p1 = lhs_V_1_fu_5078_p1;

assign grp_fu_6249_p0 = lhs_V_3_fu_5087_p1;

assign grp_fu_6258_p1 = lhs_V_1_fu_5078_p1;

assign grp_fu_6267_p0 = lhs_V_3_fu_5087_p1;

assign grp_fu_6276_p1 = lhs_V_1_fu_5078_p1;

assign grp_fu_6285_p0 = lhs_V_3_fu_5087_p1;

assign grp_fu_6294_p1 = lhs_V_1_fu_5078_p1;

assign grp_fu_6303_p0 = lhs_V_3_fu_5087_p1;

assign grp_fu_6312_p1 = lhs_V_1_fu_5078_p1;

assign grp_fu_6321_p0 = lhs_V_3_fu_5087_p1;

assign i_3_fu_3444_p2 = (3'd1 + ap_phi_mux_i_phi_fu_2699_p4);

assign i_cast_fu_3381_p1 = ap_phi_mux_i_phi_fu_2699_p4;

assign i_cast_mid2_cast_fu_3802_p1 = i_cast_mid2_reg_6998;

assign i_cast_mid2_fu_3463_p3 = ((exitcond_flatten_fu_3450_p2[0:0] === 1'b1) ? i_3_fu_3444_p2 : ap_phi_mux_i_phi_fu_2699_p4);

assign indvar_flatten258_op_fu_3788_p2 = (ap_phi_mux_indvar_flatten7_phi_fu_2710_p4 + 70'd1);

assign indvar_flatten91_op_fu_3774_p2 = (ap_phi_mux_indvar_flatten8_phi_fu_2732_p4 + 67'd1);

assign indvar_flatten_next6_fu_3780_p3 = ((tmp_123_fu_3545_p2[0:0] === 1'b1) ? 67'd1 : indvar_flatten91_op_fu_3774_p2);

assign indvar_flatten_next7_fu_3794_p3 = ((exitcond_flatten_fu_3450_p2[0:0] === 1'b1) ? 70'd1 : indvar_flatten258_op_fu_3788_p2);

assign indvar_flatten_next8_fu_3438_p2 = (71'd1 + ap_phi_mux_indvar_flatten6_phi_fu_2688_p4);

assign indvar_flatten_next_fu_3766_p3 = ((tmp_207_fu_3630_p2[0:0] === 1'b1) ? 35'd1 : indvar_flatten_op_fu_3760_p2);

assign indvar_flatten_op_fu_3760_p2 = (ap_phi_mux_indvar_flatten_phi_fu_2755_p4 + 35'd1);

assign input_buffer_V_0_address0 = tmp_154_cast_fu_4082_p1;

assign input_buffer_V_1_address0 = tmp_154_cast_fu_4082_p1;

assign input_buffer_V_2_address0 = tmp_154_cast_fu_4082_p1;

assign input_buffer_V_3_address0 = tmp_154_cast_fu_4082_p1;

assign j_2_fu_3539_p2 = (3'd1 + j_mid_fu_3455_p3);

assign j_cast_fu_3385_p1 = ap_phi_mux_j_phi_fu_2721_p4;

assign j_cast_mid2_cast_fu_3834_p1 = j_cast_mid2_reg_7021;

assign j_cast_mid2_fu_3559_p3 = ((exitcond_flatten93_m_1_fu_3532_p3[0:0] === 1'b1) ? j_2_fu_3539_p2 : j_mid_fu_3455_p3);

assign j_mid_fu_3455_p3 = ((exitcond_flatten_fu_3450_p2[0:0] === 1'b1) ? 3'd0 : ap_phi_mux_j_phi_fu_2721_p4);

assign lhs_V_1_fu_5078_p1 = $signed(input_buffer_V_1_loa_reg_7813);

assign lhs_V_2_fu_4188_p1 = $signed(input_buffer_V_2_q0);

assign lhs_V_3_fu_5087_p1 = $signed(input_buffer_V_3_loa_reg_7836);

assign lhs_V_fu_4120_p1 = $signed(input_buffer_V_0_q0);

assign local_beta_buffer_V_33_fu_5445_p33 = (tmp_136_t_reg_7772 | 5'd1);

assign local_beta_buffer_V_34_fu_5579_p33 = (tmp_136_t_reg_7772 | 5'd2);

assign local_beta_buffer_V_35_fu_5681_p33 = (tmp_136_t_reg_7772 | 5'd3);

assign local_beta_buffer_V_36_fu_5783_p33 = (tmp_136_t_reg_7772 | 5'd4);

assign local_beta_buffer_V_37_fu_5885_p33 = (tmp_136_t_reg_7772 | 5'd5);

assign local_beta_buffer_V_38_fu_5987_p33 = (tmp_136_t_reg_7772 | 5'd6);

assign local_beta_buffer_V_39_fu_6089_p33 = (tmp_136_t_reg_7772 | 5'd7);

assign newSel100_fu_4811_p3 = ((sel_tmp26_fu_4260_p2[0:0] === 1'b1) ? weight_buffer_V_0_22_q0 : weight_buffer_V_0_14_q0);

assign newSel101_fu_4819_p3 = ((sel_tmp22_fu_4250_p2[0:0] === 1'b1) ? weight_buffer_V_0_6_q0 : weight_buffer_V_0_30_q0);

assign newSel102_fu_4827_p3 = ((or_cond4_fu_4273_p2[0:0] === 1'b1) ? newSel100_fu_4811_p3 : newSel101_fu_4819_p3);

assign newSel103_fu_4835_p3 = ((sel_tmp26_fu_4260_p2[0:0] === 1'b1) ? weight_buffer_V_1_22_q0 : weight_buffer_V_1_14_q0);

assign newSel104_fu_4843_p3 = ((sel_tmp22_fu_4250_p2[0:0] === 1'b1) ? weight_buffer_V_1_6_q0 : weight_buffer_V_1_30_q0);

assign newSel105_fu_4851_p3 = ((or_cond4_fu_4273_p2[0:0] === 1'b1) ? newSel103_fu_4835_p3 : newSel104_fu_4843_p3);

assign newSel106_fu_4859_p3 = ((sel_tmp26_fu_4260_p2[0:0] === 1'b1) ? weight_buffer_V_2_22_q0 : weight_buffer_V_2_14_q0);

assign newSel107_fu_4867_p3 = ((sel_tmp22_fu_4250_p2[0:0] === 1'b1) ? weight_buffer_V_2_6_q0 : weight_buffer_V_2_30_q0);

assign newSel108_fu_4875_p3 = ((or_cond4_fu_4273_p2[0:0] === 1'b1) ? newSel106_fu_4859_p3 : newSel107_fu_4867_p3);

assign newSel109_fu_4883_p3 = ((sel_tmp26_fu_4260_p2[0:0] === 1'b1) ? weight_buffer_V_3_22_q0 : weight_buffer_V_3_14_q0);

assign newSel10_fu_4192_p3 = ((sel_tmp20_fu_4114_p2[0:0] === 1'b1) ? weight_buffer_V_2_16_q0 : weight_buffer_V_2_8_q0);

assign newSel110_fu_4891_p3 = ((sel_tmp22_fu_4250_p2[0:0] === 1'b1) ? weight_buffer_V_3_6_q0 : weight_buffer_V_3_30_q0);

assign newSel111_fu_4899_p3 = ((or_cond4_fu_4273_p2[0:0] === 1'b1) ? newSel109_fu_4883_p3 : newSel110_fu_4891_p3);

assign newSel112_fu_6131_p3 = ((sel_tmp27_fu_5497_p2[0:0] === 1'b1) ? output_buffer_23_q0 : output_buffer_15_q0);

assign newSel113_fu_6139_p3 = ((sel_tmp23_fu_5487_p2[0:0] === 1'b1) ? output_buffer_7_q0 : tmp_add_result_7_fu_6127_p1);

assign newSel114_fu_6147_p3 = ((or_cond7_fu_5510_p2[0:0] === 1'b1) ? newSel112_fu_6131_p3 : newSel113_fu_6139_p3);

assign newSel115_fu_6155_p3 = ((or_cond9_fu_5537_p2[0:0] === 1'b1) ? newSel114_fu_6147_p3 : output_buffer_31_q0);

assign newSel116_fu_4907_p3 = ((sel_tmp26_fu_4260_p2[0:0] === 1'b1) ? weight_buffer_V_0_23_q0 : weight_buffer_V_0_15_q0);

assign newSel117_fu_4915_p3 = ((sel_tmp22_fu_4250_p2[0:0] === 1'b1) ? weight_buffer_V_0_7_q0 : weight_buffer_V_0_31_q0);

assign newSel118_fu_4923_p3 = ((or_cond4_fu_4273_p2[0:0] === 1'b1) ? newSel116_fu_4907_p3 : newSel117_fu_4915_p3);

assign newSel119_fu_4931_p3 = ((sel_tmp26_fu_4260_p2[0:0] === 1'b1) ? weight_buffer_V_1_23_q0 : weight_buffer_V_1_15_q0);

assign newSel11_fu_4200_p3 = ((sel_tmp_fu_4102_p2[0:0] === 1'b1) ? weight_buffer_V_2_0_q0 : weight_buffer_V_2_24_q0);

assign newSel120_fu_4939_p3 = ((sel_tmp22_fu_4250_p2[0:0] === 1'b1) ? weight_buffer_V_1_7_q0 : weight_buffer_V_1_31_q0);

assign newSel121_fu_4947_p3 = ((or_cond4_fu_4273_p2[0:0] === 1'b1) ? newSel119_fu_4931_p3 : newSel120_fu_4939_p3);

assign newSel122_fu_4955_p3 = ((sel_tmp26_fu_4260_p2[0:0] === 1'b1) ? weight_buffer_V_2_23_q0 : weight_buffer_V_2_15_q0);

assign newSel123_fu_4963_p3 = ((sel_tmp22_fu_4250_p2[0:0] === 1'b1) ? weight_buffer_V_2_7_q0 : weight_buffer_V_2_31_q0);

assign newSel124_fu_4971_p3 = ((or_cond4_fu_4273_p2[0:0] === 1'b1) ? newSel122_fu_4955_p3 : newSel123_fu_4963_p3);

assign newSel125_fu_4979_p3 = ((sel_tmp26_fu_4260_p2[0:0] === 1'b1) ? weight_buffer_V_3_23_q0 : weight_buffer_V_3_15_q0);

assign newSel126_fu_4987_p3 = ((sel_tmp22_fu_4250_p2[0:0] === 1'b1) ? weight_buffer_V_3_7_q0 : weight_buffer_V_3_31_q0);

assign newSel127_fu_4995_p3 = ((or_cond4_fu_4273_p2[0:0] === 1'b1) ? newSel125_fu_4979_p3 : newSel126_fu_4987_p3);

assign newSel12_fu_4208_p3 = ((or_cond3_fu_4132_p2[0:0] === 1'b1) ? newSel10_fu_4192_p3 : newSel11_fu_4200_p3);

assign newSel13_fu_4226_p3 = ((sel_tmp20_fu_4114_p2[0:0] === 1'b1) ? weight_buffer_V_3_16_q0 : weight_buffer_V_3_8_q0);

assign newSel14_fu_4234_p3 = ((sel_tmp_fu_4102_p2[0:0] === 1'b1) ? weight_buffer_V_3_0_q0 : weight_buffer_V_3_24_q0);

assign newSel15_fu_4242_p3 = ((or_cond3_fu_4132_p2[0:0] === 1'b1) ? newSel13_fu_4226_p3 : newSel14_fu_4234_p3);

assign newSel16_fu_5502_p3 = ((sel_tmp27_fu_5497_p2[0:0] === 1'b1) ? output_buffer_17_q0 : output_buffer_9_q0);

assign newSel17_fu_5516_p3 = ((sel_tmp23_fu_5487_p2[0:0] === 1'b1) ? output_buffer_1_q0 : tmp_add_result_1_fu_5483_p1);

assign newSel18_fu_5529_p3 = ((or_cond7_fu_5510_p2[0:0] === 1'b1) ? newSel16_fu_5502_p3 : newSel17_fu_5516_p3);

assign newSel19_fu_5543_p3 = ((or_cond9_fu_5537_p2[0:0] === 1'b1) ? newSel18_fu_5529_p3 : output_buffer_25_q0);

assign newSel1_fu_5382_p3 = ((sel_tmp17_fu_5353_p2[0:0] === 1'b1) ? output_buffer_0_q0 : tmp_add_result_fu_5350_p1);

assign newSel20_fu_4265_p3 = ((sel_tmp26_fu_4260_p2[0:0] === 1'b1) ? weight_buffer_V_0_17_q0 : weight_buffer_V_0_9_q0);

assign newSel21_fu_4279_p3 = ((sel_tmp22_fu_4250_p2[0:0] === 1'b1) ? weight_buffer_V_0_1_q0 : weight_buffer_V_0_25_q0);

assign newSel22_fu_4287_p3 = ((or_cond4_fu_4273_p2[0:0] === 1'b1) ? newSel20_fu_4265_p3 : newSel21_fu_4279_p3);

assign newSel23_fu_4305_p3 = ((sel_tmp26_fu_4260_p2[0:0] === 1'b1) ? weight_buffer_V_1_17_q0 : weight_buffer_V_1_9_q0);

assign newSel24_fu_4313_p3 = ((sel_tmp22_fu_4250_p2[0:0] === 1'b1) ? weight_buffer_V_1_1_q0 : weight_buffer_V_1_25_q0);

assign newSel25_fu_4321_p3 = ((or_cond4_fu_4273_p2[0:0] === 1'b1) ? newSel23_fu_4305_p3 : newSel24_fu_4313_p3);

assign newSel26_fu_4329_p3 = ((sel_tmp26_fu_4260_p2[0:0] === 1'b1) ? weight_buffer_V_2_17_q0 : weight_buffer_V_2_9_q0);

assign newSel27_fu_4337_p3 = ((sel_tmp22_fu_4250_p2[0:0] === 1'b1) ? weight_buffer_V_2_1_q0 : weight_buffer_V_2_25_q0);

assign newSel28_fu_4345_p3 = ((or_cond4_fu_4273_p2[0:0] === 1'b1) ? newSel26_fu_4329_p3 : newSel27_fu_4337_p3);

assign newSel29_fu_4363_p3 = ((sel_tmp26_fu_4260_p2[0:0] === 1'b1) ? weight_buffer_V_3_17_q0 : weight_buffer_V_3_9_q0);

assign newSel2_fu_5395_p3 = ((or_cond_fu_5376_p2[0:0] === 1'b1) ? newSel_fu_5368_p3 : newSel1_fu_5382_p3);

assign newSel30_fu_4371_p3 = ((sel_tmp22_fu_4250_p2[0:0] === 1'b1) ? weight_buffer_V_3_1_q0 : weight_buffer_V_3_25_q0);

assign newSel31_fu_4379_p3 = ((or_cond4_fu_4273_p2[0:0] === 1'b1) ? newSel29_fu_4363_p3 : newSel30_fu_4371_p3);

assign newSel32_fu_5621_p3 = ((sel_tmp27_fu_5497_p2[0:0] === 1'b1) ? output_buffer_18_q0 : output_buffer_10_q0);

assign newSel33_fu_5629_p3 = ((sel_tmp23_fu_5487_p2[0:0] === 1'b1) ? output_buffer_2_q0 : tmp_add_result_s_fu_5617_p1);

assign newSel34_fu_5637_p3 = ((or_cond7_fu_5510_p2[0:0] === 1'b1) ? newSel32_fu_5621_p3 : newSel33_fu_5629_p3);

assign newSel35_fu_5645_p3 = ((or_cond9_fu_5537_p2[0:0] === 1'b1) ? newSel34_fu_5637_p3 : output_buffer_26_q0);

assign newSel36_fu_4387_p3 = ((sel_tmp26_fu_4260_p2[0:0] === 1'b1) ? weight_buffer_V_0_18_q0 : weight_buffer_V_0_10_q0);

assign newSel37_fu_4395_p3 = ((sel_tmp22_fu_4250_p2[0:0] === 1'b1) ? weight_buffer_V_0_2_q0 : weight_buffer_V_0_26_q0);

assign newSel38_fu_4403_p3 = ((or_cond4_fu_4273_p2[0:0] === 1'b1) ? newSel36_fu_4387_p3 : newSel37_fu_4395_p3);

assign newSel39_fu_4421_p3 = ((sel_tmp26_fu_4260_p2[0:0] === 1'b1) ? weight_buffer_V_1_18_q0 : weight_buffer_V_1_10_q0);

assign newSel3_fu_5409_p3 = ((or_cond2_fu_5403_p2[0:0] === 1'b1) ? newSel2_fu_5395_p3 : output_buffer_24_q0);

assign newSel40_fu_4429_p3 = ((sel_tmp22_fu_4250_p2[0:0] === 1'b1) ? weight_buffer_V_1_2_q0 : weight_buffer_V_1_26_q0);

assign newSel41_fu_4437_p3 = ((or_cond4_fu_4273_p2[0:0] === 1'b1) ? newSel39_fu_4421_p3 : newSel40_fu_4429_p3);

assign newSel42_fu_4445_p3 = ((sel_tmp26_fu_4260_p2[0:0] === 1'b1) ? weight_buffer_V_2_18_q0 : weight_buffer_V_2_10_q0);

assign newSel43_fu_4453_p3 = ((sel_tmp22_fu_4250_p2[0:0] === 1'b1) ? weight_buffer_V_2_2_q0 : weight_buffer_V_2_26_q0);

assign newSel44_fu_4461_p3 = ((or_cond4_fu_4273_p2[0:0] === 1'b1) ? newSel42_fu_4445_p3 : newSel43_fu_4453_p3);

assign newSel45_fu_4479_p3 = ((sel_tmp26_fu_4260_p2[0:0] === 1'b1) ? weight_buffer_V_3_18_q0 : weight_buffer_V_3_10_q0);

assign newSel46_fu_4487_p3 = ((sel_tmp22_fu_4250_p2[0:0] === 1'b1) ? weight_buffer_V_3_2_q0 : weight_buffer_V_3_26_q0);

assign newSel47_fu_4495_p3 = ((or_cond4_fu_4273_p2[0:0] === 1'b1) ? newSel45_fu_4479_p3 : newSel46_fu_4487_p3);

assign newSel48_fu_5723_p3 = ((sel_tmp27_fu_5497_p2[0:0] === 1'b1) ? output_buffer_19_q0 : output_buffer_11_q0);

assign newSel49_fu_5731_p3 = ((sel_tmp23_fu_5487_p2[0:0] === 1'b1) ? output_buffer_3_q0 : tmp_add_result_3_fu_5719_p1);

assign newSel4_fu_4124_p3 = ((sel_tmp20_fu_4114_p2[0:0] === 1'b1) ? weight_buffer_V_0_16_q0 : weight_buffer_V_0_8_q0);

assign newSel50_fu_5739_p3 = ((or_cond7_fu_5510_p2[0:0] === 1'b1) ? newSel48_fu_5723_p3 : newSel49_fu_5731_p3);

assign newSel51_fu_5747_p3 = ((or_cond9_fu_5537_p2[0:0] === 1'b1) ? newSel50_fu_5739_p3 : output_buffer_27_q0);

assign newSel52_fu_4503_p3 = ((sel_tmp26_fu_4260_p2[0:0] === 1'b1) ? weight_buffer_V_0_19_q0 : weight_buffer_V_0_11_q0);

assign newSel53_fu_4511_p3 = ((sel_tmp22_fu_4250_p2[0:0] === 1'b1) ? weight_buffer_V_0_3_q0 : weight_buffer_V_0_27_q0);

assign newSel54_fu_4519_p3 = ((or_cond4_fu_4273_p2[0:0] === 1'b1) ? newSel52_fu_4503_p3 : newSel53_fu_4511_p3);

assign newSel55_fu_4537_p3 = ((sel_tmp26_fu_4260_p2[0:0] === 1'b1) ? weight_buffer_V_1_19_q0 : weight_buffer_V_1_11_q0);

assign newSel56_fu_4545_p3 = ((sel_tmp22_fu_4250_p2[0:0] === 1'b1) ? weight_buffer_V_1_3_q0 : weight_buffer_V_1_27_q0);

assign newSel57_fu_4553_p3 = ((or_cond4_fu_4273_p2[0:0] === 1'b1) ? newSel55_fu_4537_p3 : newSel56_fu_4545_p3);

assign newSel58_fu_4561_p3 = ((sel_tmp26_fu_4260_p2[0:0] === 1'b1) ? weight_buffer_V_2_19_q0 : weight_buffer_V_2_11_q0);

assign newSel59_fu_4569_p3 = ((sel_tmp22_fu_4250_p2[0:0] === 1'b1) ? weight_buffer_V_2_3_q0 : weight_buffer_V_2_27_q0);

assign newSel5_fu_4138_p3 = ((sel_tmp_fu_4102_p2[0:0] === 1'b1) ? weight_buffer_V_0_0_q0 : weight_buffer_V_0_24_q0);

assign newSel60_fu_4577_p3 = ((or_cond4_fu_4273_p2[0:0] === 1'b1) ? newSel58_fu_4561_p3 : newSel59_fu_4569_p3);

assign newSel61_fu_4595_p3 = ((sel_tmp26_fu_4260_p2[0:0] === 1'b1) ? weight_buffer_V_3_19_q0 : weight_buffer_V_3_11_q0);

assign newSel62_fu_4603_p3 = ((sel_tmp22_fu_4250_p2[0:0] === 1'b1) ? weight_buffer_V_3_3_q0 : weight_buffer_V_3_27_q0);

assign newSel63_fu_4611_p3 = ((or_cond4_fu_4273_p2[0:0] === 1'b1) ? newSel61_fu_4595_p3 : newSel62_fu_4603_p3);

assign newSel64_fu_5825_p3 = ((sel_tmp27_fu_5497_p2[0:0] === 1'b1) ? output_buffer_20_q0 : output_buffer_12_q0);

assign newSel65_fu_5833_p3 = ((sel_tmp23_fu_5487_p2[0:0] === 1'b1) ? output_buffer_4_q0 : tmp_add_result_4_fu_5821_p1);

assign newSel66_fu_5841_p3 = ((or_cond7_fu_5510_p2[0:0] === 1'b1) ? newSel64_fu_5825_p3 : newSel65_fu_5833_p3);

assign newSel67_fu_5849_p3 = ((or_cond9_fu_5537_p2[0:0] === 1'b1) ? newSel66_fu_5841_p3 : output_buffer_28_q0);

assign newSel68_fu_4619_p3 = ((sel_tmp26_fu_4260_p2[0:0] === 1'b1) ? weight_buffer_V_0_20_q0 : weight_buffer_V_0_12_q0);

assign newSel69_fu_4627_p3 = ((sel_tmp22_fu_4250_p2[0:0] === 1'b1) ? weight_buffer_V_0_4_q0 : weight_buffer_V_0_28_q0);

assign newSel6_fu_4146_p3 = ((or_cond3_fu_4132_p2[0:0] === 1'b1) ? newSel4_fu_4124_p3 : newSel5_fu_4138_p3);

assign newSel70_fu_4635_p3 = ((or_cond4_fu_4273_p2[0:0] === 1'b1) ? newSel68_fu_4619_p3 : newSel69_fu_4627_p3);

assign newSel71_fu_4643_p3 = ((sel_tmp26_fu_4260_p2[0:0] === 1'b1) ? weight_buffer_V_1_20_q0 : weight_buffer_V_1_12_q0);

assign newSel72_fu_4651_p3 = ((sel_tmp22_fu_4250_p2[0:0] === 1'b1) ? weight_buffer_V_1_4_q0 : weight_buffer_V_1_28_q0);

assign newSel73_fu_4659_p3 = ((or_cond4_fu_4273_p2[0:0] === 1'b1) ? newSel71_fu_4643_p3 : newSel72_fu_4651_p3);

assign newSel74_fu_4667_p3 = ((sel_tmp26_fu_4260_p2[0:0] === 1'b1) ? weight_buffer_V_2_20_q0 : weight_buffer_V_2_12_q0);

assign newSel75_fu_4675_p3 = ((sel_tmp22_fu_4250_p2[0:0] === 1'b1) ? weight_buffer_V_2_4_q0 : weight_buffer_V_2_28_q0);

assign newSel76_fu_4683_p3 = ((or_cond4_fu_4273_p2[0:0] === 1'b1) ? newSel74_fu_4667_p3 : newSel75_fu_4675_p3);

assign newSel77_fu_4691_p3 = ((sel_tmp26_fu_4260_p2[0:0] === 1'b1) ? weight_buffer_V_3_20_q0 : weight_buffer_V_3_12_q0);

assign newSel78_fu_4699_p3 = ((sel_tmp22_fu_4250_p2[0:0] === 1'b1) ? weight_buffer_V_3_4_q0 : weight_buffer_V_3_28_q0);

assign newSel79_fu_4707_p3 = ((or_cond4_fu_4273_p2[0:0] === 1'b1) ? newSel77_fu_4691_p3 : newSel78_fu_4699_p3);

assign newSel7_fu_4164_p3 = ((sel_tmp20_fu_4114_p2[0:0] === 1'b1) ? weight_buffer_V_1_16_q0 : weight_buffer_V_1_8_q0);

assign newSel80_fu_5927_p3 = ((sel_tmp27_fu_5497_p2[0:0] === 1'b1) ? output_buffer_21_q0 : output_buffer_13_q0);

assign newSel81_fu_5935_p3 = ((sel_tmp23_fu_5487_p2[0:0] === 1'b1) ? output_buffer_5_q0 : tmp_add_result_5_fu_5923_p1);

assign newSel82_fu_5943_p3 = ((or_cond7_fu_5510_p2[0:0] === 1'b1) ? newSel80_fu_5927_p3 : newSel81_fu_5935_p3);

assign newSel83_fu_5951_p3 = ((or_cond9_fu_5537_p2[0:0] === 1'b1) ? newSel82_fu_5943_p3 : output_buffer_29_q0);

assign newSel84_fu_4715_p3 = ((sel_tmp26_fu_4260_p2[0:0] === 1'b1) ? weight_buffer_V_0_21_q0 : weight_buffer_V_0_13_q0);

assign newSel85_fu_4723_p3 = ((sel_tmp22_fu_4250_p2[0:0] === 1'b1) ? weight_buffer_V_0_5_q0 : weight_buffer_V_0_29_q0);

assign newSel86_fu_4731_p3 = ((or_cond4_fu_4273_p2[0:0] === 1'b1) ? newSel84_fu_4715_p3 : newSel85_fu_4723_p3);

assign newSel87_fu_4739_p3 = ((sel_tmp26_fu_4260_p2[0:0] === 1'b1) ? weight_buffer_V_1_21_q0 : weight_buffer_V_1_13_q0);

assign newSel88_fu_4747_p3 = ((sel_tmp22_fu_4250_p2[0:0] === 1'b1) ? weight_buffer_V_1_5_q0 : weight_buffer_V_1_29_q0);

assign newSel89_fu_4755_p3 = ((or_cond4_fu_4273_p2[0:0] === 1'b1) ? newSel87_fu_4739_p3 : newSel88_fu_4747_p3);

assign newSel8_fu_4172_p3 = ((sel_tmp_fu_4102_p2[0:0] === 1'b1) ? weight_buffer_V_1_0_q0 : weight_buffer_V_1_24_q0);

assign newSel90_fu_4763_p3 = ((sel_tmp26_fu_4260_p2[0:0] === 1'b1) ? weight_buffer_V_2_21_q0 : weight_buffer_V_2_13_q0);

assign newSel91_fu_4771_p3 = ((sel_tmp22_fu_4250_p2[0:0] === 1'b1) ? weight_buffer_V_2_5_q0 : weight_buffer_V_2_29_q0);

assign newSel92_fu_4779_p3 = ((or_cond4_fu_4273_p2[0:0] === 1'b1) ? newSel90_fu_4763_p3 : newSel91_fu_4771_p3);

assign newSel93_fu_4787_p3 = ((sel_tmp26_fu_4260_p2[0:0] === 1'b1) ? weight_buffer_V_3_21_q0 : weight_buffer_V_3_13_q0);

assign newSel94_fu_4795_p3 = ((sel_tmp22_fu_4250_p2[0:0] === 1'b1) ? weight_buffer_V_3_5_q0 : weight_buffer_V_3_29_q0);

assign newSel95_fu_4803_p3 = ((or_cond4_fu_4273_p2[0:0] === 1'b1) ? newSel93_fu_4787_p3 : newSel94_fu_4795_p3);

assign newSel96_fu_6029_p3 = ((sel_tmp27_fu_5497_p2[0:0] === 1'b1) ? output_buffer_22_q0 : output_buffer_14_q0);

assign newSel97_fu_6037_p3 = ((sel_tmp23_fu_5487_p2[0:0] === 1'b1) ? output_buffer_6_q0 : tmp_add_result_6_fu_6025_p1);

assign newSel98_fu_6045_p3 = ((or_cond7_fu_5510_p2[0:0] === 1'b1) ? newSel96_fu_6029_p3 : newSel97_fu_6037_p3);

assign newSel99_fu_6053_p3 = ((or_cond9_fu_5537_p2[0:0] === 1'b1) ? newSel98_fu_6045_p3 : output_buffer_30_q0);

assign newSel9_fu_4180_p3 = ((or_cond3_fu_4132_p2[0:0] === 1'b1) ? newSel7_fu_4164_p3 : newSel8_fu_4172_p3);

assign newSel_fu_5368_p3 = ((sel_tmp21_fu_5363_p2[0:0] === 1'b1) ? output_buffer_16_q0 : output_buffer_8_q0);

assign not_exitcond_flatten_1_fu_3599_p2 = (exitcond_flatten93_m_1_fu_3532_p3 ^ 1'd1);

assign not_exitcond_flatten_2_fu_3644_p2 = (exitcond_flatten_mid_6_fu_3611_p3 ^ 1'd1);

assign not_exitcond_flatten_fu_3497_p2 = (exitcond_flatten_fu_3450_p2 ^ 1'd1);

assign or_cond1_fu_5390_p2 = (tmp_89_mid2_reg_7028_pp0_iter1_reg | sel_tmp17_fu_5353_p2);

assign or_cond2_fu_5403_p2 = (or_cond_fu_5376_p2 | or_cond1_fu_5390_p2);

assign or_cond3_fu_4132_p2 = (sel_tmp20_fu_4114_p2 | sel_tmp18_fu_4108_p2);

assign or_cond4_fu_4273_p2 = (sel_tmp26_fu_4260_p2 | sel_tmp24_fu_4255_p2);

assign or_cond7_fu_5510_p2 = (sel_tmp27_fu_5497_p2 | sel_tmp25_fu_5492_p2);

assign or_cond8_fu_5524_p2 = (tmp_89_mid2_reg_7028_pp0_iter1_reg | sel_tmp23_fu_5487_p2);

assign or_cond9_fu_5537_p2 = (or_cond8_fu_5524_p2 | or_cond7_fu_5510_p2);

assign or_cond_fu_5376_p2 = (sel_tmp21_fu_5363_p2 | sel_tmp19_fu_5358_p2);

assign output_buffer_0_d0 = tmp_94_fu_5430_p2;

assign output_buffer_10_d0 = tmp_145_2_fu_5666_p2;

assign output_buffer_11_d0 = tmp_145_3_fu_5768_p2;

assign output_buffer_12_d0 = tmp_145_4_fu_5870_p2;

assign output_buffer_13_d0 = tmp_145_5_fu_5972_p2;

assign output_buffer_14_d0 = tmp_145_6_fu_6074_p2;

assign output_buffer_15_d0 = tmp_145_7_fu_6176_p2;

assign output_buffer_16_d0 = tmp_94_fu_5430_p2;

assign output_buffer_17_d0 = tmp_145_1_fu_5564_p2;

assign output_buffer_18_d0 = tmp_145_2_fu_5666_p2;

assign output_buffer_19_d0 = tmp_145_3_fu_5768_p2;

assign output_buffer_1_d0 = tmp_145_1_fu_5564_p2;

assign output_buffer_20_d0 = tmp_145_4_fu_5870_p2;

assign output_buffer_21_d0 = tmp_145_5_fu_5972_p2;

assign output_buffer_22_d0 = tmp_145_6_fu_6074_p2;

assign output_buffer_23_d0 = tmp_145_7_fu_6176_p2;

assign output_buffer_24_d0 = tmp_94_fu_5430_p2;

assign output_buffer_25_d0 = tmp_145_1_fu_5564_p2;

assign output_buffer_26_d0 = tmp_145_2_fu_5666_p2;

assign output_buffer_27_d0 = tmp_145_3_fu_5768_p2;

assign output_buffer_28_d0 = tmp_145_4_fu_5870_p2;

assign output_buffer_29_d0 = tmp_145_5_fu_5972_p2;

assign output_buffer_2_d0 = tmp_145_2_fu_5666_p2;

assign output_buffer_30_d0 = tmp_145_6_fu_6074_p2;

assign output_buffer_31_d0 = tmp_145_7_fu_6176_p2;

assign output_buffer_3_d0 = tmp_145_3_fu_5768_p2;

assign output_buffer_4_d0 = tmp_145_4_fu_5870_p2;

assign output_buffer_5_d0 = tmp_145_5_fu_5972_p2;

assign output_buffer_6_d0 = tmp_145_6_fu_6074_p2;

assign output_buffer_7_d0 = tmp_145_7_fu_6176_p2;

assign output_buffer_8_d0 = tmp_94_fu_5430_p2;

assign output_buffer_9_d0 = tmp_145_1_fu_5564_p2;

assign p_mid_fu_3985_p1 = tr_5_reg_7042;

assign p_shl3_cast_fu_4017_p3 = {{tmp_209_fu_4013_p1}, {2'd0}};

assign p_shl4_cast_fu_3815_p1 = tmp_121_fu_3808_p3;

assign p_shl_cast_fu_4005_p3 = {{tmp_208_fu_4001_p1}, {5'd0}};

assign ret_V_2_1_fu_4357_p0 = newSel28_fu_4345_p3;

assign ret_V_2_1_fu_4357_p1 = lhs_V_2_fu_4188_p1;

assign ret_V_2_1_fu_4357_p2 = ($signed(ret_V_2_1_fu_4357_p0) * $signed(ret_V_2_1_fu_4357_p1));

assign ret_V_2_2_fu_4473_p0 = newSel44_fu_4461_p3;

assign ret_V_2_2_fu_4473_p1 = lhs_V_2_fu_4188_p1;

assign ret_V_2_2_fu_4473_p2 = ($signed(ret_V_2_2_fu_4473_p0) * $signed(ret_V_2_2_fu_4473_p1));

assign ret_V_2_3_fu_4589_p0 = newSel60_fu_4577_p3;

assign ret_V_2_3_fu_4589_p1 = lhs_V_2_fu_4188_p1;

assign ret_V_2_3_fu_4589_p2 = ($signed(ret_V_2_3_fu_4589_p0) * $signed(ret_V_2_3_fu_4589_p1));

assign ret_V_2_4_fu_5195_p0 = newSel76_reg_7934;

assign ret_V_2_4_fu_5195_p1 = lhs_V_2_reg_7823;

assign ret_V_2_4_fu_5195_p2 = ($signed(ret_V_2_4_fu_5195_p0) * $signed(ret_V_2_4_fu_5195_p1));

assign ret_V_2_5_fu_5237_p0 = newSel92_reg_7954;

assign ret_V_2_5_fu_5237_p1 = lhs_V_2_reg_7823;

assign ret_V_2_5_fu_5237_p2 = ($signed(ret_V_2_5_fu_5237_p0) * $signed(ret_V_2_5_fu_5237_p1));

assign ret_V_2_6_fu_5279_p0 = newSel108_reg_7974;

assign ret_V_2_6_fu_5279_p1 = lhs_V_2_reg_7823;

assign ret_V_2_6_fu_5279_p2 = ($signed(ret_V_2_6_fu_5279_p0) * $signed(ret_V_2_6_fu_5279_p1));

assign ret_V_2_7_fu_5321_p0 = newSel124_reg_7994;

assign ret_V_2_7_fu_5321_p1 = lhs_V_2_reg_7823;

assign ret_V_2_7_fu_5321_p2 = ($signed(ret_V_2_7_fu_5321_p0) * $signed(ret_V_2_7_fu_5321_p1));

assign ret_V_2_fu_4220_p0 = lhs_V_2_fu_4188_p1;

assign ret_V_2_fu_4220_p1 = newSel12_fu_4208_p3;

assign ret_V_2_fu_4220_p2 = ($signed(ret_V_2_fu_4220_p0) * $signed(ret_V_2_fu_4220_p1));

assign ret_V_4_fu_5180_p0 = newSel70_reg_7924;

assign ret_V_4_fu_5180_p1 = lhs_V_reg_7799;

assign ret_V_4_fu_5180_p2 = ($signed(ret_V_4_fu_5180_p0) * $signed(ret_V_4_fu_5180_p1));

assign ret_V_5_fu_5222_p0 = newSel86_reg_7944;

assign ret_V_5_fu_5222_p1 = lhs_V_reg_7799;

assign ret_V_5_fu_5222_p2 = ($signed(ret_V_5_fu_5222_p0) * $signed(ret_V_5_fu_5222_p1));

assign ret_V_6_fu_5264_p0 = newSel102_reg_7964;

assign ret_V_6_fu_5264_p1 = lhs_V_reg_7799;

assign ret_V_6_fu_5264_p2 = ($signed(ret_V_6_fu_5264_p0) * $signed(ret_V_6_fu_5264_p1));

assign ret_V_7_fu_5306_p0 = newSel118_reg_7984;

assign ret_V_7_fu_5306_p1 = lhs_V_reg_7799;

assign ret_V_7_fu_5306_p2 = ($signed(ret_V_7_fu_5306_p0) * $signed(ret_V_7_fu_5306_p1));

assign ret_V_8_fu_4415_p0 = newSel38_fu_4403_p3;

assign ret_V_8_fu_4415_p1 = lhs_V_fu_4120_p1;

assign ret_V_8_fu_4415_p2 = ($signed(ret_V_8_fu_4415_p0) * $signed(ret_V_8_fu_4415_p1));

assign ret_V_9_fu_4531_p0 = newSel54_fu_4519_p3;

assign ret_V_9_fu_4531_p1 = lhs_V_fu_4120_p1;

assign ret_V_9_fu_4531_p2 = ($signed(ret_V_9_fu_4531_p0) * $signed(ret_V_9_fu_4531_p1));

assign ret_V_fu_4158_p0 = lhs_V_fu_4120_p1;

assign ret_V_fu_4158_p1 = newSel6_fu_4146_p3;

assign ret_V_fu_4158_p2 = ($signed(ret_V_fu_4158_p0) * $signed(ret_V_fu_4158_p1));

assign ret_V_s_fu_4299_p0 = newSel22_fu_4287_p3;

assign ret_V_s_fu_4299_p1 = lhs_V_fu_4120_p1;

assign ret_V_s_fu_4299_p2 = ($signed(ret_V_s_fu_4299_p0) * $signed(ret_V_s_fu_4299_p1));

assign sel_tmp17_fu_5353_p2 = (sel_tmp_reg_7784 & sel_tmp17_mid2_fu_5345_p2);

assign sel_tmp17_mid2_fu_5345_p2 = (tmp_89_mid2_reg_7028_pp0_iter1_reg ^ 1'd1);

assign sel_tmp18_fu_4108_p2 = ((tmp_136_t_fu_4095_p3 == 5'd8) ? 1'b1 : 1'b0);

assign sel_tmp19_fu_5358_p2 = (sel_tmp18_reg_7789 & sel_tmp17_mid2_fu_5345_p2);

assign sel_tmp20_fu_4114_p2 = ((tmp_136_t_fu_4095_p3 == 5'd16) ? 1'b1 : 1'b0);

assign sel_tmp21_fu_5363_p2 = (sel_tmp20_reg_7794 & sel_tmp17_mid2_fu_5345_p2);

assign sel_tmp22_fu_4250_p2 = ((tmp_226_reg_7074 == 2'd0) ? 1'b1 : 1'b0);

assign sel_tmp23_fu_5487_p2 = (sel_tmp22_reg_7846 & sel_tmp17_mid2_fu_5345_p2);

assign sel_tmp24_fu_4255_p2 = ((tmp_226_reg_7074 == 2'd1) ? 1'b1 : 1'b0);

assign sel_tmp25_fu_5492_p2 = (sel_tmp24_reg_7851 & sel_tmp17_mid2_fu_5345_p2);

assign sel_tmp26_fu_4260_p2 = ((tmp_226_reg_7074 == 2'd2) ? 1'b1 : 1'b0);

assign sel_tmp27_fu_5497_p2 = (sel_tmp26_reg_7856 & sel_tmp17_mid2_fu_5345_p2);

assign sel_tmp_fu_4102_p2 = ((tmp_136_t_fu_4095_p3 == 5'd0) ? 1'b1 : 1'b0);

assign tc_5_fu_3656_p2 = (31'd1 + tc_mid1_fu_3636_p3);

assign tc_mid1_fu_3636_p3 = ((tmp_207_fu_3630_p2[0:0] === 1'b1) ? 31'd0 : ap_phi_mux_tc_phi_fu_2766_p4);

assign tc_mid2_fu_3742_p3 = ((exitcond4_mid2_fu_3650_p2[0:0] === 1'b1) ? tc_5_fu_3656_p2 : tc_mid1_fu_3636_p3);

assign tm0_2_fu_3754_p2 = (tm0_mid2_fu_3674_p3 + 3'd1);

assign tm0_mid2_fu_3674_p3 = ((tmp_214_fu_3668_p2[0:0] === 1'b1) ? 3'd0 : ap_phi_mux_tm0_phi_fu_2777_p4);

assign tmp478_cast_fu_5093_p1 = grp_fu_6186_p3;

assign tmp479_cast_fu_5096_p1 = grp_fu_6195_p3;

assign tmp480_cast_fu_5117_p1 = grp_fu_6204_p3;

assign tmp481_cast_fu_5120_p1 = grp_fu_6213_p3;

assign tmp482_cast_fu_5141_p1 = grp_fu_6222_p3;

assign tmp483_cast_fu_5144_p1 = grp_fu_6231_p3;

assign tmp484_cast_fu_5165_p1 = grp_fu_6240_p3;

assign tmp485_cast_fu_5168_p1 = grp_fu_6249_p3;

assign tmp486_cast_fu_5207_p1 = grp_fu_6258_p3;

assign tmp487_cast_fu_5210_p1 = grp_fu_6267_p3;

assign tmp488_cast_fu_5249_p1 = grp_fu_6276_p3;

assign tmp489_cast_fu_5252_p1 = grp_fu_6285_p3;

assign tmp490_cast_fu_5291_p1 = grp_fu_6294_p3;

assign tmp491_cast_fu_5294_p1 = grp_fu_6303_p3;

assign tmp492_cast_fu_5333_p1 = grp_fu_6312_p3;

assign tmp493_cast_fu_5336_p1 = grp_fu_6321_p3;

assign tmp_106_cast_fu_5417_p1 = ret_V_reg_7807;

assign tmp_10_1_cast_fu_5560_p1 = $signed(tmp_10_1_fu_5554_p3);

assign tmp_10_1_fu_5554_p3 = ((tmp_s_reg_6345[0:0] === 1'b1) ? tmp_140_1_cast_fu_5551_p1 : tmp_144_1_reg_8174);

assign tmp_10_2_cast_fu_5662_p1 = $signed(tmp_10_2_fu_5656_p3);

assign tmp_10_2_fu_5656_p3 = ((tmp_s_reg_6345[0:0] === 1'b1) ? tmp_140_2_cast_fu_5653_p1 : tmp_144_2_reg_8179);

assign tmp_10_3_cast_fu_5764_p1 = $signed(tmp_10_3_fu_5758_p3);

assign tmp_10_3_fu_5758_p3 = ((tmp_s_reg_6345[0:0] === 1'b1) ? tmp_140_3_cast_fu_5755_p1 : tmp_144_3_reg_8184);

assign tmp_10_4_cast_fu_5866_p1 = $signed(tmp_10_4_fu_5860_p3);

assign tmp_10_4_fu_5860_p3 = ((tmp_s_reg_6345[0:0] === 1'b1) ? tmp_140_4_cast_fu_5857_p1 : tmp_144_4_reg_8194);

assign tmp_10_5_cast_fu_5968_p1 = $signed(tmp_10_5_fu_5962_p3);

assign tmp_10_5_fu_5962_p3 = ((tmp_s_reg_6345[0:0] === 1'b1) ? tmp_140_5_cast_fu_5959_p1 : tmp_144_5_reg_8204);

assign tmp_10_6_cast_fu_6070_p1 = $signed(tmp_10_6_fu_6064_p3);

assign tmp_10_6_fu_6064_p3 = ((tmp_s_reg_6345[0:0] === 1'b1) ? tmp_140_6_cast_fu_6061_p1 : tmp_144_6_reg_8214);

assign tmp_10_7_cast_fu_6172_p1 = $signed(tmp_10_7_fu_6166_p3);

assign tmp_10_7_fu_6166_p3 = ((tmp_s_reg_6345[0:0] === 1'b1) ? tmp_140_7_cast_fu_6163_p1 : tmp_144_7_reg_8224);

assign tmp_10_cast_fu_5426_p1 = $signed(tmp_10_fu_5420_p3);

assign tmp_10_fu_5420_p3 = ((tmp_s_reg_6345[0:0] === 1'b1) ? tmp_106_cast_fu_5417_p1 : tmp_93_reg_8169);

assign tmp_119_fu_2829_p3 = {{TC}, {2'd0}};

assign tmp_120_fu_3413_p1 = ap_phi_mux_tr_phi_fu_2743_p4;

assign tmp_121_fu_3808_p3 = {{i_cast_mid2_reg_6998}, {2'd0}};

assign tmp_122_fu_3819_p2 = (tmp_87_mid2_cast_fu_3805_p1 + p_shl4_cast_fu_3815_p1);

assign tmp_123_fu_3545_p2 = (exitcond_flatten_fu_3450_p2 | exitcond_flatten93_m_1_fu_3532_p3);

assign tmp_124_fu_3840_p2 = (tmp_122_fu_3819_p2 + tmp_90_mid2_cast_fu_3837_p1);

assign tmp_125_fu_3624_p2 = (exitcond_flatten_mid_6_fu_3611_p3 | exitcond_flatten93_m_1_fu_3532_p3);

assign tmp_126_fu_4025_p2 = (p_shl3_cast_fu_4017_p3 + p_shl_cast_fu_4005_p3);

assign tmp_127_fu_3662_p2 = (exitcond_flatten_mid_6_fu_3611_p3 | exitcond4_mid2_fu_3650_p2);

assign tmp_128_fu_4076_p2 = (tmp_126_fu_4025_p2 + tmp_221_fu_4070_p3);

assign tmp_129_fu_4090_p2 = (tmp_151_cast_fu_4052_p3 + tmp_225_reg_7064);

assign tmp_136_t_fu_4095_p3 = {{tmp_226_reg_7074}, {3'd0}};

assign tmp_140_1_cast_fu_5551_p1 = ret_V_s_reg_7861;

assign tmp_140_2_cast_fu_5653_p1 = ret_V_8_reg_7882;

assign tmp_140_3_cast_fu_5755_p1 = ret_V_9_reg_7903;

assign tmp_140_4_cast_fu_5857_p1 = ret_V_4_reg_8189;

assign tmp_140_5_cast_fu_5959_p1 = ret_V_5_reg_8199;

assign tmp_140_6_cast_fu_6061_p1 = ret_V_6_reg_8209;

assign tmp_140_7_cast_fu_6163_p1 = ret_V_7_reg_8219;

assign tmp_141_cast_fu_3846_p1 = tmp_124_fu_3840_p2;

assign tmp_144_1_fu_5123_p2 = ($signed(tmp481_cast_fu_5120_p1) + $signed(tmp480_cast_fu_5117_p1));

assign tmp_144_2_fu_5147_p2 = ($signed(tmp483_cast_fu_5144_p1) + $signed(tmp482_cast_fu_5141_p1));

assign tmp_144_3_fu_5171_p2 = ($signed(tmp485_cast_fu_5168_p1) + $signed(tmp484_cast_fu_5165_p1));

assign tmp_144_4_fu_5213_p2 = ($signed(tmp487_cast_fu_5210_p1) + $signed(tmp486_cast_fu_5207_p1));

assign tmp_144_5_fu_5255_p2 = ($signed(tmp489_cast_fu_5252_p1) + $signed(tmp488_cast_fu_5249_p1));

assign tmp_144_6_fu_5297_p2 = ($signed(tmp491_cast_fu_5294_p1) + $signed(tmp490_cast_fu_5291_p1));

assign tmp_144_7_fu_5339_p2 = ($signed(tmp493_cast_fu_5336_p1) + $signed(tmp492_cast_fu_5333_p1));

assign tmp_145_1_fu_5564_p2 = ($signed(newSel19_fu_5543_p3) + $signed(tmp_10_1_cast_fu_5560_p1));

assign tmp_145_2_fu_5666_p2 = ($signed(newSel35_fu_5645_p3) + $signed(tmp_10_2_cast_fu_5662_p1));

assign tmp_145_3_fu_5768_p2 = ($signed(newSel51_fu_5747_p3) + $signed(tmp_10_3_cast_fu_5764_p1));

assign tmp_145_4_fu_5870_p2 = ($signed(newSel67_fu_5849_p3) + $signed(tmp_10_4_cast_fu_5866_p1));

assign tmp_145_5_fu_5972_p2 = ($signed(newSel83_fu_5951_p3) + $signed(tmp_10_5_cast_fu_5968_p1));

assign tmp_145_6_fu_6074_p2 = ($signed(newSel99_fu_6053_p3) + $signed(tmp_10_6_cast_fu_6070_p1));

assign tmp_145_7_fu_6176_p2 = ($signed(newSel115_fu_6155_p3) + $signed(tmp_10_7_cast_fu_6172_p1));

assign tmp_14_fu_3389_p2 = (tmp_205_reg_6935 | ap_phi_mux_j_phi_fu_2721_p4);

assign tmp_14_mid1_fu_3567_p2 = (tmp_205_reg_6935 | j_2_fu_3539_p2);

assign tmp_151_cast_fu_4052_p3 = {{tmp_213_fu_4045_p3}, {5'd0}};

assign tmp_154_cast_fu_4082_p1 = tmp_128_fu_4076_p2;

assign tmp_155_cast_fu_5003_p1 = tmp_129_reg_7767;

assign tmp_16_fu_3394_p2 = (tmp_14_fu_3389_p2 | ap_phi_mux_i_phi_fu_2699_p4);

assign tmp_16_mid1_fu_3572_p2 = (tmp_14_mid1_fu_3567_p2 | i_cast_mid2_fu_3463_p3);

assign tmp_16_mid_fu_3471_p2 = (tmp_205_reg_6935 | i_3_fu_3444_p2);

assign tmp_205_fu_3355_p1 = n[2:0];

assign tmp_206_fu_3423_p1 = ap_phi_mux_tc_phi_fu_2766_p4[11:0];

assign tmp_207_fu_3630_p2 = (tmp_125_fu_3624_p2 | exitcond_flatten_fu_3450_p2);

assign tmp_208_fu_4001_p1 = tmp_93_mid2_fu_3994_p3[6:0];

assign tmp_209_fu_4013_p1 = tmp_93_mid2_fu_3994_p3[9:0];

assign tmp_210_fu_4031_p1 = tr_5_reg_7042[6:0];

assign tmp_211_fu_4034_p1 = tr_reg_2739[6:0];

assign tmp_212_fu_4038_p3 = ((tmp_123_reg_7011[0:0] === 1'b1) ? 7'd0 : tmp_211_fu_4034_p1);

assign tmp_213_fu_4045_p3 = ((exitcond_flatten_mid_6_reg_7035[0:0] === 1'b1) ? tmp_210_fu_4031_p1 : tmp_212_fu_4038_p3);

assign tmp_214_fu_3668_p2 = (tmp_127_fu_3662_p2 | tmp_123_fu_3545_p2);

assign tmp_215_fu_3682_p1 = tc_5_fu_3656_p2[11:0];

assign tmp_216_fu_3686_p1 = j_cast_mid2_fu_3559_p3;

assign tmp_217_fu_3690_p1 = j_2_fu_3539_p2;

assign tmp_218_fu_3694_p3 = ((exitcond_flatten_fu_3450_p2[0:0] === 1'b1) ? 12'd0 : tmp_90_fu_3427_p2);

assign tmp_219_fu_3702_p3 = ((exitcond_flatten93_m_1_fu_3532_p3[0:0] === 1'b1) ? tmp_217_fu_3690_p1 : tmp_218_fu_3694_p3);

assign tmp_220_fu_3710_p3 = ((exitcond_flatten_mid_6_fu_3611_p3[0:0] === 1'b1) ? tmp_216_fu_3686_p1 : tmp_219_fu_3702_p3);

assign tmp_221_fu_4070_p3 = ((exitcond4_mid2_reg_7049[0:0] === 1'b1) ? tmp_96_mid1_fu_4065_p2 : tmp_220_reg_7059);

assign tmp_222_fu_3718_p1 = tc_5_fu_3656_p2[11:0];

assign tmp_223_fu_3722_p1 = ap_phi_mux_tc_phi_fu_2766_p4[11:0];

assign tmp_224_fu_3726_p3 = ((tmp_207_fu_3630_p2[0:0] === 1'b1) ? 12'd0 : tmp_223_fu_3722_p1);

assign tmp_225_fu_3734_p3 = ((exitcond4_mid2_fu_3650_p2[0:0] === 1'b1) ? tmp_222_fu_3718_p1 : tmp_224_fu_3726_p3);

assign tmp_226_fu_3750_p1 = tm0_mid2_fu_3674_p3[1:0];

assign tmp_85_fu_3400_p3 = {{tmp_15_reg_6962}, {tmp_16_fu_3394_p2}};

assign tmp_86_fu_3407_p2 = ((tmp_85_fu_3400_p3 == 31'd0) ? 1'b1 : 1'b0);

assign tmp_87_mid2_cast_fu_3805_p1 = i_cast_mid2_reg_6998;

assign tmp_88_fu_3417_p2 = (i_cast_fu_3381_p1 + tmp_120_fu_3413_p1);

assign tmp_88_mid1_fu_3578_p3 = {{tmp_15_reg_6962}, {tmp_16_mid1_fu_3572_p2}};

assign tmp_88_mid_fu_3476_p3 = {{tmp_15_reg_6962}, {tmp_16_mid_fu_3471_p2}};

assign tmp_89_mid1_fu_3585_p2 = ((tmp_88_mid1_fu_3578_p3 == 31'd0) ? 1'b1 : 1'b0);

assign tmp_89_mid2_fu_3591_p3 = ((exitcond_flatten93_m_1_fu_3532_p3[0:0] === 1'b1) ? tmp_89_mid1_fu_3585_p2 : tmp_89_mid3_fu_3489_p3);

assign tmp_89_mid3_fu_3489_p3 = ((exitcond_flatten_fu_3450_p2[0:0] === 1'b1) ? tmp_89_mid_fu_3483_p2 : tmp_86_fu_3407_p2);

assign tmp_89_mid_fu_3483_p2 = ((tmp_88_mid_fu_3476_p3 == 31'd0) ? 1'b1 : 1'b0);

assign tmp_90_fu_3427_p2 = (j_cast_fu_3385_p1 + tmp_206_fu_3423_p1);

assign tmp_90_mid2_cast_fu_3837_p1 = j_cast_mid2_reg_7021;

assign tmp_92_mid1_fu_3988_p2 = (p_mid_fu_3985_p1 + i_cast_mid2_cast_fu_3802_p1);

assign tmp_93_fu_5099_p2 = ($signed(tmp479_cast_fu_5096_p1) + $signed(tmp478_cast_fu_5093_p1));

assign tmp_93_mid2_fu_3994_p3 = ((exitcond_flatten_mid_6_reg_7035[0:0] === 1'b1) ? tmp_92_mid1_fu_3988_p2 : tmp_93_mid5_fu_3978_p3);

assign tmp_93_mid3_fu_3828_p3 = ((exitcond_flatten_reg_6993[0:0] === 1'b1) ? tmp_93_mid_cast_fu_3825_p1 : tmp_88_reg_6974);

assign tmp_93_mid5_fu_3978_p3 = ((exitcond_flatten93_m_1_reg_7006[0:0] === 1'b1) ? i_cast_mid2_cast_fu_3802_p1 : tmp_93_mid3_fu_3828_p3);

assign tmp_93_mid_cast_fu_3825_p1 = i_3_reg_6988;

assign tmp_94_fu_5430_p2 = ($signed(tmp_10_cast_fu_5426_p1) + $signed(newSel3_fu_5409_p3));

assign tmp_96_mid1_fu_4065_p2 = (tmp_215_reg_7054 + j_cast_mid2_cast_fu_3834_p1);

assign tmp_add_result_1_fu_5483_p1 = $signed(local_beta_buffer_V_33_fu_5445_p34);

assign tmp_add_result_3_fu_5719_p1 = $signed(local_beta_buffer_V_35_fu_5681_p34);

assign tmp_add_result_4_fu_5821_p1 = $signed(local_beta_buffer_V_36_fu_5783_p34);

assign tmp_add_result_5_fu_5923_p1 = $signed(local_beta_buffer_V_37_fu_5885_p34);

assign tmp_add_result_6_fu_6025_p1 = $signed(local_beta_buffer_V_38_fu_5987_p34);

assign tmp_add_result_7_fu_6127_p1 = $signed(local_beta_buffer_V_39_fu_6089_p34);

assign tmp_add_result_fu_5350_p1 = $signed(local_beta_buffer_V_32_reg_8164);

assign tmp_add_result_s_fu_5617_p1 = $signed(local_beta_buffer_V_34_fu_5579_p34);

assign tmp_s_fu_2823_p2 = ((TN == 32'd1) ? 1'b1 : 1'b0);

assign tr_5_fu_3618_p2 = (31'd1 + tr_mid_fu_3551_p3);

assign tr_mid2_fu_4060_p3 = ((exitcond_flatten_mid_6_reg_7035[0:0] === 1'b1) ? tr_5_reg_7042 : tr_mid_reg_7016);

assign tr_mid_fu_3551_p3 = ((tmp_123_fu_3545_p2[0:0] === 1'b1) ? 31'd0 : ap_phi_mux_tr_phi_fu_2743_p4);

assign weight_buffer_V_0_0_address0 = tmp_141_cast_fu_3846_p1;

assign weight_buffer_V_0_10_address0 = tmp_141_cast_fu_3846_p1;

assign weight_buffer_V_0_11_address0 = tmp_141_cast_fu_3846_p1;

assign weight_buffer_V_0_12_address0 = tmp_141_cast_fu_3846_p1;

assign weight_buffer_V_0_13_address0 = tmp_141_cast_fu_3846_p1;

assign weight_buffer_V_0_14_address0 = tmp_141_cast_fu_3846_p1;

assign weight_buffer_V_0_15_address0 = tmp_141_cast_fu_3846_p1;

assign weight_buffer_V_0_16_address0 = tmp_141_cast_fu_3846_p1;

assign weight_buffer_V_0_17_address0 = tmp_141_cast_fu_3846_p1;

assign weight_buffer_V_0_18_address0 = tmp_141_cast_fu_3846_p1;

assign weight_buffer_V_0_19_address0 = tmp_141_cast_fu_3846_p1;

assign weight_buffer_V_0_1_address0 = tmp_141_cast_fu_3846_p1;

assign weight_buffer_V_0_20_address0 = tmp_141_cast_fu_3846_p1;

assign weight_buffer_V_0_21_address0 = tmp_141_cast_fu_3846_p1;

assign weight_buffer_V_0_22_address0 = tmp_141_cast_fu_3846_p1;

assign weight_buffer_V_0_23_address0 = tmp_141_cast_fu_3846_p1;

assign weight_buffer_V_0_24_address0 = tmp_141_cast_fu_3846_p1;

assign weight_buffer_V_0_25_address0 = tmp_141_cast_fu_3846_p1;

assign weight_buffer_V_0_26_address0 = tmp_141_cast_fu_3846_p1;

assign weight_buffer_V_0_27_address0 = tmp_141_cast_fu_3846_p1;

assign weight_buffer_V_0_28_address0 = tmp_141_cast_fu_3846_p1;

assign weight_buffer_V_0_29_address0 = tmp_141_cast_fu_3846_p1;

assign weight_buffer_V_0_2_address0 = tmp_141_cast_fu_3846_p1;

assign weight_buffer_V_0_30_address0 = tmp_141_cast_fu_3846_p1;

assign weight_buffer_V_0_31_address0 = tmp_141_cast_fu_3846_p1;

assign weight_buffer_V_0_3_address0 = tmp_141_cast_fu_3846_p1;

assign weight_buffer_V_0_4_address0 = tmp_141_cast_fu_3846_p1;

assign weight_buffer_V_0_5_address0 = tmp_141_cast_fu_3846_p1;

assign weight_buffer_V_0_6_address0 = tmp_141_cast_fu_3846_p1;

assign weight_buffer_V_0_7_address0 = tmp_141_cast_fu_3846_p1;

assign weight_buffer_V_0_8_address0 = tmp_141_cast_fu_3846_p1;

assign weight_buffer_V_0_9_address0 = tmp_141_cast_fu_3846_p1;

assign weight_buffer_V_1_0_address0 = tmp_141_cast_fu_3846_p1;

assign weight_buffer_V_1_10_address0 = tmp_141_cast_fu_3846_p1;

assign weight_buffer_V_1_11_address0 = tmp_141_cast_fu_3846_p1;

assign weight_buffer_V_1_12_address0 = tmp_141_cast_fu_3846_p1;

assign weight_buffer_V_1_13_address0 = tmp_141_cast_fu_3846_p1;

assign weight_buffer_V_1_14_address0 = tmp_141_cast_fu_3846_p1;

assign weight_buffer_V_1_15_address0 = tmp_141_cast_fu_3846_p1;

assign weight_buffer_V_1_16_address0 = tmp_141_cast_fu_3846_p1;

assign weight_buffer_V_1_17_address0 = tmp_141_cast_fu_3846_p1;

assign weight_buffer_V_1_18_address0 = tmp_141_cast_fu_3846_p1;

assign weight_buffer_V_1_19_address0 = tmp_141_cast_fu_3846_p1;

assign weight_buffer_V_1_1_address0 = tmp_141_cast_fu_3846_p1;

assign weight_buffer_V_1_20_address0 = tmp_141_cast_fu_3846_p1;

assign weight_buffer_V_1_21_address0 = tmp_141_cast_fu_3846_p1;

assign weight_buffer_V_1_22_address0 = tmp_141_cast_fu_3846_p1;

assign weight_buffer_V_1_23_address0 = tmp_141_cast_fu_3846_p1;

assign weight_buffer_V_1_24_address0 = tmp_141_cast_fu_3846_p1;

assign weight_buffer_V_1_25_address0 = tmp_141_cast_fu_3846_p1;

assign weight_buffer_V_1_26_address0 = tmp_141_cast_fu_3846_p1;

assign weight_buffer_V_1_27_address0 = tmp_141_cast_fu_3846_p1;

assign weight_buffer_V_1_28_address0 = tmp_141_cast_fu_3846_p1;

assign weight_buffer_V_1_29_address0 = tmp_141_cast_fu_3846_p1;

assign weight_buffer_V_1_2_address0 = tmp_141_cast_fu_3846_p1;

assign weight_buffer_V_1_30_address0 = tmp_141_cast_fu_3846_p1;

assign weight_buffer_V_1_31_address0 = tmp_141_cast_fu_3846_p1;

assign weight_buffer_V_1_3_address0 = tmp_141_cast_fu_3846_p1;

assign weight_buffer_V_1_4_address0 = tmp_141_cast_fu_3846_p1;

assign weight_buffer_V_1_5_address0 = tmp_141_cast_fu_3846_p1;

assign weight_buffer_V_1_6_address0 = tmp_141_cast_fu_3846_p1;

assign weight_buffer_V_1_7_address0 = tmp_141_cast_fu_3846_p1;

assign weight_buffer_V_1_8_address0 = tmp_141_cast_fu_3846_p1;

assign weight_buffer_V_1_9_address0 = tmp_141_cast_fu_3846_p1;

assign weight_buffer_V_2_0_address0 = tmp_141_cast_fu_3846_p1;

assign weight_buffer_V_2_10_address0 = tmp_141_cast_fu_3846_p1;

assign weight_buffer_V_2_11_address0 = tmp_141_cast_fu_3846_p1;

assign weight_buffer_V_2_12_address0 = tmp_141_cast_fu_3846_p1;

assign weight_buffer_V_2_13_address0 = tmp_141_cast_fu_3846_p1;

assign weight_buffer_V_2_14_address0 = tmp_141_cast_fu_3846_p1;

assign weight_buffer_V_2_15_address0 = tmp_141_cast_fu_3846_p1;

assign weight_buffer_V_2_16_address0 = tmp_141_cast_fu_3846_p1;

assign weight_buffer_V_2_17_address0 = tmp_141_cast_fu_3846_p1;

assign weight_buffer_V_2_18_address0 = tmp_141_cast_fu_3846_p1;

assign weight_buffer_V_2_19_address0 = tmp_141_cast_fu_3846_p1;

assign weight_buffer_V_2_1_address0 = tmp_141_cast_fu_3846_p1;

assign weight_buffer_V_2_20_address0 = tmp_141_cast_fu_3846_p1;

assign weight_buffer_V_2_21_address0 = tmp_141_cast_fu_3846_p1;

assign weight_buffer_V_2_22_address0 = tmp_141_cast_fu_3846_p1;

assign weight_buffer_V_2_23_address0 = tmp_141_cast_fu_3846_p1;

assign weight_buffer_V_2_24_address0 = tmp_141_cast_fu_3846_p1;

assign weight_buffer_V_2_25_address0 = tmp_141_cast_fu_3846_p1;

assign weight_buffer_V_2_26_address0 = tmp_141_cast_fu_3846_p1;

assign weight_buffer_V_2_27_address0 = tmp_141_cast_fu_3846_p1;

assign weight_buffer_V_2_28_address0 = tmp_141_cast_fu_3846_p1;

assign weight_buffer_V_2_29_address0 = tmp_141_cast_fu_3846_p1;

assign weight_buffer_V_2_2_address0 = tmp_141_cast_fu_3846_p1;

assign weight_buffer_V_2_30_address0 = tmp_141_cast_fu_3846_p1;

assign weight_buffer_V_2_31_address0 = tmp_141_cast_fu_3846_p1;

assign weight_buffer_V_2_3_address0 = tmp_141_cast_fu_3846_p1;

assign weight_buffer_V_2_4_address0 = tmp_141_cast_fu_3846_p1;

assign weight_buffer_V_2_5_address0 = tmp_141_cast_fu_3846_p1;

assign weight_buffer_V_2_6_address0 = tmp_141_cast_fu_3846_p1;

assign weight_buffer_V_2_7_address0 = tmp_141_cast_fu_3846_p1;

assign weight_buffer_V_2_8_address0 = tmp_141_cast_fu_3846_p1;

assign weight_buffer_V_2_9_address0 = tmp_141_cast_fu_3846_p1;

assign weight_buffer_V_3_0_address0 = tmp_141_cast_fu_3846_p1;

assign weight_buffer_V_3_10_address0 = tmp_141_cast_fu_3846_p1;

assign weight_buffer_V_3_11_address0 = tmp_141_cast_fu_3846_p1;

assign weight_buffer_V_3_12_address0 = tmp_141_cast_fu_3846_p1;

assign weight_buffer_V_3_13_address0 = tmp_141_cast_fu_3846_p1;

assign weight_buffer_V_3_14_address0 = tmp_141_cast_fu_3846_p1;

assign weight_buffer_V_3_15_address0 = tmp_141_cast_fu_3846_p1;

assign weight_buffer_V_3_16_address0 = tmp_141_cast_fu_3846_p1;

assign weight_buffer_V_3_17_address0 = tmp_141_cast_fu_3846_p1;

assign weight_buffer_V_3_18_address0 = tmp_141_cast_fu_3846_p1;

assign weight_buffer_V_3_19_address0 = tmp_141_cast_fu_3846_p1;

assign weight_buffer_V_3_1_address0 = tmp_141_cast_fu_3846_p1;

assign weight_buffer_V_3_20_address0 = tmp_141_cast_fu_3846_p1;

assign weight_buffer_V_3_21_address0 = tmp_141_cast_fu_3846_p1;

assign weight_buffer_V_3_22_address0 = tmp_141_cast_fu_3846_p1;

assign weight_buffer_V_3_23_address0 = tmp_141_cast_fu_3846_p1;

assign weight_buffer_V_3_24_address0 = tmp_141_cast_fu_3846_p1;

assign weight_buffer_V_3_25_address0 = tmp_141_cast_fu_3846_p1;

assign weight_buffer_V_3_26_address0 = tmp_141_cast_fu_3846_p1;

assign weight_buffer_V_3_27_address0 = tmp_141_cast_fu_3846_p1;

assign weight_buffer_V_3_28_address0 = tmp_141_cast_fu_3846_p1;

assign weight_buffer_V_3_29_address0 = tmp_141_cast_fu_3846_p1;

assign weight_buffer_V_3_2_address0 = tmp_141_cast_fu_3846_p1;

assign weight_buffer_V_3_30_address0 = tmp_141_cast_fu_3846_p1;

assign weight_buffer_V_3_31_address0 = tmp_141_cast_fu_3846_p1;

assign weight_buffer_V_3_3_address0 = tmp_141_cast_fu_3846_p1;

assign weight_buffer_V_3_4_address0 = tmp_141_cast_fu_3846_p1;

assign weight_buffer_V_3_5_address0 = tmp_141_cast_fu_3846_p1;

assign weight_buffer_V_3_6_address0 = tmp_141_cast_fu_3846_p1;

assign weight_buffer_V_3_7_address0 = tmp_141_cast_fu_3846_p1;

assign weight_buffer_V_3_8_address0 = tmp_141_cast_fu_3846_p1;

assign weight_buffer_V_3_9_address0 = tmp_141_cast_fu_3846_p1;

always @ (posedge ap_clk) begin
    tmp_119_reg_6357[1:0] <= 2'b00;
    bound_reg_6942[1:0] <= 2'b00;
    bound_reg_6942[34] <= 1'b0;
    bound3_cast_reg_6947[66] <= 1'b0;
    bound4_cast_reg_6952[69] <= 1'b0;
    tmp_136_t_reg_7772[2:0] <= 3'b000;
end

endmodule //conv
