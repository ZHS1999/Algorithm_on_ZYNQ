// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="detection_acc,hls_ip_2018_3,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7z020clg400-2,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=9.648000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=128,HLS_SYN_DSP=130,HLS_SYN_FF=21922,HLS_SYN_LUT=27038,HLS_VERSION=2018_3}" *)

module detection_acc (
        ap_clk,
        ap_rst_n,
        m_axi_Input_r_AWVALID,
        m_axi_Input_r_AWREADY,
        m_axi_Input_r_AWADDR,
        m_axi_Input_r_AWID,
        m_axi_Input_r_AWLEN,
        m_axi_Input_r_AWSIZE,
        m_axi_Input_r_AWBURST,
        m_axi_Input_r_AWLOCK,
        m_axi_Input_r_AWCACHE,
        m_axi_Input_r_AWPROT,
        m_axi_Input_r_AWQOS,
        m_axi_Input_r_AWREGION,
        m_axi_Input_r_AWUSER,
        m_axi_Input_r_WVALID,
        m_axi_Input_r_WREADY,
        m_axi_Input_r_WDATA,
        m_axi_Input_r_WSTRB,
        m_axi_Input_r_WLAST,
        m_axi_Input_r_WID,
        m_axi_Input_r_WUSER,
        m_axi_Input_r_ARVALID,
        m_axi_Input_r_ARREADY,
        m_axi_Input_r_ARADDR,
        m_axi_Input_r_ARID,
        m_axi_Input_r_ARLEN,
        m_axi_Input_r_ARSIZE,
        m_axi_Input_r_ARBURST,
        m_axi_Input_r_ARLOCK,
        m_axi_Input_r_ARCACHE,
        m_axi_Input_r_ARPROT,
        m_axi_Input_r_ARQOS,
        m_axi_Input_r_ARREGION,
        m_axi_Input_r_ARUSER,
        m_axi_Input_r_RVALID,
        m_axi_Input_r_RREADY,
        m_axi_Input_r_RDATA,
        m_axi_Input_r_RLAST,
        m_axi_Input_r_RID,
        m_axi_Input_r_RUSER,
        m_axi_Input_r_RRESP,
        m_axi_Input_r_BVALID,
        m_axi_Input_r_BREADY,
        m_axi_Input_r_BRESP,
        m_axi_Input_r_BID,
        m_axi_Input_r_BUSER,
        m_axi_Output_r_AWVALID,
        m_axi_Output_r_AWREADY,
        m_axi_Output_r_AWADDR,
        m_axi_Output_r_AWID,
        m_axi_Output_r_AWLEN,
        m_axi_Output_r_AWSIZE,
        m_axi_Output_r_AWBURST,
        m_axi_Output_r_AWLOCK,
        m_axi_Output_r_AWCACHE,
        m_axi_Output_r_AWPROT,
        m_axi_Output_r_AWQOS,
        m_axi_Output_r_AWREGION,
        m_axi_Output_r_AWUSER,
        m_axi_Output_r_WVALID,
        m_axi_Output_r_WREADY,
        m_axi_Output_r_WDATA,
        m_axi_Output_r_WSTRB,
        m_axi_Output_r_WLAST,
        m_axi_Output_r_WID,
        m_axi_Output_r_WUSER,
        m_axi_Output_r_ARVALID,
        m_axi_Output_r_ARREADY,
        m_axi_Output_r_ARADDR,
        m_axi_Output_r_ARID,
        m_axi_Output_r_ARLEN,
        m_axi_Output_r_ARSIZE,
        m_axi_Output_r_ARBURST,
        m_axi_Output_r_ARLOCK,
        m_axi_Output_r_ARCACHE,
        m_axi_Output_r_ARPROT,
        m_axi_Output_r_ARQOS,
        m_axi_Output_r_ARREGION,
        m_axi_Output_r_ARUSER,
        m_axi_Output_r_RVALID,
        m_axi_Output_r_RREADY,
        m_axi_Output_r_RDATA,
        m_axi_Output_r_RLAST,
        m_axi_Output_r_RID,
        m_axi_Output_r_RUSER,
        m_axi_Output_r_RRESP,
        m_axi_Output_r_BVALID,
        m_axi_Output_r_BREADY,
        m_axi_Output_r_BRESP,
        m_axi_Output_r_BID,
        m_axi_Output_r_BUSER,
        m_axi_Weight_AWVALID,
        m_axi_Weight_AWREADY,
        m_axi_Weight_AWADDR,
        m_axi_Weight_AWID,
        m_axi_Weight_AWLEN,
        m_axi_Weight_AWSIZE,
        m_axi_Weight_AWBURST,
        m_axi_Weight_AWLOCK,
        m_axi_Weight_AWCACHE,
        m_axi_Weight_AWPROT,
        m_axi_Weight_AWQOS,
        m_axi_Weight_AWREGION,
        m_axi_Weight_AWUSER,
        m_axi_Weight_WVALID,
        m_axi_Weight_WREADY,
        m_axi_Weight_WDATA,
        m_axi_Weight_WSTRB,
        m_axi_Weight_WLAST,
        m_axi_Weight_WID,
        m_axi_Weight_WUSER,
        m_axi_Weight_ARVALID,
        m_axi_Weight_ARREADY,
        m_axi_Weight_ARADDR,
        m_axi_Weight_ARID,
        m_axi_Weight_ARLEN,
        m_axi_Weight_ARSIZE,
        m_axi_Weight_ARBURST,
        m_axi_Weight_ARLOCK,
        m_axi_Weight_ARCACHE,
        m_axi_Weight_ARPROT,
        m_axi_Weight_ARQOS,
        m_axi_Weight_ARREGION,
        m_axi_Weight_ARUSER,
        m_axi_Weight_RVALID,
        m_axi_Weight_RREADY,
        m_axi_Weight_RDATA,
        m_axi_Weight_RLAST,
        m_axi_Weight_RID,
        m_axi_Weight_RUSER,
        m_axi_Weight_RRESP,
        m_axi_Weight_BVALID,
        m_axi_Weight_BREADY,
        m_axi_Weight_BRESP,
        m_axi_Weight_BID,
        m_axi_Weight_BUSER,
        m_axi_Beta_AWVALID,
        m_axi_Beta_AWREADY,
        m_axi_Beta_AWADDR,
        m_axi_Beta_AWID,
        m_axi_Beta_AWLEN,
        m_axi_Beta_AWSIZE,
        m_axi_Beta_AWBURST,
        m_axi_Beta_AWLOCK,
        m_axi_Beta_AWCACHE,
        m_axi_Beta_AWPROT,
        m_axi_Beta_AWQOS,
        m_axi_Beta_AWREGION,
        m_axi_Beta_AWUSER,
        m_axi_Beta_WVALID,
        m_axi_Beta_WREADY,
        m_axi_Beta_WDATA,
        m_axi_Beta_WSTRB,
        m_axi_Beta_WLAST,
        m_axi_Beta_WID,
        m_axi_Beta_WUSER,
        m_axi_Beta_ARVALID,
        m_axi_Beta_ARREADY,
        m_axi_Beta_ARADDR,
        m_axi_Beta_ARID,
        m_axi_Beta_ARLEN,
        m_axi_Beta_ARSIZE,
        m_axi_Beta_ARBURST,
        m_axi_Beta_ARLOCK,
        m_axi_Beta_ARCACHE,
        m_axi_Beta_ARPROT,
        m_axi_Beta_ARQOS,
        m_axi_Beta_ARREGION,
        m_axi_Beta_ARUSER,
        m_axi_Beta_RVALID,
        m_axi_Beta_RREADY,
        m_axi_Beta_RDATA,
        m_axi_Beta_RLAST,
        m_axi_Beta_RID,
        m_axi_Beta_RUSER,
        m_axi_Beta_RRESP,
        m_axi_Beta_BVALID,
        m_axi_Beta_BREADY,
        m_axi_Beta_BRESP,
        m_axi_Beta_BID,
        m_axi_Beta_BUSER,
        s_axi_CRTL_BUS_AWVALID,
        s_axi_CRTL_BUS_AWREADY,
        s_axi_CRTL_BUS_AWADDR,
        s_axi_CRTL_BUS_WVALID,
        s_axi_CRTL_BUS_WREADY,
        s_axi_CRTL_BUS_WDATA,
        s_axi_CRTL_BUS_WSTRB,
        s_axi_CRTL_BUS_ARVALID,
        s_axi_CRTL_BUS_ARREADY,
        s_axi_CRTL_BUS_ARADDR,
        s_axi_CRTL_BUS_RVALID,
        s_axi_CRTL_BUS_RREADY,
        s_axi_CRTL_BUS_RDATA,
        s_axi_CRTL_BUS_RRESP,
        s_axi_CRTL_BUS_BVALID,
        s_axi_CRTL_BUS_BREADY,
        s_axi_CRTL_BUS_BRESP,
        interrupt
);

parameter    ap_ST_fsm_state1 = 37'd1;
parameter    ap_ST_fsm_state2 = 37'd2;
parameter    ap_ST_fsm_state3 = 37'd4;
parameter    ap_ST_fsm_state4 = 37'd8;
parameter    ap_ST_fsm_state5 = 37'd16;
parameter    ap_ST_fsm_state6 = 37'd32;
parameter    ap_ST_fsm_state7 = 37'd64;
parameter    ap_ST_fsm_state8 = 37'd128;
parameter    ap_ST_fsm_pp0_stage0 = 37'd256;
parameter    ap_ST_fsm_state12 = 37'd512;
parameter    ap_ST_fsm_state13 = 37'd1024;
parameter    ap_ST_fsm_state14 = 37'd2048;
parameter    ap_ST_fsm_state15 = 37'd4096;
parameter    ap_ST_fsm_state16 = 37'd8192;
parameter    ap_ST_fsm_state17 = 37'd16384;
parameter    ap_ST_fsm_state18 = 37'd32768;
parameter    ap_ST_fsm_pp1_stage0 = 37'd65536;
parameter    ap_ST_fsm_state22 = 37'd131072;
parameter    ap_ST_fsm_state23 = 37'd262144;
parameter    ap_ST_fsm_state24 = 37'd524288;
parameter    ap_ST_fsm_state25 = 37'd1048576;
parameter    ap_ST_fsm_state26 = 37'd2097152;
parameter    ap_ST_fsm_state27 = 37'd4194304;
parameter    ap_ST_fsm_state28 = 37'd8388608;
parameter    ap_ST_fsm_state29 = 37'd16777216;
parameter    ap_ST_fsm_state30 = 37'd33554432;
parameter    ap_ST_fsm_state31 = 37'd67108864;
parameter    ap_ST_fsm_state32 = 37'd134217728;
parameter    ap_ST_fsm_state33 = 37'd268435456;
parameter    ap_ST_fsm_state34 = 37'd536870912;
parameter    ap_ST_fsm_state35 = 37'd1073741824;
parameter    ap_ST_fsm_state36 = 37'd2147483648;
parameter    ap_ST_fsm_state37 = 37'd4294967296;
parameter    ap_ST_fsm_state38 = 37'd8589934592;
parameter    ap_ST_fsm_state39 = 37'd17179869184;
parameter    ap_ST_fsm_state40 = 37'd34359738368;
parameter    ap_ST_fsm_state41 = 37'd68719476736;
parameter    C_S_AXI_CRTL_BUS_DATA_WIDTH = 32;
parameter    C_S_AXI_CRTL_BUS_ADDR_WIDTH = 8;
parameter    C_S_AXI_DATA_WIDTH = 32;
parameter    C_M_AXI_INPUT_R_ID_WIDTH = 1;
parameter    C_M_AXI_INPUT_R_ADDR_WIDTH = 32;
parameter    C_M_AXI_INPUT_R_DATA_WIDTH = 32;
parameter    C_M_AXI_INPUT_R_AWUSER_WIDTH = 1;
parameter    C_M_AXI_INPUT_R_ARUSER_WIDTH = 1;
parameter    C_M_AXI_INPUT_R_WUSER_WIDTH = 1;
parameter    C_M_AXI_INPUT_R_RUSER_WIDTH = 1;
parameter    C_M_AXI_INPUT_R_BUSER_WIDTH = 1;
parameter    C_M_AXI_INPUT_R_USER_VALUE = 0;
parameter    C_M_AXI_INPUT_R_PROT_VALUE = 0;
parameter    C_M_AXI_INPUT_R_CACHE_VALUE = 3;
parameter    C_M_AXI_DATA_WIDTH = 32;
parameter    C_M_AXI_OUTPUT_R_ID_WIDTH = 1;
parameter    C_M_AXI_OUTPUT_R_ADDR_WIDTH = 32;
parameter    C_M_AXI_OUTPUT_R_DATA_WIDTH = 32;
parameter    C_M_AXI_OUTPUT_R_AWUSER_WIDTH = 1;
parameter    C_M_AXI_OUTPUT_R_ARUSER_WIDTH = 1;
parameter    C_M_AXI_OUTPUT_R_WUSER_WIDTH = 1;
parameter    C_M_AXI_OUTPUT_R_RUSER_WIDTH = 1;
parameter    C_M_AXI_OUTPUT_R_BUSER_WIDTH = 1;
parameter    C_M_AXI_OUTPUT_R_USER_VALUE = 0;
parameter    C_M_AXI_OUTPUT_R_PROT_VALUE = 0;
parameter    C_M_AXI_OUTPUT_R_CACHE_VALUE = 3;
parameter    C_M_AXI_WEIGHT_ID_WIDTH = 1;
parameter    C_M_AXI_WEIGHT_ADDR_WIDTH = 32;
parameter    C_M_AXI_WEIGHT_DATA_WIDTH = 32;
parameter    C_M_AXI_WEIGHT_AWUSER_WIDTH = 1;
parameter    C_M_AXI_WEIGHT_ARUSER_WIDTH = 1;
parameter    C_M_AXI_WEIGHT_WUSER_WIDTH = 1;
parameter    C_M_AXI_WEIGHT_RUSER_WIDTH = 1;
parameter    C_M_AXI_WEIGHT_BUSER_WIDTH = 1;
parameter    C_M_AXI_WEIGHT_USER_VALUE = 0;
parameter    C_M_AXI_WEIGHT_PROT_VALUE = 0;
parameter    C_M_AXI_WEIGHT_CACHE_VALUE = 3;
parameter    C_M_AXI_BETA_ID_WIDTH = 1;
parameter    C_M_AXI_BETA_ADDR_WIDTH = 32;
parameter    C_M_AXI_BETA_DATA_WIDTH = 32;
parameter    C_M_AXI_BETA_AWUSER_WIDTH = 1;
parameter    C_M_AXI_BETA_ARUSER_WIDTH = 1;
parameter    C_M_AXI_BETA_WUSER_WIDTH = 1;
parameter    C_M_AXI_BETA_RUSER_WIDTH = 1;
parameter    C_M_AXI_BETA_BUSER_WIDTH = 1;
parameter    C_M_AXI_BETA_USER_VALUE = 0;
parameter    C_M_AXI_BETA_PROT_VALUE = 0;
parameter    C_M_AXI_BETA_CACHE_VALUE = 3;

parameter C_S_AXI_CRTL_BUS_WSTRB_WIDTH = (32 / 8);
parameter C_S_AXI_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_INPUT_R_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_OUTPUT_R_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_WEIGHT_WSTRB_WIDTH = (32 / 8);
parameter C_M_AXI_BETA_WSTRB_WIDTH = (32 / 8);

input   ap_clk;
input   ap_rst_n;
output   m_axi_Input_r_AWVALID;
input   m_axi_Input_r_AWREADY;
output  [C_M_AXI_INPUT_R_ADDR_WIDTH - 1:0] m_axi_Input_r_AWADDR;
output  [C_M_AXI_INPUT_R_ID_WIDTH - 1:0] m_axi_Input_r_AWID;
output  [7:0] m_axi_Input_r_AWLEN;
output  [2:0] m_axi_Input_r_AWSIZE;
output  [1:0] m_axi_Input_r_AWBURST;
output  [1:0] m_axi_Input_r_AWLOCK;
output  [3:0] m_axi_Input_r_AWCACHE;
output  [2:0] m_axi_Input_r_AWPROT;
output  [3:0] m_axi_Input_r_AWQOS;
output  [3:0] m_axi_Input_r_AWREGION;
output  [C_M_AXI_INPUT_R_AWUSER_WIDTH - 1:0] m_axi_Input_r_AWUSER;
output   m_axi_Input_r_WVALID;
input   m_axi_Input_r_WREADY;
output  [C_M_AXI_INPUT_R_DATA_WIDTH - 1:0] m_axi_Input_r_WDATA;
output  [C_M_AXI_INPUT_R_WSTRB_WIDTH - 1:0] m_axi_Input_r_WSTRB;
output   m_axi_Input_r_WLAST;
output  [C_M_AXI_INPUT_R_ID_WIDTH - 1:0] m_axi_Input_r_WID;
output  [C_M_AXI_INPUT_R_WUSER_WIDTH - 1:0] m_axi_Input_r_WUSER;
output   m_axi_Input_r_ARVALID;
input   m_axi_Input_r_ARREADY;
output  [C_M_AXI_INPUT_R_ADDR_WIDTH - 1:0] m_axi_Input_r_ARADDR;
output  [C_M_AXI_INPUT_R_ID_WIDTH - 1:0] m_axi_Input_r_ARID;
output  [7:0] m_axi_Input_r_ARLEN;
output  [2:0] m_axi_Input_r_ARSIZE;
output  [1:0] m_axi_Input_r_ARBURST;
output  [1:0] m_axi_Input_r_ARLOCK;
output  [3:0] m_axi_Input_r_ARCACHE;
output  [2:0] m_axi_Input_r_ARPROT;
output  [3:0] m_axi_Input_r_ARQOS;
output  [3:0] m_axi_Input_r_ARREGION;
output  [C_M_AXI_INPUT_R_ARUSER_WIDTH - 1:0] m_axi_Input_r_ARUSER;
input   m_axi_Input_r_RVALID;
output   m_axi_Input_r_RREADY;
input  [C_M_AXI_INPUT_R_DATA_WIDTH - 1:0] m_axi_Input_r_RDATA;
input   m_axi_Input_r_RLAST;
input  [C_M_AXI_INPUT_R_ID_WIDTH - 1:0] m_axi_Input_r_RID;
input  [C_M_AXI_INPUT_R_RUSER_WIDTH - 1:0] m_axi_Input_r_RUSER;
input  [1:0] m_axi_Input_r_RRESP;
input   m_axi_Input_r_BVALID;
output   m_axi_Input_r_BREADY;
input  [1:0] m_axi_Input_r_BRESP;
input  [C_M_AXI_INPUT_R_ID_WIDTH - 1:0] m_axi_Input_r_BID;
input  [C_M_AXI_INPUT_R_BUSER_WIDTH - 1:0] m_axi_Input_r_BUSER;
output   m_axi_Output_r_AWVALID;
input   m_axi_Output_r_AWREADY;
output  [C_M_AXI_OUTPUT_R_ADDR_WIDTH - 1:0] m_axi_Output_r_AWADDR;
output  [C_M_AXI_OUTPUT_R_ID_WIDTH - 1:0] m_axi_Output_r_AWID;
output  [7:0] m_axi_Output_r_AWLEN;
output  [2:0] m_axi_Output_r_AWSIZE;
output  [1:0] m_axi_Output_r_AWBURST;
output  [1:0] m_axi_Output_r_AWLOCK;
output  [3:0] m_axi_Output_r_AWCACHE;
output  [2:0] m_axi_Output_r_AWPROT;
output  [3:0] m_axi_Output_r_AWQOS;
output  [3:0] m_axi_Output_r_AWREGION;
output  [C_M_AXI_OUTPUT_R_AWUSER_WIDTH - 1:0] m_axi_Output_r_AWUSER;
output   m_axi_Output_r_WVALID;
input   m_axi_Output_r_WREADY;
output  [C_M_AXI_OUTPUT_R_DATA_WIDTH - 1:0] m_axi_Output_r_WDATA;
output  [C_M_AXI_OUTPUT_R_WSTRB_WIDTH - 1:0] m_axi_Output_r_WSTRB;
output   m_axi_Output_r_WLAST;
output  [C_M_AXI_OUTPUT_R_ID_WIDTH - 1:0] m_axi_Output_r_WID;
output  [C_M_AXI_OUTPUT_R_WUSER_WIDTH - 1:0] m_axi_Output_r_WUSER;
output   m_axi_Output_r_ARVALID;
input   m_axi_Output_r_ARREADY;
output  [C_M_AXI_OUTPUT_R_ADDR_WIDTH - 1:0] m_axi_Output_r_ARADDR;
output  [C_M_AXI_OUTPUT_R_ID_WIDTH - 1:0] m_axi_Output_r_ARID;
output  [7:0] m_axi_Output_r_ARLEN;
output  [2:0] m_axi_Output_r_ARSIZE;
output  [1:0] m_axi_Output_r_ARBURST;
output  [1:0] m_axi_Output_r_ARLOCK;
output  [3:0] m_axi_Output_r_ARCACHE;
output  [2:0] m_axi_Output_r_ARPROT;
output  [3:0] m_axi_Output_r_ARQOS;
output  [3:0] m_axi_Output_r_ARREGION;
output  [C_M_AXI_OUTPUT_R_ARUSER_WIDTH - 1:0] m_axi_Output_r_ARUSER;
input   m_axi_Output_r_RVALID;
output   m_axi_Output_r_RREADY;
input  [C_M_AXI_OUTPUT_R_DATA_WIDTH - 1:0] m_axi_Output_r_RDATA;
input   m_axi_Output_r_RLAST;
input  [C_M_AXI_OUTPUT_R_ID_WIDTH - 1:0] m_axi_Output_r_RID;
input  [C_M_AXI_OUTPUT_R_RUSER_WIDTH - 1:0] m_axi_Output_r_RUSER;
input  [1:0] m_axi_Output_r_RRESP;
input   m_axi_Output_r_BVALID;
output   m_axi_Output_r_BREADY;
input  [1:0] m_axi_Output_r_BRESP;
input  [C_M_AXI_OUTPUT_R_ID_WIDTH - 1:0] m_axi_Output_r_BID;
input  [C_M_AXI_OUTPUT_R_BUSER_WIDTH - 1:0] m_axi_Output_r_BUSER;
output   m_axi_Weight_AWVALID;
input   m_axi_Weight_AWREADY;
output  [C_M_AXI_WEIGHT_ADDR_WIDTH - 1:0] m_axi_Weight_AWADDR;
output  [C_M_AXI_WEIGHT_ID_WIDTH - 1:0] m_axi_Weight_AWID;
output  [7:0] m_axi_Weight_AWLEN;
output  [2:0] m_axi_Weight_AWSIZE;
output  [1:0] m_axi_Weight_AWBURST;
output  [1:0] m_axi_Weight_AWLOCK;
output  [3:0] m_axi_Weight_AWCACHE;
output  [2:0] m_axi_Weight_AWPROT;
output  [3:0] m_axi_Weight_AWQOS;
output  [3:0] m_axi_Weight_AWREGION;
output  [C_M_AXI_WEIGHT_AWUSER_WIDTH - 1:0] m_axi_Weight_AWUSER;
output   m_axi_Weight_WVALID;
input   m_axi_Weight_WREADY;
output  [C_M_AXI_WEIGHT_DATA_WIDTH - 1:0] m_axi_Weight_WDATA;
output  [C_M_AXI_WEIGHT_WSTRB_WIDTH - 1:0] m_axi_Weight_WSTRB;
output   m_axi_Weight_WLAST;
output  [C_M_AXI_WEIGHT_ID_WIDTH - 1:0] m_axi_Weight_WID;
output  [C_M_AXI_WEIGHT_WUSER_WIDTH - 1:0] m_axi_Weight_WUSER;
output   m_axi_Weight_ARVALID;
input   m_axi_Weight_ARREADY;
output  [C_M_AXI_WEIGHT_ADDR_WIDTH - 1:0] m_axi_Weight_ARADDR;
output  [C_M_AXI_WEIGHT_ID_WIDTH - 1:0] m_axi_Weight_ARID;
output  [7:0] m_axi_Weight_ARLEN;
output  [2:0] m_axi_Weight_ARSIZE;
output  [1:0] m_axi_Weight_ARBURST;
output  [1:0] m_axi_Weight_ARLOCK;
output  [3:0] m_axi_Weight_ARCACHE;
output  [2:0] m_axi_Weight_ARPROT;
output  [3:0] m_axi_Weight_ARQOS;
output  [3:0] m_axi_Weight_ARREGION;
output  [C_M_AXI_WEIGHT_ARUSER_WIDTH - 1:0] m_axi_Weight_ARUSER;
input   m_axi_Weight_RVALID;
output   m_axi_Weight_RREADY;
input  [C_M_AXI_WEIGHT_DATA_WIDTH - 1:0] m_axi_Weight_RDATA;
input   m_axi_Weight_RLAST;
input  [C_M_AXI_WEIGHT_ID_WIDTH - 1:0] m_axi_Weight_RID;
input  [C_M_AXI_WEIGHT_RUSER_WIDTH - 1:0] m_axi_Weight_RUSER;
input  [1:0] m_axi_Weight_RRESP;
input   m_axi_Weight_BVALID;
output   m_axi_Weight_BREADY;
input  [1:0] m_axi_Weight_BRESP;
input  [C_M_AXI_WEIGHT_ID_WIDTH - 1:0] m_axi_Weight_BID;
input  [C_M_AXI_WEIGHT_BUSER_WIDTH - 1:0] m_axi_Weight_BUSER;
output   m_axi_Beta_AWVALID;
input   m_axi_Beta_AWREADY;
output  [C_M_AXI_BETA_ADDR_WIDTH - 1:0] m_axi_Beta_AWADDR;
output  [C_M_AXI_BETA_ID_WIDTH - 1:0] m_axi_Beta_AWID;
output  [7:0] m_axi_Beta_AWLEN;
output  [2:0] m_axi_Beta_AWSIZE;
output  [1:0] m_axi_Beta_AWBURST;
output  [1:0] m_axi_Beta_AWLOCK;
output  [3:0] m_axi_Beta_AWCACHE;
output  [2:0] m_axi_Beta_AWPROT;
output  [3:0] m_axi_Beta_AWQOS;
output  [3:0] m_axi_Beta_AWREGION;
output  [C_M_AXI_BETA_AWUSER_WIDTH - 1:0] m_axi_Beta_AWUSER;
output   m_axi_Beta_WVALID;
input   m_axi_Beta_WREADY;
output  [C_M_AXI_BETA_DATA_WIDTH - 1:0] m_axi_Beta_WDATA;
output  [C_M_AXI_BETA_WSTRB_WIDTH - 1:0] m_axi_Beta_WSTRB;
output   m_axi_Beta_WLAST;
output  [C_M_AXI_BETA_ID_WIDTH - 1:0] m_axi_Beta_WID;
output  [C_M_AXI_BETA_WUSER_WIDTH - 1:0] m_axi_Beta_WUSER;
output   m_axi_Beta_ARVALID;
input   m_axi_Beta_ARREADY;
output  [C_M_AXI_BETA_ADDR_WIDTH - 1:0] m_axi_Beta_ARADDR;
output  [C_M_AXI_BETA_ID_WIDTH - 1:0] m_axi_Beta_ARID;
output  [7:0] m_axi_Beta_ARLEN;
output  [2:0] m_axi_Beta_ARSIZE;
output  [1:0] m_axi_Beta_ARBURST;
output  [1:0] m_axi_Beta_ARLOCK;
output  [3:0] m_axi_Beta_ARCACHE;
output  [2:0] m_axi_Beta_ARPROT;
output  [3:0] m_axi_Beta_ARQOS;
output  [3:0] m_axi_Beta_ARREGION;
output  [C_M_AXI_BETA_ARUSER_WIDTH - 1:0] m_axi_Beta_ARUSER;
input   m_axi_Beta_RVALID;
output   m_axi_Beta_RREADY;
input  [C_M_AXI_BETA_DATA_WIDTH - 1:0] m_axi_Beta_RDATA;
input   m_axi_Beta_RLAST;
input  [C_M_AXI_BETA_ID_WIDTH - 1:0] m_axi_Beta_RID;
input  [C_M_AXI_BETA_RUSER_WIDTH - 1:0] m_axi_Beta_RUSER;
input  [1:0] m_axi_Beta_RRESP;
input   m_axi_Beta_BVALID;
output   m_axi_Beta_BREADY;
input  [1:0] m_axi_Beta_BRESP;
input  [C_M_AXI_BETA_ID_WIDTH - 1:0] m_axi_Beta_BID;
input  [C_M_AXI_BETA_BUSER_WIDTH - 1:0] m_axi_Beta_BUSER;
input   s_axi_CRTL_BUS_AWVALID;
output   s_axi_CRTL_BUS_AWREADY;
input  [C_S_AXI_CRTL_BUS_ADDR_WIDTH - 1:0] s_axi_CRTL_BUS_AWADDR;
input   s_axi_CRTL_BUS_WVALID;
output   s_axi_CRTL_BUS_WREADY;
input  [C_S_AXI_CRTL_BUS_DATA_WIDTH - 1:0] s_axi_CRTL_BUS_WDATA;
input  [C_S_AXI_CRTL_BUS_WSTRB_WIDTH - 1:0] s_axi_CRTL_BUS_WSTRB;
input   s_axi_CRTL_BUS_ARVALID;
output   s_axi_CRTL_BUS_ARREADY;
input  [C_S_AXI_CRTL_BUS_ADDR_WIDTH - 1:0] s_axi_CRTL_BUS_ARADDR;
output   s_axi_CRTL_BUS_RVALID;
input   s_axi_CRTL_BUS_RREADY;
output  [C_S_AXI_CRTL_BUS_DATA_WIDTH - 1:0] s_axi_CRTL_BUS_RDATA;
output  [1:0] s_axi_CRTL_BUS_RRESP;
output   s_axi_CRTL_BUS_BVALID;
input   s_axi_CRTL_BUS_BREADY;
output  [1:0] s_axi_CRTL_BUS_BRESP;
output   interrupt;

 reg    ap_rst_n_inv;
wire    ap_start;
reg    ap_done;
reg    ap_idle;
(* fsm_encoding = "none" *) reg   [36:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    ap_ready;
wire   [31:0] Input_offset;
wire   [31:0] Output_offset;
wire   [31:0] Weight_offset;
wire   [31:0] Beta_offset;
wire   [31:0] InFM_num;
wire   [31:0] OutFM_num;
wire   [31:0] Kernel_size;
wire   [31:0] Kernel_stride;
wire   [31:0] TM;
wire   [31:0] TN;
wire   [31:0] TR;
wire   [31:0] TC;
wire   [31:0] mLoops;
wire   [31:0] nLoops;
wire   [31:0] LayerType;
wire   [31:0] M;
reg   [9:0] beta_buffer_address0;
reg    beta_buffer_ce0;
reg    beta_buffer_we0;
wire   [31:0] beta_buffer_q0;
reg   [10:0] input_buffer_V_0_address0;
reg    input_buffer_V_0_ce0;
reg    input_buffer_V_0_we0;
wire   [7:0] input_buffer_V_0_q0;
reg   [10:0] input_buffer_V_1_address0;
reg    input_buffer_V_1_ce0;
reg    input_buffer_V_1_we0;
wire   [7:0] input_buffer_V_1_q0;
reg   [10:0] input_buffer_V_2_address0;
reg    input_buffer_V_2_ce0;
reg    input_buffer_V_2_we0;
wire   [7:0] input_buffer_V_2_q0;
reg   [10:0] input_buffer_V_3_address0;
reg    input_buffer_V_3_ce0;
reg    input_buffer_V_3_we0;
wire   [7:0] input_buffer_V_3_q0;
reg   [4:0] weight_buffer_V_0_0_address0;
reg    weight_buffer_V_0_0_ce0;
reg    weight_buffer_V_0_0_we0;
wire   [7:0] weight_buffer_V_0_0_q0;
reg   [4:0] weight_buffer_V_0_1_address0;
reg    weight_buffer_V_0_1_ce0;
reg    weight_buffer_V_0_1_we0;
wire   [7:0] weight_buffer_V_0_1_q0;
reg   [4:0] weight_buffer_V_0_2_address0;
reg    weight_buffer_V_0_2_ce0;
reg    weight_buffer_V_0_2_we0;
wire   [7:0] weight_buffer_V_0_2_q0;
reg   [4:0] weight_buffer_V_0_3_address0;
reg    weight_buffer_V_0_3_ce0;
reg    weight_buffer_V_0_3_we0;
wire   [7:0] weight_buffer_V_0_3_q0;
reg   [4:0] weight_buffer_V_0_4_address0;
reg    weight_buffer_V_0_4_ce0;
reg    weight_buffer_V_0_4_we0;
wire   [7:0] weight_buffer_V_0_4_q0;
reg   [4:0] weight_buffer_V_0_5_address0;
reg    weight_buffer_V_0_5_ce0;
reg    weight_buffer_V_0_5_we0;
wire   [7:0] weight_buffer_V_0_5_q0;
reg   [4:0] weight_buffer_V_0_6_address0;
reg    weight_buffer_V_0_6_ce0;
reg    weight_buffer_V_0_6_we0;
wire   [7:0] weight_buffer_V_0_6_q0;
reg   [4:0] weight_buffer_V_0_7_address0;
reg    weight_buffer_V_0_7_ce0;
reg    weight_buffer_V_0_7_we0;
wire   [7:0] weight_buffer_V_0_7_q0;
reg   [4:0] weight_buffer_V_0_8_address0;
reg    weight_buffer_V_0_8_ce0;
reg    weight_buffer_V_0_8_we0;
wire   [7:0] weight_buffer_V_0_8_q0;
reg   [4:0] weight_buffer_V_0_9_address0;
reg    weight_buffer_V_0_9_ce0;
reg    weight_buffer_V_0_9_we0;
wire   [7:0] weight_buffer_V_0_9_q0;
reg   [4:0] weight_buffer_V_0_10_address0;
reg    weight_buffer_V_0_10_ce0;
reg    weight_buffer_V_0_10_we0;
wire   [7:0] weight_buffer_V_0_10_q0;
reg   [4:0] weight_buffer_V_0_11_address0;
reg    weight_buffer_V_0_11_ce0;
reg    weight_buffer_V_0_11_we0;
wire   [7:0] weight_buffer_V_0_11_q0;
reg   [4:0] weight_buffer_V_0_12_address0;
reg    weight_buffer_V_0_12_ce0;
reg    weight_buffer_V_0_12_we0;
wire   [7:0] weight_buffer_V_0_12_q0;
reg   [4:0] weight_buffer_V_0_13_address0;
reg    weight_buffer_V_0_13_ce0;
reg    weight_buffer_V_0_13_we0;
wire   [7:0] weight_buffer_V_0_13_q0;
reg   [4:0] weight_buffer_V_0_14_address0;
reg    weight_buffer_V_0_14_ce0;
reg    weight_buffer_V_0_14_we0;
wire   [7:0] weight_buffer_V_0_14_q0;
reg   [4:0] weight_buffer_V_0_15_address0;
reg    weight_buffer_V_0_15_ce0;
reg    weight_buffer_V_0_15_we0;
wire   [7:0] weight_buffer_V_0_15_q0;
reg   [4:0] weight_buffer_V_0_16_address0;
reg    weight_buffer_V_0_16_ce0;
reg    weight_buffer_V_0_16_we0;
wire   [7:0] weight_buffer_V_0_16_q0;
reg   [4:0] weight_buffer_V_0_17_address0;
reg    weight_buffer_V_0_17_ce0;
reg    weight_buffer_V_0_17_we0;
wire   [7:0] weight_buffer_V_0_17_q0;
reg   [4:0] weight_buffer_V_0_18_address0;
reg    weight_buffer_V_0_18_ce0;
reg    weight_buffer_V_0_18_we0;
wire   [7:0] weight_buffer_V_0_18_q0;
reg   [4:0] weight_buffer_V_0_19_address0;
reg    weight_buffer_V_0_19_ce0;
reg    weight_buffer_V_0_19_we0;
wire   [7:0] weight_buffer_V_0_19_q0;
reg   [4:0] weight_buffer_V_0_20_address0;
reg    weight_buffer_V_0_20_ce0;
reg    weight_buffer_V_0_20_we0;
wire   [7:0] weight_buffer_V_0_20_q0;
reg   [4:0] weight_buffer_V_0_21_address0;
reg    weight_buffer_V_0_21_ce0;
reg    weight_buffer_V_0_21_we0;
wire   [7:0] weight_buffer_V_0_21_q0;
reg   [4:0] weight_buffer_V_0_22_address0;
reg    weight_buffer_V_0_22_ce0;
reg    weight_buffer_V_0_22_we0;
wire   [7:0] weight_buffer_V_0_22_q0;
reg   [4:0] weight_buffer_V_0_23_address0;
reg    weight_buffer_V_0_23_ce0;
reg    weight_buffer_V_0_23_we0;
wire   [7:0] weight_buffer_V_0_23_q0;
reg   [4:0] weight_buffer_V_0_24_address0;
reg    weight_buffer_V_0_24_ce0;
reg    weight_buffer_V_0_24_we0;
wire   [7:0] weight_buffer_V_0_24_q0;
reg   [4:0] weight_buffer_V_0_25_address0;
reg    weight_buffer_V_0_25_ce0;
reg    weight_buffer_V_0_25_we0;
wire   [7:0] weight_buffer_V_0_25_q0;
reg   [4:0] weight_buffer_V_0_26_address0;
reg    weight_buffer_V_0_26_ce0;
reg    weight_buffer_V_0_26_we0;
wire   [7:0] weight_buffer_V_0_26_q0;
reg   [4:0] weight_buffer_V_0_27_address0;
reg    weight_buffer_V_0_27_ce0;
reg    weight_buffer_V_0_27_we0;
wire   [7:0] weight_buffer_V_0_27_q0;
reg   [4:0] weight_buffer_V_0_28_address0;
reg    weight_buffer_V_0_28_ce0;
reg    weight_buffer_V_0_28_we0;
wire   [7:0] weight_buffer_V_0_28_q0;
reg   [4:0] weight_buffer_V_0_29_address0;
reg    weight_buffer_V_0_29_ce0;
reg    weight_buffer_V_0_29_we0;
wire   [7:0] weight_buffer_V_0_29_q0;
reg   [4:0] weight_buffer_V_0_30_address0;
reg    weight_buffer_V_0_30_ce0;
reg    weight_buffer_V_0_30_we0;
wire   [7:0] weight_buffer_V_0_30_q0;
reg   [4:0] weight_buffer_V_0_31_address0;
reg    weight_buffer_V_0_31_ce0;
reg    weight_buffer_V_0_31_we0;
wire   [7:0] weight_buffer_V_0_31_q0;
reg   [4:0] weight_buffer_V_1_0_address0;
reg    weight_buffer_V_1_0_ce0;
reg    weight_buffer_V_1_0_we0;
wire   [7:0] weight_buffer_V_1_0_q0;
reg   [4:0] weight_buffer_V_1_1_address0;
reg    weight_buffer_V_1_1_ce0;
reg    weight_buffer_V_1_1_we0;
wire   [7:0] weight_buffer_V_1_1_q0;
reg   [4:0] weight_buffer_V_1_2_address0;
reg    weight_buffer_V_1_2_ce0;
reg    weight_buffer_V_1_2_we0;
wire   [7:0] weight_buffer_V_1_2_q0;
reg   [4:0] weight_buffer_V_1_3_address0;
reg    weight_buffer_V_1_3_ce0;
reg    weight_buffer_V_1_3_we0;
wire   [7:0] weight_buffer_V_1_3_q0;
reg   [4:0] weight_buffer_V_1_4_address0;
reg    weight_buffer_V_1_4_ce0;
reg    weight_buffer_V_1_4_we0;
wire   [7:0] weight_buffer_V_1_4_q0;
reg   [4:0] weight_buffer_V_1_5_address0;
reg    weight_buffer_V_1_5_ce0;
reg    weight_buffer_V_1_5_we0;
wire   [7:0] weight_buffer_V_1_5_q0;
reg   [4:0] weight_buffer_V_1_6_address0;
reg    weight_buffer_V_1_6_ce0;
reg    weight_buffer_V_1_6_we0;
wire   [7:0] weight_buffer_V_1_6_q0;
reg   [4:0] weight_buffer_V_1_7_address0;
reg    weight_buffer_V_1_7_ce0;
reg    weight_buffer_V_1_7_we0;
wire   [7:0] weight_buffer_V_1_7_q0;
reg   [4:0] weight_buffer_V_1_8_address0;
reg    weight_buffer_V_1_8_ce0;
reg    weight_buffer_V_1_8_we0;
wire   [7:0] weight_buffer_V_1_8_q0;
reg   [4:0] weight_buffer_V_1_9_address0;
reg    weight_buffer_V_1_9_ce0;
reg    weight_buffer_V_1_9_we0;
wire   [7:0] weight_buffer_V_1_9_q0;
reg   [4:0] weight_buffer_V_1_10_address0;
reg    weight_buffer_V_1_10_ce0;
reg    weight_buffer_V_1_10_we0;
wire   [7:0] weight_buffer_V_1_10_q0;
reg   [4:0] weight_buffer_V_1_11_address0;
reg    weight_buffer_V_1_11_ce0;
reg    weight_buffer_V_1_11_we0;
wire   [7:0] weight_buffer_V_1_11_q0;
reg   [4:0] weight_buffer_V_1_12_address0;
reg    weight_buffer_V_1_12_ce0;
reg    weight_buffer_V_1_12_we0;
wire   [7:0] weight_buffer_V_1_12_q0;
reg   [4:0] weight_buffer_V_1_13_address0;
reg    weight_buffer_V_1_13_ce0;
reg    weight_buffer_V_1_13_we0;
wire   [7:0] weight_buffer_V_1_13_q0;
reg   [4:0] weight_buffer_V_1_14_address0;
reg    weight_buffer_V_1_14_ce0;
reg    weight_buffer_V_1_14_we0;
wire   [7:0] weight_buffer_V_1_14_q0;
reg   [4:0] weight_buffer_V_1_15_address0;
reg    weight_buffer_V_1_15_ce0;
reg    weight_buffer_V_1_15_we0;
wire   [7:0] weight_buffer_V_1_15_q0;
reg   [4:0] weight_buffer_V_1_16_address0;
reg    weight_buffer_V_1_16_ce0;
reg    weight_buffer_V_1_16_we0;
wire   [7:0] weight_buffer_V_1_16_q0;
reg   [4:0] weight_buffer_V_1_17_address0;
reg    weight_buffer_V_1_17_ce0;
reg    weight_buffer_V_1_17_we0;
wire   [7:0] weight_buffer_V_1_17_q0;
reg   [4:0] weight_buffer_V_1_18_address0;
reg    weight_buffer_V_1_18_ce0;
reg    weight_buffer_V_1_18_we0;
wire   [7:0] weight_buffer_V_1_18_q0;
reg   [4:0] weight_buffer_V_1_19_address0;
reg    weight_buffer_V_1_19_ce0;
reg    weight_buffer_V_1_19_we0;
wire   [7:0] weight_buffer_V_1_19_q0;
reg   [4:0] weight_buffer_V_1_20_address0;
reg    weight_buffer_V_1_20_ce0;
reg    weight_buffer_V_1_20_we0;
wire   [7:0] weight_buffer_V_1_20_q0;
reg   [4:0] weight_buffer_V_1_21_address0;
reg    weight_buffer_V_1_21_ce0;
reg    weight_buffer_V_1_21_we0;
wire   [7:0] weight_buffer_V_1_21_q0;
reg   [4:0] weight_buffer_V_1_22_address0;
reg    weight_buffer_V_1_22_ce0;
reg    weight_buffer_V_1_22_we0;
wire   [7:0] weight_buffer_V_1_22_q0;
reg   [4:0] weight_buffer_V_1_23_address0;
reg    weight_buffer_V_1_23_ce0;
reg    weight_buffer_V_1_23_we0;
wire   [7:0] weight_buffer_V_1_23_q0;
reg   [4:0] weight_buffer_V_1_24_address0;
reg    weight_buffer_V_1_24_ce0;
reg    weight_buffer_V_1_24_we0;
wire   [7:0] weight_buffer_V_1_24_q0;
reg   [4:0] weight_buffer_V_1_25_address0;
reg    weight_buffer_V_1_25_ce0;
reg    weight_buffer_V_1_25_we0;
wire   [7:0] weight_buffer_V_1_25_q0;
reg   [4:0] weight_buffer_V_1_26_address0;
reg    weight_buffer_V_1_26_ce0;
reg    weight_buffer_V_1_26_we0;
wire   [7:0] weight_buffer_V_1_26_q0;
reg   [4:0] weight_buffer_V_1_27_address0;
reg    weight_buffer_V_1_27_ce0;
reg    weight_buffer_V_1_27_we0;
wire   [7:0] weight_buffer_V_1_27_q0;
reg   [4:0] weight_buffer_V_1_28_address0;
reg    weight_buffer_V_1_28_ce0;
reg    weight_buffer_V_1_28_we0;
wire   [7:0] weight_buffer_V_1_28_q0;
reg   [4:0] weight_buffer_V_1_29_address0;
reg    weight_buffer_V_1_29_ce0;
reg    weight_buffer_V_1_29_we0;
wire   [7:0] weight_buffer_V_1_29_q0;
reg   [4:0] weight_buffer_V_1_30_address0;
reg    weight_buffer_V_1_30_ce0;
reg    weight_buffer_V_1_30_we0;
wire   [7:0] weight_buffer_V_1_30_q0;
reg   [4:0] weight_buffer_V_1_31_address0;
reg    weight_buffer_V_1_31_ce0;
reg    weight_buffer_V_1_31_we0;
wire   [7:0] weight_buffer_V_1_31_q0;
reg   [4:0] weight_buffer_V_2_0_address0;
reg    weight_buffer_V_2_0_ce0;
reg    weight_buffer_V_2_0_we0;
wire   [7:0] weight_buffer_V_2_0_q0;
reg   [4:0] weight_buffer_V_2_1_address0;
reg    weight_buffer_V_2_1_ce0;
reg    weight_buffer_V_2_1_we0;
wire   [7:0] weight_buffer_V_2_1_q0;
reg   [4:0] weight_buffer_V_2_2_address0;
reg    weight_buffer_V_2_2_ce0;
reg    weight_buffer_V_2_2_we0;
wire   [7:0] weight_buffer_V_2_2_q0;
reg   [4:0] weight_buffer_V_2_3_address0;
reg    weight_buffer_V_2_3_ce0;
reg    weight_buffer_V_2_3_we0;
wire   [7:0] weight_buffer_V_2_3_q0;
reg   [4:0] weight_buffer_V_2_4_address0;
reg    weight_buffer_V_2_4_ce0;
reg    weight_buffer_V_2_4_we0;
wire   [7:0] weight_buffer_V_2_4_q0;
reg   [4:0] weight_buffer_V_2_5_address0;
reg    weight_buffer_V_2_5_ce0;
reg    weight_buffer_V_2_5_we0;
wire   [7:0] weight_buffer_V_2_5_q0;
reg   [4:0] weight_buffer_V_2_6_address0;
reg    weight_buffer_V_2_6_ce0;
reg    weight_buffer_V_2_6_we0;
wire   [7:0] weight_buffer_V_2_6_q0;
reg   [4:0] weight_buffer_V_2_7_address0;
reg    weight_buffer_V_2_7_ce0;
reg    weight_buffer_V_2_7_we0;
wire   [7:0] weight_buffer_V_2_7_q0;
reg   [4:0] weight_buffer_V_2_8_address0;
reg    weight_buffer_V_2_8_ce0;
reg    weight_buffer_V_2_8_we0;
wire   [7:0] weight_buffer_V_2_8_q0;
reg   [4:0] weight_buffer_V_2_9_address0;
reg    weight_buffer_V_2_9_ce0;
reg    weight_buffer_V_2_9_we0;
wire   [7:0] weight_buffer_V_2_9_q0;
reg   [4:0] weight_buffer_V_2_10_address0;
reg    weight_buffer_V_2_10_ce0;
reg    weight_buffer_V_2_10_we0;
wire   [7:0] weight_buffer_V_2_10_q0;
reg   [4:0] weight_buffer_V_2_11_address0;
reg    weight_buffer_V_2_11_ce0;
reg    weight_buffer_V_2_11_we0;
wire   [7:0] weight_buffer_V_2_11_q0;
reg   [4:0] weight_buffer_V_2_12_address0;
reg    weight_buffer_V_2_12_ce0;
reg    weight_buffer_V_2_12_we0;
wire   [7:0] weight_buffer_V_2_12_q0;
reg   [4:0] weight_buffer_V_2_13_address0;
reg    weight_buffer_V_2_13_ce0;
reg    weight_buffer_V_2_13_we0;
wire   [7:0] weight_buffer_V_2_13_q0;
reg   [4:0] weight_buffer_V_2_14_address0;
reg    weight_buffer_V_2_14_ce0;
reg    weight_buffer_V_2_14_we0;
wire   [7:0] weight_buffer_V_2_14_q0;
reg   [4:0] weight_buffer_V_2_15_address0;
reg    weight_buffer_V_2_15_ce0;
reg    weight_buffer_V_2_15_we0;
wire   [7:0] weight_buffer_V_2_15_q0;
reg   [4:0] weight_buffer_V_2_16_address0;
reg    weight_buffer_V_2_16_ce0;
reg    weight_buffer_V_2_16_we0;
wire   [7:0] weight_buffer_V_2_16_q0;
reg   [4:0] weight_buffer_V_2_17_address0;
reg    weight_buffer_V_2_17_ce0;
reg    weight_buffer_V_2_17_we0;
wire   [7:0] weight_buffer_V_2_17_q0;
reg   [4:0] weight_buffer_V_2_18_address0;
reg    weight_buffer_V_2_18_ce0;
reg    weight_buffer_V_2_18_we0;
wire   [7:0] weight_buffer_V_2_18_q0;
reg   [4:0] weight_buffer_V_2_19_address0;
reg    weight_buffer_V_2_19_ce0;
reg    weight_buffer_V_2_19_we0;
wire   [7:0] weight_buffer_V_2_19_q0;
reg   [4:0] weight_buffer_V_2_20_address0;
reg    weight_buffer_V_2_20_ce0;
reg    weight_buffer_V_2_20_we0;
wire   [7:0] weight_buffer_V_2_20_q0;
reg   [4:0] weight_buffer_V_2_21_address0;
reg    weight_buffer_V_2_21_ce0;
reg    weight_buffer_V_2_21_we0;
wire   [7:0] weight_buffer_V_2_21_q0;
reg   [4:0] weight_buffer_V_2_22_address0;
reg    weight_buffer_V_2_22_ce0;
reg    weight_buffer_V_2_22_we0;
wire   [7:0] weight_buffer_V_2_22_q0;
reg   [4:0] weight_buffer_V_2_23_address0;
reg    weight_buffer_V_2_23_ce0;
reg    weight_buffer_V_2_23_we0;
wire   [7:0] weight_buffer_V_2_23_q0;
reg   [4:0] weight_buffer_V_2_24_address0;
reg    weight_buffer_V_2_24_ce0;
reg    weight_buffer_V_2_24_we0;
wire   [7:0] weight_buffer_V_2_24_q0;
reg   [4:0] weight_buffer_V_2_25_address0;
reg    weight_buffer_V_2_25_ce0;
reg    weight_buffer_V_2_25_we0;
wire   [7:0] weight_buffer_V_2_25_q0;
reg   [4:0] weight_buffer_V_2_26_address0;
reg    weight_buffer_V_2_26_ce0;
reg    weight_buffer_V_2_26_we0;
wire   [7:0] weight_buffer_V_2_26_q0;
reg   [4:0] weight_buffer_V_2_27_address0;
reg    weight_buffer_V_2_27_ce0;
reg    weight_buffer_V_2_27_we0;
wire   [7:0] weight_buffer_V_2_27_q0;
reg   [4:0] weight_buffer_V_2_28_address0;
reg    weight_buffer_V_2_28_ce0;
reg    weight_buffer_V_2_28_we0;
wire   [7:0] weight_buffer_V_2_28_q0;
reg   [4:0] weight_buffer_V_2_29_address0;
reg    weight_buffer_V_2_29_ce0;
reg    weight_buffer_V_2_29_we0;
wire   [7:0] weight_buffer_V_2_29_q0;
reg   [4:0] weight_buffer_V_2_30_address0;
reg    weight_buffer_V_2_30_ce0;
reg    weight_buffer_V_2_30_we0;
wire   [7:0] weight_buffer_V_2_30_q0;
reg   [4:0] weight_buffer_V_2_31_address0;
reg    weight_buffer_V_2_31_ce0;
reg    weight_buffer_V_2_31_we0;
wire   [7:0] weight_buffer_V_2_31_q0;
reg   [4:0] weight_buffer_V_3_0_address0;
reg    weight_buffer_V_3_0_ce0;
reg    weight_buffer_V_3_0_we0;
wire   [7:0] weight_buffer_V_3_0_q0;
reg   [4:0] weight_buffer_V_3_1_address0;
reg    weight_buffer_V_3_1_ce0;
reg    weight_buffer_V_3_1_we0;
wire   [7:0] weight_buffer_V_3_1_q0;
reg   [4:0] weight_buffer_V_3_2_address0;
reg    weight_buffer_V_3_2_ce0;
reg    weight_buffer_V_3_2_we0;
wire   [7:0] weight_buffer_V_3_2_q0;
reg   [4:0] weight_buffer_V_3_3_address0;
reg    weight_buffer_V_3_3_ce0;
reg    weight_buffer_V_3_3_we0;
wire   [7:0] weight_buffer_V_3_3_q0;
reg   [4:0] weight_buffer_V_3_4_address0;
reg    weight_buffer_V_3_4_ce0;
reg    weight_buffer_V_3_4_we0;
wire   [7:0] weight_buffer_V_3_4_q0;
reg   [4:0] weight_buffer_V_3_5_address0;
reg    weight_buffer_V_3_5_ce0;
reg    weight_buffer_V_3_5_we0;
wire   [7:0] weight_buffer_V_3_5_q0;
reg   [4:0] weight_buffer_V_3_6_address0;
reg    weight_buffer_V_3_6_ce0;
reg    weight_buffer_V_3_6_we0;
wire   [7:0] weight_buffer_V_3_6_q0;
reg   [4:0] weight_buffer_V_3_7_address0;
reg    weight_buffer_V_3_7_ce0;
reg    weight_buffer_V_3_7_we0;
wire   [7:0] weight_buffer_V_3_7_q0;
reg   [4:0] weight_buffer_V_3_8_address0;
reg    weight_buffer_V_3_8_ce0;
reg    weight_buffer_V_3_8_we0;
wire   [7:0] weight_buffer_V_3_8_q0;
reg   [4:0] weight_buffer_V_3_9_address0;
reg    weight_buffer_V_3_9_ce0;
reg    weight_buffer_V_3_9_we0;
wire   [7:0] weight_buffer_V_3_9_q0;
reg   [4:0] weight_buffer_V_3_10_address0;
reg    weight_buffer_V_3_10_ce0;
reg    weight_buffer_V_3_10_we0;
wire   [7:0] weight_buffer_V_3_10_q0;
reg   [4:0] weight_buffer_V_3_11_address0;
reg    weight_buffer_V_3_11_ce0;
reg    weight_buffer_V_3_11_we0;
wire   [7:0] weight_buffer_V_3_11_q0;
reg   [4:0] weight_buffer_V_3_12_address0;
reg    weight_buffer_V_3_12_ce0;
reg    weight_buffer_V_3_12_we0;
wire   [7:0] weight_buffer_V_3_12_q0;
reg   [4:0] weight_buffer_V_3_13_address0;
reg    weight_buffer_V_3_13_ce0;
reg    weight_buffer_V_3_13_we0;
wire   [7:0] weight_buffer_V_3_13_q0;
reg   [4:0] weight_buffer_V_3_14_address0;
reg    weight_buffer_V_3_14_ce0;
reg    weight_buffer_V_3_14_we0;
wire   [7:0] weight_buffer_V_3_14_q0;
reg   [4:0] weight_buffer_V_3_15_address0;
reg    weight_buffer_V_3_15_ce0;
reg    weight_buffer_V_3_15_we0;
wire   [7:0] weight_buffer_V_3_15_q0;
reg   [4:0] weight_buffer_V_3_16_address0;
reg    weight_buffer_V_3_16_ce0;
reg    weight_buffer_V_3_16_we0;
wire   [7:0] weight_buffer_V_3_16_q0;
reg   [4:0] weight_buffer_V_3_17_address0;
reg    weight_buffer_V_3_17_ce0;
reg    weight_buffer_V_3_17_we0;
wire   [7:0] weight_buffer_V_3_17_q0;
reg   [4:0] weight_buffer_V_3_18_address0;
reg    weight_buffer_V_3_18_ce0;
reg    weight_buffer_V_3_18_we0;
wire   [7:0] weight_buffer_V_3_18_q0;
reg   [4:0] weight_buffer_V_3_19_address0;
reg    weight_buffer_V_3_19_ce0;
reg    weight_buffer_V_3_19_we0;
wire   [7:0] weight_buffer_V_3_19_q0;
reg   [4:0] weight_buffer_V_3_20_address0;
reg    weight_buffer_V_3_20_ce0;
reg    weight_buffer_V_3_20_we0;
wire   [7:0] weight_buffer_V_3_20_q0;
reg   [4:0] weight_buffer_V_3_21_address0;
reg    weight_buffer_V_3_21_ce0;
reg    weight_buffer_V_3_21_we0;
wire   [7:0] weight_buffer_V_3_21_q0;
reg   [4:0] weight_buffer_V_3_22_address0;
reg    weight_buffer_V_3_22_ce0;
reg    weight_buffer_V_3_22_we0;
wire   [7:0] weight_buffer_V_3_22_q0;
reg   [4:0] weight_buffer_V_3_23_address0;
reg    weight_buffer_V_3_23_ce0;
reg    weight_buffer_V_3_23_we0;
wire   [7:0] weight_buffer_V_3_23_q0;
reg   [4:0] weight_buffer_V_3_24_address0;
reg    weight_buffer_V_3_24_ce0;
reg    weight_buffer_V_3_24_we0;
wire   [7:0] weight_buffer_V_3_24_q0;
reg   [4:0] weight_buffer_V_3_25_address0;
reg    weight_buffer_V_3_25_ce0;
reg    weight_buffer_V_3_25_we0;
wire   [7:0] weight_buffer_V_3_25_q0;
reg   [4:0] weight_buffer_V_3_26_address0;
reg    weight_buffer_V_3_26_ce0;
reg    weight_buffer_V_3_26_we0;
wire   [7:0] weight_buffer_V_3_26_q0;
reg   [4:0] weight_buffer_V_3_27_address0;
reg    weight_buffer_V_3_27_ce0;
reg    weight_buffer_V_3_27_we0;
wire   [7:0] weight_buffer_V_3_27_q0;
reg   [4:0] weight_buffer_V_3_28_address0;
reg    weight_buffer_V_3_28_ce0;
reg    weight_buffer_V_3_28_we0;
wire   [7:0] weight_buffer_V_3_28_q0;
reg   [4:0] weight_buffer_V_3_29_address0;
reg    weight_buffer_V_3_29_ce0;
reg    weight_buffer_V_3_29_we0;
wire   [7:0] weight_buffer_V_3_29_q0;
reg   [4:0] weight_buffer_V_3_30_address0;
reg    weight_buffer_V_3_30_ce0;
reg    weight_buffer_V_3_30_we0;
wire   [7:0] weight_buffer_V_3_30_q0;
reg   [4:0] weight_buffer_V_3_31_address0;
reg    weight_buffer_V_3_31_ce0;
reg    weight_buffer_V_3_31_we0;
wire   [7:0] weight_buffer_V_3_31_q0;
reg   [8:0] weight_buffer_fc_0_address0;
reg    weight_buffer_fc_0_ce0;
reg    weight_buffer_fc_0_we0;
wire   [31:0] weight_buffer_fc_0_q0;
reg   [8:0] weight_buffer_fc_1_address0;
reg    weight_buffer_fc_1_ce0;
reg    weight_buffer_fc_1_we0;
wire   [31:0] weight_buffer_fc_1_q0;
reg   [8:0] weight_buffer_fc_2_address0;
reg    weight_buffer_fc_2_ce0;
reg    weight_buffer_fc_2_we0;
wire   [31:0] weight_buffer_fc_2_q0;
reg   [8:0] weight_buffer_fc_3_address0;
reg    weight_buffer_fc_3_ce0;
reg    weight_buffer_fc_3_we0;
wire   [31:0] weight_buffer_fc_3_q0;
reg   [8:0] weight_buffer_fc_4_address0;
reg    weight_buffer_fc_4_ce0;
reg    weight_buffer_fc_4_we0;
wire   [31:0] weight_buffer_fc_4_q0;
reg   [8:0] weight_buffer_fc_5_address0;
reg    weight_buffer_fc_5_ce0;
reg    weight_buffer_fc_5_we0;
wire   [31:0] weight_buffer_fc_5_q0;
reg   [8:0] weight_buffer_fc_6_address0;
reg    weight_buffer_fc_6_ce0;
reg    weight_buffer_fc_6_we0;
wire   [31:0] weight_buffer_fc_6_q0;
reg   [8:0] weight_buffer_fc_7_address0;
reg    weight_buffer_fc_7_ce0;
reg    weight_buffer_fc_7_we0;
wire   [31:0] weight_buffer_fc_7_q0;
reg   [9:0] output_buffer_0_address0;
reg    output_buffer_0_ce0;
reg    output_buffer_0_we0;
reg   [31:0] output_buffer_0_d0;
wire   [31:0] output_buffer_0_q0;
reg    output_buffer_0_ce1;
reg    output_buffer_0_we1;
wire   [31:0] output_buffer_0_q1;
reg   [9:0] output_buffer_1_address0;
reg    output_buffer_1_ce0;
reg    output_buffer_1_we0;
reg   [31:0] output_buffer_1_d0;
wire   [31:0] output_buffer_1_q0;
reg    output_buffer_1_ce1;
reg    output_buffer_1_we1;
wire   [31:0] output_buffer_1_q1;
reg   [9:0] output_buffer_2_address0;
reg    output_buffer_2_ce0;
reg    output_buffer_2_we0;
reg   [31:0] output_buffer_2_d0;
wire   [31:0] output_buffer_2_q0;
reg    output_buffer_2_ce1;
reg    output_buffer_2_we1;
wire   [31:0] output_buffer_2_q1;
reg   [9:0] output_buffer_3_address0;
reg    output_buffer_3_ce0;
reg    output_buffer_3_we0;
reg   [31:0] output_buffer_3_d0;
wire   [31:0] output_buffer_3_q0;
reg    output_buffer_3_ce1;
reg    output_buffer_3_we1;
wire   [31:0] output_buffer_3_q1;
reg   [9:0] output_buffer_4_address0;
reg    output_buffer_4_ce0;
reg    output_buffer_4_we0;
reg   [31:0] output_buffer_4_d0;
wire   [31:0] output_buffer_4_q0;
reg    output_buffer_4_ce1;
reg    output_buffer_4_we1;
wire   [31:0] output_buffer_4_q1;
reg   [9:0] output_buffer_5_address0;
reg    output_buffer_5_ce0;
reg    output_buffer_5_we0;
reg   [31:0] output_buffer_5_d0;
wire   [31:0] output_buffer_5_q0;
reg    output_buffer_5_ce1;
reg    output_buffer_5_we1;
wire   [31:0] output_buffer_5_q1;
reg   [9:0] output_buffer_6_address0;
reg    output_buffer_6_ce0;
reg    output_buffer_6_we0;
reg   [31:0] output_buffer_6_d0;
wire   [31:0] output_buffer_6_q0;
reg    output_buffer_6_ce1;
reg    output_buffer_6_we1;
wire   [31:0] output_buffer_6_q1;
reg   [9:0] output_buffer_7_address0;
reg    output_buffer_7_ce0;
reg    output_buffer_7_we0;
reg   [31:0] output_buffer_7_d0;
wire   [31:0] output_buffer_7_q0;
reg    output_buffer_7_ce1;
reg    output_buffer_7_we1;
wire   [31:0] output_buffer_7_q1;
reg   [9:0] output_buffer_8_address0;
reg    output_buffer_8_ce0;
reg    output_buffer_8_we0;
reg   [31:0] output_buffer_8_d0;
wire   [31:0] output_buffer_8_q0;
reg    output_buffer_8_ce1;
reg    output_buffer_8_we1;
wire   [31:0] output_buffer_8_q1;
reg   [9:0] output_buffer_9_address0;
reg    output_buffer_9_ce0;
reg    output_buffer_9_we0;
reg   [31:0] output_buffer_9_d0;
wire   [31:0] output_buffer_9_q0;
reg    output_buffer_9_ce1;
reg    output_buffer_9_we1;
wire   [31:0] output_buffer_9_q1;
reg   [9:0] output_buffer_10_address0;
reg    output_buffer_10_ce0;
reg    output_buffer_10_we0;
reg   [31:0] output_buffer_10_d0;
wire   [31:0] output_buffer_10_q0;
reg    output_buffer_10_ce1;
reg    output_buffer_10_we1;
wire   [31:0] output_buffer_10_q1;
reg   [9:0] output_buffer_11_address0;
reg    output_buffer_11_ce0;
reg    output_buffer_11_we0;
reg   [31:0] output_buffer_11_d0;
wire   [31:0] output_buffer_11_q0;
reg    output_buffer_11_ce1;
reg    output_buffer_11_we1;
wire   [31:0] output_buffer_11_q1;
reg   [9:0] output_buffer_12_address0;
reg    output_buffer_12_ce0;
reg    output_buffer_12_we0;
reg   [31:0] output_buffer_12_d0;
wire   [31:0] output_buffer_12_q0;
reg    output_buffer_12_ce1;
reg    output_buffer_12_we1;
wire   [31:0] output_buffer_12_q1;
reg   [9:0] output_buffer_13_address0;
reg    output_buffer_13_ce0;
reg    output_buffer_13_we0;
reg   [31:0] output_buffer_13_d0;
wire   [31:0] output_buffer_13_q0;
reg    output_buffer_13_ce1;
reg    output_buffer_13_we1;
wire   [31:0] output_buffer_13_q1;
reg   [9:0] output_buffer_14_address0;
reg    output_buffer_14_ce0;
reg    output_buffer_14_we0;
reg   [31:0] output_buffer_14_d0;
wire   [31:0] output_buffer_14_q0;
reg    output_buffer_14_ce1;
reg    output_buffer_14_we1;
wire   [31:0] output_buffer_14_q1;
reg   [9:0] output_buffer_15_address0;
reg    output_buffer_15_ce0;
reg    output_buffer_15_we0;
reg   [31:0] output_buffer_15_d0;
wire   [31:0] output_buffer_15_q0;
reg    output_buffer_15_ce1;
reg    output_buffer_15_we1;
wire   [31:0] output_buffer_15_q1;
reg   [9:0] output_buffer_16_address0;
reg    output_buffer_16_ce0;
reg    output_buffer_16_we0;
reg   [31:0] output_buffer_16_d0;
wire   [31:0] output_buffer_16_q0;
reg    output_buffer_16_ce1;
reg    output_buffer_16_we1;
wire   [31:0] output_buffer_16_q1;
reg   [9:0] output_buffer_17_address0;
reg    output_buffer_17_ce0;
reg    output_buffer_17_we0;
reg   [31:0] output_buffer_17_d0;
wire   [31:0] output_buffer_17_q0;
reg    output_buffer_17_ce1;
reg    output_buffer_17_we1;
wire   [31:0] output_buffer_17_q1;
reg   [9:0] output_buffer_18_address0;
reg    output_buffer_18_ce0;
reg    output_buffer_18_we0;
reg   [31:0] output_buffer_18_d0;
wire   [31:0] output_buffer_18_q0;
reg    output_buffer_18_ce1;
reg    output_buffer_18_we1;
wire   [31:0] output_buffer_18_q1;
reg   [9:0] output_buffer_19_address0;
reg    output_buffer_19_ce0;
reg    output_buffer_19_we0;
reg   [31:0] output_buffer_19_d0;
wire   [31:0] output_buffer_19_q0;
reg    output_buffer_19_ce1;
reg    output_buffer_19_we1;
wire   [31:0] output_buffer_19_q1;
reg   [9:0] output_buffer_20_address0;
reg    output_buffer_20_ce0;
reg    output_buffer_20_we0;
reg   [31:0] output_buffer_20_d0;
wire   [31:0] output_buffer_20_q0;
reg    output_buffer_20_ce1;
reg    output_buffer_20_we1;
wire   [31:0] output_buffer_20_q1;
reg   [9:0] output_buffer_21_address0;
reg    output_buffer_21_ce0;
reg    output_buffer_21_we0;
reg   [31:0] output_buffer_21_d0;
wire   [31:0] output_buffer_21_q0;
reg    output_buffer_21_ce1;
reg    output_buffer_21_we1;
wire   [31:0] output_buffer_21_q1;
reg   [9:0] output_buffer_22_address0;
reg    output_buffer_22_ce0;
reg    output_buffer_22_we0;
reg   [31:0] output_buffer_22_d0;
wire   [31:0] output_buffer_22_q0;
reg    output_buffer_22_ce1;
reg    output_buffer_22_we1;
wire   [31:0] output_buffer_22_q1;
reg   [9:0] output_buffer_23_address0;
reg    output_buffer_23_ce0;
reg    output_buffer_23_we0;
reg   [31:0] output_buffer_23_d0;
wire   [31:0] output_buffer_23_q0;
reg    output_buffer_23_ce1;
reg    output_buffer_23_we1;
wire   [31:0] output_buffer_23_q1;
reg   [9:0] output_buffer_24_address0;
reg    output_buffer_24_ce0;
reg    output_buffer_24_we0;
reg   [31:0] output_buffer_24_d0;
wire   [31:0] output_buffer_24_q0;
reg    output_buffer_24_ce1;
reg    output_buffer_24_we1;
wire   [31:0] output_buffer_24_q1;
reg   [9:0] output_buffer_25_address0;
reg    output_buffer_25_ce0;
reg    output_buffer_25_we0;
reg   [31:0] output_buffer_25_d0;
wire   [31:0] output_buffer_25_q0;
reg    output_buffer_25_ce1;
reg    output_buffer_25_we1;
wire   [31:0] output_buffer_25_q1;
reg   [9:0] output_buffer_26_address0;
reg    output_buffer_26_ce0;
reg    output_buffer_26_we0;
reg   [31:0] output_buffer_26_d0;
wire   [31:0] output_buffer_26_q0;
reg    output_buffer_26_ce1;
reg    output_buffer_26_we1;
wire   [31:0] output_buffer_26_q1;
reg   [9:0] output_buffer_27_address0;
reg    output_buffer_27_ce0;
reg    output_buffer_27_we0;
reg   [31:0] output_buffer_27_d0;
wire   [31:0] output_buffer_27_q0;
reg    output_buffer_27_ce1;
reg    output_buffer_27_we1;
wire   [31:0] output_buffer_27_q1;
reg   [9:0] output_buffer_28_address0;
reg    output_buffer_28_ce0;
reg    output_buffer_28_we0;
reg   [31:0] output_buffer_28_d0;
wire   [31:0] output_buffer_28_q0;
reg    output_buffer_28_ce1;
reg    output_buffer_28_we1;
wire   [31:0] output_buffer_28_q1;
reg   [9:0] output_buffer_29_address0;
reg    output_buffer_29_ce0;
reg    output_buffer_29_we0;
reg   [31:0] output_buffer_29_d0;
wire   [31:0] output_buffer_29_q0;
reg    output_buffer_29_ce1;
reg    output_buffer_29_we1;
wire   [31:0] output_buffer_29_q1;
reg   [9:0] output_buffer_30_address0;
reg    output_buffer_30_ce0;
reg    output_buffer_30_we0;
reg   [31:0] output_buffer_30_d0;
wire   [31:0] output_buffer_30_q0;
reg    output_buffer_30_ce1;
reg    output_buffer_30_we1;
wire   [31:0] output_buffer_30_q1;
reg   [9:0] output_buffer_31_address0;
reg    output_buffer_31_ce0;
reg    output_buffer_31_we0;
reg   [31:0] output_buffer_31_d0;
wire   [31:0] output_buffer_31_q0;
reg    output_buffer_31_ce1;
reg    output_buffer_31_we1;
wire   [31:0] output_buffer_31_q1;
reg   [8:0] input_buffer_fc_0_address0;
reg    input_buffer_fc_0_ce0;
reg    input_buffer_fc_0_we0;
wire   [31:0] input_buffer_fc_0_q0;
reg   [8:0] input_buffer_fc_1_address0;
reg    input_buffer_fc_1_ce0;
reg    input_buffer_fc_1_we0;
wire   [31:0] input_buffer_fc_1_q0;
reg   [8:0] input_buffer_fc_2_address0;
reg    input_buffer_fc_2_ce0;
reg    input_buffer_fc_2_we0;
wire   [31:0] input_buffer_fc_2_q0;
reg   [8:0] input_buffer_fc_3_address0;
reg    input_buffer_fc_3_ce0;
reg    input_buffer_fc_3_we0;
wire   [31:0] input_buffer_fc_3_q0;
reg   [8:0] input_buffer_fc_4_address0;
reg    input_buffer_fc_4_ce0;
reg    input_buffer_fc_4_we0;
wire   [31:0] input_buffer_fc_4_q0;
reg   [8:0] input_buffer_fc_5_address0;
reg    input_buffer_fc_5_ce0;
reg    input_buffer_fc_5_we0;
wire   [31:0] input_buffer_fc_5_q0;
reg   [8:0] input_buffer_fc_6_address0;
reg    input_buffer_fc_6_ce0;
reg    input_buffer_fc_6_we0;
wire   [31:0] input_buffer_fc_6_q0;
reg   [8:0] input_buffer_fc_7_address0;
reg    input_buffer_fc_7_ce0;
reg    input_buffer_fc_7_we0;
wire   [31:0] input_buffer_fc_7_q0;
reg   [6:0] output_buffer_fc_0_address0;
reg    output_buffer_fc_0_ce0;
reg    output_buffer_fc_0_we0;
reg   [31:0] output_buffer_fc_0_d0;
wire   [31:0] output_buffer_fc_0_q0;
reg   [6:0] output_buffer_fc_1_address0;
reg    output_buffer_fc_1_ce0;
reg    output_buffer_fc_1_we0;
reg   [31:0] output_buffer_fc_1_d0;
wire   [31:0] output_buffer_fc_1_q0;
reg   [6:0] output_buffer_fc_2_address0;
reg    output_buffer_fc_2_ce0;
reg    output_buffer_fc_2_we0;
reg   [31:0] output_buffer_fc_2_d0;
wire   [31:0] output_buffer_fc_2_q0;
reg   [6:0] output_buffer_fc_3_address0;
reg    output_buffer_fc_3_ce0;
reg    output_buffer_fc_3_we0;
reg   [31:0] output_buffer_fc_3_d0;
wire   [31:0] output_buffer_fc_3_q0;
reg   [6:0] output_buffer_fc_4_address0;
reg    output_buffer_fc_4_ce0;
reg    output_buffer_fc_4_we0;
reg   [31:0] output_buffer_fc_4_d0;
wire   [31:0] output_buffer_fc_4_q0;
reg   [6:0] output_buffer_fc_5_address0;
reg    output_buffer_fc_5_ce0;
reg    output_buffer_fc_5_we0;
reg   [31:0] output_buffer_fc_5_d0;
wire   [31:0] output_buffer_fc_5_q0;
reg   [6:0] output_buffer_fc_6_address0;
reg    output_buffer_fc_6_ce0;
reg    output_buffer_fc_6_we0;
reg   [31:0] output_buffer_fc_6_d0;
wire   [31:0] output_buffer_fc_6_q0;
reg   [6:0] output_buffer_fc_7_address0;
reg    output_buffer_fc_7_ce0;
reg    output_buffer_fc_7_we0;
reg   [31:0] output_buffer_fc_7_d0;
wire   [31:0] output_buffer_fc_7_q0;
reg    Input_r_blk_n_AR;
wire    ap_CS_fsm_state12;
wire   [0:0] tmp_s_fu_2095_p2;
reg    Input_r_blk_n_R;
wire    ap_CS_fsm_pp1_stage0;
reg    ap_enable_reg_pp1_iter1;
wire    ap_block_pp1_stage0;
reg    Beta_blk_n_AR;
wire    ap_CS_fsm_state2;
reg    Beta_blk_n_R;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0;
reg   [0:0] exitcond_reg_2510;
wire    Input_r_AWREADY;
wire    Input_r_WREADY;
reg    Input_r_ARVALID;
wire    Input_r_ARREADY;
reg   [31:0] Input_r_ARADDR;
reg   [0:0] Input_r_ARID;
reg   [31:0] Input_r_ARLEN;
reg   [2:0] Input_r_ARSIZE;
reg   [1:0] Input_r_ARBURST;
reg   [1:0] Input_r_ARLOCK;
reg   [3:0] Input_r_ARCACHE;
reg   [2:0] Input_r_ARPROT;
reg   [3:0] Input_r_ARQOS;
reg   [3:0] Input_r_ARREGION;
reg   [0:0] Input_r_ARUSER;
wire    Input_r_RVALID;
reg    Input_r_RREADY;
wire   [31:0] Input_r_RDATA;
wire    Input_r_RLAST;
wire   [0:0] Input_r_RID;
wire   [0:0] Input_r_RUSER;
wire   [1:0] Input_r_RRESP;
wire    Input_r_BVALID;
wire   [1:0] Input_r_BRESP;
wire   [0:0] Input_r_BID;
wire   [0:0] Input_r_BUSER;
reg    Output_r_AWVALID;
wire    Output_r_AWREADY;
reg   [31:0] Output_r_AWADDR;
reg   [0:0] Output_r_AWID;
reg   [31:0] Output_r_AWLEN;
reg   [2:0] Output_r_AWSIZE;
reg   [1:0] Output_r_AWBURST;
reg   [1:0] Output_r_AWLOCK;
reg   [3:0] Output_r_AWCACHE;
reg   [2:0] Output_r_AWPROT;
reg   [3:0] Output_r_AWQOS;
reg   [3:0] Output_r_AWREGION;
reg   [0:0] Output_r_AWUSER;
reg    Output_r_WVALID;
wire    Output_r_WREADY;
reg   [31:0] Output_r_WDATA;
reg   [3:0] Output_r_WSTRB;
reg    Output_r_WLAST;
reg   [0:0] Output_r_WID;
reg   [0:0] Output_r_WUSER;
wire    Output_r_ARREADY;
wire    Output_r_RVALID;
wire   [31:0] Output_r_RDATA;
wire    Output_r_RLAST;
wire   [0:0] Output_r_RID;
wire   [0:0] Output_r_RUSER;
wire   [1:0] Output_r_RRESP;
wire    Output_r_BVALID;
reg    Output_r_BREADY;
wire   [1:0] Output_r_BRESP;
wire   [0:0] Output_r_BID;
wire   [0:0] Output_r_BUSER;
wire    Weight_AWREADY;
wire    Weight_WREADY;
reg    Weight_ARVALID;
wire    Weight_ARREADY;
reg   [31:0] Weight_ARADDR;
reg   [0:0] Weight_ARID;
reg   [31:0] Weight_ARLEN;
reg   [2:0] Weight_ARSIZE;
reg   [1:0] Weight_ARBURST;
reg   [1:0] Weight_ARLOCK;
reg   [3:0] Weight_ARCACHE;
reg   [2:0] Weight_ARPROT;
reg   [3:0] Weight_ARQOS;
reg   [3:0] Weight_ARREGION;
reg   [0:0] Weight_ARUSER;
wire    Weight_RVALID;
reg    Weight_RREADY;
wire   [31:0] Weight_RDATA;
wire    Weight_RLAST;
wire   [0:0] Weight_RID;
wire   [0:0] Weight_RUSER;
wire   [1:0] Weight_RRESP;
wire    Weight_BVALID;
wire   [1:0] Weight_BRESP;
wire   [0:0] Weight_BID;
wire   [0:0] Weight_BUSER;
wire    Beta_AWREADY;
wire    Beta_WREADY;
reg    Beta_ARVALID;
wire    Beta_ARREADY;
wire   [31:0] Beta_ARADDR;
wire   [31:0] Beta_ARLEN;
wire    Beta_RVALID;
reg    Beta_RREADY;
wire   [31:0] Beta_RDATA;
wire    Beta_RLAST;
wire   [0:0] Beta_RID;
wire   [0:0] Beta_RUSER;
wire   [1:0] Beta_RRESP;
wire    Beta_BVALID;
wire   [1:0] Beta_BRESP;
wire   [0:0] Beta_BID;
wire   [0:0] Beta_BUSER;
reg   [29:0] indvar_reg_868;
reg   [29:0] indvar_reg_868_pp0_iter1_reg;
wire    ap_block_state9_pp0_stage0_iter0;
reg    ap_block_state10_pp0_stage0_iter1;
wire    ap_block_state11_pp0_stage0_iter2;
reg    ap_block_pp0_stage0_11001;
reg   [12:0] indvar2_reg_880;
reg   [31:0] M_read_reg_2386;
reg   [31:0] LayerType_read_reg_2392;
reg   [31:0] nLoops_read_reg_2399;
reg   [31:0] mLoops_read_reg_2408;
reg   [31:0] TC_read_reg_2413;
reg   [31:0] TR_read_reg_2426;
reg   [31:0] TN_read_reg_2439;
reg   [31:0] TM_read_reg_2448;
reg   [31:0] Kernel_size_read_reg_2457;
reg   [29:0] Beta_offset7_reg_2464;
reg   [29:0] Weight_offset5_reg_2469;
reg   [29:0] Output_offset3_reg_2475;
reg   [29:0] Input_offset1_reg_2481;
wire   [29:0] tmp_197_fu_2052_p1;
reg   [29:0] tmp_197_reg_2487;
reg    ap_sig_ioackin_Beta_ARREADY;
reg   [31:0] Input_addr_reg_2504;
wire    ap_CS_fsm_state8;
wire   [0:0] exitcond_fu_2079_p2;
reg   [0:0] exitcond_reg_2510_pp0_iter1_reg;
wire   [29:0] indvar_next_fu_2084_p2;
reg   [29:0] indvar_next_reg_2514;
reg    ap_enable_reg_pp0_iter0;
reg   [31:0] Beta_addr_read_reg_2519;
reg    ap_sig_ioackin_Input_r_ARREADY;
reg    ap_block_state12_io;
wire   [0:0] exitcond1_fu_2100_p2;
wire    ap_block_state19_pp1_stage0_iter0;
reg    ap_block_state20_pp1_stage0_iter1;
wire    ap_block_state21_pp1_stage0_iter2;
reg    ap_block_pp1_stage0_11001;
wire   [12:0] indvar_next1_fu_2106_p2;
reg    ap_enable_reg_pp1_iter0;
wire   [2:0] tmp_198_fu_2112_p1;
reg   [2:0] tmp_198_reg_2537;
reg   [2:0] tmp_198_reg_2537_pp1_iter1_reg;
reg   [9:0] newIndex_reg_2541;
reg   [9:0] newIndex_reg_2541_pp1_iter1_reg;
reg   [31:0] Input_addr_read_reg_2546;
wire   [0:0] tmp_70_fu_2157_p2;
reg   [0:0] tmp_70_reg_2558;
wire    ap_CS_fsm_state22;
wire   [0:0] tmp_71_fu_2162_p2;
reg   [0:0] tmp_71_reg_2570;
wire   [31:0] tmp_72_fu_2212_p3;
reg   [31:0] tmp_72_reg_2576;
wire   [31:0] tmp_73_fu_2265_p3;
reg   [31:0] tmp_73_reg_2581;
wire   [0:0] tmp_75_fu_2278_p2;
reg   [0:0] tmp_75_reg_2586;
wire  signed [31:0] tmp_fu_2284_p2;
reg  signed [31:0] tmp_reg_2591;
wire  signed [31:0] tmp2_fu_2288_p2;
reg  signed [31:0] tmp2_reg_2596;
wire  signed [31:0] tmp5_fu_2292_p2;
reg  signed [31:0] tmp5_reg_2601;
wire   [31:0] next_mul1_fu_2296_p2;
reg   [31:0] next_mul1_reg_2606;
wire    ap_CS_fsm_state23;
wire   [31:0] next_mul2_fu_2301_p2;
reg   [31:0] next_mul2_reg_2611;
wire   [31:0] next_mul3_fu_2306_p2;
reg   [31:0] next_mul3_reg_2616;
wire   [30:0] m_1_fu_2320_p2;
reg   [30:0] m_1_reg_2624;
wire   [31:0] tmp_78_fu_2330_p3;
reg   [31:0] tmp_78_reg_2629;
wire   [0:0] tmp_76_fu_2315_p2;
wire   [30:0] tmp_83_fu_2347_p2;
reg   [30:0] tmp_83_reg_2637;
wire    ap_CS_fsm_state24;
wire   [31:0] next_mul_fu_2353_p2;
reg   [31:0] next_mul_reg_2642;
wire   [0:0] tmp_80_fu_2342_p2;
wire   [31:0] tmp_81_fu_2358_p2;
reg   [31:0] tmp_81_reg_2647;
wire  signed [31:0] tmp6_fu_2363_p2;
reg  signed [31:0] tmp6_reg_2652;
wire   [31:0] tmp_84_fu_2369_p2;
reg   [31:0] tmp_84_reg_2657;
wire  signed [31:0] tmp4_fu_2374_p2;
reg  signed [31:0] tmp4_reg_2662;
wire    ap_CS_fsm_state25;
wire  signed [31:0] tmp3_fu_2378_p2;
reg  signed [31:0] tmp3_reg_2667;
wire    ap_CS_fsm_state26;
wire   [31:0] tmp_82_fu_2382_p2;
reg   [31:0] tmp_82_reg_2672;
wire    ap_CS_fsm_state27;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state9;
reg    ap_enable_reg_pp0_iter2;
wire    ap_CS_fsm_state18;
reg    ap_block_pp1_stage0_subdone;
reg    ap_condition_pp1_exit_iter0_state19;
reg    ap_enable_reg_pp1_iter2;
wire    grp_pool_fu_962_ap_start;
wire    grp_pool_fu_962_ap_done;
wire    grp_pool_fu_962_ap_idle;
wire    grp_pool_fu_962_ap_ready;
wire   [9:0] grp_pool_fu_962_Input_0_address0;
wire    grp_pool_fu_962_Input_0_ce0;
wire   [9:0] grp_pool_fu_962_Input_0_address1;
wire    grp_pool_fu_962_Input_0_ce1;
wire    grp_pool_fu_962_Input_0_we1;
wire   [31:0] grp_pool_fu_962_Input_0_d1;
wire   [9:0] grp_pool_fu_962_Input_1_address0;
wire    grp_pool_fu_962_Input_1_ce0;
wire   [9:0] grp_pool_fu_962_Input_1_address1;
wire    grp_pool_fu_962_Input_1_ce1;
wire    grp_pool_fu_962_Input_1_we1;
wire   [31:0] grp_pool_fu_962_Input_1_d1;
wire   [9:0] grp_pool_fu_962_Input_2_address0;
wire    grp_pool_fu_962_Input_2_ce0;
wire   [9:0] grp_pool_fu_962_Input_2_address1;
wire    grp_pool_fu_962_Input_2_ce1;
wire    grp_pool_fu_962_Input_2_we1;
wire   [31:0] grp_pool_fu_962_Input_2_d1;
wire   [9:0] grp_pool_fu_962_Input_3_address0;
wire    grp_pool_fu_962_Input_3_ce0;
wire   [9:0] grp_pool_fu_962_Input_3_address1;
wire    grp_pool_fu_962_Input_3_ce1;
wire    grp_pool_fu_962_Input_3_we1;
wire   [31:0] grp_pool_fu_962_Input_3_d1;
wire   [9:0] grp_pool_fu_962_Input_4_address0;
wire    grp_pool_fu_962_Input_4_ce0;
wire   [9:0] grp_pool_fu_962_Input_4_address1;
wire    grp_pool_fu_962_Input_4_ce1;
wire    grp_pool_fu_962_Input_4_we1;
wire   [31:0] grp_pool_fu_962_Input_4_d1;
wire   [9:0] grp_pool_fu_962_Input_5_address0;
wire    grp_pool_fu_962_Input_5_ce0;
wire   [9:0] grp_pool_fu_962_Input_5_address1;
wire    grp_pool_fu_962_Input_5_ce1;
wire    grp_pool_fu_962_Input_5_we1;
wire   [31:0] grp_pool_fu_962_Input_5_d1;
wire   [9:0] grp_pool_fu_962_Input_6_address0;
wire    grp_pool_fu_962_Input_6_ce0;
wire   [9:0] grp_pool_fu_962_Input_6_address1;
wire    grp_pool_fu_962_Input_6_ce1;
wire    grp_pool_fu_962_Input_6_we1;
wire   [31:0] grp_pool_fu_962_Input_6_d1;
wire   [9:0] grp_pool_fu_962_Input_7_address0;
wire    grp_pool_fu_962_Input_7_ce0;
wire   [9:0] grp_pool_fu_962_Input_7_address1;
wire    grp_pool_fu_962_Input_7_ce1;
wire    grp_pool_fu_962_Input_7_we1;
wire   [31:0] grp_pool_fu_962_Input_7_d1;
wire   [9:0] grp_pool_fu_962_Input_8_address0;
wire    grp_pool_fu_962_Input_8_ce0;
wire   [9:0] grp_pool_fu_962_Input_8_address1;
wire    grp_pool_fu_962_Input_8_ce1;
wire    grp_pool_fu_962_Input_8_we1;
wire   [31:0] grp_pool_fu_962_Input_8_d1;
wire   [9:0] grp_pool_fu_962_Input_9_address0;
wire    grp_pool_fu_962_Input_9_ce0;
wire   [9:0] grp_pool_fu_962_Input_9_address1;
wire    grp_pool_fu_962_Input_9_ce1;
wire    grp_pool_fu_962_Input_9_we1;
wire   [31:0] grp_pool_fu_962_Input_9_d1;
wire   [9:0] grp_pool_fu_962_Input_10_address0;
wire    grp_pool_fu_962_Input_10_ce0;
wire   [9:0] grp_pool_fu_962_Input_10_address1;
wire    grp_pool_fu_962_Input_10_ce1;
wire    grp_pool_fu_962_Input_10_we1;
wire   [31:0] grp_pool_fu_962_Input_10_d1;
wire   [9:0] grp_pool_fu_962_Input_11_address0;
wire    grp_pool_fu_962_Input_11_ce0;
wire   [9:0] grp_pool_fu_962_Input_11_address1;
wire    grp_pool_fu_962_Input_11_ce1;
wire    grp_pool_fu_962_Input_11_we1;
wire   [31:0] grp_pool_fu_962_Input_11_d1;
wire   [9:0] grp_pool_fu_962_Input_12_address0;
wire    grp_pool_fu_962_Input_12_ce0;
wire   [9:0] grp_pool_fu_962_Input_12_address1;
wire    grp_pool_fu_962_Input_12_ce1;
wire    grp_pool_fu_962_Input_12_we1;
wire   [31:0] grp_pool_fu_962_Input_12_d1;
wire   [9:0] grp_pool_fu_962_Input_13_address0;
wire    grp_pool_fu_962_Input_13_ce0;
wire   [9:0] grp_pool_fu_962_Input_13_address1;
wire    grp_pool_fu_962_Input_13_ce1;
wire    grp_pool_fu_962_Input_13_we1;
wire   [31:0] grp_pool_fu_962_Input_13_d1;
wire   [9:0] grp_pool_fu_962_Input_14_address0;
wire    grp_pool_fu_962_Input_14_ce0;
wire   [9:0] grp_pool_fu_962_Input_14_address1;
wire    grp_pool_fu_962_Input_14_ce1;
wire    grp_pool_fu_962_Input_14_we1;
wire   [31:0] grp_pool_fu_962_Input_14_d1;
wire   [9:0] grp_pool_fu_962_Input_15_address0;
wire    grp_pool_fu_962_Input_15_ce0;
wire   [9:0] grp_pool_fu_962_Input_15_address1;
wire    grp_pool_fu_962_Input_15_ce1;
wire    grp_pool_fu_962_Input_15_we1;
wire   [31:0] grp_pool_fu_962_Input_15_d1;
wire   [9:0] grp_pool_fu_962_Input_16_address0;
wire    grp_pool_fu_962_Input_16_ce0;
wire   [9:0] grp_pool_fu_962_Input_16_address1;
wire    grp_pool_fu_962_Input_16_ce1;
wire    grp_pool_fu_962_Input_16_we1;
wire   [31:0] grp_pool_fu_962_Input_16_d1;
wire   [9:0] grp_pool_fu_962_Input_17_address0;
wire    grp_pool_fu_962_Input_17_ce0;
wire   [9:0] grp_pool_fu_962_Input_17_address1;
wire    grp_pool_fu_962_Input_17_ce1;
wire    grp_pool_fu_962_Input_17_we1;
wire   [31:0] grp_pool_fu_962_Input_17_d1;
wire   [9:0] grp_pool_fu_962_Input_18_address0;
wire    grp_pool_fu_962_Input_18_ce0;
wire   [9:0] grp_pool_fu_962_Input_18_address1;
wire    grp_pool_fu_962_Input_18_ce1;
wire    grp_pool_fu_962_Input_18_we1;
wire   [31:0] grp_pool_fu_962_Input_18_d1;
wire   [9:0] grp_pool_fu_962_Input_19_address0;
wire    grp_pool_fu_962_Input_19_ce0;
wire   [9:0] grp_pool_fu_962_Input_19_address1;
wire    grp_pool_fu_962_Input_19_ce1;
wire    grp_pool_fu_962_Input_19_we1;
wire   [31:0] grp_pool_fu_962_Input_19_d1;
wire   [9:0] grp_pool_fu_962_Input_20_address0;
wire    grp_pool_fu_962_Input_20_ce0;
wire   [9:0] grp_pool_fu_962_Input_20_address1;
wire    grp_pool_fu_962_Input_20_ce1;
wire    grp_pool_fu_962_Input_20_we1;
wire   [31:0] grp_pool_fu_962_Input_20_d1;
wire   [9:0] grp_pool_fu_962_Input_21_address0;
wire    grp_pool_fu_962_Input_21_ce0;
wire   [9:0] grp_pool_fu_962_Input_21_address1;
wire    grp_pool_fu_962_Input_21_ce1;
wire    grp_pool_fu_962_Input_21_we1;
wire   [31:0] grp_pool_fu_962_Input_21_d1;
wire   [9:0] grp_pool_fu_962_Input_22_address0;
wire    grp_pool_fu_962_Input_22_ce0;
wire   [9:0] grp_pool_fu_962_Input_22_address1;
wire    grp_pool_fu_962_Input_22_ce1;
wire    grp_pool_fu_962_Input_22_we1;
wire   [31:0] grp_pool_fu_962_Input_22_d1;
wire   [9:0] grp_pool_fu_962_Input_23_address0;
wire    grp_pool_fu_962_Input_23_ce0;
wire   [9:0] grp_pool_fu_962_Input_23_address1;
wire    grp_pool_fu_962_Input_23_ce1;
wire    grp_pool_fu_962_Input_23_we1;
wire   [31:0] grp_pool_fu_962_Input_23_d1;
wire   [9:0] grp_pool_fu_962_Input_24_address0;
wire    grp_pool_fu_962_Input_24_ce0;
wire   [9:0] grp_pool_fu_962_Input_24_address1;
wire    grp_pool_fu_962_Input_24_ce1;
wire    grp_pool_fu_962_Input_24_we1;
wire   [31:0] grp_pool_fu_962_Input_24_d1;
wire   [9:0] grp_pool_fu_962_Input_25_address0;
wire    grp_pool_fu_962_Input_25_ce0;
wire   [9:0] grp_pool_fu_962_Input_25_address1;
wire    grp_pool_fu_962_Input_25_ce1;
wire    grp_pool_fu_962_Input_25_we1;
wire   [31:0] grp_pool_fu_962_Input_25_d1;
wire   [9:0] grp_pool_fu_962_Input_26_address0;
wire    grp_pool_fu_962_Input_26_ce0;
wire   [9:0] grp_pool_fu_962_Input_26_address1;
wire    grp_pool_fu_962_Input_26_ce1;
wire    grp_pool_fu_962_Input_26_we1;
wire   [31:0] grp_pool_fu_962_Input_26_d1;
wire   [9:0] grp_pool_fu_962_Input_27_address0;
wire    grp_pool_fu_962_Input_27_ce0;
wire   [9:0] grp_pool_fu_962_Input_27_address1;
wire    grp_pool_fu_962_Input_27_ce1;
wire    grp_pool_fu_962_Input_27_we1;
wire   [31:0] grp_pool_fu_962_Input_27_d1;
wire   [9:0] grp_pool_fu_962_Input_28_address0;
wire    grp_pool_fu_962_Input_28_ce0;
wire   [9:0] grp_pool_fu_962_Input_28_address1;
wire    grp_pool_fu_962_Input_28_ce1;
wire    grp_pool_fu_962_Input_28_we1;
wire   [31:0] grp_pool_fu_962_Input_28_d1;
wire   [9:0] grp_pool_fu_962_Input_29_address0;
wire    grp_pool_fu_962_Input_29_ce0;
wire   [9:0] grp_pool_fu_962_Input_29_address1;
wire    grp_pool_fu_962_Input_29_ce1;
wire    grp_pool_fu_962_Input_29_we1;
wire   [31:0] grp_pool_fu_962_Input_29_d1;
wire   [9:0] grp_pool_fu_962_Input_30_address0;
wire    grp_pool_fu_962_Input_30_ce0;
wire   [9:0] grp_pool_fu_962_Input_30_address1;
wire    grp_pool_fu_962_Input_30_ce1;
wire    grp_pool_fu_962_Input_30_we1;
wire   [31:0] grp_pool_fu_962_Input_30_d1;
wire   [9:0] grp_pool_fu_962_Input_31_address0;
wire    grp_pool_fu_962_Input_31_ce0;
wire   [9:0] grp_pool_fu_962_Input_31_address1;
wire    grp_pool_fu_962_Input_31_ce1;
wire    grp_pool_fu_962_Input_31_we1;
wire   [31:0] grp_pool_fu_962_Input_31_d1;
wire    grp_pool_fu_962_enable;
wire    grp_conv_fu_1033_ap_start;
wire    grp_conv_fu_1033_ap_done;
wire    grp_conv_fu_1033_ap_idle;
wire    grp_conv_fu_1033_ap_ready;
wire   [9:0] grp_conv_fu_1033_output_buffer_0_address0;
wire    grp_conv_fu_1033_output_buffer_0_ce0;
wire    grp_conv_fu_1033_output_buffer_0_we0;
wire   [31:0] grp_conv_fu_1033_output_buffer_0_d0;
wire   [9:0] grp_conv_fu_1033_output_buffer_1_address0;
wire    grp_conv_fu_1033_output_buffer_1_ce0;
wire    grp_conv_fu_1033_output_buffer_1_we0;
wire   [31:0] grp_conv_fu_1033_output_buffer_1_d0;
wire   [9:0] grp_conv_fu_1033_output_buffer_2_address0;
wire    grp_conv_fu_1033_output_buffer_2_ce0;
wire    grp_conv_fu_1033_output_buffer_2_we0;
wire   [31:0] grp_conv_fu_1033_output_buffer_2_d0;
wire   [9:0] grp_conv_fu_1033_output_buffer_3_address0;
wire    grp_conv_fu_1033_output_buffer_3_ce0;
wire    grp_conv_fu_1033_output_buffer_3_we0;
wire   [31:0] grp_conv_fu_1033_output_buffer_3_d0;
wire   [9:0] grp_conv_fu_1033_output_buffer_4_address0;
wire    grp_conv_fu_1033_output_buffer_4_ce0;
wire    grp_conv_fu_1033_output_buffer_4_we0;
wire   [31:0] grp_conv_fu_1033_output_buffer_4_d0;
wire   [9:0] grp_conv_fu_1033_output_buffer_5_address0;
wire    grp_conv_fu_1033_output_buffer_5_ce0;
wire    grp_conv_fu_1033_output_buffer_5_we0;
wire   [31:0] grp_conv_fu_1033_output_buffer_5_d0;
wire   [9:0] grp_conv_fu_1033_output_buffer_6_address0;
wire    grp_conv_fu_1033_output_buffer_6_ce0;
wire    grp_conv_fu_1033_output_buffer_6_we0;
wire   [31:0] grp_conv_fu_1033_output_buffer_6_d0;
wire   [9:0] grp_conv_fu_1033_output_buffer_7_address0;
wire    grp_conv_fu_1033_output_buffer_7_ce0;
wire    grp_conv_fu_1033_output_buffer_7_we0;
wire   [31:0] grp_conv_fu_1033_output_buffer_7_d0;
wire   [9:0] grp_conv_fu_1033_output_buffer_8_address0;
wire    grp_conv_fu_1033_output_buffer_8_ce0;
wire    grp_conv_fu_1033_output_buffer_8_we0;
wire   [31:0] grp_conv_fu_1033_output_buffer_8_d0;
wire   [9:0] grp_conv_fu_1033_output_buffer_9_address0;
wire    grp_conv_fu_1033_output_buffer_9_ce0;
wire    grp_conv_fu_1033_output_buffer_9_we0;
wire   [31:0] grp_conv_fu_1033_output_buffer_9_d0;
wire   [9:0] grp_conv_fu_1033_output_buffer_10_address0;
wire    grp_conv_fu_1033_output_buffer_10_ce0;
wire    grp_conv_fu_1033_output_buffer_10_we0;
wire   [31:0] grp_conv_fu_1033_output_buffer_10_d0;
wire   [9:0] grp_conv_fu_1033_output_buffer_11_address0;
wire    grp_conv_fu_1033_output_buffer_11_ce0;
wire    grp_conv_fu_1033_output_buffer_11_we0;
wire   [31:0] grp_conv_fu_1033_output_buffer_11_d0;
wire   [9:0] grp_conv_fu_1033_output_buffer_12_address0;
wire    grp_conv_fu_1033_output_buffer_12_ce0;
wire    grp_conv_fu_1033_output_buffer_12_we0;
wire   [31:0] grp_conv_fu_1033_output_buffer_12_d0;
wire   [9:0] grp_conv_fu_1033_output_buffer_13_address0;
wire    grp_conv_fu_1033_output_buffer_13_ce0;
wire    grp_conv_fu_1033_output_buffer_13_we0;
wire   [31:0] grp_conv_fu_1033_output_buffer_13_d0;
wire   [9:0] grp_conv_fu_1033_output_buffer_14_address0;
wire    grp_conv_fu_1033_output_buffer_14_ce0;
wire    grp_conv_fu_1033_output_buffer_14_we0;
wire   [31:0] grp_conv_fu_1033_output_buffer_14_d0;
wire   [9:0] grp_conv_fu_1033_output_buffer_15_address0;
wire    grp_conv_fu_1033_output_buffer_15_ce0;
wire    grp_conv_fu_1033_output_buffer_15_we0;
wire   [31:0] grp_conv_fu_1033_output_buffer_15_d0;
wire   [9:0] grp_conv_fu_1033_output_buffer_16_address0;
wire    grp_conv_fu_1033_output_buffer_16_ce0;
wire    grp_conv_fu_1033_output_buffer_16_we0;
wire   [31:0] grp_conv_fu_1033_output_buffer_16_d0;
wire   [9:0] grp_conv_fu_1033_output_buffer_17_address0;
wire    grp_conv_fu_1033_output_buffer_17_ce0;
wire    grp_conv_fu_1033_output_buffer_17_we0;
wire   [31:0] grp_conv_fu_1033_output_buffer_17_d0;
wire   [9:0] grp_conv_fu_1033_output_buffer_18_address0;
wire    grp_conv_fu_1033_output_buffer_18_ce0;
wire    grp_conv_fu_1033_output_buffer_18_we0;
wire   [31:0] grp_conv_fu_1033_output_buffer_18_d0;
wire   [9:0] grp_conv_fu_1033_output_buffer_19_address0;
wire    grp_conv_fu_1033_output_buffer_19_ce0;
wire    grp_conv_fu_1033_output_buffer_19_we0;
wire   [31:0] grp_conv_fu_1033_output_buffer_19_d0;
wire   [9:0] grp_conv_fu_1033_output_buffer_20_address0;
wire    grp_conv_fu_1033_output_buffer_20_ce0;
wire    grp_conv_fu_1033_output_buffer_20_we0;
wire   [31:0] grp_conv_fu_1033_output_buffer_20_d0;
wire   [9:0] grp_conv_fu_1033_output_buffer_21_address0;
wire    grp_conv_fu_1033_output_buffer_21_ce0;
wire    grp_conv_fu_1033_output_buffer_21_we0;
wire   [31:0] grp_conv_fu_1033_output_buffer_21_d0;
wire   [9:0] grp_conv_fu_1033_output_buffer_22_address0;
wire    grp_conv_fu_1033_output_buffer_22_ce0;
wire    grp_conv_fu_1033_output_buffer_22_we0;
wire   [31:0] grp_conv_fu_1033_output_buffer_22_d0;
wire   [9:0] grp_conv_fu_1033_output_buffer_23_address0;
wire    grp_conv_fu_1033_output_buffer_23_ce0;
wire    grp_conv_fu_1033_output_buffer_23_we0;
wire   [31:0] grp_conv_fu_1033_output_buffer_23_d0;
wire   [9:0] grp_conv_fu_1033_output_buffer_24_address0;
wire    grp_conv_fu_1033_output_buffer_24_ce0;
wire    grp_conv_fu_1033_output_buffer_24_we0;
wire   [31:0] grp_conv_fu_1033_output_buffer_24_d0;
wire   [9:0] grp_conv_fu_1033_output_buffer_25_address0;
wire    grp_conv_fu_1033_output_buffer_25_ce0;
wire    grp_conv_fu_1033_output_buffer_25_we0;
wire   [31:0] grp_conv_fu_1033_output_buffer_25_d0;
wire   [9:0] grp_conv_fu_1033_output_buffer_26_address0;
wire    grp_conv_fu_1033_output_buffer_26_ce0;
wire    grp_conv_fu_1033_output_buffer_26_we0;
wire   [31:0] grp_conv_fu_1033_output_buffer_26_d0;
wire   [9:0] grp_conv_fu_1033_output_buffer_27_address0;
wire    grp_conv_fu_1033_output_buffer_27_ce0;
wire    grp_conv_fu_1033_output_buffer_27_we0;
wire   [31:0] grp_conv_fu_1033_output_buffer_27_d0;
wire   [9:0] grp_conv_fu_1033_output_buffer_28_address0;
wire    grp_conv_fu_1033_output_buffer_28_ce0;
wire    grp_conv_fu_1033_output_buffer_28_we0;
wire   [31:0] grp_conv_fu_1033_output_buffer_28_d0;
wire   [9:0] grp_conv_fu_1033_output_buffer_29_address0;
wire    grp_conv_fu_1033_output_buffer_29_ce0;
wire    grp_conv_fu_1033_output_buffer_29_we0;
wire   [31:0] grp_conv_fu_1033_output_buffer_29_d0;
wire   [9:0] grp_conv_fu_1033_output_buffer_30_address0;
wire    grp_conv_fu_1033_output_buffer_30_ce0;
wire    grp_conv_fu_1033_output_buffer_30_we0;
wire   [31:0] grp_conv_fu_1033_output_buffer_30_d0;
wire   [9:0] grp_conv_fu_1033_output_buffer_31_address0;
wire    grp_conv_fu_1033_output_buffer_31_ce0;
wire    grp_conv_fu_1033_output_buffer_31_we0;
wire   [31:0] grp_conv_fu_1033_output_buffer_31_d0;
wire   [9:0] grp_conv_fu_1033_beta_buffer_address0;
wire    grp_conv_fu_1033_beta_buffer_ce0;
wire    grp_conv_fu_1033_enable;
wire   [4:0] grp_conv_fu_1033_weight_buffer_V_0_25_address0;
wire    grp_conv_fu_1033_weight_buffer_V_0_25_ce0;
wire   [4:0] grp_conv_fu_1033_weight_buffer_V_0_1_address0;
wire    grp_conv_fu_1033_weight_buffer_V_0_1_ce0;
wire   [4:0] grp_conv_fu_1033_weight_buffer_V_0_9_address0;
wire    grp_conv_fu_1033_weight_buffer_V_0_9_ce0;
wire   [4:0] grp_conv_fu_1033_weight_buffer_V_0_17_address0;
wire    grp_conv_fu_1033_weight_buffer_V_0_17_ce0;
wire   [4:0] grp_conv_fu_1033_weight_buffer_V_1_25_address0;
wire    grp_conv_fu_1033_weight_buffer_V_1_25_ce0;
wire   [4:0] grp_conv_fu_1033_weight_buffer_V_1_1_address0;
wire    grp_conv_fu_1033_weight_buffer_V_1_1_ce0;
wire   [4:0] grp_conv_fu_1033_weight_buffer_V_1_9_address0;
wire    grp_conv_fu_1033_weight_buffer_V_1_9_ce0;
wire   [4:0] grp_conv_fu_1033_weight_buffer_V_1_17_address0;
wire    grp_conv_fu_1033_weight_buffer_V_1_17_ce0;
wire   [4:0] grp_conv_fu_1033_weight_buffer_V_2_25_address0;
wire    grp_conv_fu_1033_weight_buffer_V_2_25_ce0;
wire   [4:0] grp_conv_fu_1033_weight_buffer_V_2_1_address0;
wire    grp_conv_fu_1033_weight_buffer_V_2_1_ce0;
wire   [4:0] grp_conv_fu_1033_weight_buffer_V_2_9_address0;
wire    grp_conv_fu_1033_weight_buffer_V_2_9_ce0;
wire   [4:0] grp_conv_fu_1033_weight_buffer_V_2_17_address0;
wire    grp_conv_fu_1033_weight_buffer_V_2_17_ce0;
wire   [4:0] grp_conv_fu_1033_weight_buffer_V_3_25_address0;
wire    grp_conv_fu_1033_weight_buffer_V_3_25_ce0;
wire   [4:0] grp_conv_fu_1033_weight_buffer_V_3_1_address0;
wire    grp_conv_fu_1033_weight_buffer_V_3_1_ce0;
wire   [4:0] grp_conv_fu_1033_weight_buffer_V_3_9_address0;
wire    grp_conv_fu_1033_weight_buffer_V_3_9_ce0;
wire   [4:0] grp_conv_fu_1033_weight_buffer_V_3_17_address0;
wire    grp_conv_fu_1033_weight_buffer_V_3_17_ce0;
wire   [4:0] grp_conv_fu_1033_weight_buffer_V_0_26_address0;
wire    grp_conv_fu_1033_weight_buffer_V_0_26_ce0;
wire   [4:0] grp_conv_fu_1033_weight_buffer_V_0_2_address0;
wire    grp_conv_fu_1033_weight_buffer_V_0_2_ce0;
wire   [4:0] grp_conv_fu_1033_weight_buffer_V_0_10_address0;
wire    grp_conv_fu_1033_weight_buffer_V_0_10_ce0;
wire   [4:0] grp_conv_fu_1033_weight_buffer_V_0_18_address0;
wire    grp_conv_fu_1033_weight_buffer_V_0_18_ce0;
wire   [4:0] grp_conv_fu_1033_weight_buffer_V_1_26_address0;
wire    grp_conv_fu_1033_weight_buffer_V_1_26_ce0;
wire   [4:0] grp_conv_fu_1033_weight_buffer_V_1_2_address0;
wire    grp_conv_fu_1033_weight_buffer_V_1_2_ce0;
wire   [4:0] grp_conv_fu_1033_weight_buffer_V_1_10_address0;
wire    grp_conv_fu_1033_weight_buffer_V_1_10_ce0;
wire   [4:0] grp_conv_fu_1033_weight_buffer_V_1_18_address0;
wire    grp_conv_fu_1033_weight_buffer_V_1_18_ce0;
wire   [4:0] grp_conv_fu_1033_weight_buffer_V_2_26_address0;
wire    grp_conv_fu_1033_weight_buffer_V_2_26_ce0;
wire   [4:0] grp_conv_fu_1033_weight_buffer_V_2_2_address0;
wire    grp_conv_fu_1033_weight_buffer_V_2_2_ce0;
wire   [4:0] grp_conv_fu_1033_weight_buffer_V_2_10_address0;
wire    grp_conv_fu_1033_weight_buffer_V_2_10_ce0;
wire   [4:0] grp_conv_fu_1033_weight_buffer_V_2_18_address0;
wire    grp_conv_fu_1033_weight_buffer_V_2_18_ce0;
wire   [4:0] grp_conv_fu_1033_weight_buffer_V_3_26_address0;
wire    grp_conv_fu_1033_weight_buffer_V_3_26_ce0;
wire   [4:0] grp_conv_fu_1033_weight_buffer_V_3_2_address0;
wire    grp_conv_fu_1033_weight_buffer_V_3_2_ce0;
wire   [4:0] grp_conv_fu_1033_weight_buffer_V_3_10_address0;
wire    grp_conv_fu_1033_weight_buffer_V_3_10_ce0;
wire   [4:0] grp_conv_fu_1033_weight_buffer_V_3_18_address0;
wire    grp_conv_fu_1033_weight_buffer_V_3_18_ce0;
wire   [4:0] grp_conv_fu_1033_weight_buffer_V_0_27_address0;
wire    grp_conv_fu_1033_weight_buffer_V_0_27_ce0;
wire   [4:0] grp_conv_fu_1033_weight_buffer_V_0_3_address0;
wire    grp_conv_fu_1033_weight_buffer_V_0_3_ce0;
wire   [4:0] grp_conv_fu_1033_weight_buffer_V_0_11_address0;
wire    grp_conv_fu_1033_weight_buffer_V_0_11_ce0;
wire   [4:0] grp_conv_fu_1033_weight_buffer_V_0_19_address0;
wire    grp_conv_fu_1033_weight_buffer_V_0_19_ce0;
wire   [4:0] grp_conv_fu_1033_weight_buffer_V_1_27_address0;
wire    grp_conv_fu_1033_weight_buffer_V_1_27_ce0;
wire   [4:0] grp_conv_fu_1033_weight_buffer_V_1_3_address0;
wire    grp_conv_fu_1033_weight_buffer_V_1_3_ce0;
wire   [4:0] grp_conv_fu_1033_weight_buffer_V_1_11_address0;
wire    grp_conv_fu_1033_weight_buffer_V_1_11_ce0;
wire   [4:0] grp_conv_fu_1033_weight_buffer_V_1_19_address0;
wire    grp_conv_fu_1033_weight_buffer_V_1_19_ce0;
wire   [4:0] grp_conv_fu_1033_weight_buffer_V_2_27_address0;
wire    grp_conv_fu_1033_weight_buffer_V_2_27_ce0;
wire   [4:0] grp_conv_fu_1033_weight_buffer_V_2_3_address0;
wire    grp_conv_fu_1033_weight_buffer_V_2_3_ce0;
wire   [4:0] grp_conv_fu_1033_weight_buffer_V_2_11_address0;
wire    grp_conv_fu_1033_weight_buffer_V_2_11_ce0;
wire   [4:0] grp_conv_fu_1033_weight_buffer_V_2_19_address0;
wire    grp_conv_fu_1033_weight_buffer_V_2_19_ce0;
wire   [4:0] grp_conv_fu_1033_weight_buffer_V_3_27_address0;
wire    grp_conv_fu_1033_weight_buffer_V_3_27_ce0;
wire   [4:0] grp_conv_fu_1033_weight_buffer_V_3_3_address0;
wire    grp_conv_fu_1033_weight_buffer_V_3_3_ce0;
wire   [4:0] grp_conv_fu_1033_weight_buffer_V_3_11_address0;
wire    grp_conv_fu_1033_weight_buffer_V_3_11_ce0;
wire   [4:0] grp_conv_fu_1033_weight_buffer_V_3_19_address0;
wire    grp_conv_fu_1033_weight_buffer_V_3_19_ce0;
wire   [4:0] grp_conv_fu_1033_weight_buffer_V_0_28_address0;
wire    grp_conv_fu_1033_weight_buffer_V_0_28_ce0;
wire   [4:0] grp_conv_fu_1033_weight_buffer_V_0_4_address0;
wire    grp_conv_fu_1033_weight_buffer_V_0_4_ce0;
wire   [4:0] grp_conv_fu_1033_weight_buffer_V_0_12_address0;
wire    grp_conv_fu_1033_weight_buffer_V_0_12_ce0;
wire   [4:0] grp_conv_fu_1033_weight_buffer_V_0_20_address0;
wire    grp_conv_fu_1033_weight_buffer_V_0_20_ce0;
wire   [4:0] grp_conv_fu_1033_weight_buffer_V_1_28_address0;
wire    grp_conv_fu_1033_weight_buffer_V_1_28_ce0;
wire   [4:0] grp_conv_fu_1033_weight_buffer_V_1_4_address0;
wire    grp_conv_fu_1033_weight_buffer_V_1_4_ce0;
wire   [4:0] grp_conv_fu_1033_weight_buffer_V_1_12_address0;
wire    grp_conv_fu_1033_weight_buffer_V_1_12_ce0;
wire   [4:0] grp_conv_fu_1033_weight_buffer_V_1_20_address0;
wire    grp_conv_fu_1033_weight_buffer_V_1_20_ce0;
wire   [4:0] grp_conv_fu_1033_weight_buffer_V_2_28_address0;
wire    grp_conv_fu_1033_weight_buffer_V_2_28_ce0;
wire   [4:0] grp_conv_fu_1033_weight_buffer_V_2_4_address0;
wire    grp_conv_fu_1033_weight_buffer_V_2_4_ce0;
wire   [4:0] grp_conv_fu_1033_weight_buffer_V_2_12_address0;
wire    grp_conv_fu_1033_weight_buffer_V_2_12_ce0;
wire   [4:0] grp_conv_fu_1033_weight_buffer_V_2_20_address0;
wire    grp_conv_fu_1033_weight_buffer_V_2_20_ce0;
wire   [4:0] grp_conv_fu_1033_weight_buffer_V_3_28_address0;
wire    grp_conv_fu_1033_weight_buffer_V_3_28_ce0;
wire   [4:0] grp_conv_fu_1033_weight_buffer_V_3_4_address0;
wire    grp_conv_fu_1033_weight_buffer_V_3_4_ce0;
wire   [4:0] grp_conv_fu_1033_weight_buffer_V_3_12_address0;
wire    grp_conv_fu_1033_weight_buffer_V_3_12_ce0;
wire   [4:0] grp_conv_fu_1033_weight_buffer_V_3_20_address0;
wire    grp_conv_fu_1033_weight_buffer_V_3_20_ce0;
wire   [4:0] grp_conv_fu_1033_weight_buffer_V_0_29_address0;
wire    grp_conv_fu_1033_weight_buffer_V_0_29_ce0;
wire   [4:0] grp_conv_fu_1033_weight_buffer_V_0_5_address0;
wire    grp_conv_fu_1033_weight_buffer_V_0_5_ce0;
wire   [4:0] grp_conv_fu_1033_weight_buffer_V_0_13_address0;
wire    grp_conv_fu_1033_weight_buffer_V_0_13_ce0;
wire   [4:0] grp_conv_fu_1033_weight_buffer_V_0_21_address0;
wire    grp_conv_fu_1033_weight_buffer_V_0_21_ce0;
wire   [4:0] grp_conv_fu_1033_weight_buffer_V_1_29_address0;
wire    grp_conv_fu_1033_weight_buffer_V_1_29_ce0;
wire   [4:0] grp_conv_fu_1033_weight_buffer_V_1_5_address0;
wire    grp_conv_fu_1033_weight_buffer_V_1_5_ce0;
wire   [4:0] grp_conv_fu_1033_weight_buffer_V_1_13_address0;
wire    grp_conv_fu_1033_weight_buffer_V_1_13_ce0;
wire   [4:0] grp_conv_fu_1033_weight_buffer_V_1_21_address0;
wire    grp_conv_fu_1033_weight_buffer_V_1_21_ce0;
wire   [4:0] grp_conv_fu_1033_weight_buffer_V_2_29_address0;
wire    grp_conv_fu_1033_weight_buffer_V_2_29_ce0;
wire   [4:0] grp_conv_fu_1033_weight_buffer_V_2_5_address0;
wire    grp_conv_fu_1033_weight_buffer_V_2_5_ce0;
wire   [4:0] grp_conv_fu_1033_weight_buffer_V_2_13_address0;
wire    grp_conv_fu_1033_weight_buffer_V_2_13_ce0;
wire   [4:0] grp_conv_fu_1033_weight_buffer_V_2_21_address0;
wire    grp_conv_fu_1033_weight_buffer_V_2_21_ce0;
wire   [4:0] grp_conv_fu_1033_weight_buffer_V_3_29_address0;
wire    grp_conv_fu_1033_weight_buffer_V_3_29_ce0;
wire   [4:0] grp_conv_fu_1033_weight_buffer_V_3_5_address0;
wire    grp_conv_fu_1033_weight_buffer_V_3_5_ce0;
wire   [4:0] grp_conv_fu_1033_weight_buffer_V_3_13_address0;
wire    grp_conv_fu_1033_weight_buffer_V_3_13_ce0;
wire   [4:0] grp_conv_fu_1033_weight_buffer_V_3_21_address0;
wire    grp_conv_fu_1033_weight_buffer_V_3_21_ce0;
wire   [4:0] grp_conv_fu_1033_weight_buffer_V_0_30_address0;
wire    grp_conv_fu_1033_weight_buffer_V_0_30_ce0;
wire   [4:0] grp_conv_fu_1033_weight_buffer_V_0_6_address0;
wire    grp_conv_fu_1033_weight_buffer_V_0_6_ce0;
wire   [4:0] grp_conv_fu_1033_weight_buffer_V_0_14_address0;
wire    grp_conv_fu_1033_weight_buffer_V_0_14_ce0;
wire   [4:0] grp_conv_fu_1033_weight_buffer_V_0_22_address0;
wire    grp_conv_fu_1033_weight_buffer_V_0_22_ce0;
wire   [4:0] grp_conv_fu_1033_weight_buffer_V_1_30_address0;
wire    grp_conv_fu_1033_weight_buffer_V_1_30_ce0;
wire   [4:0] grp_conv_fu_1033_weight_buffer_V_1_6_address0;
wire    grp_conv_fu_1033_weight_buffer_V_1_6_ce0;
wire   [4:0] grp_conv_fu_1033_weight_buffer_V_1_14_address0;
wire    grp_conv_fu_1033_weight_buffer_V_1_14_ce0;
wire   [4:0] grp_conv_fu_1033_weight_buffer_V_1_22_address0;
wire    grp_conv_fu_1033_weight_buffer_V_1_22_ce0;
wire   [4:0] grp_conv_fu_1033_weight_buffer_V_2_30_address0;
wire    grp_conv_fu_1033_weight_buffer_V_2_30_ce0;
wire   [4:0] grp_conv_fu_1033_weight_buffer_V_2_6_address0;
wire    grp_conv_fu_1033_weight_buffer_V_2_6_ce0;
wire   [4:0] grp_conv_fu_1033_weight_buffer_V_2_14_address0;
wire    grp_conv_fu_1033_weight_buffer_V_2_14_ce0;
wire   [4:0] grp_conv_fu_1033_weight_buffer_V_2_22_address0;
wire    grp_conv_fu_1033_weight_buffer_V_2_22_ce0;
wire   [4:0] grp_conv_fu_1033_weight_buffer_V_3_30_address0;
wire    grp_conv_fu_1033_weight_buffer_V_3_30_ce0;
wire   [4:0] grp_conv_fu_1033_weight_buffer_V_3_6_address0;
wire    grp_conv_fu_1033_weight_buffer_V_3_6_ce0;
wire   [4:0] grp_conv_fu_1033_weight_buffer_V_3_14_address0;
wire    grp_conv_fu_1033_weight_buffer_V_3_14_ce0;
wire   [4:0] grp_conv_fu_1033_weight_buffer_V_3_22_address0;
wire    grp_conv_fu_1033_weight_buffer_V_3_22_ce0;
wire   [4:0] grp_conv_fu_1033_weight_buffer_V_0_31_address0;
wire    grp_conv_fu_1033_weight_buffer_V_0_31_ce0;
wire   [4:0] grp_conv_fu_1033_weight_buffer_V_0_7_address0;
wire    grp_conv_fu_1033_weight_buffer_V_0_7_ce0;
wire   [4:0] grp_conv_fu_1033_weight_buffer_V_0_15_address0;
wire    grp_conv_fu_1033_weight_buffer_V_0_15_ce0;
wire   [4:0] grp_conv_fu_1033_weight_buffer_V_0_23_address0;
wire    grp_conv_fu_1033_weight_buffer_V_0_23_ce0;
wire   [4:0] grp_conv_fu_1033_weight_buffer_V_1_31_address0;
wire    grp_conv_fu_1033_weight_buffer_V_1_31_ce0;
wire   [4:0] grp_conv_fu_1033_weight_buffer_V_1_7_address0;
wire    grp_conv_fu_1033_weight_buffer_V_1_7_ce0;
wire   [4:0] grp_conv_fu_1033_weight_buffer_V_1_15_address0;
wire    grp_conv_fu_1033_weight_buffer_V_1_15_ce0;
wire   [4:0] grp_conv_fu_1033_weight_buffer_V_1_23_address0;
wire    grp_conv_fu_1033_weight_buffer_V_1_23_ce0;
wire   [4:0] grp_conv_fu_1033_weight_buffer_V_2_31_address0;
wire    grp_conv_fu_1033_weight_buffer_V_2_31_ce0;
wire   [4:0] grp_conv_fu_1033_weight_buffer_V_2_7_address0;
wire    grp_conv_fu_1033_weight_buffer_V_2_7_ce0;
wire   [4:0] grp_conv_fu_1033_weight_buffer_V_2_15_address0;
wire    grp_conv_fu_1033_weight_buffer_V_2_15_ce0;
wire   [4:0] grp_conv_fu_1033_weight_buffer_V_2_23_address0;
wire    grp_conv_fu_1033_weight_buffer_V_2_23_ce0;
wire   [4:0] grp_conv_fu_1033_weight_buffer_V_3_31_address0;
wire    grp_conv_fu_1033_weight_buffer_V_3_31_ce0;
wire   [4:0] grp_conv_fu_1033_weight_buffer_V_3_7_address0;
wire    grp_conv_fu_1033_weight_buffer_V_3_7_ce0;
wire   [4:0] grp_conv_fu_1033_weight_buffer_V_3_15_address0;
wire    grp_conv_fu_1033_weight_buffer_V_3_15_ce0;
wire   [4:0] grp_conv_fu_1033_weight_buffer_V_3_23_address0;
wire    grp_conv_fu_1033_weight_buffer_V_3_23_ce0;
wire   [10:0] grp_conv_fu_1033_input_buffer_V_0_address0;
wire    grp_conv_fu_1033_input_buffer_V_0_ce0;
wire   [4:0] grp_conv_fu_1033_weight_buffer_V_0_24_address0;
wire    grp_conv_fu_1033_weight_buffer_V_0_24_ce0;
wire   [4:0] grp_conv_fu_1033_weight_buffer_V_0_0_address0;
wire    grp_conv_fu_1033_weight_buffer_V_0_0_ce0;
wire   [4:0] grp_conv_fu_1033_weight_buffer_V_0_8_address0;
wire    grp_conv_fu_1033_weight_buffer_V_0_8_ce0;
wire   [4:0] grp_conv_fu_1033_weight_buffer_V_0_16_address0;
wire    grp_conv_fu_1033_weight_buffer_V_0_16_ce0;
wire   [10:0] grp_conv_fu_1033_input_buffer_V_1_address0;
wire    grp_conv_fu_1033_input_buffer_V_1_ce0;
wire   [4:0] grp_conv_fu_1033_weight_buffer_V_1_24_address0;
wire    grp_conv_fu_1033_weight_buffer_V_1_24_ce0;
wire   [4:0] grp_conv_fu_1033_weight_buffer_V_1_0_address0;
wire    grp_conv_fu_1033_weight_buffer_V_1_0_ce0;
wire   [4:0] grp_conv_fu_1033_weight_buffer_V_1_8_address0;
wire    grp_conv_fu_1033_weight_buffer_V_1_8_ce0;
wire   [4:0] grp_conv_fu_1033_weight_buffer_V_1_16_address0;
wire    grp_conv_fu_1033_weight_buffer_V_1_16_ce0;
wire   [10:0] grp_conv_fu_1033_input_buffer_V_2_address0;
wire    grp_conv_fu_1033_input_buffer_V_2_ce0;
wire   [4:0] grp_conv_fu_1033_weight_buffer_V_2_24_address0;
wire    grp_conv_fu_1033_weight_buffer_V_2_24_ce0;
wire   [4:0] grp_conv_fu_1033_weight_buffer_V_2_0_address0;
wire    grp_conv_fu_1033_weight_buffer_V_2_0_ce0;
wire   [4:0] grp_conv_fu_1033_weight_buffer_V_2_8_address0;
wire    grp_conv_fu_1033_weight_buffer_V_2_8_ce0;
wire   [4:0] grp_conv_fu_1033_weight_buffer_V_2_16_address0;
wire    grp_conv_fu_1033_weight_buffer_V_2_16_ce0;
wire   [10:0] grp_conv_fu_1033_input_buffer_V_3_address0;
wire    grp_conv_fu_1033_input_buffer_V_3_ce0;
wire   [4:0] grp_conv_fu_1033_weight_buffer_V_3_24_address0;
wire    grp_conv_fu_1033_weight_buffer_V_3_24_ce0;
wire   [4:0] grp_conv_fu_1033_weight_buffer_V_3_0_address0;
wire    grp_conv_fu_1033_weight_buffer_V_3_0_ce0;
wire   [4:0] grp_conv_fu_1033_weight_buffer_V_3_8_address0;
wire    grp_conv_fu_1033_weight_buffer_V_3_8_ce0;
wire   [4:0] grp_conv_fu_1033_weight_buffer_V_3_16_address0;
wire    grp_conv_fu_1033_weight_buffer_V_3_16_ce0;
wire    grp_weight_load_fu_1439_ap_start;
wire    grp_weight_load_fu_1439_ap_done;
wire    grp_weight_load_fu_1439_ap_idle;
wire    grp_weight_load_fu_1439_ap_ready;
wire    grp_weight_load_fu_1439_m_axi_weight_AWVALID;
wire   [31:0] grp_weight_load_fu_1439_m_axi_weight_AWADDR;
wire   [0:0] grp_weight_load_fu_1439_m_axi_weight_AWID;
wire   [31:0] grp_weight_load_fu_1439_m_axi_weight_AWLEN;
wire   [2:0] grp_weight_load_fu_1439_m_axi_weight_AWSIZE;
wire   [1:0] grp_weight_load_fu_1439_m_axi_weight_AWBURST;
wire   [1:0] grp_weight_load_fu_1439_m_axi_weight_AWLOCK;
wire   [3:0] grp_weight_load_fu_1439_m_axi_weight_AWCACHE;
wire   [2:0] grp_weight_load_fu_1439_m_axi_weight_AWPROT;
wire   [3:0] grp_weight_load_fu_1439_m_axi_weight_AWQOS;
wire   [3:0] grp_weight_load_fu_1439_m_axi_weight_AWREGION;
wire   [0:0] grp_weight_load_fu_1439_m_axi_weight_AWUSER;
wire    grp_weight_load_fu_1439_m_axi_weight_WVALID;
wire   [31:0] grp_weight_load_fu_1439_m_axi_weight_WDATA;
wire   [3:0] grp_weight_load_fu_1439_m_axi_weight_WSTRB;
wire    grp_weight_load_fu_1439_m_axi_weight_WLAST;
wire   [0:0] grp_weight_load_fu_1439_m_axi_weight_WID;
wire   [0:0] grp_weight_load_fu_1439_m_axi_weight_WUSER;
wire    grp_weight_load_fu_1439_m_axi_weight_ARVALID;
wire   [31:0] grp_weight_load_fu_1439_m_axi_weight_ARADDR;
wire   [0:0] grp_weight_load_fu_1439_m_axi_weight_ARID;
wire   [31:0] grp_weight_load_fu_1439_m_axi_weight_ARLEN;
wire   [2:0] grp_weight_load_fu_1439_m_axi_weight_ARSIZE;
wire   [1:0] grp_weight_load_fu_1439_m_axi_weight_ARBURST;
wire   [1:0] grp_weight_load_fu_1439_m_axi_weight_ARLOCK;
wire   [3:0] grp_weight_load_fu_1439_m_axi_weight_ARCACHE;
wire   [2:0] grp_weight_load_fu_1439_m_axi_weight_ARPROT;
wire   [3:0] grp_weight_load_fu_1439_m_axi_weight_ARQOS;
wire   [3:0] grp_weight_load_fu_1439_m_axi_weight_ARREGION;
wire   [0:0] grp_weight_load_fu_1439_m_axi_weight_ARUSER;
wire    grp_weight_load_fu_1439_m_axi_weight_RREADY;
wire    grp_weight_load_fu_1439_m_axi_weight_BREADY;
wire   [4:0] grp_weight_load_fu_1439_weight_buffer_0_0_V_address0;
wire    grp_weight_load_fu_1439_weight_buffer_0_0_V_ce0;
wire    grp_weight_load_fu_1439_weight_buffer_0_0_V_we0;
wire   [7:0] grp_weight_load_fu_1439_weight_buffer_0_0_V_d0;
wire   [4:0] grp_weight_load_fu_1439_weight_buffer_0_1_V_address0;
wire    grp_weight_load_fu_1439_weight_buffer_0_1_V_ce0;
wire    grp_weight_load_fu_1439_weight_buffer_0_1_V_we0;
wire   [7:0] grp_weight_load_fu_1439_weight_buffer_0_1_V_d0;
wire   [4:0] grp_weight_load_fu_1439_weight_buffer_0_2_V_address0;
wire    grp_weight_load_fu_1439_weight_buffer_0_2_V_ce0;
wire    grp_weight_load_fu_1439_weight_buffer_0_2_V_we0;
wire   [7:0] grp_weight_load_fu_1439_weight_buffer_0_2_V_d0;
wire   [4:0] grp_weight_load_fu_1439_weight_buffer_0_3_V_address0;
wire    grp_weight_load_fu_1439_weight_buffer_0_3_V_ce0;
wire    grp_weight_load_fu_1439_weight_buffer_0_3_V_we0;
wire   [7:0] grp_weight_load_fu_1439_weight_buffer_0_3_V_d0;
wire   [4:0] grp_weight_load_fu_1439_weight_buffer_0_4_V_address0;
wire    grp_weight_load_fu_1439_weight_buffer_0_4_V_ce0;
wire    grp_weight_load_fu_1439_weight_buffer_0_4_V_we0;
wire   [7:0] grp_weight_load_fu_1439_weight_buffer_0_4_V_d0;
wire   [4:0] grp_weight_load_fu_1439_weight_buffer_0_5_V_address0;
wire    grp_weight_load_fu_1439_weight_buffer_0_5_V_ce0;
wire    grp_weight_load_fu_1439_weight_buffer_0_5_V_we0;
wire   [7:0] grp_weight_load_fu_1439_weight_buffer_0_5_V_d0;
wire   [4:0] grp_weight_load_fu_1439_weight_buffer_0_6_V_address0;
wire    grp_weight_load_fu_1439_weight_buffer_0_6_V_ce0;
wire    grp_weight_load_fu_1439_weight_buffer_0_6_V_we0;
wire   [7:0] grp_weight_load_fu_1439_weight_buffer_0_6_V_d0;
wire   [4:0] grp_weight_load_fu_1439_weight_buffer_0_7_V_address0;
wire    grp_weight_load_fu_1439_weight_buffer_0_7_V_ce0;
wire    grp_weight_load_fu_1439_weight_buffer_0_7_V_we0;
wire   [7:0] grp_weight_load_fu_1439_weight_buffer_0_7_V_d0;
wire   [4:0] grp_weight_load_fu_1439_weight_buffer_0_8_V_address0;
wire    grp_weight_load_fu_1439_weight_buffer_0_8_V_ce0;
wire    grp_weight_load_fu_1439_weight_buffer_0_8_V_we0;
wire   [7:0] grp_weight_load_fu_1439_weight_buffer_0_8_V_d0;
wire   [4:0] grp_weight_load_fu_1439_weight_buffer_0_9_V_address0;
wire    grp_weight_load_fu_1439_weight_buffer_0_9_V_ce0;
wire    grp_weight_load_fu_1439_weight_buffer_0_9_V_we0;
wire   [7:0] grp_weight_load_fu_1439_weight_buffer_0_9_V_d0;
wire   [4:0] grp_weight_load_fu_1439_weight_buffer_0_10_V_address0;
wire    grp_weight_load_fu_1439_weight_buffer_0_10_V_ce0;
wire    grp_weight_load_fu_1439_weight_buffer_0_10_V_we0;
wire   [7:0] grp_weight_load_fu_1439_weight_buffer_0_10_V_d0;
wire   [4:0] grp_weight_load_fu_1439_weight_buffer_0_11_V_address0;
wire    grp_weight_load_fu_1439_weight_buffer_0_11_V_ce0;
wire    grp_weight_load_fu_1439_weight_buffer_0_11_V_we0;
wire   [7:0] grp_weight_load_fu_1439_weight_buffer_0_11_V_d0;
wire   [4:0] grp_weight_load_fu_1439_weight_buffer_0_12_V_address0;
wire    grp_weight_load_fu_1439_weight_buffer_0_12_V_ce0;
wire    grp_weight_load_fu_1439_weight_buffer_0_12_V_we0;
wire   [7:0] grp_weight_load_fu_1439_weight_buffer_0_12_V_d0;
wire   [4:0] grp_weight_load_fu_1439_weight_buffer_0_13_V_address0;
wire    grp_weight_load_fu_1439_weight_buffer_0_13_V_ce0;
wire    grp_weight_load_fu_1439_weight_buffer_0_13_V_we0;
wire   [7:0] grp_weight_load_fu_1439_weight_buffer_0_13_V_d0;
wire   [4:0] grp_weight_load_fu_1439_weight_buffer_0_14_V_address0;
wire    grp_weight_load_fu_1439_weight_buffer_0_14_V_ce0;
wire    grp_weight_load_fu_1439_weight_buffer_0_14_V_we0;
wire   [7:0] grp_weight_load_fu_1439_weight_buffer_0_14_V_d0;
wire   [4:0] grp_weight_load_fu_1439_weight_buffer_0_15_V_address0;
wire    grp_weight_load_fu_1439_weight_buffer_0_15_V_ce0;
wire    grp_weight_load_fu_1439_weight_buffer_0_15_V_we0;
wire   [7:0] grp_weight_load_fu_1439_weight_buffer_0_15_V_d0;
wire   [4:0] grp_weight_load_fu_1439_weight_buffer_0_16_V_address0;
wire    grp_weight_load_fu_1439_weight_buffer_0_16_V_ce0;
wire    grp_weight_load_fu_1439_weight_buffer_0_16_V_we0;
wire   [7:0] grp_weight_load_fu_1439_weight_buffer_0_16_V_d0;
wire   [4:0] grp_weight_load_fu_1439_weight_buffer_0_17_V_address0;
wire    grp_weight_load_fu_1439_weight_buffer_0_17_V_ce0;
wire    grp_weight_load_fu_1439_weight_buffer_0_17_V_we0;
wire   [7:0] grp_weight_load_fu_1439_weight_buffer_0_17_V_d0;
wire   [4:0] grp_weight_load_fu_1439_weight_buffer_0_18_V_address0;
wire    grp_weight_load_fu_1439_weight_buffer_0_18_V_ce0;
wire    grp_weight_load_fu_1439_weight_buffer_0_18_V_we0;
wire   [7:0] grp_weight_load_fu_1439_weight_buffer_0_18_V_d0;
wire   [4:0] grp_weight_load_fu_1439_weight_buffer_0_19_V_address0;
wire    grp_weight_load_fu_1439_weight_buffer_0_19_V_ce0;
wire    grp_weight_load_fu_1439_weight_buffer_0_19_V_we0;
wire   [7:0] grp_weight_load_fu_1439_weight_buffer_0_19_V_d0;
wire   [4:0] grp_weight_load_fu_1439_weight_buffer_0_20_V_address0;
wire    grp_weight_load_fu_1439_weight_buffer_0_20_V_ce0;
wire    grp_weight_load_fu_1439_weight_buffer_0_20_V_we0;
wire   [7:0] grp_weight_load_fu_1439_weight_buffer_0_20_V_d0;
wire   [4:0] grp_weight_load_fu_1439_weight_buffer_0_21_V_address0;
wire    grp_weight_load_fu_1439_weight_buffer_0_21_V_ce0;
wire    grp_weight_load_fu_1439_weight_buffer_0_21_V_we0;
wire   [7:0] grp_weight_load_fu_1439_weight_buffer_0_21_V_d0;
wire   [4:0] grp_weight_load_fu_1439_weight_buffer_0_22_V_address0;
wire    grp_weight_load_fu_1439_weight_buffer_0_22_V_ce0;
wire    grp_weight_load_fu_1439_weight_buffer_0_22_V_we0;
wire   [7:0] grp_weight_load_fu_1439_weight_buffer_0_22_V_d0;
wire   [4:0] grp_weight_load_fu_1439_weight_buffer_0_23_V_address0;
wire    grp_weight_load_fu_1439_weight_buffer_0_23_V_ce0;
wire    grp_weight_load_fu_1439_weight_buffer_0_23_V_we0;
wire   [7:0] grp_weight_load_fu_1439_weight_buffer_0_23_V_d0;
wire   [4:0] grp_weight_load_fu_1439_weight_buffer_0_24_V_address0;
wire    grp_weight_load_fu_1439_weight_buffer_0_24_V_ce0;
wire    grp_weight_load_fu_1439_weight_buffer_0_24_V_we0;
wire   [7:0] grp_weight_load_fu_1439_weight_buffer_0_24_V_d0;
wire   [4:0] grp_weight_load_fu_1439_weight_buffer_0_25_V_address0;
wire    grp_weight_load_fu_1439_weight_buffer_0_25_V_ce0;
wire    grp_weight_load_fu_1439_weight_buffer_0_25_V_we0;
wire   [7:0] grp_weight_load_fu_1439_weight_buffer_0_25_V_d0;
wire   [4:0] grp_weight_load_fu_1439_weight_buffer_0_26_V_address0;
wire    grp_weight_load_fu_1439_weight_buffer_0_26_V_ce0;
wire    grp_weight_load_fu_1439_weight_buffer_0_26_V_we0;
wire   [7:0] grp_weight_load_fu_1439_weight_buffer_0_26_V_d0;
wire   [4:0] grp_weight_load_fu_1439_weight_buffer_0_27_V_address0;
wire    grp_weight_load_fu_1439_weight_buffer_0_27_V_ce0;
wire    grp_weight_load_fu_1439_weight_buffer_0_27_V_we0;
wire   [7:0] grp_weight_load_fu_1439_weight_buffer_0_27_V_d0;
wire   [4:0] grp_weight_load_fu_1439_weight_buffer_0_28_V_address0;
wire    grp_weight_load_fu_1439_weight_buffer_0_28_V_ce0;
wire    grp_weight_load_fu_1439_weight_buffer_0_28_V_we0;
wire   [7:0] grp_weight_load_fu_1439_weight_buffer_0_28_V_d0;
wire   [4:0] grp_weight_load_fu_1439_weight_buffer_0_29_V_address0;
wire    grp_weight_load_fu_1439_weight_buffer_0_29_V_ce0;
wire    grp_weight_load_fu_1439_weight_buffer_0_29_V_we0;
wire   [7:0] grp_weight_load_fu_1439_weight_buffer_0_29_V_d0;
wire   [4:0] grp_weight_load_fu_1439_weight_buffer_0_30_V_address0;
wire    grp_weight_load_fu_1439_weight_buffer_0_30_V_ce0;
wire    grp_weight_load_fu_1439_weight_buffer_0_30_V_we0;
wire   [7:0] grp_weight_load_fu_1439_weight_buffer_0_30_V_d0;
wire   [4:0] grp_weight_load_fu_1439_weight_buffer_0_31_V_address0;
wire    grp_weight_load_fu_1439_weight_buffer_0_31_V_ce0;
wire    grp_weight_load_fu_1439_weight_buffer_0_31_V_we0;
wire   [7:0] grp_weight_load_fu_1439_weight_buffer_0_31_V_d0;
wire   [4:0] grp_weight_load_fu_1439_weight_buffer_1_0_V_address0;
wire    grp_weight_load_fu_1439_weight_buffer_1_0_V_ce0;
wire    grp_weight_load_fu_1439_weight_buffer_1_0_V_we0;
wire   [7:0] grp_weight_load_fu_1439_weight_buffer_1_0_V_d0;
wire   [4:0] grp_weight_load_fu_1439_weight_buffer_1_1_V_address0;
wire    grp_weight_load_fu_1439_weight_buffer_1_1_V_ce0;
wire    grp_weight_load_fu_1439_weight_buffer_1_1_V_we0;
wire   [7:0] grp_weight_load_fu_1439_weight_buffer_1_1_V_d0;
wire   [4:0] grp_weight_load_fu_1439_weight_buffer_1_2_V_address0;
wire    grp_weight_load_fu_1439_weight_buffer_1_2_V_ce0;
wire    grp_weight_load_fu_1439_weight_buffer_1_2_V_we0;
wire   [7:0] grp_weight_load_fu_1439_weight_buffer_1_2_V_d0;
wire   [4:0] grp_weight_load_fu_1439_weight_buffer_1_3_V_address0;
wire    grp_weight_load_fu_1439_weight_buffer_1_3_V_ce0;
wire    grp_weight_load_fu_1439_weight_buffer_1_3_V_we0;
wire   [7:0] grp_weight_load_fu_1439_weight_buffer_1_3_V_d0;
wire   [4:0] grp_weight_load_fu_1439_weight_buffer_1_4_V_address0;
wire    grp_weight_load_fu_1439_weight_buffer_1_4_V_ce0;
wire    grp_weight_load_fu_1439_weight_buffer_1_4_V_we0;
wire   [7:0] grp_weight_load_fu_1439_weight_buffer_1_4_V_d0;
wire   [4:0] grp_weight_load_fu_1439_weight_buffer_1_5_V_address0;
wire    grp_weight_load_fu_1439_weight_buffer_1_5_V_ce0;
wire    grp_weight_load_fu_1439_weight_buffer_1_5_V_we0;
wire   [7:0] grp_weight_load_fu_1439_weight_buffer_1_5_V_d0;
wire   [4:0] grp_weight_load_fu_1439_weight_buffer_1_6_V_address0;
wire    grp_weight_load_fu_1439_weight_buffer_1_6_V_ce0;
wire    grp_weight_load_fu_1439_weight_buffer_1_6_V_we0;
wire   [7:0] grp_weight_load_fu_1439_weight_buffer_1_6_V_d0;
wire   [4:0] grp_weight_load_fu_1439_weight_buffer_1_7_V_address0;
wire    grp_weight_load_fu_1439_weight_buffer_1_7_V_ce0;
wire    grp_weight_load_fu_1439_weight_buffer_1_7_V_we0;
wire   [7:0] grp_weight_load_fu_1439_weight_buffer_1_7_V_d0;
wire   [4:0] grp_weight_load_fu_1439_weight_buffer_1_8_V_address0;
wire    grp_weight_load_fu_1439_weight_buffer_1_8_V_ce0;
wire    grp_weight_load_fu_1439_weight_buffer_1_8_V_we0;
wire   [7:0] grp_weight_load_fu_1439_weight_buffer_1_8_V_d0;
wire   [4:0] grp_weight_load_fu_1439_weight_buffer_1_9_V_address0;
wire    grp_weight_load_fu_1439_weight_buffer_1_9_V_ce0;
wire    grp_weight_load_fu_1439_weight_buffer_1_9_V_we0;
wire   [7:0] grp_weight_load_fu_1439_weight_buffer_1_9_V_d0;
wire   [4:0] grp_weight_load_fu_1439_weight_buffer_1_10_V_address0;
wire    grp_weight_load_fu_1439_weight_buffer_1_10_V_ce0;
wire    grp_weight_load_fu_1439_weight_buffer_1_10_V_we0;
wire   [7:0] grp_weight_load_fu_1439_weight_buffer_1_10_V_d0;
wire   [4:0] grp_weight_load_fu_1439_weight_buffer_1_11_V_address0;
wire    grp_weight_load_fu_1439_weight_buffer_1_11_V_ce0;
wire    grp_weight_load_fu_1439_weight_buffer_1_11_V_we0;
wire   [7:0] grp_weight_load_fu_1439_weight_buffer_1_11_V_d0;
wire   [4:0] grp_weight_load_fu_1439_weight_buffer_1_12_V_address0;
wire    grp_weight_load_fu_1439_weight_buffer_1_12_V_ce0;
wire    grp_weight_load_fu_1439_weight_buffer_1_12_V_we0;
wire   [7:0] grp_weight_load_fu_1439_weight_buffer_1_12_V_d0;
wire   [4:0] grp_weight_load_fu_1439_weight_buffer_1_13_V_address0;
wire    grp_weight_load_fu_1439_weight_buffer_1_13_V_ce0;
wire    grp_weight_load_fu_1439_weight_buffer_1_13_V_we0;
wire   [7:0] grp_weight_load_fu_1439_weight_buffer_1_13_V_d0;
wire   [4:0] grp_weight_load_fu_1439_weight_buffer_1_14_V_address0;
wire    grp_weight_load_fu_1439_weight_buffer_1_14_V_ce0;
wire    grp_weight_load_fu_1439_weight_buffer_1_14_V_we0;
wire   [7:0] grp_weight_load_fu_1439_weight_buffer_1_14_V_d0;
wire   [4:0] grp_weight_load_fu_1439_weight_buffer_1_15_V_address0;
wire    grp_weight_load_fu_1439_weight_buffer_1_15_V_ce0;
wire    grp_weight_load_fu_1439_weight_buffer_1_15_V_we0;
wire   [7:0] grp_weight_load_fu_1439_weight_buffer_1_15_V_d0;
wire   [4:0] grp_weight_load_fu_1439_weight_buffer_1_16_V_address0;
wire    grp_weight_load_fu_1439_weight_buffer_1_16_V_ce0;
wire    grp_weight_load_fu_1439_weight_buffer_1_16_V_we0;
wire   [7:0] grp_weight_load_fu_1439_weight_buffer_1_16_V_d0;
wire   [4:0] grp_weight_load_fu_1439_weight_buffer_1_17_V_address0;
wire    grp_weight_load_fu_1439_weight_buffer_1_17_V_ce0;
wire    grp_weight_load_fu_1439_weight_buffer_1_17_V_we0;
wire   [7:0] grp_weight_load_fu_1439_weight_buffer_1_17_V_d0;
wire   [4:0] grp_weight_load_fu_1439_weight_buffer_1_18_V_address0;
wire    grp_weight_load_fu_1439_weight_buffer_1_18_V_ce0;
wire    grp_weight_load_fu_1439_weight_buffer_1_18_V_we0;
wire   [7:0] grp_weight_load_fu_1439_weight_buffer_1_18_V_d0;
wire   [4:0] grp_weight_load_fu_1439_weight_buffer_1_19_V_address0;
wire    grp_weight_load_fu_1439_weight_buffer_1_19_V_ce0;
wire    grp_weight_load_fu_1439_weight_buffer_1_19_V_we0;
wire   [7:0] grp_weight_load_fu_1439_weight_buffer_1_19_V_d0;
wire   [4:0] grp_weight_load_fu_1439_weight_buffer_1_20_V_address0;
wire    grp_weight_load_fu_1439_weight_buffer_1_20_V_ce0;
wire    grp_weight_load_fu_1439_weight_buffer_1_20_V_we0;
wire   [7:0] grp_weight_load_fu_1439_weight_buffer_1_20_V_d0;
wire   [4:0] grp_weight_load_fu_1439_weight_buffer_1_21_V_address0;
wire    grp_weight_load_fu_1439_weight_buffer_1_21_V_ce0;
wire    grp_weight_load_fu_1439_weight_buffer_1_21_V_we0;
wire   [7:0] grp_weight_load_fu_1439_weight_buffer_1_21_V_d0;
wire   [4:0] grp_weight_load_fu_1439_weight_buffer_1_22_V_address0;
wire    grp_weight_load_fu_1439_weight_buffer_1_22_V_ce0;
wire    grp_weight_load_fu_1439_weight_buffer_1_22_V_we0;
wire   [7:0] grp_weight_load_fu_1439_weight_buffer_1_22_V_d0;
wire   [4:0] grp_weight_load_fu_1439_weight_buffer_1_23_V_address0;
wire    grp_weight_load_fu_1439_weight_buffer_1_23_V_ce0;
wire    grp_weight_load_fu_1439_weight_buffer_1_23_V_we0;
wire   [7:0] grp_weight_load_fu_1439_weight_buffer_1_23_V_d0;
wire   [4:0] grp_weight_load_fu_1439_weight_buffer_1_24_V_address0;
wire    grp_weight_load_fu_1439_weight_buffer_1_24_V_ce0;
wire    grp_weight_load_fu_1439_weight_buffer_1_24_V_we0;
wire   [7:0] grp_weight_load_fu_1439_weight_buffer_1_24_V_d0;
wire   [4:0] grp_weight_load_fu_1439_weight_buffer_1_25_V_address0;
wire    grp_weight_load_fu_1439_weight_buffer_1_25_V_ce0;
wire    grp_weight_load_fu_1439_weight_buffer_1_25_V_we0;
wire   [7:0] grp_weight_load_fu_1439_weight_buffer_1_25_V_d0;
wire   [4:0] grp_weight_load_fu_1439_weight_buffer_1_26_V_address0;
wire    grp_weight_load_fu_1439_weight_buffer_1_26_V_ce0;
wire    grp_weight_load_fu_1439_weight_buffer_1_26_V_we0;
wire   [7:0] grp_weight_load_fu_1439_weight_buffer_1_26_V_d0;
wire   [4:0] grp_weight_load_fu_1439_weight_buffer_1_27_V_address0;
wire    grp_weight_load_fu_1439_weight_buffer_1_27_V_ce0;
wire    grp_weight_load_fu_1439_weight_buffer_1_27_V_we0;
wire   [7:0] grp_weight_load_fu_1439_weight_buffer_1_27_V_d0;
wire   [4:0] grp_weight_load_fu_1439_weight_buffer_1_28_V_address0;
wire    grp_weight_load_fu_1439_weight_buffer_1_28_V_ce0;
wire    grp_weight_load_fu_1439_weight_buffer_1_28_V_we0;
wire   [7:0] grp_weight_load_fu_1439_weight_buffer_1_28_V_d0;
wire   [4:0] grp_weight_load_fu_1439_weight_buffer_1_29_V_address0;
wire    grp_weight_load_fu_1439_weight_buffer_1_29_V_ce0;
wire    grp_weight_load_fu_1439_weight_buffer_1_29_V_we0;
wire   [7:0] grp_weight_load_fu_1439_weight_buffer_1_29_V_d0;
wire   [4:0] grp_weight_load_fu_1439_weight_buffer_1_30_V_address0;
wire    grp_weight_load_fu_1439_weight_buffer_1_30_V_ce0;
wire    grp_weight_load_fu_1439_weight_buffer_1_30_V_we0;
wire   [7:0] grp_weight_load_fu_1439_weight_buffer_1_30_V_d0;
wire   [4:0] grp_weight_load_fu_1439_weight_buffer_1_31_V_address0;
wire    grp_weight_load_fu_1439_weight_buffer_1_31_V_ce0;
wire    grp_weight_load_fu_1439_weight_buffer_1_31_V_we0;
wire   [7:0] grp_weight_load_fu_1439_weight_buffer_1_31_V_d0;
wire   [4:0] grp_weight_load_fu_1439_weight_buffer_2_0_V_address0;
wire    grp_weight_load_fu_1439_weight_buffer_2_0_V_ce0;
wire    grp_weight_load_fu_1439_weight_buffer_2_0_V_we0;
wire   [7:0] grp_weight_load_fu_1439_weight_buffer_2_0_V_d0;
wire   [4:0] grp_weight_load_fu_1439_weight_buffer_2_1_V_address0;
wire    grp_weight_load_fu_1439_weight_buffer_2_1_V_ce0;
wire    grp_weight_load_fu_1439_weight_buffer_2_1_V_we0;
wire   [7:0] grp_weight_load_fu_1439_weight_buffer_2_1_V_d0;
wire   [4:0] grp_weight_load_fu_1439_weight_buffer_2_2_V_address0;
wire    grp_weight_load_fu_1439_weight_buffer_2_2_V_ce0;
wire    grp_weight_load_fu_1439_weight_buffer_2_2_V_we0;
wire   [7:0] grp_weight_load_fu_1439_weight_buffer_2_2_V_d0;
wire   [4:0] grp_weight_load_fu_1439_weight_buffer_2_3_V_address0;
wire    grp_weight_load_fu_1439_weight_buffer_2_3_V_ce0;
wire    grp_weight_load_fu_1439_weight_buffer_2_3_V_we0;
wire   [7:0] grp_weight_load_fu_1439_weight_buffer_2_3_V_d0;
wire   [4:0] grp_weight_load_fu_1439_weight_buffer_2_4_V_address0;
wire    grp_weight_load_fu_1439_weight_buffer_2_4_V_ce0;
wire    grp_weight_load_fu_1439_weight_buffer_2_4_V_we0;
wire   [7:0] grp_weight_load_fu_1439_weight_buffer_2_4_V_d0;
wire   [4:0] grp_weight_load_fu_1439_weight_buffer_2_5_V_address0;
wire    grp_weight_load_fu_1439_weight_buffer_2_5_V_ce0;
wire    grp_weight_load_fu_1439_weight_buffer_2_5_V_we0;
wire   [7:0] grp_weight_load_fu_1439_weight_buffer_2_5_V_d0;
wire   [4:0] grp_weight_load_fu_1439_weight_buffer_2_6_V_address0;
wire    grp_weight_load_fu_1439_weight_buffer_2_6_V_ce0;
wire    grp_weight_load_fu_1439_weight_buffer_2_6_V_we0;
wire   [7:0] grp_weight_load_fu_1439_weight_buffer_2_6_V_d0;
wire   [4:0] grp_weight_load_fu_1439_weight_buffer_2_7_V_address0;
wire    grp_weight_load_fu_1439_weight_buffer_2_7_V_ce0;
wire    grp_weight_load_fu_1439_weight_buffer_2_7_V_we0;
wire   [7:0] grp_weight_load_fu_1439_weight_buffer_2_7_V_d0;
wire   [4:0] grp_weight_load_fu_1439_weight_buffer_2_8_V_address0;
wire    grp_weight_load_fu_1439_weight_buffer_2_8_V_ce0;
wire    grp_weight_load_fu_1439_weight_buffer_2_8_V_we0;
wire   [7:0] grp_weight_load_fu_1439_weight_buffer_2_8_V_d0;
wire   [4:0] grp_weight_load_fu_1439_weight_buffer_2_9_V_address0;
wire    grp_weight_load_fu_1439_weight_buffer_2_9_V_ce0;
wire    grp_weight_load_fu_1439_weight_buffer_2_9_V_we0;
wire   [7:0] grp_weight_load_fu_1439_weight_buffer_2_9_V_d0;
wire   [4:0] grp_weight_load_fu_1439_weight_buffer_2_10_V_address0;
wire    grp_weight_load_fu_1439_weight_buffer_2_10_V_ce0;
wire    grp_weight_load_fu_1439_weight_buffer_2_10_V_we0;
wire   [7:0] grp_weight_load_fu_1439_weight_buffer_2_10_V_d0;
wire   [4:0] grp_weight_load_fu_1439_weight_buffer_2_11_V_address0;
wire    grp_weight_load_fu_1439_weight_buffer_2_11_V_ce0;
wire    grp_weight_load_fu_1439_weight_buffer_2_11_V_we0;
wire   [7:0] grp_weight_load_fu_1439_weight_buffer_2_11_V_d0;
wire   [4:0] grp_weight_load_fu_1439_weight_buffer_2_12_V_address0;
wire    grp_weight_load_fu_1439_weight_buffer_2_12_V_ce0;
wire    grp_weight_load_fu_1439_weight_buffer_2_12_V_we0;
wire   [7:0] grp_weight_load_fu_1439_weight_buffer_2_12_V_d0;
wire   [4:0] grp_weight_load_fu_1439_weight_buffer_2_13_V_address0;
wire    grp_weight_load_fu_1439_weight_buffer_2_13_V_ce0;
wire    grp_weight_load_fu_1439_weight_buffer_2_13_V_we0;
wire   [7:0] grp_weight_load_fu_1439_weight_buffer_2_13_V_d0;
wire   [4:0] grp_weight_load_fu_1439_weight_buffer_2_14_V_address0;
wire    grp_weight_load_fu_1439_weight_buffer_2_14_V_ce0;
wire    grp_weight_load_fu_1439_weight_buffer_2_14_V_we0;
wire   [7:0] grp_weight_load_fu_1439_weight_buffer_2_14_V_d0;
wire   [4:0] grp_weight_load_fu_1439_weight_buffer_2_15_V_address0;
wire    grp_weight_load_fu_1439_weight_buffer_2_15_V_ce0;
wire    grp_weight_load_fu_1439_weight_buffer_2_15_V_we0;
wire   [7:0] grp_weight_load_fu_1439_weight_buffer_2_15_V_d0;
wire   [4:0] grp_weight_load_fu_1439_weight_buffer_2_16_V_address0;
wire    grp_weight_load_fu_1439_weight_buffer_2_16_V_ce0;
wire    grp_weight_load_fu_1439_weight_buffer_2_16_V_we0;
wire   [7:0] grp_weight_load_fu_1439_weight_buffer_2_16_V_d0;
wire   [4:0] grp_weight_load_fu_1439_weight_buffer_2_17_V_address0;
wire    grp_weight_load_fu_1439_weight_buffer_2_17_V_ce0;
wire    grp_weight_load_fu_1439_weight_buffer_2_17_V_we0;
wire   [7:0] grp_weight_load_fu_1439_weight_buffer_2_17_V_d0;
wire   [4:0] grp_weight_load_fu_1439_weight_buffer_2_18_V_address0;
wire    grp_weight_load_fu_1439_weight_buffer_2_18_V_ce0;
wire    grp_weight_load_fu_1439_weight_buffer_2_18_V_we0;
wire   [7:0] grp_weight_load_fu_1439_weight_buffer_2_18_V_d0;
wire   [4:0] grp_weight_load_fu_1439_weight_buffer_2_19_V_address0;
wire    grp_weight_load_fu_1439_weight_buffer_2_19_V_ce0;
wire    grp_weight_load_fu_1439_weight_buffer_2_19_V_we0;
wire   [7:0] grp_weight_load_fu_1439_weight_buffer_2_19_V_d0;
wire   [4:0] grp_weight_load_fu_1439_weight_buffer_2_20_V_address0;
wire    grp_weight_load_fu_1439_weight_buffer_2_20_V_ce0;
wire    grp_weight_load_fu_1439_weight_buffer_2_20_V_we0;
wire   [7:0] grp_weight_load_fu_1439_weight_buffer_2_20_V_d0;
wire   [4:0] grp_weight_load_fu_1439_weight_buffer_2_21_V_address0;
wire    grp_weight_load_fu_1439_weight_buffer_2_21_V_ce0;
wire    grp_weight_load_fu_1439_weight_buffer_2_21_V_we0;
wire   [7:0] grp_weight_load_fu_1439_weight_buffer_2_21_V_d0;
wire   [4:0] grp_weight_load_fu_1439_weight_buffer_2_22_V_address0;
wire    grp_weight_load_fu_1439_weight_buffer_2_22_V_ce0;
wire    grp_weight_load_fu_1439_weight_buffer_2_22_V_we0;
wire   [7:0] grp_weight_load_fu_1439_weight_buffer_2_22_V_d0;
wire   [4:0] grp_weight_load_fu_1439_weight_buffer_2_23_V_address0;
wire    grp_weight_load_fu_1439_weight_buffer_2_23_V_ce0;
wire    grp_weight_load_fu_1439_weight_buffer_2_23_V_we0;
wire   [7:0] grp_weight_load_fu_1439_weight_buffer_2_23_V_d0;
wire   [4:0] grp_weight_load_fu_1439_weight_buffer_2_24_V_address0;
wire    grp_weight_load_fu_1439_weight_buffer_2_24_V_ce0;
wire    grp_weight_load_fu_1439_weight_buffer_2_24_V_we0;
wire   [7:0] grp_weight_load_fu_1439_weight_buffer_2_24_V_d0;
wire   [4:0] grp_weight_load_fu_1439_weight_buffer_2_25_V_address0;
wire    grp_weight_load_fu_1439_weight_buffer_2_25_V_ce0;
wire    grp_weight_load_fu_1439_weight_buffer_2_25_V_we0;
wire   [7:0] grp_weight_load_fu_1439_weight_buffer_2_25_V_d0;
wire   [4:0] grp_weight_load_fu_1439_weight_buffer_2_26_V_address0;
wire    grp_weight_load_fu_1439_weight_buffer_2_26_V_ce0;
wire    grp_weight_load_fu_1439_weight_buffer_2_26_V_we0;
wire   [7:0] grp_weight_load_fu_1439_weight_buffer_2_26_V_d0;
wire   [4:0] grp_weight_load_fu_1439_weight_buffer_2_27_V_address0;
wire    grp_weight_load_fu_1439_weight_buffer_2_27_V_ce0;
wire    grp_weight_load_fu_1439_weight_buffer_2_27_V_we0;
wire   [7:0] grp_weight_load_fu_1439_weight_buffer_2_27_V_d0;
wire   [4:0] grp_weight_load_fu_1439_weight_buffer_2_28_V_address0;
wire    grp_weight_load_fu_1439_weight_buffer_2_28_V_ce0;
wire    grp_weight_load_fu_1439_weight_buffer_2_28_V_we0;
wire   [7:0] grp_weight_load_fu_1439_weight_buffer_2_28_V_d0;
wire   [4:0] grp_weight_load_fu_1439_weight_buffer_2_29_V_address0;
wire    grp_weight_load_fu_1439_weight_buffer_2_29_V_ce0;
wire    grp_weight_load_fu_1439_weight_buffer_2_29_V_we0;
wire   [7:0] grp_weight_load_fu_1439_weight_buffer_2_29_V_d0;
wire   [4:0] grp_weight_load_fu_1439_weight_buffer_2_30_V_address0;
wire    grp_weight_load_fu_1439_weight_buffer_2_30_V_ce0;
wire    grp_weight_load_fu_1439_weight_buffer_2_30_V_we0;
wire   [7:0] grp_weight_load_fu_1439_weight_buffer_2_30_V_d0;
wire   [4:0] grp_weight_load_fu_1439_weight_buffer_2_31_V_address0;
wire    grp_weight_load_fu_1439_weight_buffer_2_31_V_ce0;
wire    grp_weight_load_fu_1439_weight_buffer_2_31_V_we0;
wire   [7:0] grp_weight_load_fu_1439_weight_buffer_2_31_V_d0;
wire   [4:0] grp_weight_load_fu_1439_weight_buffer_3_0_V_address0;
wire    grp_weight_load_fu_1439_weight_buffer_3_0_V_ce0;
wire    grp_weight_load_fu_1439_weight_buffer_3_0_V_we0;
wire   [7:0] grp_weight_load_fu_1439_weight_buffer_3_0_V_d0;
wire   [4:0] grp_weight_load_fu_1439_weight_buffer_3_1_V_address0;
wire    grp_weight_load_fu_1439_weight_buffer_3_1_V_ce0;
wire    grp_weight_load_fu_1439_weight_buffer_3_1_V_we0;
wire   [7:0] grp_weight_load_fu_1439_weight_buffer_3_1_V_d0;
wire   [4:0] grp_weight_load_fu_1439_weight_buffer_3_2_V_address0;
wire    grp_weight_load_fu_1439_weight_buffer_3_2_V_ce0;
wire    grp_weight_load_fu_1439_weight_buffer_3_2_V_we0;
wire   [7:0] grp_weight_load_fu_1439_weight_buffer_3_2_V_d0;
wire   [4:0] grp_weight_load_fu_1439_weight_buffer_3_3_V_address0;
wire    grp_weight_load_fu_1439_weight_buffer_3_3_V_ce0;
wire    grp_weight_load_fu_1439_weight_buffer_3_3_V_we0;
wire   [7:0] grp_weight_load_fu_1439_weight_buffer_3_3_V_d0;
wire   [4:0] grp_weight_load_fu_1439_weight_buffer_3_4_V_address0;
wire    grp_weight_load_fu_1439_weight_buffer_3_4_V_ce0;
wire    grp_weight_load_fu_1439_weight_buffer_3_4_V_we0;
wire   [7:0] grp_weight_load_fu_1439_weight_buffer_3_4_V_d0;
wire   [4:0] grp_weight_load_fu_1439_weight_buffer_3_5_V_address0;
wire    grp_weight_load_fu_1439_weight_buffer_3_5_V_ce0;
wire    grp_weight_load_fu_1439_weight_buffer_3_5_V_we0;
wire   [7:0] grp_weight_load_fu_1439_weight_buffer_3_5_V_d0;
wire   [4:0] grp_weight_load_fu_1439_weight_buffer_3_6_V_address0;
wire    grp_weight_load_fu_1439_weight_buffer_3_6_V_ce0;
wire    grp_weight_load_fu_1439_weight_buffer_3_6_V_we0;
wire   [7:0] grp_weight_load_fu_1439_weight_buffer_3_6_V_d0;
wire   [4:0] grp_weight_load_fu_1439_weight_buffer_3_7_V_address0;
wire    grp_weight_load_fu_1439_weight_buffer_3_7_V_ce0;
wire    grp_weight_load_fu_1439_weight_buffer_3_7_V_we0;
wire   [7:0] grp_weight_load_fu_1439_weight_buffer_3_7_V_d0;
wire   [4:0] grp_weight_load_fu_1439_weight_buffer_3_8_V_address0;
wire    grp_weight_load_fu_1439_weight_buffer_3_8_V_ce0;
wire    grp_weight_load_fu_1439_weight_buffer_3_8_V_we0;
wire   [7:0] grp_weight_load_fu_1439_weight_buffer_3_8_V_d0;
wire   [4:0] grp_weight_load_fu_1439_weight_buffer_3_9_V_address0;
wire    grp_weight_load_fu_1439_weight_buffer_3_9_V_ce0;
wire    grp_weight_load_fu_1439_weight_buffer_3_9_V_we0;
wire   [7:0] grp_weight_load_fu_1439_weight_buffer_3_9_V_d0;
wire   [4:0] grp_weight_load_fu_1439_weight_buffer_3_10_V_address0;
wire    grp_weight_load_fu_1439_weight_buffer_3_10_V_ce0;
wire    grp_weight_load_fu_1439_weight_buffer_3_10_V_we0;
wire   [7:0] grp_weight_load_fu_1439_weight_buffer_3_10_V_d0;
wire   [4:0] grp_weight_load_fu_1439_weight_buffer_3_11_V_address0;
wire    grp_weight_load_fu_1439_weight_buffer_3_11_V_ce0;
wire    grp_weight_load_fu_1439_weight_buffer_3_11_V_we0;
wire   [7:0] grp_weight_load_fu_1439_weight_buffer_3_11_V_d0;
wire   [4:0] grp_weight_load_fu_1439_weight_buffer_3_12_V_address0;
wire    grp_weight_load_fu_1439_weight_buffer_3_12_V_ce0;
wire    grp_weight_load_fu_1439_weight_buffer_3_12_V_we0;
wire   [7:0] grp_weight_load_fu_1439_weight_buffer_3_12_V_d0;
wire   [4:0] grp_weight_load_fu_1439_weight_buffer_3_13_V_address0;
wire    grp_weight_load_fu_1439_weight_buffer_3_13_V_ce0;
wire    grp_weight_load_fu_1439_weight_buffer_3_13_V_we0;
wire   [7:0] grp_weight_load_fu_1439_weight_buffer_3_13_V_d0;
wire   [4:0] grp_weight_load_fu_1439_weight_buffer_3_14_V_address0;
wire    grp_weight_load_fu_1439_weight_buffer_3_14_V_ce0;
wire    grp_weight_load_fu_1439_weight_buffer_3_14_V_we0;
wire   [7:0] grp_weight_load_fu_1439_weight_buffer_3_14_V_d0;
wire   [4:0] grp_weight_load_fu_1439_weight_buffer_3_15_V_address0;
wire    grp_weight_load_fu_1439_weight_buffer_3_15_V_ce0;
wire    grp_weight_load_fu_1439_weight_buffer_3_15_V_we0;
wire   [7:0] grp_weight_load_fu_1439_weight_buffer_3_15_V_d0;
wire   [4:0] grp_weight_load_fu_1439_weight_buffer_3_16_V_address0;
wire    grp_weight_load_fu_1439_weight_buffer_3_16_V_ce0;
wire    grp_weight_load_fu_1439_weight_buffer_3_16_V_we0;
wire   [7:0] grp_weight_load_fu_1439_weight_buffer_3_16_V_d0;
wire   [4:0] grp_weight_load_fu_1439_weight_buffer_3_17_V_address0;
wire    grp_weight_load_fu_1439_weight_buffer_3_17_V_ce0;
wire    grp_weight_load_fu_1439_weight_buffer_3_17_V_we0;
wire   [7:0] grp_weight_load_fu_1439_weight_buffer_3_17_V_d0;
wire   [4:0] grp_weight_load_fu_1439_weight_buffer_3_18_V_address0;
wire    grp_weight_load_fu_1439_weight_buffer_3_18_V_ce0;
wire    grp_weight_load_fu_1439_weight_buffer_3_18_V_we0;
wire   [7:0] grp_weight_load_fu_1439_weight_buffer_3_18_V_d0;
wire   [4:0] grp_weight_load_fu_1439_weight_buffer_3_19_V_address0;
wire    grp_weight_load_fu_1439_weight_buffer_3_19_V_ce0;
wire    grp_weight_load_fu_1439_weight_buffer_3_19_V_we0;
wire   [7:0] grp_weight_load_fu_1439_weight_buffer_3_19_V_d0;
wire   [4:0] grp_weight_load_fu_1439_weight_buffer_3_20_V_address0;
wire    grp_weight_load_fu_1439_weight_buffer_3_20_V_ce0;
wire    grp_weight_load_fu_1439_weight_buffer_3_20_V_we0;
wire   [7:0] grp_weight_load_fu_1439_weight_buffer_3_20_V_d0;
wire   [4:0] grp_weight_load_fu_1439_weight_buffer_3_21_V_address0;
wire    grp_weight_load_fu_1439_weight_buffer_3_21_V_ce0;
wire    grp_weight_load_fu_1439_weight_buffer_3_21_V_we0;
wire   [7:0] grp_weight_load_fu_1439_weight_buffer_3_21_V_d0;
wire   [4:0] grp_weight_load_fu_1439_weight_buffer_3_22_V_address0;
wire    grp_weight_load_fu_1439_weight_buffer_3_22_V_ce0;
wire    grp_weight_load_fu_1439_weight_buffer_3_22_V_we0;
wire   [7:0] grp_weight_load_fu_1439_weight_buffer_3_22_V_d0;
wire   [4:0] grp_weight_load_fu_1439_weight_buffer_3_23_V_address0;
wire    grp_weight_load_fu_1439_weight_buffer_3_23_V_ce0;
wire    grp_weight_load_fu_1439_weight_buffer_3_23_V_we0;
wire   [7:0] grp_weight_load_fu_1439_weight_buffer_3_23_V_d0;
wire   [4:0] grp_weight_load_fu_1439_weight_buffer_3_24_V_address0;
wire    grp_weight_load_fu_1439_weight_buffer_3_24_V_ce0;
wire    grp_weight_load_fu_1439_weight_buffer_3_24_V_we0;
wire   [7:0] grp_weight_load_fu_1439_weight_buffer_3_24_V_d0;
wire   [4:0] grp_weight_load_fu_1439_weight_buffer_3_25_V_address0;
wire    grp_weight_load_fu_1439_weight_buffer_3_25_V_ce0;
wire    grp_weight_load_fu_1439_weight_buffer_3_25_V_we0;
wire   [7:0] grp_weight_load_fu_1439_weight_buffer_3_25_V_d0;
wire   [4:0] grp_weight_load_fu_1439_weight_buffer_3_26_V_address0;
wire    grp_weight_load_fu_1439_weight_buffer_3_26_V_ce0;
wire    grp_weight_load_fu_1439_weight_buffer_3_26_V_we0;
wire   [7:0] grp_weight_load_fu_1439_weight_buffer_3_26_V_d0;
wire   [4:0] grp_weight_load_fu_1439_weight_buffer_3_27_V_address0;
wire    grp_weight_load_fu_1439_weight_buffer_3_27_V_ce0;
wire    grp_weight_load_fu_1439_weight_buffer_3_27_V_we0;
wire   [7:0] grp_weight_load_fu_1439_weight_buffer_3_27_V_d0;
wire   [4:0] grp_weight_load_fu_1439_weight_buffer_3_28_V_address0;
wire    grp_weight_load_fu_1439_weight_buffer_3_28_V_ce0;
wire    grp_weight_load_fu_1439_weight_buffer_3_28_V_we0;
wire   [7:0] grp_weight_load_fu_1439_weight_buffer_3_28_V_d0;
wire   [4:0] grp_weight_load_fu_1439_weight_buffer_3_29_V_address0;
wire    grp_weight_load_fu_1439_weight_buffer_3_29_V_ce0;
wire    grp_weight_load_fu_1439_weight_buffer_3_29_V_we0;
wire   [7:0] grp_weight_load_fu_1439_weight_buffer_3_29_V_d0;
wire   [4:0] grp_weight_load_fu_1439_weight_buffer_3_30_V_address0;
wire    grp_weight_load_fu_1439_weight_buffer_3_30_V_ce0;
wire    grp_weight_load_fu_1439_weight_buffer_3_30_V_we0;
wire   [7:0] grp_weight_load_fu_1439_weight_buffer_3_30_V_d0;
wire   [4:0] grp_weight_load_fu_1439_weight_buffer_3_31_V_address0;
wire    grp_weight_load_fu_1439_weight_buffer_3_31_V_ce0;
wire    grp_weight_load_fu_1439_weight_buffer_3_31_V_we0;
wire   [7:0] grp_weight_load_fu_1439_weight_buffer_3_31_V_d0;
wire    grp_weight_load_fu_1439_enable;
wire    grp_output_write_fu_1709_ap_start;
wire    grp_output_write_fu_1709_ap_done;
wire    grp_output_write_fu_1709_ap_idle;
wire    grp_output_write_fu_1709_ap_ready;
wire    grp_output_write_fu_1709_m_axi_Output_r_AWVALID;
wire   [31:0] grp_output_write_fu_1709_m_axi_Output_r_AWADDR;
wire   [0:0] grp_output_write_fu_1709_m_axi_Output_r_AWID;
wire   [31:0] grp_output_write_fu_1709_m_axi_Output_r_AWLEN;
wire   [2:0] grp_output_write_fu_1709_m_axi_Output_r_AWSIZE;
wire   [1:0] grp_output_write_fu_1709_m_axi_Output_r_AWBURST;
wire   [1:0] grp_output_write_fu_1709_m_axi_Output_r_AWLOCK;
wire   [3:0] grp_output_write_fu_1709_m_axi_Output_r_AWCACHE;
wire   [2:0] grp_output_write_fu_1709_m_axi_Output_r_AWPROT;
wire   [3:0] grp_output_write_fu_1709_m_axi_Output_r_AWQOS;
wire   [3:0] grp_output_write_fu_1709_m_axi_Output_r_AWREGION;
wire   [0:0] grp_output_write_fu_1709_m_axi_Output_r_AWUSER;
wire    grp_output_write_fu_1709_m_axi_Output_r_WVALID;
wire   [31:0] grp_output_write_fu_1709_m_axi_Output_r_WDATA;
wire   [3:0] grp_output_write_fu_1709_m_axi_Output_r_WSTRB;
wire    grp_output_write_fu_1709_m_axi_Output_r_WLAST;
wire   [0:0] grp_output_write_fu_1709_m_axi_Output_r_WID;
wire   [0:0] grp_output_write_fu_1709_m_axi_Output_r_WUSER;
wire    grp_output_write_fu_1709_m_axi_Output_r_ARVALID;
wire   [31:0] grp_output_write_fu_1709_m_axi_Output_r_ARADDR;
wire   [0:0] grp_output_write_fu_1709_m_axi_Output_r_ARID;
wire   [31:0] grp_output_write_fu_1709_m_axi_Output_r_ARLEN;
wire   [2:0] grp_output_write_fu_1709_m_axi_Output_r_ARSIZE;
wire   [1:0] grp_output_write_fu_1709_m_axi_Output_r_ARBURST;
wire   [1:0] grp_output_write_fu_1709_m_axi_Output_r_ARLOCK;
wire   [3:0] grp_output_write_fu_1709_m_axi_Output_r_ARCACHE;
wire   [2:0] grp_output_write_fu_1709_m_axi_Output_r_ARPROT;
wire   [3:0] grp_output_write_fu_1709_m_axi_Output_r_ARQOS;
wire   [3:0] grp_output_write_fu_1709_m_axi_Output_r_ARREGION;
wire   [0:0] grp_output_write_fu_1709_m_axi_Output_r_ARUSER;
wire    grp_output_write_fu_1709_m_axi_Output_r_RREADY;
wire    grp_output_write_fu_1709_m_axi_Output_r_BREADY;
wire    grp_output_write_fu_1709_write_flag;
wire    grp_output_write_fu_1709_half;
wire   [9:0] grp_output_write_fu_1709_output_buffer_0_address0;
wire    grp_output_write_fu_1709_output_buffer_0_ce0;
wire   [9:0] grp_output_write_fu_1709_output_buffer_1_address0;
wire    grp_output_write_fu_1709_output_buffer_1_ce0;
wire   [9:0] grp_output_write_fu_1709_output_buffer_2_address0;
wire    grp_output_write_fu_1709_output_buffer_2_ce0;
wire   [9:0] grp_output_write_fu_1709_output_buffer_3_address0;
wire    grp_output_write_fu_1709_output_buffer_3_ce0;
wire   [9:0] grp_output_write_fu_1709_output_buffer_4_address0;
wire    grp_output_write_fu_1709_output_buffer_4_ce0;
wire   [9:0] grp_output_write_fu_1709_output_buffer_5_address0;
wire    grp_output_write_fu_1709_output_buffer_5_ce0;
wire   [9:0] grp_output_write_fu_1709_output_buffer_6_address0;
wire    grp_output_write_fu_1709_output_buffer_6_ce0;
wire   [9:0] grp_output_write_fu_1709_output_buffer_7_address0;
wire    grp_output_write_fu_1709_output_buffer_7_ce0;
wire   [9:0] grp_output_write_fu_1709_output_buffer_8_address0;
wire    grp_output_write_fu_1709_output_buffer_8_ce0;
wire   [9:0] grp_output_write_fu_1709_output_buffer_9_address0;
wire    grp_output_write_fu_1709_output_buffer_9_ce0;
wire   [9:0] grp_output_write_fu_1709_output_buffer_10_address0;
wire    grp_output_write_fu_1709_output_buffer_10_ce0;
wire   [9:0] grp_output_write_fu_1709_output_buffer_11_address0;
wire    grp_output_write_fu_1709_output_buffer_11_ce0;
wire   [9:0] grp_output_write_fu_1709_output_buffer_12_address0;
wire    grp_output_write_fu_1709_output_buffer_12_ce0;
wire   [9:0] grp_output_write_fu_1709_output_buffer_13_address0;
wire    grp_output_write_fu_1709_output_buffer_13_ce0;
wire   [9:0] grp_output_write_fu_1709_output_buffer_14_address0;
wire    grp_output_write_fu_1709_output_buffer_14_ce0;
wire   [9:0] grp_output_write_fu_1709_output_buffer_15_address0;
wire    grp_output_write_fu_1709_output_buffer_15_ce0;
wire   [9:0] grp_output_write_fu_1709_output_buffer_16_address0;
wire    grp_output_write_fu_1709_output_buffer_16_ce0;
wire   [9:0] grp_output_write_fu_1709_output_buffer_17_address0;
wire    grp_output_write_fu_1709_output_buffer_17_ce0;
wire   [9:0] grp_output_write_fu_1709_output_buffer_18_address0;
wire    grp_output_write_fu_1709_output_buffer_18_ce0;
wire   [9:0] grp_output_write_fu_1709_output_buffer_19_address0;
wire    grp_output_write_fu_1709_output_buffer_19_ce0;
wire   [9:0] grp_output_write_fu_1709_output_buffer_20_address0;
wire    grp_output_write_fu_1709_output_buffer_20_ce0;
wire   [9:0] grp_output_write_fu_1709_output_buffer_21_address0;
wire    grp_output_write_fu_1709_output_buffer_21_ce0;
wire   [9:0] grp_output_write_fu_1709_output_buffer_22_address0;
wire    grp_output_write_fu_1709_output_buffer_22_ce0;
wire   [9:0] grp_output_write_fu_1709_output_buffer_23_address0;
wire    grp_output_write_fu_1709_output_buffer_23_ce0;
wire   [9:0] grp_output_write_fu_1709_output_buffer_24_address0;
wire    grp_output_write_fu_1709_output_buffer_24_ce0;
wire   [9:0] grp_output_write_fu_1709_output_buffer_25_address0;
wire    grp_output_write_fu_1709_output_buffer_25_ce0;
wire   [9:0] grp_output_write_fu_1709_output_buffer_26_address0;
wire    grp_output_write_fu_1709_output_buffer_26_ce0;
wire   [9:0] grp_output_write_fu_1709_output_buffer_27_address0;
wire    grp_output_write_fu_1709_output_buffer_27_ce0;
wire   [9:0] grp_output_write_fu_1709_output_buffer_28_address0;
wire    grp_output_write_fu_1709_output_buffer_28_ce0;
wire   [9:0] grp_output_write_fu_1709_output_buffer_29_address0;
wire    grp_output_write_fu_1709_output_buffer_29_ce0;
wire   [9:0] grp_output_write_fu_1709_output_buffer_30_address0;
wire    grp_output_write_fu_1709_output_buffer_30_ce0;
wire   [9:0] grp_output_write_fu_1709_output_buffer_31_address0;
wire    grp_output_write_fu_1709_output_buffer_31_ce0;
wire    grp_input_load_conv_fu_1788_ap_start;
wire    grp_input_load_conv_fu_1788_ap_done;
wire    grp_input_load_conv_fu_1788_ap_idle;
wire    grp_input_load_conv_fu_1788_ap_ready;
wire    grp_input_load_conv_fu_1788_m_axi_input_r_AWVALID;
wire   [31:0] grp_input_load_conv_fu_1788_m_axi_input_r_AWADDR;
wire   [0:0] grp_input_load_conv_fu_1788_m_axi_input_r_AWID;
wire   [31:0] grp_input_load_conv_fu_1788_m_axi_input_r_AWLEN;
wire   [2:0] grp_input_load_conv_fu_1788_m_axi_input_r_AWSIZE;
wire   [1:0] grp_input_load_conv_fu_1788_m_axi_input_r_AWBURST;
wire   [1:0] grp_input_load_conv_fu_1788_m_axi_input_r_AWLOCK;
wire   [3:0] grp_input_load_conv_fu_1788_m_axi_input_r_AWCACHE;
wire   [2:0] grp_input_load_conv_fu_1788_m_axi_input_r_AWPROT;
wire   [3:0] grp_input_load_conv_fu_1788_m_axi_input_r_AWQOS;
wire   [3:0] grp_input_load_conv_fu_1788_m_axi_input_r_AWREGION;
wire   [0:0] grp_input_load_conv_fu_1788_m_axi_input_r_AWUSER;
wire    grp_input_load_conv_fu_1788_m_axi_input_r_WVALID;
wire   [31:0] grp_input_load_conv_fu_1788_m_axi_input_r_WDATA;
wire   [3:0] grp_input_load_conv_fu_1788_m_axi_input_r_WSTRB;
wire    grp_input_load_conv_fu_1788_m_axi_input_r_WLAST;
wire   [0:0] grp_input_load_conv_fu_1788_m_axi_input_r_WID;
wire   [0:0] grp_input_load_conv_fu_1788_m_axi_input_r_WUSER;
wire    grp_input_load_conv_fu_1788_m_axi_input_r_ARVALID;
wire   [31:0] grp_input_load_conv_fu_1788_m_axi_input_r_ARADDR;
wire   [0:0] grp_input_load_conv_fu_1788_m_axi_input_r_ARID;
wire   [31:0] grp_input_load_conv_fu_1788_m_axi_input_r_ARLEN;
wire   [2:0] grp_input_load_conv_fu_1788_m_axi_input_r_ARSIZE;
wire   [1:0] grp_input_load_conv_fu_1788_m_axi_input_r_ARBURST;
wire   [1:0] grp_input_load_conv_fu_1788_m_axi_input_r_ARLOCK;
wire   [3:0] grp_input_load_conv_fu_1788_m_axi_input_r_ARCACHE;
wire   [2:0] grp_input_load_conv_fu_1788_m_axi_input_r_ARPROT;
wire   [3:0] grp_input_load_conv_fu_1788_m_axi_input_r_ARQOS;
wire   [3:0] grp_input_load_conv_fu_1788_m_axi_input_r_ARREGION;
wire   [0:0] grp_input_load_conv_fu_1788_m_axi_input_r_ARUSER;
wire    grp_input_load_conv_fu_1788_m_axi_input_r_RREADY;
wire    grp_input_load_conv_fu_1788_m_axi_input_r_BREADY;
wire   [10:0] grp_input_load_conv_fu_1788_input_buffer_0_V_address0;
wire    grp_input_load_conv_fu_1788_input_buffer_0_V_ce0;
wire    grp_input_load_conv_fu_1788_input_buffer_0_V_we0;
wire   [7:0] grp_input_load_conv_fu_1788_input_buffer_0_V_d0;
wire   [10:0] grp_input_load_conv_fu_1788_input_buffer_1_V_address0;
wire    grp_input_load_conv_fu_1788_input_buffer_1_V_ce0;
wire    grp_input_load_conv_fu_1788_input_buffer_1_V_we0;
wire   [7:0] grp_input_load_conv_fu_1788_input_buffer_1_V_d0;
wire   [10:0] grp_input_load_conv_fu_1788_input_buffer_2_V_address0;
wire    grp_input_load_conv_fu_1788_input_buffer_2_V_ce0;
wire    grp_input_load_conv_fu_1788_input_buffer_2_V_we0;
wire   [7:0] grp_input_load_conv_fu_1788_input_buffer_2_V_d0;
wire   [10:0] grp_input_load_conv_fu_1788_input_buffer_3_V_address0;
wire    grp_input_load_conv_fu_1788_input_buffer_3_V_ce0;
wire    grp_input_load_conv_fu_1788_input_buffer_3_V_we0;
wire   [7:0] grp_input_load_conv_fu_1788_input_buffer_3_V_d0;
wire    grp_input_load_conv_fu_1788_enable;
wire    grp_relu_fu_1810_ap_start;
wire    grp_relu_fu_1810_ap_done;
wire    grp_relu_fu_1810_ap_idle;
wire    grp_relu_fu_1810_ap_ready;
wire   [9:0] grp_relu_fu_1810_input_0_address0;
wire    grp_relu_fu_1810_input_0_ce0;
wire    grp_relu_fu_1810_input_0_we0;
wire   [31:0] grp_relu_fu_1810_input_0_d0;
wire   [9:0] grp_relu_fu_1810_input_1_address0;
wire    grp_relu_fu_1810_input_1_ce0;
wire    grp_relu_fu_1810_input_1_we0;
wire   [31:0] grp_relu_fu_1810_input_1_d0;
wire   [9:0] grp_relu_fu_1810_input_2_address0;
wire    grp_relu_fu_1810_input_2_ce0;
wire    grp_relu_fu_1810_input_2_we0;
wire   [31:0] grp_relu_fu_1810_input_2_d0;
wire   [9:0] grp_relu_fu_1810_input_3_address0;
wire    grp_relu_fu_1810_input_3_ce0;
wire    grp_relu_fu_1810_input_3_we0;
wire   [31:0] grp_relu_fu_1810_input_3_d0;
wire   [9:0] grp_relu_fu_1810_input_4_address0;
wire    grp_relu_fu_1810_input_4_ce0;
wire    grp_relu_fu_1810_input_4_we0;
wire   [31:0] grp_relu_fu_1810_input_4_d0;
wire   [9:0] grp_relu_fu_1810_input_5_address0;
wire    grp_relu_fu_1810_input_5_ce0;
wire    grp_relu_fu_1810_input_5_we0;
wire   [31:0] grp_relu_fu_1810_input_5_d0;
wire   [9:0] grp_relu_fu_1810_input_6_address0;
wire    grp_relu_fu_1810_input_6_ce0;
wire    grp_relu_fu_1810_input_6_we0;
wire   [31:0] grp_relu_fu_1810_input_6_d0;
wire   [9:0] grp_relu_fu_1810_input_7_address0;
wire    grp_relu_fu_1810_input_7_ce0;
wire    grp_relu_fu_1810_input_7_we0;
wire   [31:0] grp_relu_fu_1810_input_7_d0;
wire   [9:0] grp_relu_fu_1810_input_8_address0;
wire    grp_relu_fu_1810_input_8_ce0;
wire    grp_relu_fu_1810_input_8_we0;
wire   [31:0] grp_relu_fu_1810_input_8_d0;
wire   [9:0] grp_relu_fu_1810_input_9_address0;
wire    grp_relu_fu_1810_input_9_ce0;
wire    grp_relu_fu_1810_input_9_we0;
wire   [31:0] grp_relu_fu_1810_input_9_d0;
wire   [9:0] grp_relu_fu_1810_input_10_address0;
wire    grp_relu_fu_1810_input_10_ce0;
wire    grp_relu_fu_1810_input_10_we0;
wire   [31:0] grp_relu_fu_1810_input_10_d0;
wire   [9:0] grp_relu_fu_1810_input_11_address0;
wire    grp_relu_fu_1810_input_11_ce0;
wire    grp_relu_fu_1810_input_11_we0;
wire   [31:0] grp_relu_fu_1810_input_11_d0;
wire   [9:0] grp_relu_fu_1810_input_12_address0;
wire    grp_relu_fu_1810_input_12_ce0;
wire    grp_relu_fu_1810_input_12_we0;
wire   [31:0] grp_relu_fu_1810_input_12_d0;
wire   [9:0] grp_relu_fu_1810_input_13_address0;
wire    grp_relu_fu_1810_input_13_ce0;
wire    grp_relu_fu_1810_input_13_we0;
wire   [31:0] grp_relu_fu_1810_input_13_d0;
wire   [9:0] grp_relu_fu_1810_input_14_address0;
wire    grp_relu_fu_1810_input_14_ce0;
wire    grp_relu_fu_1810_input_14_we0;
wire   [31:0] grp_relu_fu_1810_input_14_d0;
wire   [9:0] grp_relu_fu_1810_input_15_address0;
wire    grp_relu_fu_1810_input_15_ce0;
wire    grp_relu_fu_1810_input_15_we0;
wire   [31:0] grp_relu_fu_1810_input_15_d0;
wire   [9:0] grp_relu_fu_1810_input_16_address0;
wire    grp_relu_fu_1810_input_16_ce0;
wire    grp_relu_fu_1810_input_16_we0;
wire   [31:0] grp_relu_fu_1810_input_16_d0;
wire   [9:0] grp_relu_fu_1810_input_17_address0;
wire    grp_relu_fu_1810_input_17_ce0;
wire    grp_relu_fu_1810_input_17_we0;
wire   [31:0] grp_relu_fu_1810_input_17_d0;
wire   [9:0] grp_relu_fu_1810_input_18_address0;
wire    grp_relu_fu_1810_input_18_ce0;
wire    grp_relu_fu_1810_input_18_we0;
wire   [31:0] grp_relu_fu_1810_input_18_d0;
wire   [9:0] grp_relu_fu_1810_input_19_address0;
wire    grp_relu_fu_1810_input_19_ce0;
wire    grp_relu_fu_1810_input_19_we0;
wire   [31:0] grp_relu_fu_1810_input_19_d0;
wire   [9:0] grp_relu_fu_1810_input_20_address0;
wire    grp_relu_fu_1810_input_20_ce0;
wire    grp_relu_fu_1810_input_20_we0;
wire   [31:0] grp_relu_fu_1810_input_20_d0;
wire   [9:0] grp_relu_fu_1810_input_21_address0;
wire    grp_relu_fu_1810_input_21_ce0;
wire    grp_relu_fu_1810_input_21_we0;
wire   [31:0] grp_relu_fu_1810_input_21_d0;
wire   [9:0] grp_relu_fu_1810_input_22_address0;
wire    grp_relu_fu_1810_input_22_ce0;
wire    grp_relu_fu_1810_input_22_we0;
wire   [31:0] grp_relu_fu_1810_input_22_d0;
wire   [9:0] grp_relu_fu_1810_input_23_address0;
wire    grp_relu_fu_1810_input_23_ce0;
wire    grp_relu_fu_1810_input_23_we0;
wire   [31:0] grp_relu_fu_1810_input_23_d0;
wire   [9:0] grp_relu_fu_1810_input_24_address0;
wire    grp_relu_fu_1810_input_24_ce0;
wire    grp_relu_fu_1810_input_24_we0;
wire   [31:0] grp_relu_fu_1810_input_24_d0;
wire   [9:0] grp_relu_fu_1810_input_25_address0;
wire    grp_relu_fu_1810_input_25_ce0;
wire    grp_relu_fu_1810_input_25_we0;
wire   [31:0] grp_relu_fu_1810_input_25_d0;
wire   [9:0] grp_relu_fu_1810_input_26_address0;
wire    grp_relu_fu_1810_input_26_ce0;
wire    grp_relu_fu_1810_input_26_we0;
wire   [31:0] grp_relu_fu_1810_input_26_d0;
wire   [9:0] grp_relu_fu_1810_input_27_address0;
wire    grp_relu_fu_1810_input_27_ce0;
wire    grp_relu_fu_1810_input_27_we0;
wire   [31:0] grp_relu_fu_1810_input_27_d0;
wire   [9:0] grp_relu_fu_1810_input_28_address0;
wire    grp_relu_fu_1810_input_28_ce0;
wire    grp_relu_fu_1810_input_28_we0;
wire   [31:0] grp_relu_fu_1810_input_28_d0;
wire   [9:0] grp_relu_fu_1810_input_29_address0;
wire    grp_relu_fu_1810_input_29_ce0;
wire    grp_relu_fu_1810_input_29_we0;
wire   [31:0] grp_relu_fu_1810_input_29_d0;
wire   [9:0] grp_relu_fu_1810_input_30_address0;
wire    grp_relu_fu_1810_input_30_ce0;
wire    grp_relu_fu_1810_input_30_we0;
wire   [31:0] grp_relu_fu_1810_input_30_d0;
wire   [9:0] grp_relu_fu_1810_input_31_address0;
wire    grp_relu_fu_1810_input_31_ce0;
wire    grp_relu_fu_1810_input_31_we0;
wire   [31:0] grp_relu_fu_1810_input_31_d0;
wire    grp_relu_fu_1810_enable;
wire    grp_fc_fu_1882_ap_start;
wire    grp_fc_fu_1882_ap_done;
wire    grp_fc_fu_1882_ap_idle;
wire    grp_fc_fu_1882_ap_ready;
wire   [8:0] grp_fc_fu_1882_input_buffer_0_address0;
wire    grp_fc_fu_1882_input_buffer_0_ce0;
wire   [8:0] grp_fc_fu_1882_input_buffer_1_address0;
wire    grp_fc_fu_1882_input_buffer_1_ce0;
wire   [8:0] grp_fc_fu_1882_input_buffer_2_address0;
wire    grp_fc_fu_1882_input_buffer_2_ce0;
wire   [8:0] grp_fc_fu_1882_input_buffer_3_address0;
wire    grp_fc_fu_1882_input_buffer_3_ce0;
wire   [8:0] grp_fc_fu_1882_input_buffer_4_address0;
wire    grp_fc_fu_1882_input_buffer_4_ce0;
wire   [8:0] grp_fc_fu_1882_input_buffer_5_address0;
wire    grp_fc_fu_1882_input_buffer_5_ce0;
wire   [8:0] grp_fc_fu_1882_input_buffer_6_address0;
wire    grp_fc_fu_1882_input_buffer_6_ce0;
wire   [8:0] grp_fc_fu_1882_input_buffer_7_address0;
wire    grp_fc_fu_1882_input_buffer_7_ce0;
wire   [6:0] grp_fc_fu_1882_output_buffer_0_address0;
wire    grp_fc_fu_1882_output_buffer_0_ce0;
wire    grp_fc_fu_1882_output_buffer_0_we0;
wire   [31:0] grp_fc_fu_1882_output_buffer_0_d0;
wire   [6:0] grp_fc_fu_1882_output_buffer_1_address0;
wire    grp_fc_fu_1882_output_buffer_1_ce0;
wire    grp_fc_fu_1882_output_buffer_1_we0;
wire   [31:0] grp_fc_fu_1882_output_buffer_1_d0;
wire   [6:0] grp_fc_fu_1882_output_buffer_2_address0;
wire    grp_fc_fu_1882_output_buffer_2_ce0;
wire    grp_fc_fu_1882_output_buffer_2_we0;
wire   [31:0] grp_fc_fu_1882_output_buffer_2_d0;
wire   [6:0] grp_fc_fu_1882_output_buffer_3_address0;
wire    grp_fc_fu_1882_output_buffer_3_ce0;
wire    grp_fc_fu_1882_output_buffer_3_we0;
wire   [31:0] grp_fc_fu_1882_output_buffer_3_d0;
wire   [6:0] grp_fc_fu_1882_output_buffer_4_address0;
wire    grp_fc_fu_1882_output_buffer_4_ce0;
wire    grp_fc_fu_1882_output_buffer_4_we0;
wire   [31:0] grp_fc_fu_1882_output_buffer_4_d0;
wire   [6:0] grp_fc_fu_1882_output_buffer_5_address0;
wire    grp_fc_fu_1882_output_buffer_5_ce0;
wire    grp_fc_fu_1882_output_buffer_5_we0;
wire   [31:0] grp_fc_fu_1882_output_buffer_5_d0;
wire   [6:0] grp_fc_fu_1882_output_buffer_6_address0;
wire    grp_fc_fu_1882_output_buffer_6_ce0;
wire    grp_fc_fu_1882_output_buffer_6_we0;
wire   [31:0] grp_fc_fu_1882_output_buffer_6_d0;
wire   [6:0] grp_fc_fu_1882_output_buffer_7_address0;
wire    grp_fc_fu_1882_output_buffer_7_ce0;
wire    grp_fc_fu_1882_output_buffer_7_we0;
wire   [31:0] grp_fc_fu_1882_output_buffer_7_d0;
wire   [9:0] grp_fc_fu_1882_beta_buffer_address0;
wire    grp_fc_fu_1882_beta_buffer_ce0;
wire    grp_fc_fu_1882_enable;
wire   [8:0] grp_fc_fu_1882_weight_buffer_fc_0_address0;
wire    grp_fc_fu_1882_weight_buffer_fc_0_ce0;
wire   [8:0] grp_fc_fu_1882_weight_buffer_fc_1_address0;
wire    grp_fc_fu_1882_weight_buffer_fc_1_ce0;
wire   [8:0] grp_fc_fu_1882_weight_buffer_fc_2_address0;
wire    grp_fc_fu_1882_weight_buffer_fc_2_ce0;
wire   [8:0] grp_fc_fu_1882_weight_buffer_fc_3_address0;
wire    grp_fc_fu_1882_weight_buffer_fc_3_ce0;
wire   [8:0] grp_fc_fu_1882_weight_buffer_fc_4_address0;
wire    grp_fc_fu_1882_weight_buffer_fc_4_ce0;
wire   [8:0] grp_fc_fu_1882_weight_buffer_fc_5_address0;
wire    grp_fc_fu_1882_weight_buffer_fc_5_ce0;
wire   [8:0] grp_fc_fu_1882_weight_buffer_fc_6_address0;
wire    grp_fc_fu_1882_weight_buffer_fc_6_ce0;
wire   [8:0] grp_fc_fu_1882_weight_buffer_fc_7_address0;
wire    grp_fc_fu_1882_weight_buffer_fc_7_ce0;
wire    grp_relu_fc_fu_1941_ap_start;
wire    grp_relu_fc_fu_1941_ap_done;
wire    grp_relu_fc_fu_1941_ap_idle;
wire    grp_relu_fc_fu_1941_ap_ready;
wire    grp_relu_fc_fu_1941_enable;
wire   [6:0] grp_relu_fc_fu_1941_output_buffer_fc_0_address0;
wire    grp_relu_fc_fu_1941_output_buffer_fc_0_ce0;
wire    grp_relu_fc_fu_1941_output_buffer_fc_0_we0;
wire   [31:0] grp_relu_fc_fu_1941_output_buffer_fc_0_d0;
wire   [6:0] grp_relu_fc_fu_1941_output_buffer_fc_1_address0;
wire    grp_relu_fc_fu_1941_output_buffer_fc_1_ce0;
wire    grp_relu_fc_fu_1941_output_buffer_fc_1_we0;
wire   [31:0] grp_relu_fc_fu_1941_output_buffer_fc_1_d0;
wire   [6:0] grp_relu_fc_fu_1941_output_buffer_fc_2_address0;
wire    grp_relu_fc_fu_1941_output_buffer_fc_2_ce0;
wire    grp_relu_fc_fu_1941_output_buffer_fc_2_we0;
wire   [31:0] grp_relu_fc_fu_1941_output_buffer_fc_2_d0;
wire   [6:0] grp_relu_fc_fu_1941_output_buffer_fc_3_address0;
wire    grp_relu_fc_fu_1941_output_buffer_fc_3_ce0;
wire    grp_relu_fc_fu_1941_output_buffer_fc_3_we0;
wire   [31:0] grp_relu_fc_fu_1941_output_buffer_fc_3_d0;
wire   [6:0] grp_relu_fc_fu_1941_output_buffer_fc_4_address0;
wire    grp_relu_fc_fu_1941_output_buffer_fc_4_ce0;
wire    grp_relu_fc_fu_1941_output_buffer_fc_4_we0;
wire   [31:0] grp_relu_fc_fu_1941_output_buffer_fc_4_d0;
wire   [6:0] grp_relu_fc_fu_1941_output_buffer_fc_5_address0;
wire    grp_relu_fc_fu_1941_output_buffer_fc_5_ce0;
wire    grp_relu_fc_fu_1941_output_buffer_fc_5_we0;
wire   [31:0] grp_relu_fc_fu_1941_output_buffer_fc_5_d0;
wire   [6:0] grp_relu_fc_fu_1941_output_buffer_fc_6_address0;
wire    grp_relu_fc_fu_1941_output_buffer_fc_6_ce0;
wire    grp_relu_fc_fu_1941_output_buffer_fc_6_we0;
wire   [31:0] grp_relu_fc_fu_1941_output_buffer_fc_6_d0;
wire   [6:0] grp_relu_fc_fu_1941_output_buffer_fc_7_address0;
wire    grp_relu_fc_fu_1941_output_buffer_fc_7_ce0;
wire    grp_relu_fc_fu_1941_output_buffer_fc_7_we0;
wire   [31:0] grp_relu_fc_fu_1941_output_buffer_fc_7_d0;
wire    grp_output_write_fc_fu_1963_ap_start;
wire    grp_output_write_fc_fu_1963_ap_done;
wire    grp_output_write_fc_fu_1963_ap_idle;
wire    grp_output_write_fc_fu_1963_ap_ready;
wire    grp_output_write_fc_fu_1963_m_axi_Output_r_AWVALID;
wire   [31:0] grp_output_write_fc_fu_1963_m_axi_Output_r_AWADDR;
wire   [0:0] grp_output_write_fc_fu_1963_m_axi_Output_r_AWID;
wire   [31:0] grp_output_write_fc_fu_1963_m_axi_Output_r_AWLEN;
wire   [2:0] grp_output_write_fc_fu_1963_m_axi_Output_r_AWSIZE;
wire   [1:0] grp_output_write_fc_fu_1963_m_axi_Output_r_AWBURST;
wire   [1:0] grp_output_write_fc_fu_1963_m_axi_Output_r_AWLOCK;
wire   [3:0] grp_output_write_fc_fu_1963_m_axi_Output_r_AWCACHE;
wire   [2:0] grp_output_write_fc_fu_1963_m_axi_Output_r_AWPROT;
wire   [3:0] grp_output_write_fc_fu_1963_m_axi_Output_r_AWQOS;
wire   [3:0] grp_output_write_fc_fu_1963_m_axi_Output_r_AWREGION;
wire   [0:0] grp_output_write_fc_fu_1963_m_axi_Output_r_AWUSER;
wire    grp_output_write_fc_fu_1963_m_axi_Output_r_WVALID;
wire   [31:0] grp_output_write_fc_fu_1963_m_axi_Output_r_WDATA;
wire   [3:0] grp_output_write_fc_fu_1963_m_axi_Output_r_WSTRB;
wire    grp_output_write_fc_fu_1963_m_axi_Output_r_WLAST;
wire   [0:0] grp_output_write_fc_fu_1963_m_axi_Output_r_WID;
wire   [0:0] grp_output_write_fc_fu_1963_m_axi_Output_r_WUSER;
wire    grp_output_write_fc_fu_1963_m_axi_Output_r_ARVALID;
wire   [31:0] grp_output_write_fc_fu_1963_m_axi_Output_r_ARADDR;
wire   [0:0] grp_output_write_fc_fu_1963_m_axi_Output_r_ARID;
wire   [31:0] grp_output_write_fc_fu_1963_m_axi_Output_r_ARLEN;
wire   [2:0] grp_output_write_fc_fu_1963_m_axi_Output_r_ARSIZE;
wire   [1:0] grp_output_write_fc_fu_1963_m_axi_Output_r_ARBURST;
wire   [1:0] grp_output_write_fc_fu_1963_m_axi_Output_r_ARLOCK;
wire   [3:0] grp_output_write_fc_fu_1963_m_axi_Output_r_ARCACHE;
wire   [2:0] grp_output_write_fc_fu_1963_m_axi_Output_r_ARPROT;
wire   [3:0] grp_output_write_fc_fu_1963_m_axi_Output_r_ARQOS;
wire   [3:0] grp_output_write_fc_fu_1963_m_axi_Output_r_ARREGION;
wire   [0:0] grp_output_write_fc_fu_1963_m_axi_Output_r_ARUSER;
wire    grp_output_write_fc_fu_1963_m_axi_Output_r_RREADY;
wire    grp_output_write_fc_fu_1963_m_axi_Output_r_BREADY;
wire    grp_output_write_fc_fu_1963_enable;
wire   [6:0] grp_output_write_fc_fu_1963_output_buffer_fc_0_address0;
wire    grp_output_write_fc_fu_1963_output_buffer_fc_0_ce0;
wire   [6:0] grp_output_write_fc_fu_1963_output_buffer_fc_1_address0;
wire    grp_output_write_fc_fu_1963_output_buffer_fc_1_ce0;
wire   [6:0] grp_output_write_fc_fu_1963_output_buffer_fc_2_address0;
wire    grp_output_write_fc_fu_1963_output_buffer_fc_2_ce0;
wire   [6:0] grp_output_write_fc_fu_1963_output_buffer_fc_3_address0;
wire    grp_output_write_fc_fu_1963_output_buffer_fc_3_ce0;
wire   [6:0] grp_output_write_fc_fu_1963_output_buffer_fc_4_address0;
wire    grp_output_write_fc_fu_1963_output_buffer_fc_4_ce0;
wire   [6:0] grp_output_write_fc_fu_1963_output_buffer_fc_5_address0;
wire    grp_output_write_fc_fu_1963_output_buffer_fc_5_ce0;
wire   [6:0] grp_output_write_fc_fu_1963_output_buffer_fc_6_address0;
wire    grp_output_write_fc_fu_1963_output_buffer_fc_6_ce0;
wire   [6:0] grp_output_write_fc_fu_1963_output_buffer_fc_7_address0;
wire    grp_output_write_fc_fu_1963_output_buffer_fc_7_ce0;
wire    grp_weight_load_fc_fu_1987_ap_start;
wire    grp_weight_load_fc_fu_1987_ap_done;
wire    grp_weight_load_fc_fu_1987_ap_idle;
wire    grp_weight_load_fc_fu_1987_ap_ready;
wire   [8:0] grp_weight_load_fc_fu_1987_weight_buffer_fc_0_address0;
wire    grp_weight_load_fc_fu_1987_weight_buffer_fc_0_ce0;
wire    grp_weight_load_fc_fu_1987_weight_buffer_fc_0_we0;
wire   [31:0] grp_weight_load_fc_fu_1987_weight_buffer_fc_0_d0;
wire   [8:0] grp_weight_load_fc_fu_1987_weight_buffer_fc_1_address0;
wire    grp_weight_load_fc_fu_1987_weight_buffer_fc_1_ce0;
wire    grp_weight_load_fc_fu_1987_weight_buffer_fc_1_we0;
wire   [31:0] grp_weight_load_fc_fu_1987_weight_buffer_fc_1_d0;
wire   [8:0] grp_weight_load_fc_fu_1987_weight_buffer_fc_2_address0;
wire    grp_weight_load_fc_fu_1987_weight_buffer_fc_2_ce0;
wire    grp_weight_load_fc_fu_1987_weight_buffer_fc_2_we0;
wire   [31:0] grp_weight_load_fc_fu_1987_weight_buffer_fc_2_d0;
wire   [8:0] grp_weight_load_fc_fu_1987_weight_buffer_fc_3_address0;
wire    grp_weight_load_fc_fu_1987_weight_buffer_fc_3_ce0;
wire    grp_weight_load_fc_fu_1987_weight_buffer_fc_3_we0;
wire   [31:0] grp_weight_load_fc_fu_1987_weight_buffer_fc_3_d0;
wire   [8:0] grp_weight_load_fc_fu_1987_weight_buffer_fc_4_address0;
wire    grp_weight_load_fc_fu_1987_weight_buffer_fc_4_ce0;
wire    grp_weight_load_fc_fu_1987_weight_buffer_fc_4_we0;
wire   [31:0] grp_weight_load_fc_fu_1987_weight_buffer_fc_4_d0;
wire   [8:0] grp_weight_load_fc_fu_1987_weight_buffer_fc_5_address0;
wire    grp_weight_load_fc_fu_1987_weight_buffer_fc_5_ce0;
wire    grp_weight_load_fc_fu_1987_weight_buffer_fc_5_we0;
wire   [31:0] grp_weight_load_fc_fu_1987_weight_buffer_fc_5_d0;
wire   [8:0] grp_weight_load_fc_fu_1987_weight_buffer_fc_6_address0;
wire    grp_weight_load_fc_fu_1987_weight_buffer_fc_6_ce0;
wire    grp_weight_load_fc_fu_1987_weight_buffer_fc_6_we0;
wire   [31:0] grp_weight_load_fc_fu_1987_weight_buffer_fc_6_d0;
wire   [8:0] grp_weight_load_fc_fu_1987_weight_buffer_fc_7_address0;
wire    grp_weight_load_fc_fu_1987_weight_buffer_fc_7_ce0;
wire    grp_weight_load_fc_fu_1987_weight_buffer_fc_7_we0;
wire   [31:0] grp_weight_load_fc_fu_1987_weight_buffer_fc_7_d0;
wire    grp_weight_load_fc_fu_1987_m_axi_Weight_AWVALID;
wire   [31:0] grp_weight_load_fc_fu_1987_m_axi_Weight_AWADDR;
wire   [0:0] grp_weight_load_fc_fu_1987_m_axi_Weight_AWID;
wire   [31:0] grp_weight_load_fc_fu_1987_m_axi_Weight_AWLEN;
wire   [2:0] grp_weight_load_fc_fu_1987_m_axi_Weight_AWSIZE;
wire   [1:0] grp_weight_load_fc_fu_1987_m_axi_Weight_AWBURST;
wire   [1:0] grp_weight_load_fc_fu_1987_m_axi_Weight_AWLOCK;
wire   [3:0] grp_weight_load_fc_fu_1987_m_axi_Weight_AWCACHE;
wire   [2:0] grp_weight_load_fc_fu_1987_m_axi_Weight_AWPROT;
wire   [3:0] grp_weight_load_fc_fu_1987_m_axi_Weight_AWQOS;
wire   [3:0] grp_weight_load_fc_fu_1987_m_axi_Weight_AWREGION;
wire   [0:0] grp_weight_load_fc_fu_1987_m_axi_Weight_AWUSER;
wire    grp_weight_load_fc_fu_1987_m_axi_Weight_WVALID;
wire   [31:0] grp_weight_load_fc_fu_1987_m_axi_Weight_WDATA;
wire   [3:0] grp_weight_load_fc_fu_1987_m_axi_Weight_WSTRB;
wire    grp_weight_load_fc_fu_1987_m_axi_Weight_WLAST;
wire   [0:0] grp_weight_load_fc_fu_1987_m_axi_Weight_WID;
wire   [0:0] grp_weight_load_fc_fu_1987_m_axi_Weight_WUSER;
wire    grp_weight_load_fc_fu_1987_m_axi_Weight_ARVALID;
wire   [31:0] grp_weight_load_fc_fu_1987_m_axi_Weight_ARADDR;
wire   [0:0] grp_weight_load_fc_fu_1987_m_axi_Weight_ARID;
wire   [31:0] grp_weight_load_fc_fu_1987_m_axi_Weight_ARLEN;
wire   [2:0] grp_weight_load_fc_fu_1987_m_axi_Weight_ARSIZE;
wire   [1:0] grp_weight_load_fc_fu_1987_m_axi_Weight_ARBURST;
wire   [1:0] grp_weight_load_fc_fu_1987_m_axi_Weight_ARLOCK;
wire   [3:0] grp_weight_load_fc_fu_1987_m_axi_Weight_ARCACHE;
wire   [2:0] grp_weight_load_fc_fu_1987_m_axi_Weight_ARPROT;
wire   [3:0] grp_weight_load_fc_fu_1987_m_axi_Weight_ARQOS;
wire   [3:0] grp_weight_load_fc_fu_1987_m_axi_Weight_ARREGION;
wire   [0:0] grp_weight_load_fc_fu_1987_m_axi_Weight_ARUSER;
wire    grp_weight_load_fc_fu_1987_m_axi_Weight_RREADY;
wire    grp_weight_load_fc_fu_1987_m_axi_Weight_BREADY;
wire    grp_weight_load_fc_fu_1987_enable;
reg   [29:0] ap_phi_mux_indvar_phi_fu_872_p4;
reg   [30:0] m_reg_891;
wire    ap_CS_fsm_state38;
reg  signed [31:0] phi_mul9_reg_903;
reg   [31:0] phi_mul1_reg_915;
reg   [31:0] phi_mul2_reg_927;
reg   [30:0] n1_reg_939;
wire    ap_CS_fsm_state33;
reg  signed [31:0] phi_mul_reg_951;
reg    grp_pool_fu_962_ap_start_reg;
wire    ap_CS_fsm_state35;
wire    ap_CS_fsm_state36;
reg    grp_conv_fu_1033_ap_start_reg;
wire    ap_CS_fsm_state30;
wire    ap_CS_fsm_state31;
reg    ap_block_state31_on_subcall_done;
reg    grp_weight_load_fu_1439_ap_start_reg;
wire    ap_CS_fsm_state28;
wire    ap_CS_fsm_state29;
reg    grp_output_write_fu_1709_ap_start_reg;
wire    ap_CS_fsm_state37;
reg    grp_input_load_conv_fu_1788_ap_start_reg;
reg    grp_relu_fu_1810_ap_start_reg;
wire    ap_CS_fsm_state34;
reg    grp_fc_fu_1882_ap_start_reg;
wire    ap_CS_fsm_state32;
reg    grp_relu_fc_fu_1941_ap_start_reg;
wire    ap_CS_fsm_state39;
reg    grp_output_write_fc_fu_1963_ap_start_reg;
wire    ap_CS_fsm_state40;
wire    ap_CS_fsm_state41;
reg    grp_weight_load_fc_fu_1987_ap_start_reg;
wire   [63:0] indvar1_fu_2090_p1;
wire   [63:0] newIndex2_fu_2126_p1;
wire   [63:0] tmp_113_fu_2056_p1;
wire   [63:0] tmp_114_fu_2070_p1;
reg    ap_reg_ioackin_Beta_ARREADY;
reg    ap_reg_ioackin_Input_r_ARREADY;
wire   [0:0] tmp_69_fu_2137_p2;
wire   [30:0] tmp_199_fu_2142_p1;
wire   [30:0] n_fu_2145_p3;
wire   [31:0] n_cast_fu_2153_p1;
wire   [31:0] p_neg5_fu_2174_p2;
wire   [30:0] p_lshr6_fu_2179_p4;
wire   [31:0] tmp_115_fu_2189_p1;
wire   [30:0] p_lshr_f8_fu_2199_p4;
wire   [0:0] tmp_200_fu_2167_p3;
wire   [31:0] p_neg_t7_fu_2193_p2;
wire   [31:0] tmp_116_fu_2208_p1;
wire   [31:0] p_neg_fu_2227_p2;
wire   [30:0] p_lshr_fu_2232_p4;
wire   [31:0] tmp_117_fu_2242_p1;
wire   [30:0] p_lshr_f_fu_2252_p4;
wire   [0:0] tmp_201_fu_2220_p3;
wire   [31:0] p_neg_t_fu_2246_p2;
wire   [31:0] tmp_118_fu_2261_p1;
wire   [0:0] tmp_74_fu_2273_p2;
wire   [31:0] m_cast_fu_2311_p1;
wire   [19:0] tmp_202_fu_2326_p1;
wire   [31:0] n1_cast_fu_2338_p1;
reg   [36:0] ap_NS_fsm;
reg    ap_block_state29_on_subcall_done;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_idle_pp1;
wire    ap_enable_pp1;

// power-on initialization
initial begin
#0 ap_CS_fsm = 37'd1;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp1_iter2 = 1'b0;
#0 grp_pool_fu_962_ap_start_reg = 1'b0;
#0 grp_conv_fu_1033_ap_start_reg = 1'b0;
#0 grp_weight_load_fu_1439_ap_start_reg = 1'b0;
#0 grp_output_write_fu_1709_ap_start_reg = 1'b0;
#0 grp_input_load_conv_fu_1788_ap_start_reg = 1'b0;
#0 grp_relu_fu_1810_ap_start_reg = 1'b0;
#0 grp_fc_fu_1882_ap_start_reg = 1'b0;
#0 grp_relu_fc_fu_1941_ap_start_reg = 1'b0;
#0 grp_output_write_fc_fu_1963_ap_start_reg = 1'b0;
#0 grp_weight_load_fc_fu_1987_ap_start_reg = 1'b0;
#0 ap_reg_ioackin_Beta_ARREADY = 1'b0;
#0 ap_reg_ioackin_Input_r_ARREADY = 1'b0;
end

input_load_conv_ibkb #(
    .DataWidth( 32 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
beta_buffer_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(beta_buffer_address0),
    .ce0(beta_buffer_ce0),
    .we0(beta_buffer_we0),
    .d0(Beta_addr_read_reg_2519),
    .q0(beta_buffer_q0)
);

detection_acc_inpmb6 #(
    .DataWidth( 8 ),
    .AddressRange( 1296 ),
    .AddressWidth( 11 ))
input_buffer_V_0_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(input_buffer_V_0_address0),
    .ce0(input_buffer_V_0_ce0),
    .we0(input_buffer_V_0_we0),
    .d0(grp_input_load_conv_fu_1788_input_buffer_0_V_d0),
    .q0(input_buffer_V_0_q0)
);

detection_acc_inpmb6 #(
    .DataWidth( 8 ),
    .AddressRange( 1296 ),
    .AddressWidth( 11 ))
input_buffer_V_1_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(input_buffer_V_1_address0),
    .ce0(input_buffer_V_1_ce0),
    .we0(input_buffer_V_1_we0),
    .d0(grp_input_load_conv_fu_1788_input_buffer_1_V_d0),
    .q0(input_buffer_V_1_q0)
);

detection_acc_inpmb6 #(
    .DataWidth( 8 ),
    .AddressRange( 1296 ),
    .AddressWidth( 11 ))
input_buffer_V_2_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(input_buffer_V_2_address0),
    .ce0(input_buffer_V_2_ce0),
    .we0(input_buffer_V_2_we0),
    .d0(grp_input_load_conv_fu_1788_input_buffer_2_V_d0),
    .q0(input_buffer_V_2_q0)
);

detection_acc_inpmb6 #(
    .DataWidth( 8 ),
    .AddressRange( 1296 ),
    .AddressWidth( 11 ))
input_buffer_V_3_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(input_buffer_V_3_address0),
    .ce0(input_buffer_V_3_ce0),
    .we0(input_buffer_V_3_we0),
    .d0(grp_input_load_conv_fu_1788_input_buffer_3_V_d0),
    .q0(input_buffer_V_3_q0)
);

detection_acc_weiqcK #(
    .DataWidth( 8 ),
    .AddressRange( 25 ),
    .AddressWidth( 5 ))
weight_buffer_V_0_0_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(weight_buffer_V_0_0_address0),
    .ce0(weight_buffer_V_0_0_ce0),
    .we0(weight_buffer_V_0_0_we0),
    .d0(grp_weight_load_fu_1439_weight_buffer_0_0_V_d0),
    .q0(weight_buffer_V_0_0_q0)
);

detection_acc_weiqcK #(
    .DataWidth( 8 ),
    .AddressRange( 25 ),
    .AddressWidth( 5 ))
weight_buffer_V_0_1_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(weight_buffer_V_0_1_address0),
    .ce0(weight_buffer_V_0_1_ce0),
    .we0(weight_buffer_V_0_1_we0),
    .d0(grp_weight_load_fu_1439_weight_buffer_0_1_V_d0),
    .q0(weight_buffer_V_0_1_q0)
);

detection_acc_weiqcK #(
    .DataWidth( 8 ),
    .AddressRange( 25 ),
    .AddressWidth( 5 ))
weight_buffer_V_0_2_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(weight_buffer_V_0_2_address0),
    .ce0(weight_buffer_V_0_2_ce0),
    .we0(weight_buffer_V_0_2_we0),
    .d0(grp_weight_load_fu_1439_weight_buffer_0_2_V_d0),
    .q0(weight_buffer_V_0_2_q0)
);

detection_acc_weiqcK #(
    .DataWidth( 8 ),
    .AddressRange( 25 ),
    .AddressWidth( 5 ))
weight_buffer_V_0_3_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(weight_buffer_V_0_3_address0),
    .ce0(weight_buffer_V_0_3_ce0),
    .we0(weight_buffer_V_0_3_we0),
    .d0(grp_weight_load_fu_1439_weight_buffer_0_3_V_d0),
    .q0(weight_buffer_V_0_3_q0)
);

detection_acc_weiqcK #(
    .DataWidth( 8 ),
    .AddressRange( 25 ),
    .AddressWidth( 5 ))
weight_buffer_V_0_4_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(weight_buffer_V_0_4_address0),
    .ce0(weight_buffer_V_0_4_ce0),
    .we0(weight_buffer_V_0_4_we0),
    .d0(grp_weight_load_fu_1439_weight_buffer_0_4_V_d0),
    .q0(weight_buffer_V_0_4_q0)
);

detection_acc_weiqcK #(
    .DataWidth( 8 ),
    .AddressRange( 25 ),
    .AddressWidth( 5 ))
weight_buffer_V_0_5_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(weight_buffer_V_0_5_address0),
    .ce0(weight_buffer_V_0_5_ce0),
    .we0(weight_buffer_V_0_5_we0),
    .d0(grp_weight_load_fu_1439_weight_buffer_0_5_V_d0),
    .q0(weight_buffer_V_0_5_q0)
);

detection_acc_weiqcK #(
    .DataWidth( 8 ),
    .AddressRange( 25 ),
    .AddressWidth( 5 ))
weight_buffer_V_0_6_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(weight_buffer_V_0_6_address0),
    .ce0(weight_buffer_V_0_6_ce0),
    .we0(weight_buffer_V_0_6_we0),
    .d0(grp_weight_load_fu_1439_weight_buffer_0_6_V_d0),
    .q0(weight_buffer_V_0_6_q0)
);

detection_acc_weiqcK #(
    .DataWidth( 8 ),
    .AddressRange( 25 ),
    .AddressWidth( 5 ))
weight_buffer_V_0_7_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(weight_buffer_V_0_7_address0),
    .ce0(weight_buffer_V_0_7_ce0),
    .we0(weight_buffer_V_0_7_we0),
    .d0(grp_weight_load_fu_1439_weight_buffer_0_7_V_d0),
    .q0(weight_buffer_V_0_7_q0)
);

detection_acc_weiqcK #(
    .DataWidth( 8 ),
    .AddressRange( 25 ),
    .AddressWidth( 5 ))
weight_buffer_V_0_8_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(weight_buffer_V_0_8_address0),
    .ce0(weight_buffer_V_0_8_ce0),
    .we0(weight_buffer_V_0_8_we0),
    .d0(grp_weight_load_fu_1439_weight_buffer_0_8_V_d0),
    .q0(weight_buffer_V_0_8_q0)
);

detection_acc_weiqcK #(
    .DataWidth( 8 ),
    .AddressRange( 25 ),
    .AddressWidth( 5 ))
weight_buffer_V_0_9_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(weight_buffer_V_0_9_address0),
    .ce0(weight_buffer_V_0_9_ce0),
    .we0(weight_buffer_V_0_9_we0),
    .d0(grp_weight_load_fu_1439_weight_buffer_0_9_V_d0),
    .q0(weight_buffer_V_0_9_q0)
);

detection_acc_weiqcK #(
    .DataWidth( 8 ),
    .AddressRange( 25 ),
    .AddressWidth( 5 ))
weight_buffer_V_0_10_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(weight_buffer_V_0_10_address0),
    .ce0(weight_buffer_V_0_10_ce0),
    .we0(weight_buffer_V_0_10_we0),
    .d0(grp_weight_load_fu_1439_weight_buffer_0_10_V_d0),
    .q0(weight_buffer_V_0_10_q0)
);

detection_acc_weiqcK #(
    .DataWidth( 8 ),
    .AddressRange( 25 ),
    .AddressWidth( 5 ))
weight_buffer_V_0_11_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(weight_buffer_V_0_11_address0),
    .ce0(weight_buffer_V_0_11_ce0),
    .we0(weight_buffer_V_0_11_we0),
    .d0(grp_weight_load_fu_1439_weight_buffer_0_11_V_d0),
    .q0(weight_buffer_V_0_11_q0)
);

detection_acc_weiqcK #(
    .DataWidth( 8 ),
    .AddressRange( 25 ),
    .AddressWidth( 5 ))
weight_buffer_V_0_12_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(weight_buffer_V_0_12_address0),
    .ce0(weight_buffer_V_0_12_ce0),
    .we0(weight_buffer_V_0_12_we0),
    .d0(grp_weight_load_fu_1439_weight_buffer_0_12_V_d0),
    .q0(weight_buffer_V_0_12_q0)
);

detection_acc_weiqcK #(
    .DataWidth( 8 ),
    .AddressRange( 25 ),
    .AddressWidth( 5 ))
weight_buffer_V_0_13_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(weight_buffer_V_0_13_address0),
    .ce0(weight_buffer_V_0_13_ce0),
    .we0(weight_buffer_V_0_13_we0),
    .d0(grp_weight_load_fu_1439_weight_buffer_0_13_V_d0),
    .q0(weight_buffer_V_0_13_q0)
);

detection_acc_weiqcK #(
    .DataWidth( 8 ),
    .AddressRange( 25 ),
    .AddressWidth( 5 ))
weight_buffer_V_0_14_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(weight_buffer_V_0_14_address0),
    .ce0(weight_buffer_V_0_14_ce0),
    .we0(weight_buffer_V_0_14_we0),
    .d0(grp_weight_load_fu_1439_weight_buffer_0_14_V_d0),
    .q0(weight_buffer_V_0_14_q0)
);

detection_acc_weiqcK #(
    .DataWidth( 8 ),
    .AddressRange( 25 ),
    .AddressWidth( 5 ))
weight_buffer_V_0_15_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(weight_buffer_V_0_15_address0),
    .ce0(weight_buffer_V_0_15_ce0),
    .we0(weight_buffer_V_0_15_we0),
    .d0(grp_weight_load_fu_1439_weight_buffer_0_15_V_d0),
    .q0(weight_buffer_V_0_15_q0)
);

detection_acc_weiqcK #(
    .DataWidth( 8 ),
    .AddressRange( 25 ),
    .AddressWidth( 5 ))
weight_buffer_V_0_16_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(weight_buffer_V_0_16_address0),
    .ce0(weight_buffer_V_0_16_ce0),
    .we0(weight_buffer_V_0_16_we0),
    .d0(grp_weight_load_fu_1439_weight_buffer_0_16_V_d0),
    .q0(weight_buffer_V_0_16_q0)
);

detection_acc_weiqcK #(
    .DataWidth( 8 ),
    .AddressRange( 25 ),
    .AddressWidth( 5 ))
weight_buffer_V_0_17_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(weight_buffer_V_0_17_address0),
    .ce0(weight_buffer_V_0_17_ce0),
    .we0(weight_buffer_V_0_17_we0),
    .d0(grp_weight_load_fu_1439_weight_buffer_0_17_V_d0),
    .q0(weight_buffer_V_0_17_q0)
);

detection_acc_weiqcK #(
    .DataWidth( 8 ),
    .AddressRange( 25 ),
    .AddressWidth( 5 ))
weight_buffer_V_0_18_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(weight_buffer_V_0_18_address0),
    .ce0(weight_buffer_V_0_18_ce0),
    .we0(weight_buffer_V_0_18_we0),
    .d0(grp_weight_load_fu_1439_weight_buffer_0_18_V_d0),
    .q0(weight_buffer_V_0_18_q0)
);

detection_acc_weiqcK #(
    .DataWidth( 8 ),
    .AddressRange( 25 ),
    .AddressWidth( 5 ))
weight_buffer_V_0_19_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(weight_buffer_V_0_19_address0),
    .ce0(weight_buffer_V_0_19_ce0),
    .we0(weight_buffer_V_0_19_we0),
    .d0(grp_weight_load_fu_1439_weight_buffer_0_19_V_d0),
    .q0(weight_buffer_V_0_19_q0)
);

detection_acc_weiqcK #(
    .DataWidth( 8 ),
    .AddressRange( 25 ),
    .AddressWidth( 5 ))
weight_buffer_V_0_20_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(weight_buffer_V_0_20_address0),
    .ce0(weight_buffer_V_0_20_ce0),
    .we0(weight_buffer_V_0_20_we0),
    .d0(grp_weight_load_fu_1439_weight_buffer_0_20_V_d0),
    .q0(weight_buffer_V_0_20_q0)
);

detection_acc_weiqcK #(
    .DataWidth( 8 ),
    .AddressRange( 25 ),
    .AddressWidth( 5 ))
weight_buffer_V_0_21_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(weight_buffer_V_0_21_address0),
    .ce0(weight_buffer_V_0_21_ce0),
    .we0(weight_buffer_V_0_21_we0),
    .d0(grp_weight_load_fu_1439_weight_buffer_0_21_V_d0),
    .q0(weight_buffer_V_0_21_q0)
);

detection_acc_weiqcK #(
    .DataWidth( 8 ),
    .AddressRange( 25 ),
    .AddressWidth( 5 ))
weight_buffer_V_0_22_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(weight_buffer_V_0_22_address0),
    .ce0(weight_buffer_V_0_22_ce0),
    .we0(weight_buffer_V_0_22_we0),
    .d0(grp_weight_load_fu_1439_weight_buffer_0_22_V_d0),
    .q0(weight_buffer_V_0_22_q0)
);

detection_acc_weiqcK #(
    .DataWidth( 8 ),
    .AddressRange( 25 ),
    .AddressWidth( 5 ))
weight_buffer_V_0_23_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(weight_buffer_V_0_23_address0),
    .ce0(weight_buffer_V_0_23_ce0),
    .we0(weight_buffer_V_0_23_we0),
    .d0(grp_weight_load_fu_1439_weight_buffer_0_23_V_d0),
    .q0(weight_buffer_V_0_23_q0)
);

detection_acc_weiqcK #(
    .DataWidth( 8 ),
    .AddressRange( 25 ),
    .AddressWidth( 5 ))
weight_buffer_V_0_24_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(weight_buffer_V_0_24_address0),
    .ce0(weight_buffer_V_0_24_ce0),
    .we0(weight_buffer_V_0_24_we0),
    .d0(grp_weight_load_fu_1439_weight_buffer_0_24_V_d0),
    .q0(weight_buffer_V_0_24_q0)
);

detection_acc_weiqcK #(
    .DataWidth( 8 ),
    .AddressRange( 25 ),
    .AddressWidth( 5 ))
weight_buffer_V_0_25_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(weight_buffer_V_0_25_address0),
    .ce0(weight_buffer_V_0_25_ce0),
    .we0(weight_buffer_V_0_25_we0),
    .d0(grp_weight_load_fu_1439_weight_buffer_0_25_V_d0),
    .q0(weight_buffer_V_0_25_q0)
);

detection_acc_weiqcK #(
    .DataWidth( 8 ),
    .AddressRange( 25 ),
    .AddressWidth( 5 ))
weight_buffer_V_0_26_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(weight_buffer_V_0_26_address0),
    .ce0(weight_buffer_V_0_26_ce0),
    .we0(weight_buffer_V_0_26_we0),
    .d0(grp_weight_load_fu_1439_weight_buffer_0_26_V_d0),
    .q0(weight_buffer_V_0_26_q0)
);

detection_acc_weiqcK #(
    .DataWidth( 8 ),
    .AddressRange( 25 ),
    .AddressWidth( 5 ))
weight_buffer_V_0_27_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(weight_buffer_V_0_27_address0),
    .ce0(weight_buffer_V_0_27_ce0),
    .we0(weight_buffer_V_0_27_we0),
    .d0(grp_weight_load_fu_1439_weight_buffer_0_27_V_d0),
    .q0(weight_buffer_V_0_27_q0)
);

detection_acc_weiqcK #(
    .DataWidth( 8 ),
    .AddressRange( 25 ),
    .AddressWidth( 5 ))
weight_buffer_V_0_28_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(weight_buffer_V_0_28_address0),
    .ce0(weight_buffer_V_0_28_ce0),
    .we0(weight_buffer_V_0_28_we0),
    .d0(grp_weight_load_fu_1439_weight_buffer_0_28_V_d0),
    .q0(weight_buffer_V_0_28_q0)
);

detection_acc_weiqcK #(
    .DataWidth( 8 ),
    .AddressRange( 25 ),
    .AddressWidth( 5 ))
weight_buffer_V_0_29_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(weight_buffer_V_0_29_address0),
    .ce0(weight_buffer_V_0_29_ce0),
    .we0(weight_buffer_V_0_29_we0),
    .d0(grp_weight_load_fu_1439_weight_buffer_0_29_V_d0),
    .q0(weight_buffer_V_0_29_q0)
);

detection_acc_weiqcK #(
    .DataWidth( 8 ),
    .AddressRange( 25 ),
    .AddressWidth( 5 ))
weight_buffer_V_0_30_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(weight_buffer_V_0_30_address0),
    .ce0(weight_buffer_V_0_30_ce0),
    .we0(weight_buffer_V_0_30_we0),
    .d0(grp_weight_load_fu_1439_weight_buffer_0_30_V_d0),
    .q0(weight_buffer_V_0_30_q0)
);

detection_acc_weiqcK #(
    .DataWidth( 8 ),
    .AddressRange( 25 ),
    .AddressWidth( 5 ))
weight_buffer_V_0_31_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(weight_buffer_V_0_31_address0),
    .ce0(weight_buffer_V_0_31_ce0),
    .we0(weight_buffer_V_0_31_we0),
    .d0(grp_weight_load_fu_1439_weight_buffer_0_31_V_d0),
    .q0(weight_buffer_V_0_31_q0)
);

detection_acc_weiqcK #(
    .DataWidth( 8 ),
    .AddressRange( 25 ),
    .AddressWidth( 5 ))
weight_buffer_V_1_0_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(weight_buffer_V_1_0_address0),
    .ce0(weight_buffer_V_1_0_ce0),
    .we0(weight_buffer_V_1_0_we0),
    .d0(grp_weight_load_fu_1439_weight_buffer_1_0_V_d0),
    .q0(weight_buffer_V_1_0_q0)
);

detection_acc_weiqcK #(
    .DataWidth( 8 ),
    .AddressRange( 25 ),
    .AddressWidth( 5 ))
weight_buffer_V_1_1_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(weight_buffer_V_1_1_address0),
    .ce0(weight_buffer_V_1_1_ce0),
    .we0(weight_buffer_V_1_1_we0),
    .d0(grp_weight_load_fu_1439_weight_buffer_1_1_V_d0),
    .q0(weight_buffer_V_1_1_q0)
);

detection_acc_weiqcK #(
    .DataWidth( 8 ),
    .AddressRange( 25 ),
    .AddressWidth( 5 ))
weight_buffer_V_1_2_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(weight_buffer_V_1_2_address0),
    .ce0(weight_buffer_V_1_2_ce0),
    .we0(weight_buffer_V_1_2_we0),
    .d0(grp_weight_load_fu_1439_weight_buffer_1_2_V_d0),
    .q0(weight_buffer_V_1_2_q0)
);

detection_acc_weiqcK #(
    .DataWidth( 8 ),
    .AddressRange( 25 ),
    .AddressWidth( 5 ))
weight_buffer_V_1_3_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(weight_buffer_V_1_3_address0),
    .ce0(weight_buffer_V_1_3_ce0),
    .we0(weight_buffer_V_1_3_we0),
    .d0(grp_weight_load_fu_1439_weight_buffer_1_3_V_d0),
    .q0(weight_buffer_V_1_3_q0)
);

detection_acc_weiqcK #(
    .DataWidth( 8 ),
    .AddressRange( 25 ),
    .AddressWidth( 5 ))
weight_buffer_V_1_4_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(weight_buffer_V_1_4_address0),
    .ce0(weight_buffer_V_1_4_ce0),
    .we0(weight_buffer_V_1_4_we0),
    .d0(grp_weight_load_fu_1439_weight_buffer_1_4_V_d0),
    .q0(weight_buffer_V_1_4_q0)
);

detection_acc_weiqcK #(
    .DataWidth( 8 ),
    .AddressRange( 25 ),
    .AddressWidth( 5 ))
weight_buffer_V_1_5_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(weight_buffer_V_1_5_address0),
    .ce0(weight_buffer_V_1_5_ce0),
    .we0(weight_buffer_V_1_5_we0),
    .d0(grp_weight_load_fu_1439_weight_buffer_1_5_V_d0),
    .q0(weight_buffer_V_1_5_q0)
);

detection_acc_weiqcK #(
    .DataWidth( 8 ),
    .AddressRange( 25 ),
    .AddressWidth( 5 ))
weight_buffer_V_1_6_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(weight_buffer_V_1_6_address0),
    .ce0(weight_buffer_V_1_6_ce0),
    .we0(weight_buffer_V_1_6_we0),
    .d0(grp_weight_load_fu_1439_weight_buffer_1_6_V_d0),
    .q0(weight_buffer_V_1_6_q0)
);

detection_acc_weiqcK #(
    .DataWidth( 8 ),
    .AddressRange( 25 ),
    .AddressWidth( 5 ))
weight_buffer_V_1_7_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(weight_buffer_V_1_7_address0),
    .ce0(weight_buffer_V_1_7_ce0),
    .we0(weight_buffer_V_1_7_we0),
    .d0(grp_weight_load_fu_1439_weight_buffer_1_7_V_d0),
    .q0(weight_buffer_V_1_7_q0)
);

detection_acc_weiqcK #(
    .DataWidth( 8 ),
    .AddressRange( 25 ),
    .AddressWidth( 5 ))
weight_buffer_V_1_8_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(weight_buffer_V_1_8_address0),
    .ce0(weight_buffer_V_1_8_ce0),
    .we0(weight_buffer_V_1_8_we0),
    .d0(grp_weight_load_fu_1439_weight_buffer_1_8_V_d0),
    .q0(weight_buffer_V_1_8_q0)
);

detection_acc_weiqcK #(
    .DataWidth( 8 ),
    .AddressRange( 25 ),
    .AddressWidth( 5 ))
weight_buffer_V_1_9_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(weight_buffer_V_1_9_address0),
    .ce0(weight_buffer_V_1_9_ce0),
    .we0(weight_buffer_V_1_9_we0),
    .d0(grp_weight_load_fu_1439_weight_buffer_1_9_V_d0),
    .q0(weight_buffer_V_1_9_q0)
);

detection_acc_weiqcK #(
    .DataWidth( 8 ),
    .AddressRange( 25 ),
    .AddressWidth( 5 ))
weight_buffer_V_1_10_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(weight_buffer_V_1_10_address0),
    .ce0(weight_buffer_V_1_10_ce0),
    .we0(weight_buffer_V_1_10_we0),
    .d0(grp_weight_load_fu_1439_weight_buffer_1_10_V_d0),
    .q0(weight_buffer_V_1_10_q0)
);

detection_acc_weiqcK #(
    .DataWidth( 8 ),
    .AddressRange( 25 ),
    .AddressWidth( 5 ))
weight_buffer_V_1_11_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(weight_buffer_V_1_11_address0),
    .ce0(weight_buffer_V_1_11_ce0),
    .we0(weight_buffer_V_1_11_we0),
    .d0(grp_weight_load_fu_1439_weight_buffer_1_11_V_d0),
    .q0(weight_buffer_V_1_11_q0)
);

detection_acc_weiqcK #(
    .DataWidth( 8 ),
    .AddressRange( 25 ),
    .AddressWidth( 5 ))
weight_buffer_V_1_12_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(weight_buffer_V_1_12_address0),
    .ce0(weight_buffer_V_1_12_ce0),
    .we0(weight_buffer_V_1_12_we0),
    .d0(grp_weight_load_fu_1439_weight_buffer_1_12_V_d0),
    .q0(weight_buffer_V_1_12_q0)
);

detection_acc_weiqcK #(
    .DataWidth( 8 ),
    .AddressRange( 25 ),
    .AddressWidth( 5 ))
weight_buffer_V_1_13_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(weight_buffer_V_1_13_address0),
    .ce0(weight_buffer_V_1_13_ce0),
    .we0(weight_buffer_V_1_13_we0),
    .d0(grp_weight_load_fu_1439_weight_buffer_1_13_V_d0),
    .q0(weight_buffer_V_1_13_q0)
);

detection_acc_weiqcK #(
    .DataWidth( 8 ),
    .AddressRange( 25 ),
    .AddressWidth( 5 ))
weight_buffer_V_1_14_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(weight_buffer_V_1_14_address0),
    .ce0(weight_buffer_V_1_14_ce0),
    .we0(weight_buffer_V_1_14_we0),
    .d0(grp_weight_load_fu_1439_weight_buffer_1_14_V_d0),
    .q0(weight_buffer_V_1_14_q0)
);

detection_acc_weiqcK #(
    .DataWidth( 8 ),
    .AddressRange( 25 ),
    .AddressWidth( 5 ))
weight_buffer_V_1_15_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(weight_buffer_V_1_15_address0),
    .ce0(weight_buffer_V_1_15_ce0),
    .we0(weight_buffer_V_1_15_we0),
    .d0(grp_weight_load_fu_1439_weight_buffer_1_15_V_d0),
    .q0(weight_buffer_V_1_15_q0)
);

detection_acc_weiqcK #(
    .DataWidth( 8 ),
    .AddressRange( 25 ),
    .AddressWidth( 5 ))
weight_buffer_V_1_16_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(weight_buffer_V_1_16_address0),
    .ce0(weight_buffer_V_1_16_ce0),
    .we0(weight_buffer_V_1_16_we0),
    .d0(grp_weight_load_fu_1439_weight_buffer_1_16_V_d0),
    .q0(weight_buffer_V_1_16_q0)
);

detection_acc_weiqcK #(
    .DataWidth( 8 ),
    .AddressRange( 25 ),
    .AddressWidth( 5 ))
weight_buffer_V_1_17_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(weight_buffer_V_1_17_address0),
    .ce0(weight_buffer_V_1_17_ce0),
    .we0(weight_buffer_V_1_17_we0),
    .d0(grp_weight_load_fu_1439_weight_buffer_1_17_V_d0),
    .q0(weight_buffer_V_1_17_q0)
);

detection_acc_weiqcK #(
    .DataWidth( 8 ),
    .AddressRange( 25 ),
    .AddressWidth( 5 ))
weight_buffer_V_1_18_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(weight_buffer_V_1_18_address0),
    .ce0(weight_buffer_V_1_18_ce0),
    .we0(weight_buffer_V_1_18_we0),
    .d0(grp_weight_load_fu_1439_weight_buffer_1_18_V_d0),
    .q0(weight_buffer_V_1_18_q0)
);

detection_acc_weiqcK #(
    .DataWidth( 8 ),
    .AddressRange( 25 ),
    .AddressWidth( 5 ))
weight_buffer_V_1_19_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(weight_buffer_V_1_19_address0),
    .ce0(weight_buffer_V_1_19_ce0),
    .we0(weight_buffer_V_1_19_we0),
    .d0(grp_weight_load_fu_1439_weight_buffer_1_19_V_d0),
    .q0(weight_buffer_V_1_19_q0)
);

detection_acc_weiqcK #(
    .DataWidth( 8 ),
    .AddressRange( 25 ),
    .AddressWidth( 5 ))
weight_buffer_V_1_20_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(weight_buffer_V_1_20_address0),
    .ce0(weight_buffer_V_1_20_ce0),
    .we0(weight_buffer_V_1_20_we0),
    .d0(grp_weight_load_fu_1439_weight_buffer_1_20_V_d0),
    .q0(weight_buffer_V_1_20_q0)
);

detection_acc_weiqcK #(
    .DataWidth( 8 ),
    .AddressRange( 25 ),
    .AddressWidth( 5 ))
weight_buffer_V_1_21_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(weight_buffer_V_1_21_address0),
    .ce0(weight_buffer_V_1_21_ce0),
    .we0(weight_buffer_V_1_21_we0),
    .d0(grp_weight_load_fu_1439_weight_buffer_1_21_V_d0),
    .q0(weight_buffer_V_1_21_q0)
);

detection_acc_weiqcK #(
    .DataWidth( 8 ),
    .AddressRange( 25 ),
    .AddressWidth( 5 ))
weight_buffer_V_1_22_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(weight_buffer_V_1_22_address0),
    .ce0(weight_buffer_V_1_22_ce0),
    .we0(weight_buffer_V_1_22_we0),
    .d0(grp_weight_load_fu_1439_weight_buffer_1_22_V_d0),
    .q0(weight_buffer_V_1_22_q0)
);

detection_acc_weiqcK #(
    .DataWidth( 8 ),
    .AddressRange( 25 ),
    .AddressWidth( 5 ))
weight_buffer_V_1_23_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(weight_buffer_V_1_23_address0),
    .ce0(weight_buffer_V_1_23_ce0),
    .we0(weight_buffer_V_1_23_we0),
    .d0(grp_weight_load_fu_1439_weight_buffer_1_23_V_d0),
    .q0(weight_buffer_V_1_23_q0)
);

detection_acc_weiqcK #(
    .DataWidth( 8 ),
    .AddressRange( 25 ),
    .AddressWidth( 5 ))
weight_buffer_V_1_24_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(weight_buffer_V_1_24_address0),
    .ce0(weight_buffer_V_1_24_ce0),
    .we0(weight_buffer_V_1_24_we0),
    .d0(grp_weight_load_fu_1439_weight_buffer_1_24_V_d0),
    .q0(weight_buffer_V_1_24_q0)
);

detection_acc_weiqcK #(
    .DataWidth( 8 ),
    .AddressRange( 25 ),
    .AddressWidth( 5 ))
weight_buffer_V_1_25_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(weight_buffer_V_1_25_address0),
    .ce0(weight_buffer_V_1_25_ce0),
    .we0(weight_buffer_V_1_25_we0),
    .d0(grp_weight_load_fu_1439_weight_buffer_1_25_V_d0),
    .q0(weight_buffer_V_1_25_q0)
);

detection_acc_weiqcK #(
    .DataWidth( 8 ),
    .AddressRange( 25 ),
    .AddressWidth( 5 ))
weight_buffer_V_1_26_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(weight_buffer_V_1_26_address0),
    .ce0(weight_buffer_V_1_26_ce0),
    .we0(weight_buffer_V_1_26_we0),
    .d0(grp_weight_load_fu_1439_weight_buffer_1_26_V_d0),
    .q0(weight_buffer_V_1_26_q0)
);

detection_acc_weiqcK #(
    .DataWidth( 8 ),
    .AddressRange( 25 ),
    .AddressWidth( 5 ))
weight_buffer_V_1_27_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(weight_buffer_V_1_27_address0),
    .ce0(weight_buffer_V_1_27_ce0),
    .we0(weight_buffer_V_1_27_we0),
    .d0(grp_weight_load_fu_1439_weight_buffer_1_27_V_d0),
    .q0(weight_buffer_V_1_27_q0)
);

detection_acc_weiqcK #(
    .DataWidth( 8 ),
    .AddressRange( 25 ),
    .AddressWidth( 5 ))
weight_buffer_V_1_28_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(weight_buffer_V_1_28_address0),
    .ce0(weight_buffer_V_1_28_ce0),
    .we0(weight_buffer_V_1_28_we0),
    .d0(grp_weight_load_fu_1439_weight_buffer_1_28_V_d0),
    .q0(weight_buffer_V_1_28_q0)
);

detection_acc_weiqcK #(
    .DataWidth( 8 ),
    .AddressRange( 25 ),
    .AddressWidth( 5 ))
weight_buffer_V_1_29_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(weight_buffer_V_1_29_address0),
    .ce0(weight_buffer_V_1_29_ce0),
    .we0(weight_buffer_V_1_29_we0),
    .d0(grp_weight_load_fu_1439_weight_buffer_1_29_V_d0),
    .q0(weight_buffer_V_1_29_q0)
);

detection_acc_weiqcK #(
    .DataWidth( 8 ),
    .AddressRange( 25 ),
    .AddressWidth( 5 ))
weight_buffer_V_1_30_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(weight_buffer_V_1_30_address0),
    .ce0(weight_buffer_V_1_30_ce0),
    .we0(weight_buffer_V_1_30_we0),
    .d0(grp_weight_load_fu_1439_weight_buffer_1_30_V_d0),
    .q0(weight_buffer_V_1_30_q0)
);

detection_acc_weiqcK #(
    .DataWidth( 8 ),
    .AddressRange( 25 ),
    .AddressWidth( 5 ))
weight_buffer_V_1_31_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(weight_buffer_V_1_31_address0),
    .ce0(weight_buffer_V_1_31_ce0),
    .we0(weight_buffer_V_1_31_we0),
    .d0(grp_weight_load_fu_1439_weight_buffer_1_31_V_d0),
    .q0(weight_buffer_V_1_31_q0)
);

detection_acc_weiqcK #(
    .DataWidth( 8 ),
    .AddressRange( 25 ),
    .AddressWidth( 5 ))
weight_buffer_V_2_0_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(weight_buffer_V_2_0_address0),
    .ce0(weight_buffer_V_2_0_ce0),
    .we0(weight_buffer_V_2_0_we0),
    .d0(grp_weight_load_fu_1439_weight_buffer_2_0_V_d0),
    .q0(weight_buffer_V_2_0_q0)
);

detection_acc_weiqcK #(
    .DataWidth( 8 ),
    .AddressRange( 25 ),
    .AddressWidth( 5 ))
weight_buffer_V_2_1_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(weight_buffer_V_2_1_address0),
    .ce0(weight_buffer_V_2_1_ce0),
    .we0(weight_buffer_V_2_1_we0),
    .d0(grp_weight_load_fu_1439_weight_buffer_2_1_V_d0),
    .q0(weight_buffer_V_2_1_q0)
);

detection_acc_weiqcK #(
    .DataWidth( 8 ),
    .AddressRange( 25 ),
    .AddressWidth( 5 ))
weight_buffer_V_2_2_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(weight_buffer_V_2_2_address0),
    .ce0(weight_buffer_V_2_2_ce0),
    .we0(weight_buffer_V_2_2_we0),
    .d0(grp_weight_load_fu_1439_weight_buffer_2_2_V_d0),
    .q0(weight_buffer_V_2_2_q0)
);

detection_acc_weiqcK #(
    .DataWidth( 8 ),
    .AddressRange( 25 ),
    .AddressWidth( 5 ))
weight_buffer_V_2_3_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(weight_buffer_V_2_3_address0),
    .ce0(weight_buffer_V_2_3_ce0),
    .we0(weight_buffer_V_2_3_we0),
    .d0(grp_weight_load_fu_1439_weight_buffer_2_3_V_d0),
    .q0(weight_buffer_V_2_3_q0)
);

detection_acc_weiqcK #(
    .DataWidth( 8 ),
    .AddressRange( 25 ),
    .AddressWidth( 5 ))
weight_buffer_V_2_4_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(weight_buffer_V_2_4_address0),
    .ce0(weight_buffer_V_2_4_ce0),
    .we0(weight_buffer_V_2_4_we0),
    .d0(grp_weight_load_fu_1439_weight_buffer_2_4_V_d0),
    .q0(weight_buffer_V_2_4_q0)
);

detection_acc_weiqcK #(
    .DataWidth( 8 ),
    .AddressRange( 25 ),
    .AddressWidth( 5 ))
weight_buffer_V_2_5_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(weight_buffer_V_2_5_address0),
    .ce0(weight_buffer_V_2_5_ce0),
    .we0(weight_buffer_V_2_5_we0),
    .d0(grp_weight_load_fu_1439_weight_buffer_2_5_V_d0),
    .q0(weight_buffer_V_2_5_q0)
);

detection_acc_weiqcK #(
    .DataWidth( 8 ),
    .AddressRange( 25 ),
    .AddressWidth( 5 ))
weight_buffer_V_2_6_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(weight_buffer_V_2_6_address0),
    .ce0(weight_buffer_V_2_6_ce0),
    .we0(weight_buffer_V_2_6_we0),
    .d0(grp_weight_load_fu_1439_weight_buffer_2_6_V_d0),
    .q0(weight_buffer_V_2_6_q0)
);

detection_acc_weiqcK #(
    .DataWidth( 8 ),
    .AddressRange( 25 ),
    .AddressWidth( 5 ))
weight_buffer_V_2_7_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(weight_buffer_V_2_7_address0),
    .ce0(weight_buffer_V_2_7_ce0),
    .we0(weight_buffer_V_2_7_we0),
    .d0(grp_weight_load_fu_1439_weight_buffer_2_7_V_d0),
    .q0(weight_buffer_V_2_7_q0)
);

detection_acc_weiqcK #(
    .DataWidth( 8 ),
    .AddressRange( 25 ),
    .AddressWidth( 5 ))
weight_buffer_V_2_8_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(weight_buffer_V_2_8_address0),
    .ce0(weight_buffer_V_2_8_ce0),
    .we0(weight_buffer_V_2_8_we0),
    .d0(grp_weight_load_fu_1439_weight_buffer_2_8_V_d0),
    .q0(weight_buffer_V_2_8_q0)
);

detection_acc_weiqcK #(
    .DataWidth( 8 ),
    .AddressRange( 25 ),
    .AddressWidth( 5 ))
weight_buffer_V_2_9_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(weight_buffer_V_2_9_address0),
    .ce0(weight_buffer_V_2_9_ce0),
    .we0(weight_buffer_V_2_9_we0),
    .d0(grp_weight_load_fu_1439_weight_buffer_2_9_V_d0),
    .q0(weight_buffer_V_2_9_q0)
);

detection_acc_weiqcK #(
    .DataWidth( 8 ),
    .AddressRange( 25 ),
    .AddressWidth( 5 ))
weight_buffer_V_2_10_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(weight_buffer_V_2_10_address0),
    .ce0(weight_buffer_V_2_10_ce0),
    .we0(weight_buffer_V_2_10_we0),
    .d0(grp_weight_load_fu_1439_weight_buffer_2_10_V_d0),
    .q0(weight_buffer_V_2_10_q0)
);

detection_acc_weiqcK #(
    .DataWidth( 8 ),
    .AddressRange( 25 ),
    .AddressWidth( 5 ))
weight_buffer_V_2_11_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(weight_buffer_V_2_11_address0),
    .ce0(weight_buffer_V_2_11_ce0),
    .we0(weight_buffer_V_2_11_we0),
    .d0(grp_weight_load_fu_1439_weight_buffer_2_11_V_d0),
    .q0(weight_buffer_V_2_11_q0)
);

detection_acc_weiqcK #(
    .DataWidth( 8 ),
    .AddressRange( 25 ),
    .AddressWidth( 5 ))
weight_buffer_V_2_12_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(weight_buffer_V_2_12_address0),
    .ce0(weight_buffer_V_2_12_ce0),
    .we0(weight_buffer_V_2_12_we0),
    .d0(grp_weight_load_fu_1439_weight_buffer_2_12_V_d0),
    .q0(weight_buffer_V_2_12_q0)
);

detection_acc_weiqcK #(
    .DataWidth( 8 ),
    .AddressRange( 25 ),
    .AddressWidth( 5 ))
weight_buffer_V_2_13_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(weight_buffer_V_2_13_address0),
    .ce0(weight_buffer_V_2_13_ce0),
    .we0(weight_buffer_V_2_13_we0),
    .d0(grp_weight_load_fu_1439_weight_buffer_2_13_V_d0),
    .q0(weight_buffer_V_2_13_q0)
);

detection_acc_weiqcK #(
    .DataWidth( 8 ),
    .AddressRange( 25 ),
    .AddressWidth( 5 ))
weight_buffer_V_2_14_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(weight_buffer_V_2_14_address0),
    .ce0(weight_buffer_V_2_14_ce0),
    .we0(weight_buffer_V_2_14_we0),
    .d0(grp_weight_load_fu_1439_weight_buffer_2_14_V_d0),
    .q0(weight_buffer_V_2_14_q0)
);

detection_acc_weiqcK #(
    .DataWidth( 8 ),
    .AddressRange( 25 ),
    .AddressWidth( 5 ))
weight_buffer_V_2_15_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(weight_buffer_V_2_15_address0),
    .ce0(weight_buffer_V_2_15_ce0),
    .we0(weight_buffer_V_2_15_we0),
    .d0(grp_weight_load_fu_1439_weight_buffer_2_15_V_d0),
    .q0(weight_buffer_V_2_15_q0)
);

detection_acc_weiqcK #(
    .DataWidth( 8 ),
    .AddressRange( 25 ),
    .AddressWidth( 5 ))
weight_buffer_V_2_16_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(weight_buffer_V_2_16_address0),
    .ce0(weight_buffer_V_2_16_ce0),
    .we0(weight_buffer_V_2_16_we0),
    .d0(grp_weight_load_fu_1439_weight_buffer_2_16_V_d0),
    .q0(weight_buffer_V_2_16_q0)
);

detection_acc_weiqcK #(
    .DataWidth( 8 ),
    .AddressRange( 25 ),
    .AddressWidth( 5 ))
weight_buffer_V_2_17_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(weight_buffer_V_2_17_address0),
    .ce0(weight_buffer_V_2_17_ce0),
    .we0(weight_buffer_V_2_17_we0),
    .d0(grp_weight_load_fu_1439_weight_buffer_2_17_V_d0),
    .q0(weight_buffer_V_2_17_q0)
);

detection_acc_weiqcK #(
    .DataWidth( 8 ),
    .AddressRange( 25 ),
    .AddressWidth( 5 ))
weight_buffer_V_2_18_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(weight_buffer_V_2_18_address0),
    .ce0(weight_buffer_V_2_18_ce0),
    .we0(weight_buffer_V_2_18_we0),
    .d0(grp_weight_load_fu_1439_weight_buffer_2_18_V_d0),
    .q0(weight_buffer_V_2_18_q0)
);

detection_acc_weiqcK #(
    .DataWidth( 8 ),
    .AddressRange( 25 ),
    .AddressWidth( 5 ))
weight_buffer_V_2_19_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(weight_buffer_V_2_19_address0),
    .ce0(weight_buffer_V_2_19_ce0),
    .we0(weight_buffer_V_2_19_we0),
    .d0(grp_weight_load_fu_1439_weight_buffer_2_19_V_d0),
    .q0(weight_buffer_V_2_19_q0)
);

detection_acc_weiqcK #(
    .DataWidth( 8 ),
    .AddressRange( 25 ),
    .AddressWidth( 5 ))
weight_buffer_V_2_20_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(weight_buffer_V_2_20_address0),
    .ce0(weight_buffer_V_2_20_ce0),
    .we0(weight_buffer_V_2_20_we0),
    .d0(grp_weight_load_fu_1439_weight_buffer_2_20_V_d0),
    .q0(weight_buffer_V_2_20_q0)
);

detection_acc_weiqcK #(
    .DataWidth( 8 ),
    .AddressRange( 25 ),
    .AddressWidth( 5 ))
weight_buffer_V_2_21_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(weight_buffer_V_2_21_address0),
    .ce0(weight_buffer_V_2_21_ce0),
    .we0(weight_buffer_V_2_21_we0),
    .d0(grp_weight_load_fu_1439_weight_buffer_2_21_V_d0),
    .q0(weight_buffer_V_2_21_q0)
);

detection_acc_weiqcK #(
    .DataWidth( 8 ),
    .AddressRange( 25 ),
    .AddressWidth( 5 ))
weight_buffer_V_2_22_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(weight_buffer_V_2_22_address0),
    .ce0(weight_buffer_V_2_22_ce0),
    .we0(weight_buffer_V_2_22_we0),
    .d0(grp_weight_load_fu_1439_weight_buffer_2_22_V_d0),
    .q0(weight_buffer_V_2_22_q0)
);

detection_acc_weiqcK #(
    .DataWidth( 8 ),
    .AddressRange( 25 ),
    .AddressWidth( 5 ))
weight_buffer_V_2_23_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(weight_buffer_V_2_23_address0),
    .ce0(weight_buffer_V_2_23_ce0),
    .we0(weight_buffer_V_2_23_we0),
    .d0(grp_weight_load_fu_1439_weight_buffer_2_23_V_d0),
    .q0(weight_buffer_V_2_23_q0)
);

detection_acc_weiqcK #(
    .DataWidth( 8 ),
    .AddressRange( 25 ),
    .AddressWidth( 5 ))
weight_buffer_V_2_24_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(weight_buffer_V_2_24_address0),
    .ce0(weight_buffer_V_2_24_ce0),
    .we0(weight_buffer_V_2_24_we0),
    .d0(grp_weight_load_fu_1439_weight_buffer_2_24_V_d0),
    .q0(weight_buffer_V_2_24_q0)
);

detection_acc_weiqcK #(
    .DataWidth( 8 ),
    .AddressRange( 25 ),
    .AddressWidth( 5 ))
weight_buffer_V_2_25_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(weight_buffer_V_2_25_address0),
    .ce0(weight_buffer_V_2_25_ce0),
    .we0(weight_buffer_V_2_25_we0),
    .d0(grp_weight_load_fu_1439_weight_buffer_2_25_V_d0),
    .q0(weight_buffer_V_2_25_q0)
);

detection_acc_weiqcK #(
    .DataWidth( 8 ),
    .AddressRange( 25 ),
    .AddressWidth( 5 ))
weight_buffer_V_2_26_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(weight_buffer_V_2_26_address0),
    .ce0(weight_buffer_V_2_26_ce0),
    .we0(weight_buffer_V_2_26_we0),
    .d0(grp_weight_load_fu_1439_weight_buffer_2_26_V_d0),
    .q0(weight_buffer_V_2_26_q0)
);

detection_acc_weiqcK #(
    .DataWidth( 8 ),
    .AddressRange( 25 ),
    .AddressWidth( 5 ))
weight_buffer_V_2_27_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(weight_buffer_V_2_27_address0),
    .ce0(weight_buffer_V_2_27_ce0),
    .we0(weight_buffer_V_2_27_we0),
    .d0(grp_weight_load_fu_1439_weight_buffer_2_27_V_d0),
    .q0(weight_buffer_V_2_27_q0)
);

detection_acc_weiqcK #(
    .DataWidth( 8 ),
    .AddressRange( 25 ),
    .AddressWidth( 5 ))
weight_buffer_V_2_28_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(weight_buffer_V_2_28_address0),
    .ce0(weight_buffer_V_2_28_ce0),
    .we0(weight_buffer_V_2_28_we0),
    .d0(grp_weight_load_fu_1439_weight_buffer_2_28_V_d0),
    .q0(weight_buffer_V_2_28_q0)
);

detection_acc_weiqcK #(
    .DataWidth( 8 ),
    .AddressRange( 25 ),
    .AddressWidth( 5 ))
weight_buffer_V_2_29_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(weight_buffer_V_2_29_address0),
    .ce0(weight_buffer_V_2_29_ce0),
    .we0(weight_buffer_V_2_29_we0),
    .d0(grp_weight_load_fu_1439_weight_buffer_2_29_V_d0),
    .q0(weight_buffer_V_2_29_q0)
);

detection_acc_weiqcK #(
    .DataWidth( 8 ),
    .AddressRange( 25 ),
    .AddressWidth( 5 ))
weight_buffer_V_2_30_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(weight_buffer_V_2_30_address0),
    .ce0(weight_buffer_V_2_30_ce0),
    .we0(weight_buffer_V_2_30_we0),
    .d0(grp_weight_load_fu_1439_weight_buffer_2_30_V_d0),
    .q0(weight_buffer_V_2_30_q0)
);

detection_acc_weiqcK #(
    .DataWidth( 8 ),
    .AddressRange( 25 ),
    .AddressWidth( 5 ))
weight_buffer_V_2_31_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(weight_buffer_V_2_31_address0),
    .ce0(weight_buffer_V_2_31_ce0),
    .we0(weight_buffer_V_2_31_we0),
    .d0(grp_weight_load_fu_1439_weight_buffer_2_31_V_d0),
    .q0(weight_buffer_V_2_31_q0)
);

detection_acc_weiqcK #(
    .DataWidth( 8 ),
    .AddressRange( 25 ),
    .AddressWidth( 5 ))
weight_buffer_V_3_0_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(weight_buffer_V_3_0_address0),
    .ce0(weight_buffer_V_3_0_ce0),
    .we0(weight_buffer_V_3_0_we0),
    .d0(grp_weight_load_fu_1439_weight_buffer_3_0_V_d0),
    .q0(weight_buffer_V_3_0_q0)
);

detection_acc_weiqcK #(
    .DataWidth( 8 ),
    .AddressRange( 25 ),
    .AddressWidth( 5 ))
weight_buffer_V_3_1_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(weight_buffer_V_3_1_address0),
    .ce0(weight_buffer_V_3_1_ce0),
    .we0(weight_buffer_V_3_1_we0),
    .d0(grp_weight_load_fu_1439_weight_buffer_3_1_V_d0),
    .q0(weight_buffer_V_3_1_q0)
);

detection_acc_weiqcK #(
    .DataWidth( 8 ),
    .AddressRange( 25 ),
    .AddressWidth( 5 ))
weight_buffer_V_3_2_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(weight_buffer_V_3_2_address0),
    .ce0(weight_buffer_V_3_2_ce0),
    .we0(weight_buffer_V_3_2_we0),
    .d0(grp_weight_load_fu_1439_weight_buffer_3_2_V_d0),
    .q0(weight_buffer_V_3_2_q0)
);

detection_acc_weiqcK #(
    .DataWidth( 8 ),
    .AddressRange( 25 ),
    .AddressWidth( 5 ))
weight_buffer_V_3_3_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(weight_buffer_V_3_3_address0),
    .ce0(weight_buffer_V_3_3_ce0),
    .we0(weight_buffer_V_3_3_we0),
    .d0(grp_weight_load_fu_1439_weight_buffer_3_3_V_d0),
    .q0(weight_buffer_V_3_3_q0)
);

detection_acc_weiqcK #(
    .DataWidth( 8 ),
    .AddressRange( 25 ),
    .AddressWidth( 5 ))
weight_buffer_V_3_4_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(weight_buffer_V_3_4_address0),
    .ce0(weight_buffer_V_3_4_ce0),
    .we0(weight_buffer_V_3_4_we0),
    .d0(grp_weight_load_fu_1439_weight_buffer_3_4_V_d0),
    .q0(weight_buffer_V_3_4_q0)
);

detection_acc_weiqcK #(
    .DataWidth( 8 ),
    .AddressRange( 25 ),
    .AddressWidth( 5 ))
weight_buffer_V_3_5_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(weight_buffer_V_3_5_address0),
    .ce0(weight_buffer_V_3_5_ce0),
    .we0(weight_buffer_V_3_5_we0),
    .d0(grp_weight_load_fu_1439_weight_buffer_3_5_V_d0),
    .q0(weight_buffer_V_3_5_q0)
);

detection_acc_weiqcK #(
    .DataWidth( 8 ),
    .AddressRange( 25 ),
    .AddressWidth( 5 ))
weight_buffer_V_3_6_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(weight_buffer_V_3_6_address0),
    .ce0(weight_buffer_V_3_6_ce0),
    .we0(weight_buffer_V_3_6_we0),
    .d0(grp_weight_load_fu_1439_weight_buffer_3_6_V_d0),
    .q0(weight_buffer_V_3_6_q0)
);

detection_acc_weiqcK #(
    .DataWidth( 8 ),
    .AddressRange( 25 ),
    .AddressWidth( 5 ))
weight_buffer_V_3_7_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(weight_buffer_V_3_7_address0),
    .ce0(weight_buffer_V_3_7_ce0),
    .we0(weight_buffer_V_3_7_we0),
    .d0(grp_weight_load_fu_1439_weight_buffer_3_7_V_d0),
    .q0(weight_buffer_V_3_7_q0)
);

detection_acc_weiqcK #(
    .DataWidth( 8 ),
    .AddressRange( 25 ),
    .AddressWidth( 5 ))
weight_buffer_V_3_8_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(weight_buffer_V_3_8_address0),
    .ce0(weight_buffer_V_3_8_ce0),
    .we0(weight_buffer_V_3_8_we0),
    .d0(grp_weight_load_fu_1439_weight_buffer_3_8_V_d0),
    .q0(weight_buffer_V_3_8_q0)
);

detection_acc_weiqcK #(
    .DataWidth( 8 ),
    .AddressRange( 25 ),
    .AddressWidth( 5 ))
weight_buffer_V_3_9_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(weight_buffer_V_3_9_address0),
    .ce0(weight_buffer_V_3_9_ce0),
    .we0(weight_buffer_V_3_9_we0),
    .d0(grp_weight_load_fu_1439_weight_buffer_3_9_V_d0),
    .q0(weight_buffer_V_3_9_q0)
);

detection_acc_weiqcK #(
    .DataWidth( 8 ),
    .AddressRange( 25 ),
    .AddressWidth( 5 ))
weight_buffer_V_3_10_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(weight_buffer_V_3_10_address0),
    .ce0(weight_buffer_V_3_10_ce0),
    .we0(weight_buffer_V_3_10_we0),
    .d0(grp_weight_load_fu_1439_weight_buffer_3_10_V_d0),
    .q0(weight_buffer_V_3_10_q0)
);

detection_acc_weiqcK #(
    .DataWidth( 8 ),
    .AddressRange( 25 ),
    .AddressWidth( 5 ))
weight_buffer_V_3_11_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(weight_buffer_V_3_11_address0),
    .ce0(weight_buffer_V_3_11_ce0),
    .we0(weight_buffer_V_3_11_we0),
    .d0(grp_weight_load_fu_1439_weight_buffer_3_11_V_d0),
    .q0(weight_buffer_V_3_11_q0)
);

detection_acc_weiqcK #(
    .DataWidth( 8 ),
    .AddressRange( 25 ),
    .AddressWidth( 5 ))
weight_buffer_V_3_12_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(weight_buffer_V_3_12_address0),
    .ce0(weight_buffer_V_3_12_ce0),
    .we0(weight_buffer_V_3_12_we0),
    .d0(grp_weight_load_fu_1439_weight_buffer_3_12_V_d0),
    .q0(weight_buffer_V_3_12_q0)
);

detection_acc_weiqcK #(
    .DataWidth( 8 ),
    .AddressRange( 25 ),
    .AddressWidth( 5 ))
weight_buffer_V_3_13_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(weight_buffer_V_3_13_address0),
    .ce0(weight_buffer_V_3_13_ce0),
    .we0(weight_buffer_V_3_13_we0),
    .d0(grp_weight_load_fu_1439_weight_buffer_3_13_V_d0),
    .q0(weight_buffer_V_3_13_q0)
);

detection_acc_weiqcK #(
    .DataWidth( 8 ),
    .AddressRange( 25 ),
    .AddressWidth( 5 ))
weight_buffer_V_3_14_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(weight_buffer_V_3_14_address0),
    .ce0(weight_buffer_V_3_14_ce0),
    .we0(weight_buffer_V_3_14_we0),
    .d0(grp_weight_load_fu_1439_weight_buffer_3_14_V_d0),
    .q0(weight_buffer_V_3_14_q0)
);

detection_acc_weiqcK #(
    .DataWidth( 8 ),
    .AddressRange( 25 ),
    .AddressWidth( 5 ))
weight_buffer_V_3_15_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(weight_buffer_V_3_15_address0),
    .ce0(weight_buffer_V_3_15_ce0),
    .we0(weight_buffer_V_3_15_we0),
    .d0(grp_weight_load_fu_1439_weight_buffer_3_15_V_d0),
    .q0(weight_buffer_V_3_15_q0)
);

detection_acc_weiqcK #(
    .DataWidth( 8 ),
    .AddressRange( 25 ),
    .AddressWidth( 5 ))
weight_buffer_V_3_16_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(weight_buffer_V_3_16_address0),
    .ce0(weight_buffer_V_3_16_ce0),
    .we0(weight_buffer_V_3_16_we0),
    .d0(grp_weight_load_fu_1439_weight_buffer_3_16_V_d0),
    .q0(weight_buffer_V_3_16_q0)
);

detection_acc_weiqcK #(
    .DataWidth( 8 ),
    .AddressRange( 25 ),
    .AddressWidth( 5 ))
weight_buffer_V_3_17_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(weight_buffer_V_3_17_address0),
    .ce0(weight_buffer_V_3_17_ce0),
    .we0(weight_buffer_V_3_17_we0),
    .d0(grp_weight_load_fu_1439_weight_buffer_3_17_V_d0),
    .q0(weight_buffer_V_3_17_q0)
);

detection_acc_weiqcK #(
    .DataWidth( 8 ),
    .AddressRange( 25 ),
    .AddressWidth( 5 ))
weight_buffer_V_3_18_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(weight_buffer_V_3_18_address0),
    .ce0(weight_buffer_V_3_18_ce0),
    .we0(weight_buffer_V_3_18_we0),
    .d0(grp_weight_load_fu_1439_weight_buffer_3_18_V_d0),
    .q0(weight_buffer_V_3_18_q0)
);

detection_acc_weiqcK #(
    .DataWidth( 8 ),
    .AddressRange( 25 ),
    .AddressWidth( 5 ))
weight_buffer_V_3_19_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(weight_buffer_V_3_19_address0),
    .ce0(weight_buffer_V_3_19_ce0),
    .we0(weight_buffer_V_3_19_we0),
    .d0(grp_weight_load_fu_1439_weight_buffer_3_19_V_d0),
    .q0(weight_buffer_V_3_19_q0)
);

detection_acc_weiqcK #(
    .DataWidth( 8 ),
    .AddressRange( 25 ),
    .AddressWidth( 5 ))
weight_buffer_V_3_20_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(weight_buffer_V_3_20_address0),
    .ce0(weight_buffer_V_3_20_ce0),
    .we0(weight_buffer_V_3_20_we0),
    .d0(grp_weight_load_fu_1439_weight_buffer_3_20_V_d0),
    .q0(weight_buffer_V_3_20_q0)
);

detection_acc_weiqcK #(
    .DataWidth( 8 ),
    .AddressRange( 25 ),
    .AddressWidth( 5 ))
weight_buffer_V_3_21_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(weight_buffer_V_3_21_address0),
    .ce0(weight_buffer_V_3_21_ce0),
    .we0(weight_buffer_V_3_21_we0),
    .d0(grp_weight_load_fu_1439_weight_buffer_3_21_V_d0),
    .q0(weight_buffer_V_3_21_q0)
);

detection_acc_weiqcK #(
    .DataWidth( 8 ),
    .AddressRange( 25 ),
    .AddressWidth( 5 ))
weight_buffer_V_3_22_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(weight_buffer_V_3_22_address0),
    .ce0(weight_buffer_V_3_22_ce0),
    .we0(weight_buffer_V_3_22_we0),
    .d0(grp_weight_load_fu_1439_weight_buffer_3_22_V_d0),
    .q0(weight_buffer_V_3_22_q0)
);

detection_acc_weiqcK #(
    .DataWidth( 8 ),
    .AddressRange( 25 ),
    .AddressWidth( 5 ))
weight_buffer_V_3_23_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(weight_buffer_V_3_23_address0),
    .ce0(weight_buffer_V_3_23_ce0),
    .we0(weight_buffer_V_3_23_we0),
    .d0(grp_weight_load_fu_1439_weight_buffer_3_23_V_d0),
    .q0(weight_buffer_V_3_23_q0)
);

detection_acc_weiqcK #(
    .DataWidth( 8 ),
    .AddressRange( 25 ),
    .AddressWidth( 5 ))
weight_buffer_V_3_24_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(weight_buffer_V_3_24_address0),
    .ce0(weight_buffer_V_3_24_ce0),
    .we0(weight_buffer_V_3_24_we0),
    .d0(grp_weight_load_fu_1439_weight_buffer_3_24_V_d0),
    .q0(weight_buffer_V_3_24_q0)
);

detection_acc_weiqcK #(
    .DataWidth( 8 ),
    .AddressRange( 25 ),
    .AddressWidth( 5 ))
weight_buffer_V_3_25_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(weight_buffer_V_3_25_address0),
    .ce0(weight_buffer_V_3_25_ce0),
    .we0(weight_buffer_V_3_25_we0),
    .d0(grp_weight_load_fu_1439_weight_buffer_3_25_V_d0),
    .q0(weight_buffer_V_3_25_q0)
);

detection_acc_weiqcK #(
    .DataWidth( 8 ),
    .AddressRange( 25 ),
    .AddressWidth( 5 ))
weight_buffer_V_3_26_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(weight_buffer_V_3_26_address0),
    .ce0(weight_buffer_V_3_26_ce0),
    .we0(weight_buffer_V_3_26_we0),
    .d0(grp_weight_load_fu_1439_weight_buffer_3_26_V_d0),
    .q0(weight_buffer_V_3_26_q0)
);

detection_acc_weiqcK #(
    .DataWidth( 8 ),
    .AddressRange( 25 ),
    .AddressWidth( 5 ))
weight_buffer_V_3_27_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(weight_buffer_V_3_27_address0),
    .ce0(weight_buffer_V_3_27_ce0),
    .we0(weight_buffer_V_3_27_we0),
    .d0(grp_weight_load_fu_1439_weight_buffer_3_27_V_d0),
    .q0(weight_buffer_V_3_27_q0)
);

detection_acc_weiqcK #(
    .DataWidth( 8 ),
    .AddressRange( 25 ),
    .AddressWidth( 5 ))
weight_buffer_V_3_28_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(weight_buffer_V_3_28_address0),
    .ce0(weight_buffer_V_3_28_ce0),
    .we0(weight_buffer_V_3_28_we0),
    .d0(grp_weight_load_fu_1439_weight_buffer_3_28_V_d0),
    .q0(weight_buffer_V_3_28_q0)
);

detection_acc_weiqcK #(
    .DataWidth( 8 ),
    .AddressRange( 25 ),
    .AddressWidth( 5 ))
weight_buffer_V_3_29_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(weight_buffer_V_3_29_address0),
    .ce0(weight_buffer_V_3_29_ce0),
    .we0(weight_buffer_V_3_29_we0),
    .d0(grp_weight_load_fu_1439_weight_buffer_3_29_V_d0),
    .q0(weight_buffer_V_3_29_q0)
);

detection_acc_weiqcK #(
    .DataWidth( 8 ),
    .AddressRange( 25 ),
    .AddressWidth( 5 ))
weight_buffer_V_3_30_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(weight_buffer_V_3_30_address0),
    .ce0(weight_buffer_V_3_30_ce0),
    .we0(weight_buffer_V_3_30_we0),
    .d0(grp_weight_load_fu_1439_weight_buffer_3_30_V_d0),
    .q0(weight_buffer_V_3_30_q0)
);

detection_acc_weiqcK #(
    .DataWidth( 8 ),
    .AddressRange( 25 ),
    .AddressWidth( 5 ))
weight_buffer_V_3_31_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(weight_buffer_V_3_31_address0),
    .ce0(weight_buffer_V_3_31_ce0),
    .we0(weight_buffer_V_3_31_we0),
    .d0(grp_weight_load_fu_1439_weight_buffer_3_31_V_d0),
    .q0(weight_buffer_V_3_31_q0)
);

detection_acc_weicux #(
    .DataWidth( 32 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
weight_buffer_fc_0_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(weight_buffer_fc_0_address0),
    .ce0(weight_buffer_fc_0_ce0),
    .we0(weight_buffer_fc_0_we0),
    .d0(grp_weight_load_fc_fu_1987_weight_buffer_fc_0_d0),
    .q0(weight_buffer_fc_0_q0)
);

detection_acc_weicux #(
    .DataWidth( 32 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
weight_buffer_fc_1_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(weight_buffer_fc_1_address0),
    .ce0(weight_buffer_fc_1_ce0),
    .we0(weight_buffer_fc_1_we0),
    .d0(grp_weight_load_fc_fu_1987_weight_buffer_fc_1_d0),
    .q0(weight_buffer_fc_1_q0)
);

detection_acc_weicux #(
    .DataWidth( 32 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
weight_buffer_fc_2_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(weight_buffer_fc_2_address0),
    .ce0(weight_buffer_fc_2_ce0),
    .we0(weight_buffer_fc_2_we0),
    .d0(grp_weight_load_fc_fu_1987_weight_buffer_fc_2_d0),
    .q0(weight_buffer_fc_2_q0)
);

detection_acc_weicux #(
    .DataWidth( 32 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
weight_buffer_fc_3_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(weight_buffer_fc_3_address0),
    .ce0(weight_buffer_fc_3_ce0),
    .we0(weight_buffer_fc_3_we0),
    .d0(grp_weight_load_fc_fu_1987_weight_buffer_fc_3_d0),
    .q0(weight_buffer_fc_3_q0)
);

detection_acc_weicux #(
    .DataWidth( 32 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
weight_buffer_fc_4_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(weight_buffer_fc_4_address0),
    .ce0(weight_buffer_fc_4_ce0),
    .we0(weight_buffer_fc_4_we0),
    .d0(grp_weight_load_fc_fu_1987_weight_buffer_fc_4_d0),
    .q0(weight_buffer_fc_4_q0)
);

detection_acc_weicux #(
    .DataWidth( 32 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
weight_buffer_fc_5_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(weight_buffer_fc_5_address0),
    .ce0(weight_buffer_fc_5_ce0),
    .we0(weight_buffer_fc_5_we0),
    .d0(grp_weight_load_fc_fu_1987_weight_buffer_fc_5_d0),
    .q0(weight_buffer_fc_5_q0)
);

detection_acc_weicux #(
    .DataWidth( 32 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
weight_buffer_fc_6_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(weight_buffer_fc_6_address0),
    .ce0(weight_buffer_fc_6_ce0),
    .we0(weight_buffer_fc_6_we0),
    .d0(grp_weight_load_fc_fu_1987_weight_buffer_fc_6_d0),
    .q0(weight_buffer_fc_6_q0)
);

detection_acc_weicux #(
    .DataWidth( 32 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
weight_buffer_fc_7_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(weight_buffer_fc_7_address0),
    .ce0(weight_buffer_fc_7_ce0),
    .we0(weight_buffer_fc_7_we0),
    .d0(grp_weight_load_fc_fu_1987_weight_buffer_fc_7_d0),
    .q0(weight_buffer_fc_7_q0)
);

detection_acc_outcCy #(
    .DataWidth( 32 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
output_buffer_0_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(output_buffer_0_address0),
    .ce0(output_buffer_0_ce0),
    .we0(output_buffer_0_we0),
    .d0(output_buffer_0_d0),
    .q0(output_buffer_0_q0),
    .address1(grp_pool_fu_962_Input_0_address1),
    .ce1(output_buffer_0_ce1),
    .we1(output_buffer_0_we1),
    .d1(grp_pool_fu_962_Input_0_d1),
    .q1(output_buffer_0_q1)
);

detection_acc_outcCy #(
    .DataWidth( 32 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
output_buffer_1_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(output_buffer_1_address0),
    .ce0(output_buffer_1_ce0),
    .we0(output_buffer_1_we0),
    .d0(output_buffer_1_d0),
    .q0(output_buffer_1_q0),
    .address1(grp_pool_fu_962_Input_1_address1),
    .ce1(output_buffer_1_ce1),
    .we1(output_buffer_1_we1),
    .d1(grp_pool_fu_962_Input_1_d1),
    .q1(output_buffer_1_q1)
);

detection_acc_outcCy #(
    .DataWidth( 32 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
output_buffer_2_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(output_buffer_2_address0),
    .ce0(output_buffer_2_ce0),
    .we0(output_buffer_2_we0),
    .d0(output_buffer_2_d0),
    .q0(output_buffer_2_q0),
    .address1(grp_pool_fu_962_Input_2_address1),
    .ce1(output_buffer_2_ce1),
    .we1(output_buffer_2_we1),
    .d1(grp_pool_fu_962_Input_2_d1),
    .q1(output_buffer_2_q1)
);

detection_acc_outcCy #(
    .DataWidth( 32 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
output_buffer_3_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(output_buffer_3_address0),
    .ce0(output_buffer_3_ce0),
    .we0(output_buffer_3_we0),
    .d0(output_buffer_3_d0),
    .q0(output_buffer_3_q0),
    .address1(grp_pool_fu_962_Input_3_address1),
    .ce1(output_buffer_3_ce1),
    .we1(output_buffer_3_we1),
    .d1(grp_pool_fu_962_Input_3_d1),
    .q1(output_buffer_3_q1)
);

detection_acc_outcCy #(
    .DataWidth( 32 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
output_buffer_4_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(output_buffer_4_address0),
    .ce0(output_buffer_4_ce0),
    .we0(output_buffer_4_we0),
    .d0(output_buffer_4_d0),
    .q0(output_buffer_4_q0),
    .address1(grp_pool_fu_962_Input_4_address1),
    .ce1(output_buffer_4_ce1),
    .we1(output_buffer_4_we1),
    .d1(grp_pool_fu_962_Input_4_d1),
    .q1(output_buffer_4_q1)
);

detection_acc_outcCy #(
    .DataWidth( 32 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
output_buffer_5_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(output_buffer_5_address0),
    .ce0(output_buffer_5_ce0),
    .we0(output_buffer_5_we0),
    .d0(output_buffer_5_d0),
    .q0(output_buffer_5_q0),
    .address1(grp_pool_fu_962_Input_5_address1),
    .ce1(output_buffer_5_ce1),
    .we1(output_buffer_5_we1),
    .d1(grp_pool_fu_962_Input_5_d1),
    .q1(output_buffer_5_q1)
);

detection_acc_outcCy #(
    .DataWidth( 32 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
output_buffer_6_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(output_buffer_6_address0),
    .ce0(output_buffer_6_ce0),
    .we0(output_buffer_6_we0),
    .d0(output_buffer_6_d0),
    .q0(output_buffer_6_q0),
    .address1(grp_pool_fu_962_Input_6_address1),
    .ce1(output_buffer_6_ce1),
    .we1(output_buffer_6_we1),
    .d1(grp_pool_fu_962_Input_6_d1),
    .q1(output_buffer_6_q1)
);

detection_acc_outcCy #(
    .DataWidth( 32 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
output_buffer_7_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(output_buffer_7_address0),
    .ce0(output_buffer_7_ce0),
    .we0(output_buffer_7_we0),
    .d0(output_buffer_7_d0),
    .q0(output_buffer_7_q0),
    .address1(grp_pool_fu_962_Input_7_address1),
    .ce1(output_buffer_7_ce1),
    .we1(output_buffer_7_we1),
    .d1(grp_pool_fu_962_Input_7_d1),
    .q1(output_buffer_7_q1)
);

detection_acc_outcCy #(
    .DataWidth( 32 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
output_buffer_8_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(output_buffer_8_address0),
    .ce0(output_buffer_8_ce0),
    .we0(output_buffer_8_we0),
    .d0(output_buffer_8_d0),
    .q0(output_buffer_8_q0),
    .address1(grp_pool_fu_962_Input_8_address1),
    .ce1(output_buffer_8_ce1),
    .we1(output_buffer_8_we1),
    .d1(grp_pool_fu_962_Input_8_d1),
    .q1(output_buffer_8_q1)
);

detection_acc_outcCy #(
    .DataWidth( 32 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
output_buffer_9_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(output_buffer_9_address0),
    .ce0(output_buffer_9_ce0),
    .we0(output_buffer_9_we0),
    .d0(output_buffer_9_d0),
    .q0(output_buffer_9_q0),
    .address1(grp_pool_fu_962_Input_9_address1),
    .ce1(output_buffer_9_ce1),
    .we1(output_buffer_9_we1),
    .d1(grp_pool_fu_962_Input_9_d1),
    .q1(output_buffer_9_q1)
);

detection_acc_outcCy #(
    .DataWidth( 32 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
output_buffer_10_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(output_buffer_10_address0),
    .ce0(output_buffer_10_ce0),
    .we0(output_buffer_10_we0),
    .d0(output_buffer_10_d0),
    .q0(output_buffer_10_q0),
    .address1(grp_pool_fu_962_Input_10_address1),
    .ce1(output_buffer_10_ce1),
    .we1(output_buffer_10_we1),
    .d1(grp_pool_fu_962_Input_10_d1),
    .q1(output_buffer_10_q1)
);

detection_acc_outcCy #(
    .DataWidth( 32 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
output_buffer_11_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(output_buffer_11_address0),
    .ce0(output_buffer_11_ce0),
    .we0(output_buffer_11_we0),
    .d0(output_buffer_11_d0),
    .q0(output_buffer_11_q0),
    .address1(grp_pool_fu_962_Input_11_address1),
    .ce1(output_buffer_11_ce1),
    .we1(output_buffer_11_we1),
    .d1(grp_pool_fu_962_Input_11_d1),
    .q1(output_buffer_11_q1)
);

detection_acc_outcCy #(
    .DataWidth( 32 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
output_buffer_12_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(output_buffer_12_address0),
    .ce0(output_buffer_12_ce0),
    .we0(output_buffer_12_we0),
    .d0(output_buffer_12_d0),
    .q0(output_buffer_12_q0),
    .address1(grp_pool_fu_962_Input_12_address1),
    .ce1(output_buffer_12_ce1),
    .we1(output_buffer_12_we1),
    .d1(grp_pool_fu_962_Input_12_d1),
    .q1(output_buffer_12_q1)
);

detection_acc_outcCy #(
    .DataWidth( 32 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
output_buffer_13_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(output_buffer_13_address0),
    .ce0(output_buffer_13_ce0),
    .we0(output_buffer_13_we0),
    .d0(output_buffer_13_d0),
    .q0(output_buffer_13_q0),
    .address1(grp_pool_fu_962_Input_13_address1),
    .ce1(output_buffer_13_ce1),
    .we1(output_buffer_13_we1),
    .d1(grp_pool_fu_962_Input_13_d1),
    .q1(output_buffer_13_q1)
);

detection_acc_outcCy #(
    .DataWidth( 32 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
output_buffer_14_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(output_buffer_14_address0),
    .ce0(output_buffer_14_ce0),
    .we0(output_buffer_14_we0),
    .d0(output_buffer_14_d0),
    .q0(output_buffer_14_q0),
    .address1(grp_pool_fu_962_Input_14_address1),
    .ce1(output_buffer_14_ce1),
    .we1(output_buffer_14_we1),
    .d1(grp_pool_fu_962_Input_14_d1),
    .q1(output_buffer_14_q1)
);

detection_acc_outcCy #(
    .DataWidth( 32 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
output_buffer_15_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(output_buffer_15_address0),
    .ce0(output_buffer_15_ce0),
    .we0(output_buffer_15_we0),
    .d0(output_buffer_15_d0),
    .q0(output_buffer_15_q0),
    .address1(grp_pool_fu_962_Input_15_address1),
    .ce1(output_buffer_15_ce1),
    .we1(output_buffer_15_we1),
    .d1(grp_pool_fu_962_Input_15_d1),
    .q1(output_buffer_15_q1)
);

detection_acc_outcCy #(
    .DataWidth( 32 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
output_buffer_16_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(output_buffer_16_address0),
    .ce0(output_buffer_16_ce0),
    .we0(output_buffer_16_we0),
    .d0(output_buffer_16_d0),
    .q0(output_buffer_16_q0),
    .address1(grp_pool_fu_962_Input_16_address1),
    .ce1(output_buffer_16_ce1),
    .we1(output_buffer_16_we1),
    .d1(grp_pool_fu_962_Input_16_d1),
    .q1(output_buffer_16_q1)
);

detection_acc_outcCy #(
    .DataWidth( 32 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
output_buffer_17_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(output_buffer_17_address0),
    .ce0(output_buffer_17_ce0),
    .we0(output_buffer_17_we0),
    .d0(output_buffer_17_d0),
    .q0(output_buffer_17_q0),
    .address1(grp_pool_fu_962_Input_17_address1),
    .ce1(output_buffer_17_ce1),
    .we1(output_buffer_17_we1),
    .d1(grp_pool_fu_962_Input_17_d1),
    .q1(output_buffer_17_q1)
);

detection_acc_outcCy #(
    .DataWidth( 32 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
output_buffer_18_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(output_buffer_18_address0),
    .ce0(output_buffer_18_ce0),
    .we0(output_buffer_18_we0),
    .d0(output_buffer_18_d0),
    .q0(output_buffer_18_q0),
    .address1(grp_pool_fu_962_Input_18_address1),
    .ce1(output_buffer_18_ce1),
    .we1(output_buffer_18_we1),
    .d1(grp_pool_fu_962_Input_18_d1),
    .q1(output_buffer_18_q1)
);

detection_acc_outcCy #(
    .DataWidth( 32 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
output_buffer_19_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(output_buffer_19_address0),
    .ce0(output_buffer_19_ce0),
    .we0(output_buffer_19_we0),
    .d0(output_buffer_19_d0),
    .q0(output_buffer_19_q0),
    .address1(grp_pool_fu_962_Input_19_address1),
    .ce1(output_buffer_19_ce1),
    .we1(output_buffer_19_we1),
    .d1(grp_pool_fu_962_Input_19_d1),
    .q1(output_buffer_19_q1)
);

detection_acc_outcCy #(
    .DataWidth( 32 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
output_buffer_20_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(output_buffer_20_address0),
    .ce0(output_buffer_20_ce0),
    .we0(output_buffer_20_we0),
    .d0(output_buffer_20_d0),
    .q0(output_buffer_20_q0),
    .address1(grp_pool_fu_962_Input_20_address1),
    .ce1(output_buffer_20_ce1),
    .we1(output_buffer_20_we1),
    .d1(grp_pool_fu_962_Input_20_d1),
    .q1(output_buffer_20_q1)
);

detection_acc_outcCy #(
    .DataWidth( 32 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
output_buffer_21_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(output_buffer_21_address0),
    .ce0(output_buffer_21_ce0),
    .we0(output_buffer_21_we0),
    .d0(output_buffer_21_d0),
    .q0(output_buffer_21_q0),
    .address1(grp_pool_fu_962_Input_21_address1),
    .ce1(output_buffer_21_ce1),
    .we1(output_buffer_21_we1),
    .d1(grp_pool_fu_962_Input_21_d1),
    .q1(output_buffer_21_q1)
);

detection_acc_outcCy #(
    .DataWidth( 32 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
output_buffer_22_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(output_buffer_22_address0),
    .ce0(output_buffer_22_ce0),
    .we0(output_buffer_22_we0),
    .d0(output_buffer_22_d0),
    .q0(output_buffer_22_q0),
    .address1(grp_pool_fu_962_Input_22_address1),
    .ce1(output_buffer_22_ce1),
    .we1(output_buffer_22_we1),
    .d1(grp_pool_fu_962_Input_22_d1),
    .q1(output_buffer_22_q1)
);

detection_acc_outcCy #(
    .DataWidth( 32 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
output_buffer_23_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(output_buffer_23_address0),
    .ce0(output_buffer_23_ce0),
    .we0(output_buffer_23_we0),
    .d0(output_buffer_23_d0),
    .q0(output_buffer_23_q0),
    .address1(grp_pool_fu_962_Input_23_address1),
    .ce1(output_buffer_23_ce1),
    .we1(output_buffer_23_we1),
    .d1(grp_pool_fu_962_Input_23_d1),
    .q1(output_buffer_23_q1)
);

detection_acc_outcCy #(
    .DataWidth( 32 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
output_buffer_24_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(output_buffer_24_address0),
    .ce0(output_buffer_24_ce0),
    .we0(output_buffer_24_we0),
    .d0(output_buffer_24_d0),
    .q0(output_buffer_24_q0),
    .address1(grp_pool_fu_962_Input_24_address1),
    .ce1(output_buffer_24_ce1),
    .we1(output_buffer_24_we1),
    .d1(grp_pool_fu_962_Input_24_d1),
    .q1(output_buffer_24_q1)
);

detection_acc_outcCy #(
    .DataWidth( 32 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
output_buffer_25_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(output_buffer_25_address0),
    .ce0(output_buffer_25_ce0),
    .we0(output_buffer_25_we0),
    .d0(output_buffer_25_d0),
    .q0(output_buffer_25_q0),
    .address1(grp_pool_fu_962_Input_25_address1),
    .ce1(output_buffer_25_ce1),
    .we1(output_buffer_25_we1),
    .d1(grp_pool_fu_962_Input_25_d1),
    .q1(output_buffer_25_q1)
);

detection_acc_outcCy #(
    .DataWidth( 32 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
output_buffer_26_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(output_buffer_26_address0),
    .ce0(output_buffer_26_ce0),
    .we0(output_buffer_26_we0),
    .d0(output_buffer_26_d0),
    .q0(output_buffer_26_q0),
    .address1(grp_pool_fu_962_Input_26_address1),
    .ce1(output_buffer_26_ce1),
    .we1(output_buffer_26_we1),
    .d1(grp_pool_fu_962_Input_26_d1),
    .q1(output_buffer_26_q1)
);

detection_acc_outcCy #(
    .DataWidth( 32 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
output_buffer_27_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(output_buffer_27_address0),
    .ce0(output_buffer_27_ce0),
    .we0(output_buffer_27_we0),
    .d0(output_buffer_27_d0),
    .q0(output_buffer_27_q0),
    .address1(grp_pool_fu_962_Input_27_address1),
    .ce1(output_buffer_27_ce1),
    .we1(output_buffer_27_we1),
    .d1(grp_pool_fu_962_Input_27_d1),
    .q1(output_buffer_27_q1)
);

detection_acc_outcCy #(
    .DataWidth( 32 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
output_buffer_28_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(output_buffer_28_address0),
    .ce0(output_buffer_28_ce0),
    .we0(output_buffer_28_we0),
    .d0(output_buffer_28_d0),
    .q0(output_buffer_28_q0),
    .address1(grp_pool_fu_962_Input_28_address1),
    .ce1(output_buffer_28_ce1),
    .we1(output_buffer_28_we1),
    .d1(grp_pool_fu_962_Input_28_d1),
    .q1(output_buffer_28_q1)
);

detection_acc_outcCy #(
    .DataWidth( 32 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
output_buffer_29_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(output_buffer_29_address0),
    .ce0(output_buffer_29_ce0),
    .we0(output_buffer_29_we0),
    .d0(output_buffer_29_d0),
    .q0(output_buffer_29_q0),
    .address1(grp_pool_fu_962_Input_29_address1),
    .ce1(output_buffer_29_ce1),
    .we1(output_buffer_29_we1),
    .d1(grp_pool_fu_962_Input_29_d1),
    .q1(output_buffer_29_q1)
);

detection_acc_outcCy #(
    .DataWidth( 32 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
output_buffer_30_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(output_buffer_30_address0),
    .ce0(output_buffer_30_ce0),
    .we0(output_buffer_30_we0),
    .d0(output_buffer_30_d0),
    .q0(output_buffer_30_q0),
    .address1(grp_pool_fu_962_Input_30_address1),
    .ce1(output_buffer_30_ce1),
    .we1(output_buffer_30_we1),
    .d1(grp_pool_fu_962_Input_30_d1),
    .q1(output_buffer_30_q1)
);

detection_acc_outcCy #(
    .DataWidth( 32 ),
    .AddressRange( 1024 ),
    .AddressWidth( 10 ))
output_buffer_31_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(output_buffer_31_address0),
    .ce0(output_buffer_31_ce0),
    .we0(output_buffer_31_we0),
    .d0(output_buffer_31_d0),
    .q0(output_buffer_31_q0),
    .address1(grp_pool_fu_962_Input_31_address1),
    .ce1(output_buffer_31_ce1),
    .we1(output_buffer_31_we1),
    .d1(grp_pool_fu_962_Input_31_d1),
    .q1(output_buffer_31_q1)
);

detection_acc_weicux #(
    .DataWidth( 32 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
input_buffer_fc_0_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(input_buffer_fc_0_address0),
    .ce0(input_buffer_fc_0_ce0),
    .we0(input_buffer_fc_0_we0),
    .d0(Input_addr_read_reg_2546),
    .q0(input_buffer_fc_0_q0)
);

detection_acc_weicux #(
    .DataWidth( 32 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
input_buffer_fc_1_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(input_buffer_fc_1_address0),
    .ce0(input_buffer_fc_1_ce0),
    .we0(input_buffer_fc_1_we0),
    .d0(Input_addr_read_reg_2546),
    .q0(input_buffer_fc_1_q0)
);

detection_acc_weicux #(
    .DataWidth( 32 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
input_buffer_fc_2_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(input_buffer_fc_2_address0),
    .ce0(input_buffer_fc_2_ce0),
    .we0(input_buffer_fc_2_we0),
    .d0(Input_addr_read_reg_2546),
    .q0(input_buffer_fc_2_q0)
);

detection_acc_weicux #(
    .DataWidth( 32 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
input_buffer_fc_3_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(input_buffer_fc_3_address0),
    .ce0(input_buffer_fc_3_ce0),
    .we0(input_buffer_fc_3_we0),
    .d0(Input_addr_read_reg_2546),
    .q0(input_buffer_fc_3_q0)
);

detection_acc_weicux #(
    .DataWidth( 32 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
input_buffer_fc_4_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(input_buffer_fc_4_address0),
    .ce0(input_buffer_fc_4_ce0),
    .we0(input_buffer_fc_4_we0),
    .d0(Input_addr_read_reg_2546),
    .q0(input_buffer_fc_4_q0)
);

detection_acc_weicux #(
    .DataWidth( 32 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
input_buffer_fc_5_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(input_buffer_fc_5_address0),
    .ce0(input_buffer_fc_5_ce0),
    .we0(input_buffer_fc_5_we0),
    .d0(Input_addr_read_reg_2546),
    .q0(input_buffer_fc_5_q0)
);

detection_acc_weicux #(
    .DataWidth( 32 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
input_buffer_fc_6_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(input_buffer_fc_6_address0),
    .ce0(input_buffer_fc_6_ce0),
    .we0(input_buffer_fc_6_we0),
    .d0(Input_addr_read_reg_2546),
    .q0(input_buffer_fc_6_q0)
);

detection_acc_weicux #(
    .DataWidth( 32 ),
    .AddressRange( 512 ),
    .AddressWidth( 9 ))
input_buffer_fc_7_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(input_buffer_fc_7_address0),
    .ce0(input_buffer_fc_7_ce0),
    .we0(input_buffer_fc_7_we0),
    .d0(Input_addr_read_reg_2546),
    .q0(input_buffer_fc_7_q0)
);

detection_acc_outdgE #(
    .DataWidth( 32 ),
    .AddressRange( 128 ),
    .AddressWidth( 7 ))
output_buffer_fc_0_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(output_buffer_fc_0_address0),
    .ce0(output_buffer_fc_0_ce0),
    .we0(output_buffer_fc_0_we0),
    .d0(output_buffer_fc_0_d0),
    .q0(output_buffer_fc_0_q0)
);

detection_acc_outdgE #(
    .DataWidth( 32 ),
    .AddressRange( 128 ),
    .AddressWidth( 7 ))
output_buffer_fc_1_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(output_buffer_fc_1_address0),
    .ce0(output_buffer_fc_1_ce0),
    .we0(output_buffer_fc_1_we0),
    .d0(output_buffer_fc_1_d0),
    .q0(output_buffer_fc_1_q0)
);

detection_acc_outdgE #(
    .DataWidth( 32 ),
    .AddressRange( 128 ),
    .AddressWidth( 7 ))
output_buffer_fc_2_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(output_buffer_fc_2_address0),
    .ce0(output_buffer_fc_2_ce0),
    .we0(output_buffer_fc_2_we0),
    .d0(output_buffer_fc_2_d0),
    .q0(output_buffer_fc_2_q0)
);

detection_acc_outdgE #(
    .DataWidth( 32 ),
    .AddressRange( 128 ),
    .AddressWidth( 7 ))
output_buffer_fc_3_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(output_buffer_fc_3_address0),
    .ce0(output_buffer_fc_3_ce0),
    .we0(output_buffer_fc_3_we0),
    .d0(output_buffer_fc_3_d0),
    .q0(output_buffer_fc_3_q0)
);

detection_acc_outdgE #(
    .DataWidth( 32 ),
    .AddressRange( 128 ),
    .AddressWidth( 7 ))
output_buffer_fc_4_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(output_buffer_fc_4_address0),
    .ce0(output_buffer_fc_4_ce0),
    .we0(output_buffer_fc_4_we0),
    .d0(output_buffer_fc_4_d0),
    .q0(output_buffer_fc_4_q0)
);

detection_acc_outdgE #(
    .DataWidth( 32 ),
    .AddressRange( 128 ),
    .AddressWidth( 7 ))
output_buffer_fc_5_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(output_buffer_fc_5_address0),
    .ce0(output_buffer_fc_5_ce0),
    .we0(output_buffer_fc_5_we0),
    .d0(output_buffer_fc_5_d0),
    .q0(output_buffer_fc_5_q0)
);

detection_acc_outdgE #(
    .DataWidth( 32 ),
    .AddressRange( 128 ),
    .AddressWidth( 7 ))
output_buffer_fc_6_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(output_buffer_fc_6_address0),
    .ce0(output_buffer_fc_6_ce0),
    .we0(output_buffer_fc_6_we0),
    .d0(output_buffer_fc_6_d0),
    .q0(output_buffer_fc_6_q0)
);

detection_acc_outdgE #(
    .DataWidth( 32 ),
    .AddressRange( 128 ),
    .AddressWidth( 7 ))
output_buffer_fc_7_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(output_buffer_fc_7_address0),
    .ce0(output_buffer_fc_7_ce0),
    .we0(output_buffer_fc_7_we0),
    .d0(output_buffer_fc_7_d0),
    .q0(output_buffer_fc_7_q0)
);

detection_acc_CRTL_BUS_s_axi #(
    .C_S_AXI_ADDR_WIDTH( C_S_AXI_CRTL_BUS_ADDR_WIDTH ),
    .C_S_AXI_DATA_WIDTH( C_S_AXI_CRTL_BUS_DATA_WIDTH ))
detection_acc_CRTL_BUS_s_axi_U(
    .AWVALID(s_axi_CRTL_BUS_AWVALID),
    .AWREADY(s_axi_CRTL_BUS_AWREADY),
    .AWADDR(s_axi_CRTL_BUS_AWADDR),
    .WVALID(s_axi_CRTL_BUS_WVALID),
    .WREADY(s_axi_CRTL_BUS_WREADY),
    .WDATA(s_axi_CRTL_BUS_WDATA),
    .WSTRB(s_axi_CRTL_BUS_WSTRB),
    .ARVALID(s_axi_CRTL_BUS_ARVALID),
    .ARREADY(s_axi_CRTL_BUS_ARREADY),
    .ARADDR(s_axi_CRTL_BUS_ARADDR),
    .RVALID(s_axi_CRTL_BUS_RVALID),
    .RREADY(s_axi_CRTL_BUS_RREADY),
    .RDATA(s_axi_CRTL_BUS_RDATA),
    .RRESP(s_axi_CRTL_BUS_RRESP),
    .BVALID(s_axi_CRTL_BUS_BVALID),
    .BREADY(s_axi_CRTL_BUS_BREADY),
    .BRESP(s_axi_CRTL_BUS_BRESP),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .ap_start(ap_start),
    .interrupt(interrupt),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_idle(ap_idle),
    .Input_offset(Input_offset),
    .Output_offset(Output_offset),
    .Weight_offset(Weight_offset),
    .Beta_offset(Beta_offset),
    .InFM_num(InFM_num),
    .OutFM_num(OutFM_num),
    .Kernel_size(Kernel_size),
    .Kernel_stride(Kernel_stride),
    .TM(TM),
    .TN(TN),
    .TR(TR),
    .TC(TC),
    .mLoops(mLoops),
    .nLoops(nLoops),
    .LayerType(LayerType),
    .M(M)
);

detection_acc_Input_r_m_axi #(
    .CONSERVATIVE( 0 ),
    .USER_DW( 32 ),
    .USER_AW( 32 ),
    .USER_MAXREQS( 5 ),
    .NUM_READ_OUTSTANDING( 16 ),
    .NUM_WRITE_OUTSTANDING( 16 ),
    .MAX_READ_BURST_LENGTH( 16 ),
    .MAX_WRITE_BURST_LENGTH( 16 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_INPUT_R_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_INPUT_R_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_INPUT_R_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_INPUT_R_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_INPUT_R_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_INPUT_R_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_INPUT_R_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_INPUT_R_BUSER_WIDTH ),
    .C_USER_VALUE( C_M_AXI_INPUT_R_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_INPUT_R_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_INPUT_R_CACHE_VALUE ))
detection_acc_Input_r_m_axi_U(
    .AWVALID(m_axi_Input_r_AWVALID),
    .AWREADY(m_axi_Input_r_AWREADY),
    .AWADDR(m_axi_Input_r_AWADDR),
    .AWID(m_axi_Input_r_AWID),
    .AWLEN(m_axi_Input_r_AWLEN),
    .AWSIZE(m_axi_Input_r_AWSIZE),
    .AWBURST(m_axi_Input_r_AWBURST),
    .AWLOCK(m_axi_Input_r_AWLOCK),
    .AWCACHE(m_axi_Input_r_AWCACHE),
    .AWPROT(m_axi_Input_r_AWPROT),
    .AWQOS(m_axi_Input_r_AWQOS),
    .AWREGION(m_axi_Input_r_AWREGION),
    .AWUSER(m_axi_Input_r_AWUSER),
    .WVALID(m_axi_Input_r_WVALID),
    .WREADY(m_axi_Input_r_WREADY),
    .WDATA(m_axi_Input_r_WDATA),
    .WSTRB(m_axi_Input_r_WSTRB),
    .WLAST(m_axi_Input_r_WLAST),
    .WID(m_axi_Input_r_WID),
    .WUSER(m_axi_Input_r_WUSER),
    .ARVALID(m_axi_Input_r_ARVALID),
    .ARREADY(m_axi_Input_r_ARREADY),
    .ARADDR(m_axi_Input_r_ARADDR),
    .ARID(m_axi_Input_r_ARID),
    .ARLEN(m_axi_Input_r_ARLEN),
    .ARSIZE(m_axi_Input_r_ARSIZE),
    .ARBURST(m_axi_Input_r_ARBURST),
    .ARLOCK(m_axi_Input_r_ARLOCK),
    .ARCACHE(m_axi_Input_r_ARCACHE),
    .ARPROT(m_axi_Input_r_ARPROT),
    .ARQOS(m_axi_Input_r_ARQOS),
    .ARREGION(m_axi_Input_r_ARREGION),
    .ARUSER(m_axi_Input_r_ARUSER),
    .RVALID(m_axi_Input_r_RVALID),
    .RREADY(m_axi_Input_r_RREADY),
    .RDATA(m_axi_Input_r_RDATA),
    .RLAST(m_axi_Input_r_RLAST),
    .RID(m_axi_Input_r_RID),
    .RUSER(m_axi_Input_r_RUSER),
    .RRESP(m_axi_Input_r_RRESP),
    .BVALID(m_axi_Input_r_BVALID),
    .BREADY(m_axi_Input_r_BREADY),
    .BRESP(m_axi_Input_r_BRESP),
    .BID(m_axi_Input_r_BID),
    .BUSER(m_axi_Input_r_BUSER),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .I_ARVALID(Input_r_ARVALID),
    .I_ARREADY(Input_r_ARREADY),
    .I_ARADDR(Input_r_ARADDR),
    .I_ARID(Input_r_ARID),
    .I_ARLEN(Input_r_ARLEN),
    .I_ARSIZE(Input_r_ARSIZE),
    .I_ARLOCK(Input_r_ARLOCK),
    .I_ARCACHE(Input_r_ARCACHE),
    .I_ARQOS(Input_r_ARQOS),
    .I_ARPROT(Input_r_ARPROT),
    .I_ARUSER(Input_r_ARUSER),
    .I_ARBURST(Input_r_ARBURST),
    .I_ARREGION(Input_r_ARREGION),
    .I_RVALID(Input_r_RVALID),
    .I_RREADY(Input_r_RREADY),
    .I_RDATA(Input_r_RDATA),
    .I_RID(Input_r_RID),
    .I_RUSER(Input_r_RUSER),
    .I_RRESP(Input_r_RRESP),
    .I_RLAST(Input_r_RLAST),
    .I_AWVALID(1'b0),
    .I_AWREADY(Input_r_AWREADY),
    .I_AWADDR(32'd0),
    .I_AWID(1'd0),
    .I_AWLEN(32'd0),
    .I_AWSIZE(3'd0),
    .I_AWLOCK(2'd0),
    .I_AWCACHE(4'd0),
    .I_AWQOS(4'd0),
    .I_AWPROT(3'd0),
    .I_AWUSER(1'd0),
    .I_AWBURST(2'd0),
    .I_AWREGION(4'd0),
    .I_WVALID(1'b0),
    .I_WREADY(Input_r_WREADY),
    .I_WDATA(32'd0),
    .I_WID(1'd0),
    .I_WUSER(1'd0),
    .I_WLAST(1'b0),
    .I_WSTRB(4'd0),
    .I_BVALID(Input_r_BVALID),
    .I_BREADY(1'b0),
    .I_BRESP(Input_r_BRESP),
    .I_BID(Input_r_BID),
    .I_BUSER(Input_r_BUSER)
);

detection_acc_Output_r_m_axi #(
    .CONSERVATIVE( 0 ),
    .USER_DW( 32 ),
    .USER_AW( 32 ),
    .USER_MAXREQS( 5 ),
    .NUM_READ_OUTSTANDING( 16 ),
    .NUM_WRITE_OUTSTANDING( 16 ),
    .MAX_READ_BURST_LENGTH( 16 ),
    .MAX_WRITE_BURST_LENGTH( 16 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_OUTPUT_R_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_OUTPUT_R_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_OUTPUT_R_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_OUTPUT_R_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_OUTPUT_R_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_OUTPUT_R_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_OUTPUT_R_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_OUTPUT_R_BUSER_WIDTH ),
    .C_USER_VALUE( C_M_AXI_OUTPUT_R_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_OUTPUT_R_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_OUTPUT_R_CACHE_VALUE ))
detection_acc_Output_r_m_axi_U(
    .AWVALID(m_axi_Output_r_AWVALID),
    .AWREADY(m_axi_Output_r_AWREADY),
    .AWADDR(m_axi_Output_r_AWADDR),
    .AWID(m_axi_Output_r_AWID),
    .AWLEN(m_axi_Output_r_AWLEN),
    .AWSIZE(m_axi_Output_r_AWSIZE),
    .AWBURST(m_axi_Output_r_AWBURST),
    .AWLOCK(m_axi_Output_r_AWLOCK),
    .AWCACHE(m_axi_Output_r_AWCACHE),
    .AWPROT(m_axi_Output_r_AWPROT),
    .AWQOS(m_axi_Output_r_AWQOS),
    .AWREGION(m_axi_Output_r_AWREGION),
    .AWUSER(m_axi_Output_r_AWUSER),
    .WVALID(m_axi_Output_r_WVALID),
    .WREADY(m_axi_Output_r_WREADY),
    .WDATA(m_axi_Output_r_WDATA),
    .WSTRB(m_axi_Output_r_WSTRB),
    .WLAST(m_axi_Output_r_WLAST),
    .WID(m_axi_Output_r_WID),
    .WUSER(m_axi_Output_r_WUSER),
    .ARVALID(m_axi_Output_r_ARVALID),
    .ARREADY(m_axi_Output_r_ARREADY),
    .ARADDR(m_axi_Output_r_ARADDR),
    .ARID(m_axi_Output_r_ARID),
    .ARLEN(m_axi_Output_r_ARLEN),
    .ARSIZE(m_axi_Output_r_ARSIZE),
    .ARBURST(m_axi_Output_r_ARBURST),
    .ARLOCK(m_axi_Output_r_ARLOCK),
    .ARCACHE(m_axi_Output_r_ARCACHE),
    .ARPROT(m_axi_Output_r_ARPROT),
    .ARQOS(m_axi_Output_r_ARQOS),
    .ARREGION(m_axi_Output_r_ARREGION),
    .ARUSER(m_axi_Output_r_ARUSER),
    .RVALID(m_axi_Output_r_RVALID),
    .RREADY(m_axi_Output_r_RREADY),
    .RDATA(m_axi_Output_r_RDATA),
    .RLAST(m_axi_Output_r_RLAST),
    .RID(m_axi_Output_r_RID),
    .RUSER(m_axi_Output_r_RUSER),
    .RRESP(m_axi_Output_r_RRESP),
    .BVALID(m_axi_Output_r_BVALID),
    .BREADY(m_axi_Output_r_BREADY),
    .BRESP(m_axi_Output_r_BRESP),
    .BID(m_axi_Output_r_BID),
    .BUSER(m_axi_Output_r_BUSER),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .I_ARVALID(1'b0),
    .I_ARREADY(Output_r_ARREADY),
    .I_ARADDR(32'd0),
    .I_ARID(1'd0),
    .I_ARLEN(32'd0),
    .I_ARSIZE(3'd0),
    .I_ARLOCK(2'd0),
    .I_ARCACHE(4'd0),
    .I_ARQOS(4'd0),
    .I_ARPROT(3'd0),
    .I_ARUSER(1'd0),
    .I_ARBURST(2'd0),
    .I_ARREGION(4'd0),
    .I_RVALID(Output_r_RVALID),
    .I_RREADY(1'b0),
    .I_RDATA(Output_r_RDATA),
    .I_RID(Output_r_RID),
    .I_RUSER(Output_r_RUSER),
    .I_RRESP(Output_r_RRESP),
    .I_RLAST(Output_r_RLAST),
    .I_AWVALID(Output_r_AWVALID),
    .I_AWREADY(Output_r_AWREADY),
    .I_AWADDR(Output_r_AWADDR),
    .I_AWID(Output_r_AWID),
    .I_AWLEN(Output_r_AWLEN),
    .I_AWSIZE(Output_r_AWSIZE),
    .I_AWLOCK(Output_r_AWLOCK),
    .I_AWCACHE(Output_r_AWCACHE),
    .I_AWQOS(Output_r_AWQOS),
    .I_AWPROT(Output_r_AWPROT),
    .I_AWUSER(Output_r_AWUSER),
    .I_AWBURST(Output_r_AWBURST),
    .I_AWREGION(Output_r_AWREGION),
    .I_WVALID(Output_r_WVALID),
    .I_WREADY(Output_r_WREADY),
    .I_WDATA(Output_r_WDATA),
    .I_WID(Output_r_WID),
    .I_WUSER(Output_r_WUSER),
    .I_WLAST(Output_r_WLAST),
    .I_WSTRB(Output_r_WSTRB),
    .I_BVALID(Output_r_BVALID),
    .I_BREADY(Output_r_BREADY),
    .I_BRESP(Output_r_BRESP),
    .I_BID(Output_r_BID),
    .I_BUSER(Output_r_BUSER)
);

detection_acc_Weight_m_axi #(
    .CONSERVATIVE( 0 ),
    .USER_DW( 32 ),
    .USER_AW( 32 ),
    .USER_MAXREQS( 5 ),
    .NUM_READ_OUTSTANDING( 16 ),
    .NUM_WRITE_OUTSTANDING( 16 ),
    .MAX_READ_BURST_LENGTH( 16 ),
    .MAX_WRITE_BURST_LENGTH( 16 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_WEIGHT_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_WEIGHT_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_WEIGHT_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_WEIGHT_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_WEIGHT_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_WEIGHT_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_WEIGHT_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_WEIGHT_BUSER_WIDTH ),
    .C_USER_VALUE( C_M_AXI_WEIGHT_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_WEIGHT_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_WEIGHT_CACHE_VALUE ))
detection_acc_Weight_m_axi_U(
    .AWVALID(m_axi_Weight_AWVALID),
    .AWREADY(m_axi_Weight_AWREADY),
    .AWADDR(m_axi_Weight_AWADDR),
    .AWID(m_axi_Weight_AWID),
    .AWLEN(m_axi_Weight_AWLEN),
    .AWSIZE(m_axi_Weight_AWSIZE),
    .AWBURST(m_axi_Weight_AWBURST),
    .AWLOCK(m_axi_Weight_AWLOCK),
    .AWCACHE(m_axi_Weight_AWCACHE),
    .AWPROT(m_axi_Weight_AWPROT),
    .AWQOS(m_axi_Weight_AWQOS),
    .AWREGION(m_axi_Weight_AWREGION),
    .AWUSER(m_axi_Weight_AWUSER),
    .WVALID(m_axi_Weight_WVALID),
    .WREADY(m_axi_Weight_WREADY),
    .WDATA(m_axi_Weight_WDATA),
    .WSTRB(m_axi_Weight_WSTRB),
    .WLAST(m_axi_Weight_WLAST),
    .WID(m_axi_Weight_WID),
    .WUSER(m_axi_Weight_WUSER),
    .ARVALID(m_axi_Weight_ARVALID),
    .ARREADY(m_axi_Weight_ARREADY),
    .ARADDR(m_axi_Weight_ARADDR),
    .ARID(m_axi_Weight_ARID),
    .ARLEN(m_axi_Weight_ARLEN),
    .ARSIZE(m_axi_Weight_ARSIZE),
    .ARBURST(m_axi_Weight_ARBURST),
    .ARLOCK(m_axi_Weight_ARLOCK),
    .ARCACHE(m_axi_Weight_ARCACHE),
    .ARPROT(m_axi_Weight_ARPROT),
    .ARQOS(m_axi_Weight_ARQOS),
    .ARREGION(m_axi_Weight_ARREGION),
    .ARUSER(m_axi_Weight_ARUSER),
    .RVALID(m_axi_Weight_RVALID),
    .RREADY(m_axi_Weight_RREADY),
    .RDATA(m_axi_Weight_RDATA),
    .RLAST(m_axi_Weight_RLAST),
    .RID(m_axi_Weight_RID),
    .RUSER(m_axi_Weight_RUSER),
    .RRESP(m_axi_Weight_RRESP),
    .BVALID(m_axi_Weight_BVALID),
    .BREADY(m_axi_Weight_BREADY),
    .BRESP(m_axi_Weight_BRESP),
    .BID(m_axi_Weight_BID),
    .BUSER(m_axi_Weight_BUSER),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .I_ARVALID(Weight_ARVALID),
    .I_ARREADY(Weight_ARREADY),
    .I_ARADDR(Weight_ARADDR),
    .I_ARID(Weight_ARID),
    .I_ARLEN(Weight_ARLEN),
    .I_ARSIZE(Weight_ARSIZE),
    .I_ARLOCK(Weight_ARLOCK),
    .I_ARCACHE(Weight_ARCACHE),
    .I_ARQOS(Weight_ARQOS),
    .I_ARPROT(Weight_ARPROT),
    .I_ARUSER(Weight_ARUSER),
    .I_ARBURST(Weight_ARBURST),
    .I_ARREGION(Weight_ARREGION),
    .I_RVALID(Weight_RVALID),
    .I_RREADY(Weight_RREADY),
    .I_RDATA(Weight_RDATA),
    .I_RID(Weight_RID),
    .I_RUSER(Weight_RUSER),
    .I_RRESP(Weight_RRESP),
    .I_RLAST(Weight_RLAST),
    .I_AWVALID(1'b0),
    .I_AWREADY(Weight_AWREADY),
    .I_AWADDR(32'd0),
    .I_AWID(1'd0),
    .I_AWLEN(32'd0),
    .I_AWSIZE(3'd0),
    .I_AWLOCK(2'd0),
    .I_AWCACHE(4'd0),
    .I_AWQOS(4'd0),
    .I_AWPROT(3'd0),
    .I_AWUSER(1'd0),
    .I_AWBURST(2'd0),
    .I_AWREGION(4'd0),
    .I_WVALID(1'b0),
    .I_WREADY(Weight_WREADY),
    .I_WDATA(32'd0),
    .I_WID(1'd0),
    .I_WUSER(1'd0),
    .I_WLAST(1'b0),
    .I_WSTRB(4'd0),
    .I_BVALID(Weight_BVALID),
    .I_BREADY(1'b0),
    .I_BRESP(Weight_BRESP),
    .I_BID(Weight_BID),
    .I_BUSER(Weight_BUSER)
);

detection_acc_Beta_m_axi #(
    .CONSERVATIVE( 0 ),
    .USER_DW( 32 ),
    .USER_AW( 32 ),
    .USER_MAXREQS( 5 ),
    .NUM_READ_OUTSTANDING( 16 ),
    .NUM_WRITE_OUTSTANDING( 16 ),
    .MAX_READ_BURST_LENGTH( 16 ),
    .MAX_WRITE_BURST_LENGTH( 16 ),
    .C_M_AXI_ID_WIDTH( C_M_AXI_BETA_ID_WIDTH ),
    .C_M_AXI_ADDR_WIDTH( C_M_AXI_BETA_ADDR_WIDTH ),
    .C_M_AXI_DATA_WIDTH( C_M_AXI_BETA_DATA_WIDTH ),
    .C_M_AXI_AWUSER_WIDTH( C_M_AXI_BETA_AWUSER_WIDTH ),
    .C_M_AXI_ARUSER_WIDTH( C_M_AXI_BETA_ARUSER_WIDTH ),
    .C_M_AXI_WUSER_WIDTH( C_M_AXI_BETA_WUSER_WIDTH ),
    .C_M_AXI_RUSER_WIDTH( C_M_AXI_BETA_RUSER_WIDTH ),
    .C_M_AXI_BUSER_WIDTH( C_M_AXI_BETA_BUSER_WIDTH ),
    .C_USER_VALUE( C_M_AXI_BETA_USER_VALUE ),
    .C_PROT_VALUE( C_M_AXI_BETA_PROT_VALUE ),
    .C_CACHE_VALUE( C_M_AXI_BETA_CACHE_VALUE ))
detection_acc_Beta_m_axi_U(
    .AWVALID(m_axi_Beta_AWVALID),
    .AWREADY(m_axi_Beta_AWREADY),
    .AWADDR(m_axi_Beta_AWADDR),
    .AWID(m_axi_Beta_AWID),
    .AWLEN(m_axi_Beta_AWLEN),
    .AWSIZE(m_axi_Beta_AWSIZE),
    .AWBURST(m_axi_Beta_AWBURST),
    .AWLOCK(m_axi_Beta_AWLOCK),
    .AWCACHE(m_axi_Beta_AWCACHE),
    .AWPROT(m_axi_Beta_AWPROT),
    .AWQOS(m_axi_Beta_AWQOS),
    .AWREGION(m_axi_Beta_AWREGION),
    .AWUSER(m_axi_Beta_AWUSER),
    .WVALID(m_axi_Beta_WVALID),
    .WREADY(m_axi_Beta_WREADY),
    .WDATA(m_axi_Beta_WDATA),
    .WSTRB(m_axi_Beta_WSTRB),
    .WLAST(m_axi_Beta_WLAST),
    .WID(m_axi_Beta_WID),
    .WUSER(m_axi_Beta_WUSER),
    .ARVALID(m_axi_Beta_ARVALID),
    .ARREADY(m_axi_Beta_ARREADY),
    .ARADDR(m_axi_Beta_ARADDR),
    .ARID(m_axi_Beta_ARID),
    .ARLEN(m_axi_Beta_ARLEN),
    .ARSIZE(m_axi_Beta_ARSIZE),
    .ARBURST(m_axi_Beta_ARBURST),
    .ARLOCK(m_axi_Beta_ARLOCK),
    .ARCACHE(m_axi_Beta_ARCACHE),
    .ARPROT(m_axi_Beta_ARPROT),
    .ARQOS(m_axi_Beta_ARQOS),
    .ARREGION(m_axi_Beta_ARREGION),
    .ARUSER(m_axi_Beta_ARUSER),
    .RVALID(m_axi_Beta_RVALID),
    .RREADY(m_axi_Beta_RREADY),
    .RDATA(m_axi_Beta_RDATA),
    .RLAST(m_axi_Beta_RLAST),
    .RID(m_axi_Beta_RID),
    .RUSER(m_axi_Beta_RUSER),
    .RRESP(m_axi_Beta_RRESP),
    .BVALID(m_axi_Beta_BVALID),
    .BREADY(m_axi_Beta_BREADY),
    .BRESP(m_axi_Beta_BRESP),
    .BID(m_axi_Beta_BID),
    .BUSER(m_axi_Beta_BUSER),
    .ACLK(ap_clk),
    .ARESET(ap_rst_n_inv),
    .ACLK_EN(1'b1),
    .I_ARVALID(Beta_ARVALID),
    .I_ARREADY(Beta_ARREADY),
    .I_ARADDR(Beta_ARADDR),
    .I_ARID(1'd0),
    .I_ARLEN(Beta_ARLEN),
    .I_ARSIZE(3'd0),
    .I_ARLOCK(2'd0),
    .I_ARCACHE(4'd0),
    .I_ARQOS(4'd0),
    .I_ARPROT(3'd0),
    .I_ARUSER(1'd0),
    .I_ARBURST(2'd0),
    .I_ARREGION(4'd0),
    .I_RVALID(Beta_RVALID),
    .I_RREADY(Beta_RREADY),
    .I_RDATA(Beta_RDATA),
    .I_RID(Beta_RID),
    .I_RUSER(Beta_RUSER),
    .I_RRESP(Beta_RRESP),
    .I_RLAST(Beta_RLAST),
    .I_AWVALID(1'b0),
    .I_AWREADY(Beta_AWREADY),
    .I_AWADDR(32'd0),
    .I_AWID(1'd0),
    .I_AWLEN(32'd0),
    .I_AWSIZE(3'd0),
    .I_AWLOCK(2'd0),
    .I_AWCACHE(4'd0),
    .I_AWQOS(4'd0),
    .I_AWPROT(3'd0),
    .I_AWUSER(1'd0),
    .I_AWBURST(2'd0),
    .I_AWREGION(4'd0),
    .I_WVALID(1'b0),
    .I_WREADY(Beta_WREADY),
    .I_WDATA(32'd0),
    .I_WID(1'd0),
    .I_WUSER(1'd0),
    .I_WLAST(1'b0),
    .I_WSTRB(4'd0),
    .I_BVALID(Beta_BVALID),
    .I_BREADY(1'b0),
    .I_BRESP(Beta_BRESP),
    .I_BID(Beta_BID),
    .I_BUSER(Beta_BUSER)
);

pool grp_pool_fu_962(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_pool_fu_962_ap_start),
    .ap_done(grp_pool_fu_962_ap_done),
    .ap_idle(grp_pool_fu_962_ap_idle),
    .ap_ready(grp_pool_fu_962_ap_ready),
    .Input_0_address0(grp_pool_fu_962_Input_0_address0),
    .Input_0_ce0(grp_pool_fu_962_Input_0_ce0),
    .Input_0_q0(output_buffer_0_q0),
    .Input_0_address1(grp_pool_fu_962_Input_0_address1),
    .Input_0_ce1(grp_pool_fu_962_Input_0_ce1),
    .Input_0_we1(grp_pool_fu_962_Input_0_we1),
    .Input_0_d1(grp_pool_fu_962_Input_0_d1),
    .Input_0_q1(output_buffer_0_q1),
    .Input_1_address0(grp_pool_fu_962_Input_1_address0),
    .Input_1_ce0(grp_pool_fu_962_Input_1_ce0),
    .Input_1_q0(output_buffer_1_q0),
    .Input_1_address1(grp_pool_fu_962_Input_1_address1),
    .Input_1_ce1(grp_pool_fu_962_Input_1_ce1),
    .Input_1_we1(grp_pool_fu_962_Input_1_we1),
    .Input_1_d1(grp_pool_fu_962_Input_1_d1),
    .Input_1_q1(output_buffer_1_q1),
    .Input_2_address0(grp_pool_fu_962_Input_2_address0),
    .Input_2_ce0(grp_pool_fu_962_Input_2_ce0),
    .Input_2_q0(output_buffer_2_q0),
    .Input_2_address1(grp_pool_fu_962_Input_2_address1),
    .Input_2_ce1(grp_pool_fu_962_Input_2_ce1),
    .Input_2_we1(grp_pool_fu_962_Input_2_we1),
    .Input_2_d1(grp_pool_fu_962_Input_2_d1),
    .Input_2_q1(output_buffer_2_q1),
    .Input_3_address0(grp_pool_fu_962_Input_3_address0),
    .Input_3_ce0(grp_pool_fu_962_Input_3_ce0),
    .Input_3_q0(output_buffer_3_q0),
    .Input_3_address1(grp_pool_fu_962_Input_3_address1),
    .Input_3_ce1(grp_pool_fu_962_Input_3_ce1),
    .Input_3_we1(grp_pool_fu_962_Input_3_we1),
    .Input_3_d1(grp_pool_fu_962_Input_3_d1),
    .Input_3_q1(output_buffer_3_q1),
    .Input_4_address0(grp_pool_fu_962_Input_4_address0),
    .Input_4_ce0(grp_pool_fu_962_Input_4_ce0),
    .Input_4_q0(output_buffer_4_q0),
    .Input_4_address1(grp_pool_fu_962_Input_4_address1),
    .Input_4_ce1(grp_pool_fu_962_Input_4_ce1),
    .Input_4_we1(grp_pool_fu_962_Input_4_we1),
    .Input_4_d1(grp_pool_fu_962_Input_4_d1),
    .Input_4_q1(output_buffer_4_q1),
    .Input_5_address0(grp_pool_fu_962_Input_5_address0),
    .Input_5_ce0(grp_pool_fu_962_Input_5_ce0),
    .Input_5_q0(output_buffer_5_q0),
    .Input_5_address1(grp_pool_fu_962_Input_5_address1),
    .Input_5_ce1(grp_pool_fu_962_Input_5_ce1),
    .Input_5_we1(grp_pool_fu_962_Input_5_we1),
    .Input_5_d1(grp_pool_fu_962_Input_5_d1),
    .Input_5_q1(output_buffer_5_q1),
    .Input_6_address0(grp_pool_fu_962_Input_6_address0),
    .Input_6_ce0(grp_pool_fu_962_Input_6_ce0),
    .Input_6_q0(output_buffer_6_q0),
    .Input_6_address1(grp_pool_fu_962_Input_6_address1),
    .Input_6_ce1(grp_pool_fu_962_Input_6_ce1),
    .Input_6_we1(grp_pool_fu_962_Input_6_we1),
    .Input_6_d1(grp_pool_fu_962_Input_6_d1),
    .Input_6_q1(output_buffer_6_q1),
    .Input_7_address0(grp_pool_fu_962_Input_7_address0),
    .Input_7_ce0(grp_pool_fu_962_Input_7_ce0),
    .Input_7_q0(output_buffer_7_q0),
    .Input_7_address1(grp_pool_fu_962_Input_7_address1),
    .Input_7_ce1(grp_pool_fu_962_Input_7_ce1),
    .Input_7_we1(grp_pool_fu_962_Input_7_we1),
    .Input_7_d1(grp_pool_fu_962_Input_7_d1),
    .Input_7_q1(output_buffer_7_q1),
    .Input_8_address0(grp_pool_fu_962_Input_8_address0),
    .Input_8_ce0(grp_pool_fu_962_Input_8_ce0),
    .Input_8_q0(output_buffer_8_q0),
    .Input_8_address1(grp_pool_fu_962_Input_8_address1),
    .Input_8_ce1(grp_pool_fu_962_Input_8_ce1),
    .Input_8_we1(grp_pool_fu_962_Input_8_we1),
    .Input_8_d1(grp_pool_fu_962_Input_8_d1),
    .Input_8_q1(output_buffer_8_q1),
    .Input_9_address0(grp_pool_fu_962_Input_9_address0),
    .Input_9_ce0(grp_pool_fu_962_Input_9_ce0),
    .Input_9_q0(output_buffer_9_q0),
    .Input_9_address1(grp_pool_fu_962_Input_9_address1),
    .Input_9_ce1(grp_pool_fu_962_Input_9_ce1),
    .Input_9_we1(grp_pool_fu_962_Input_9_we1),
    .Input_9_d1(grp_pool_fu_962_Input_9_d1),
    .Input_9_q1(output_buffer_9_q1),
    .Input_10_address0(grp_pool_fu_962_Input_10_address0),
    .Input_10_ce0(grp_pool_fu_962_Input_10_ce0),
    .Input_10_q0(output_buffer_10_q0),
    .Input_10_address1(grp_pool_fu_962_Input_10_address1),
    .Input_10_ce1(grp_pool_fu_962_Input_10_ce1),
    .Input_10_we1(grp_pool_fu_962_Input_10_we1),
    .Input_10_d1(grp_pool_fu_962_Input_10_d1),
    .Input_10_q1(output_buffer_10_q1),
    .Input_11_address0(grp_pool_fu_962_Input_11_address0),
    .Input_11_ce0(grp_pool_fu_962_Input_11_ce0),
    .Input_11_q0(output_buffer_11_q0),
    .Input_11_address1(grp_pool_fu_962_Input_11_address1),
    .Input_11_ce1(grp_pool_fu_962_Input_11_ce1),
    .Input_11_we1(grp_pool_fu_962_Input_11_we1),
    .Input_11_d1(grp_pool_fu_962_Input_11_d1),
    .Input_11_q1(output_buffer_11_q1),
    .Input_12_address0(grp_pool_fu_962_Input_12_address0),
    .Input_12_ce0(grp_pool_fu_962_Input_12_ce0),
    .Input_12_q0(output_buffer_12_q0),
    .Input_12_address1(grp_pool_fu_962_Input_12_address1),
    .Input_12_ce1(grp_pool_fu_962_Input_12_ce1),
    .Input_12_we1(grp_pool_fu_962_Input_12_we1),
    .Input_12_d1(grp_pool_fu_962_Input_12_d1),
    .Input_12_q1(output_buffer_12_q1),
    .Input_13_address0(grp_pool_fu_962_Input_13_address0),
    .Input_13_ce0(grp_pool_fu_962_Input_13_ce0),
    .Input_13_q0(output_buffer_13_q0),
    .Input_13_address1(grp_pool_fu_962_Input_13_address1),
    .Input_13_ce1(grp_pool_fu_962_Input_13_ce1),
    .Input_13_we1(grp_pool_fu_962_Input_13_we1),
    .Input_13_d1(grp_pool_fu_962_Input_13_d1),
    .Input_13_q1(output_buffer_13_q1),
    .Input_14_address0(grp_pool_fu_962_Input_14_address0),
    .Input_14_ce0(grp_pool_fu_962_Input_14_ce0),
    .Input_14_q0(output_buffer_14_q0),
    .Input_14_address1(grp_pool_fu_962_Input_14_address1),
    .Input_14_ce1(grp_pool_fu_962_Input_14_ce1),
    .Input_14_we1(grp_pool_fu_962_Input_14_we1),
    .Input_14_d1(grp_pool_fu_962_Input_14_d1),
    .Input_14_q1(output_buffer_14_q1),
    .Input_15_address0(grp_pool_fu_962_Input_15_address0),
    .Input_15_ce0(grp_pool_fu_962_Input_15_ce0),
    .Input_15_q0(output_buffer_15_q0),
    .Input_15_address1(grp_pool_fu_962_Input_15_address1),
    .Input_15_ce1(grp_pool_fu_962_Input_15_ce1),
    .Input_15_we1(grp_pool_fu_962_Input_15_we1),
    .Input_15_d1(grp_pool_fu_962_Input_15_d1),
    .Input_15_q1(output_buffer_15_q1),
    .Input_16_address0(grp_pool_fu_962_Input_16_address0),
    .Input_16_ce0(grp_pool_fu_962_Input_16_ce0),
    .Input_16_q0(output_buffer_16_q0),
    .Input_16_address1(grp_pool_fu_962_Input_16_address1),
    .Input_16_ce1(grp_pool_fu_962_Input_16_ce1),
    .Input_16_we1(grp_pool_fu_962_Input_16_we1),
    .Input_16_d1(grp_pool_fu_962_Input_16_d1),
    .Input_16_q1(output_buffer_16_q1),
    .Input_17_address0(grp_pool_fu_962_Input_17_address0),
    .Input_17_ce0(grp_pool_fu_962_Input_17_ce0),
    .Input_17_q0(output_buffer_17_q0),
    .Input_17_address1(grp_pool_fu_962_Input_17_address1),
    .Input_17_ce1(grp_pool_fu_962_Input_17_ce1),
    .Input_17_we1(grp_pool_fu_962_Input_17_we1),
    .Input_17_d1(grp_pool_fu_962_Input_17_d1),
    .Input_17_q1(output_buffer_17_q1),
    .Input_18_address0(grp_pool_fu_962_Input_18_address0),
    .Input_18_ce0(grp_pool_fu_962_Input_18_ce0),
    .Input_18_q0(output_buffer_18_q0),
    .Input_18_address1(grp_pool_fu_962_Input_18_address1),
    .Input_18_ce1(grp_pool_fu_962_Input_18_ce1),
    .Input_18_we1(grp_pool_fu_962_Input_18_we1),
    .Input_18_d1(grp_pool_fu_962_Input_18_d1),
    .Input_18_q1(output_buffer_18_q1),
    .Input_19_address0(grp_pool_fu_962_Input_19_address0),
    .Input_19_ce0(grp_pool_fu_962_Input_19_ce0),
    .Input_19_q0(output_buffer_19_q0),
    .Input_19_address1(grp_pool_fu_962_Input_19_address1),
    .Input_19_ce1(grp_pool_fu_962_Input_19_ce1),
    .Input_19_we1(grp_pool_fu_962_Input_19_we1),
    .Input_19_d1(grp_pool_fu_962_Input_19_d1),
    .Input_19_q1(output_buffer_19_q1),
    .Input_20_address0(grp_pool_fu_962_Input_20_address0),
    .Input_20_ce0(grp_pool_fu_962_Input_20_ce0),
    .Input_20_q0(output_buffer_20_q0),
    .Input_20_address1(grp_pool_fu_962_Input_20_address1),
    .Input_20_ce1(grp_pool_fu_962_Input_20_ce1),
    .Input_20_we1(grp_pool_fu_962_Input_20_we1),
    .Input_20_d1(grp_pool_fu_962_Input_20_d1),
    .Input_20_q1(output_buffer_20_q1),
    .Input_21_address0(grp_pool_fu_962_Input_21_address0),
    .Input_21_ce0(grp_pool_fu_962_Input_21_ce0),
    .Input_21_q0(output_buffer_21_q0),
    .Input_21_address1(grp_pool_fu_962_Input_21_address1),
    .Input_21_ce1(grp_pool_fu_962_Input_21_ce1),
    .Input_21_we1(grp_pool_fu_962_Input_21_we1),
    .Input_21_d1(grp_pool_fu_962_Input_21_d1),
    .Input_21_q1(output_buffer_21_q1),
    .Input_22_address0(grp_pool_fu_962_Input_22_address0),
    .Input_22_ce0(grp_pool_fu_962_Input_22_ce0),
    .Input_22_q0(output_buffer_22_q0),
    .Input_22_address1(grp_pool_fu_962_Input_22_address1),
    .Input_22_ce1(grp_pool_fu_962_Input_22_ce1),
    .Input_22_we1(grp_pool_fu_962_Input_22_we1),
    .Input_22_d1(grp_pool_fu_962_Input_22_d1),
    .Input_22_q1(output_buffer_22_q1),
    .Input_23_address0(grp_pool_fu_962_Input_23_address0),
    .Input_23_ce0(grp_pool_fu_962_Input_23_ce0),
    .Input_23_q0(output_buffer_23_q0),
    .Input_23_address1(grp_pool_fu_962_Input_23_address1),
    .Input_23_ce1(grp_pool_fu_962_Input_23_ce1),
    .Input_23_we1(grp_pool_fu_962_Input_23_we1),
    .Input_23_d1(grp_pool_fu_962_Input_23_d1),
    .Input_23_q1(output_buffer_23_q1),
    .Input_24_address0(grp_pool_fu_962_Input_24_address0),
    .Input_24_ce0(grp_pool_fu_962_Input_24_ce0),
    .Input_24_q0(output_buffer_24_q0),
    .Input_24_address1(grp_pool_fu_962_Input_24_address1),
    .Input_24_ce1(grp_pool_fu_962_Input_24_ce1),
    .Input_24_we1(grp_pool_fu_962_Input_24_we1),
    .Input_24_d1(grp_pool_fu_962_Input_24_d1),
    .Input_24_q1(output_buffer_24_q1),
    .Input_25_address0(grp_pool_fu_962_Input_25_address0),
    .Input_25_ce0(grp_pool_fu_962_Input_25_ce0),
    .Input_25_q0(output_buffer_25_q0),
    .Input_25_address1(grp_pool_fu_962_Input_25_address1),
    .Input_25_ce1(grp_pool_fu_962_Input_25_ce1),
    .Input_25_we1(grp_pool_fu_962_Input_25_we1),
    .Input_25_d1(grp_pool_fu_962_Input_25_d1),
    .Input_25_q1(output_buffer_25_q1),
    .Input_26_address0(grp_pool_fu_962_Input_26_address0),
    .Input_26_ce0(grp_pool_fu_962_Input_26_ce0),
    .Input_26_q0(output_buffer_26_q0),
    .Input_26_address1(grp_pool_fu_962_Input_26_address1),
    .Input_26_ce1(grp_pool_fu_962_Input_26_ce1),
    .Input_26_we1(grp_pool_fu_962_Input_26_we1),
    .Input_26_d1(grp_pool_fu_962_Input_26_d1),
    .Input_26_q1(output_buffer_26_q1),
    .Input_27_address0(grp_pool_fu_962_Input_27_address0),
    .Input_27_ce0(grp_pool_fu_962_Input_27_ce0),
    .Input_27_q0(output_buffer_27_q0),
    .Input_27_address1(grp_pool_fu_962_Input_27_address1),
    .Input_27_ce1(grp_pool_fu_962_Input_27_ce1),
    .Input_27_we1(grp_pool_fu_962_Input_27_we1),
    .Input_27_d1(grp_pool_fu_962_Input_27_d1),
    .Input_27_q1(output_buffer_27_q1),
    .Input_28_address0(grp_pool_fu_962_Input_28_address0),
    .Input_28_ce0(grp_pool_fu_962_Input_28_ce0),
    .Input_28_q0(output_buffer_28_q0),
    .Input_28_address1(grp_pool_fu_962_Input_28_address1),
    .Input_28_ce1(grp_pool_fu_962_Input_28_ce1),
    .Input_28_we1(grp_pool_fu_962_Input_28_we1),
    .Input_28_d1(grp_pool_fu_962_Input_28_d1),
    .Input_28_q1(output_buffer_28_q1),
    .Input_29_address0(grp_pool_fu_962_Input_29_address0),
    .Input_29_ce0(grp_pool_fu_962_Input_29_ce0),
    .Input_29_q0(output_buffer_29_q0),
    .Input_29_address1(grp_pool_fu_962_Input_29_address1),
    .Input_29_ce1(grp_pool_fu_962_Input_29_ce1),
    .Input_29_we1(grp_pool_fu_962_Input_29_we1),
    .Input_29_d1(grp_pool_fu_962_Input_29_d1),
    .Input_29_q1(output_buffer_29_q1),
    .Input_30_address0(grp_pool_fu_962_Input_30_address0),
    .Input_30_ce0(grp_pool_fu_962_Input_30_ce0),
    .Input_30_q0(output_buffer_30_q0),
    .Input_30_address1(grp_pool_fu_962_Input_30_address1),
    .Input_30_ce1(grp_pool_fu_962_Input_30_ce1),
    .Input_30_we1(grp_pool_fu_962_Input_30_we1),
    .Input_30_d1(grp_pool_fu_962_Input_30_d1),
    .Input_30_q1(output_buffer_30_q1),
    .Input_31_address0(grp_pool_fu_962_Input_31_address0),
    .Input_31_ce0(grp_pool_fu_962_Input_31_ce0),
    .Input_31_q0(output_buffer_31_q0),
    .Input_31_address1(grp_pool_fu_962_Input_31_address1),
    .Input_31_ce1(grp_pool_fu_962_Input_31_ce1),
    .Input_31_we1(grp_pool_fu_962_Input_31_we1),
    .Input_31_d1(grp_pool_fu_962_Input_31_d1),
    .Input_31_q1(output_buffer_31_q1),
    .TR(tmp_72_reg_2576),
    .TC(tmp_73_reg_2581),
    .enable(grp_pool_fu_962_enable)
);

conv grp_conv_fu_1033(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_conv_fu_1033_ap_start),
    .ap_done(grp_conv_fu_1033_ap_done),
    .ap_idle(grp_conv_fu_1033_ap_idle),
    .ap_ready(grp_conv_fu_1033_ap_ready),
    .output_buffer_0_address0(grp_conv_fu_1033_output_buffer_0_address0),
    .output_buffer_0_ce0(grp_conv_fu_1033_output_buffer_0_ce0),
    .output_buffer_0_we0(grp_conv_fu_1033_output_buffer_0_we0),
    .output_buffer_0_d0(grp_conv_fu_1033_output_buffer_0_d0),
    .output_buffer_0_q0(output_buffer_0_q0),
    .output_buffer_1_address0(grp_conv_fu_1033_output_buffer_1_address0),
    .output_buffer_1_ce0(grp_conv_fu_1033_output_buffer_1_ce0),
    .output_buffer_1_we0(grp_conv_fu_1033_output_buffer_1_we0),
    .output_buffer_1_d0(grp_conv_fu_1033_output_buffer_1_d0),
    .output_buffer_1_q0(output_buffer_1_q0),
    .output_buffer_2_address0(grp_conv_fu_1033_output_buffer_2_address0),
    .output_buffer_2_ce0(grp_conv_fu_1033_output_buffer_2_ce0),
    .output_buffer_2_we0(grp_conv_fu_1033_output_buffer_2_we0),
    .output_buffer_2_d0(grp_conv_fu_1033_output_buffer_2_d0),
    .output_buffer_2_q0(output_buffer_2_q0),
    .output_buffer_3_address0(grp_conv_fu_1033_output_buffer_3_address0),
    .output_buffer_3_ce0(grp_conv_fu_1033_output_buffer_3_ce0),
    .output_buffer_3_we0(grp_conv_fu_1033_output_buffer_3_we0),
    .output_buffer_3_d0(grp_conv_fu_1033_output_buffer_3_d0),
    .output_buffer_3_q0(output_buffer_3_q0),
    .output_buffer_4_address0(grp_conv_fu_1033_output_buffer_4_address0),
    .output_buffer_4_ce0(grp_conv_fu_1033_output_buffer_4_ce0),
    .output_buffer_4_we0(grp_conv_fu_1033_output_buffer_4_we0),
    .output_buffer_4_d0(grp_conv_fu_1033_output_buffer_4_d0),
    .output_buffer_4_q0(output_buffer_4_q0),
    .output_buffer_5_address0(grp_conv_fu_1033_output_buffer_5_address0),
    .output_buffer_5_ce0(grp_conv_fu_1033_output_buffer_5_ce0),
    .output_buffer_5_we0(grp_conv_fu_1033_output_buffer_5_we0),
    .output_buffer_5_d0(grp_conv_fu_1033_output_buffer_5_d0),
    .output_buffer_5_q0(output_buffer_5_q0),
    .output_buffer_6_address0(grp_conv_fu_1033_output_buffer_6_address0),
    .output_buffer_6_ce0(grp_conv_fu_1033_output_buffer_6_ce0),
    .output_buffer_6_we0(grp_conv_fu_1033_output_buffer_6_we0),
    .output_buffer_6_d0(grp_conv_fu_1033_output_buffer_6_d0),
    .output_buffer_6_q0(output_buffer_6_q0),
    .output_buffer_7_address0(grp_conv_fu_1033_output_buffer_7_address0),
    .output_buffer_7_ce0(grp_conv_fu_1033_output_buffer_7_ce0),
    .output_buffer_7_we0(grp_conv_fu_1033_output_buffer_7_we0),
    .output_buffer_7_d0(grp_conv_fu_1033_output_buffer_7_d0),
    .output_buffer_7_q0(output_buffer_7_q0),
    .output_buffer_8_address0(grp_conv_fu_1033_output_buffer_8_address0),
    .output_buffer_8_ce0(grp_conv_fu_1033_output_buffer_8_ce0),
    .output_buffer_8_we0(grp_conv_fu_1033_output_buffer_8_we0),
    .output_buffer_8_d0(grp_conv_fu_1033_output_buffer_8_d0),
    .output_buffer_8_q0(output_buffer_8_q0),
    .output_buffer_9_address0(grp_conv_fu_1033_output_buffer_9_address0),
    .output_buffer_9_ce0(grp_conv_fu_1033_output_buffer_9_ce0),
    .output_buffer_9_we0(grp_conv_fu_1033_output_buffer_9_we0),
    .output_buffer_9_d0(grp_conv_fu_1033_output_buffer_9_d0),
    .output_buffer_9_q0(output_buffer_9_q0),
    .output_buffer_10_address0(grp_conv_fu_1033_output_buffer_10_address0),
    .output_buffer_10_ce0(grp_conv_fu_1033_output_buffer_10_ce0),
    .output_buffer_10_we0(grp_conv_fu_1033_output_buffer_10_we0),
    .output_buffer_10_d0(grp_conv_fu_1033_output_buffer_10_d0),
    .output_buffer_10_q0(output_buffer_10_q0),
    .output_buffer_11_address0(grp_conv_fu_1033_output_buffer_11_address0),
    .output_buffer_11_ce0(grp_conv_fu_1033_output_buffer_11_ce0),
    .output_buffer_11_we0(grp_conv_fu_1033_output_buffer_11_we0),
    .output_buffer_11_d0(grp_conv_fu_1033_output_buffer_11_d0),
    .output_buffer_11_q0(output_buffer_11_q0),
    .output_buffer_12_address0(grp_conv_fu_1033_output_buffer_12_address0),
    .output_buffer_12_ce0(grp_conv_fu_1033_output_buffer_12_ce0),
    .output_buffer_12_we0(grp_conv_fu_1033_output_buffer_12_we0),
    .output_buffer_12_d0(grp_conv_fu_1033_output_buffer_12_d0),
    .output_buffer_12_q0(output_buffer_12_q0),
    .output_buffer_13_address0(grp_conv_fu_1033_output_buffer_13_address0),
    .output_buffer_13_ce0(grp_conv_fu_1033_output_buffer_13_ce0),
    .output_buffer_13_we0(grp_conv_fu_1033_output_buffer_13_we0),
    .output_buffer_13_d0(grp_conv_fu_1033_output_buffer_13_d0),
    .output_buffer_13_q0(output_buffer_13_q0),
    .output_buffer_14_address0(grp_conv_fu_1033_output_buffer_14_address0),
    .output_buffer_14_ce0(grp_conv_fu_1033_output_buffer_14_ce0),
    .output_buffer_14_we0(grp_conv_fu_1033_output_buffer_14_we0),
    .output_buffer_14_d0(grp_conv_fu_1033_output_buffer_14_d0),
    .output_buffer_14_q0(output_buffer_14_q0),
    .output_buffer_15_address0(grp_conv_fu_1033_output_buffer_15_address0),
    .output_buffer_15_ce0(grp_conv_fu_1033_output_buffer_15_ce0),
    .output_buffer_15_we0(grp_conv_fu_1033_output_buffer_15_we0),
    .output_buffer_15_d0(grp_conv_fu_1033_output_buffer_15_d0),
    .output_buffer_15_q0(output_buffer_15_q0),
    .output_buffer_16_address0(grp_conv_fu_1033_output_buffer_16_address0),
    .output_buffer_16_ce0(grp_conv_fu_1033_output_buffer_16_ce0),
    .output_buffer_16_we0(grp_conv_fu_1033_output_buffer_16_we0),
    .output_buffer_16_d0(grp_conv_fu_1033_output_buffer_16_d0),
    .output_buffer_16_q0(output_buffer_16_q0),
    .output_buffer_17_address0(grp_conv_fu_1033_output_buffer_17_address0),
    .output_buffer_17_ce0(grp_conv_fu_1033_output_buffer_17_ce0),
    .output_buffer_17_we0(grp_conv_fu_1033_output_buffer_17_we0),
    .output_buffer_17_d0(grp_conv_fu_1033_output_buffer_17_d0),
    .output_buffer_17_q0(output_buffer_17_q0),
    .output_buffer_18_address0(grp_conv_fu_1033_output_buffer_18_address0),
    .output_buffer_18_ce0(grp_conv_fu_1033_output_buffer_18_ce0),
    .output_buffer_18_we0(grp_conv_fu_1033_output_buffer_18_we0),
    .output_buffer_18_d0(grp_conv_fu_1033_output_buffer_18_d0),
    .output_buffer_18_q0(output_buffer_18_q0),
    .output_buffer_19_address0(grp_conv_fu_1033_output_buffer_19_address0),
    .output_buffer_19_ce0(grp_conv_fu_1033_output_buffer_19_ce0),
    .output_buffer_19_we0(grp_conv_fu_1033_output_buffer_19_we0),
    .output_buffer_19_d0(grp_conv_fu_1033_output_buffer_19_d0),
    .output_buffer_19_q0(output_buffer_19_q0),
    .output_buffer_20_address0(grp_conv_fu_1033_output_buffer_20_address0),
    .output_buffer_20_ce0(grp_conv_fu_1033_output_buffer_20_ce0),
    .output_buffer_20_we0(grp_conv_fu_1033_output_buffer_20_we0),
    .output_buffer_20_d0(grp_conv_fu_1033_output_buffer_20_d0),
    .output_buffer_20_q0(output_buffer_20_q0),
    .output_buffer_21_address0(grp_conv_fu_1033_output_buffer_21_address0),
    .output_buffer_21_ce0(grp_conv_fu_1033_output_buffer_21_ce0),
    .output_buffer_21_we0(grp_conv_fu_1033_output_buffer_21_we0),
    .output_buffer_21_d0(grp_conv_fu_1033_output_buffer_21_d0),
    .output_buffer_21_q0(output_buffer_21_q0),
    .output_buffer_22_address0(grp_conv_fu_1033_output_buffer_22_address0),
    .output_buffer_22_ce0(grp_conv_fu_1033_output_buffer_22_ce0),
    .output_buffer_22_we0(grp_conv_fu_1033_output_buffer_22_we0),
    .output_buffer_22_d0(grp_conv_fu_1033_output_buffer_22_d0),
    .output_buffer_22_q0(output_buffer_22_q0),
    .output_buffer_23_address0(grp_conv_fu_1033_output_buffer_23_address0),
    .output_buffer_23_ce0(grp_conv_fu_1033_output_buffer_23_ce0),
    .output_buffer_23_we0(grp_conv_fu_1033_output_buffer_23_we0),
    .output_buffer_23_d0(grp_conv_fu_1033_output_buffer_23_d0),
    .output_buffer_23_q0(output_buffer_23_q0),
    .output_buffer_24_address0(grp_conv_fu_1033_output_buffer_24_address0),
    .output_buffer_24_ce0(grp_conv_fu_1033_output_buffer_24_ce0),
    .output_buffer_24_we0(grp_conv_fu_1033_output_buffer_24_we0),
    .output_buffer_24_d0(grp_conv_fu_1033_output_buffer_24_d0),
    .output_buffer_24_q0(output_buffer_24_q0),
    .output_buffer_25_address0(grp_conv_fu_1033_output_buffer_25_address0),
    .output_buffer_25_ce0(grp_conv_fu_1033_output_buffer_25_ce0),
    .output_buffer_25_we0(grp_conv_fu_1033_output_buffer_25_we0),
    .output_buffer_25_d0(grp_conv_fu_1033_output_buffer_25_d0),
    .output_buffer_25_q0(output_buffer_25_q0),
    .output_buffer_26_address0(grp_conv_fu_1033_output_buffer_26_address0),
    .output_buffer_26_ce0(grp_conv_fu_1033_output_buffer_26_ce0),
    .output_buffer_26_we0(grp_conv_fu_1033_output_buffer_26_we0),
    .output_buffer_26_d0(grp_conv_fu_1033_output_buffer_26_d0),
    .output_buffer_26_q0(output_buffer_26_q0),
    .output_buffer_27_address0(grp_conv_fu_1033_output_buffer_27_address0),
    .output_buffer_27_ce0(grp_conv_fu_1033_output_buffer_27_ce0),
    .output_buffer_27_we0(grp_conv_fu_1033_output_buffer_27_we0),
    .output_buffer_27_d0(grp_conv_fu_1033_output_buffer_27_d0),
    .output_buffer_27_q0(output_buffer_27_q0),
    .output_buffer_28_address0(grp_conv_fu_1033_output_buffer_28_address0),
    .output_buffer_28_ce0(grp_conv_fu_1033_output_buffer_28_ce0),
    .output_buffer_28_we0(grp_conv_fu_1033_output_buffer_28_we0),
    .output_buffer_28_d0(grp_conv_fu_1033_output_buffer_28_d0),
    .output_buffer_28_q0(output_buffer_28_q0),
    .output_buffer_29_address0(grp_conv_fu_1033_output_buffer_29_address0),
    .output_buffer_29_ce0(grp_conv_fu_1033_output_buffer_29_ce0),
    .output_buffer_29_we0(grp_conv_fu_1033_output_buffer_29_we0),
    .output_buffer_29_d0(grp_conv_fu_1033_output_buffer_29_d0),
    .output_buffer_29_q0(output_buffer_29_q0),
    .output_buffer_30_address0(grp_conv_fu_1033_output_buffer_30_address0),
    .output_buffer_30_ce0(grp_conv_fu_1033_output_buffer_30_ce0),
    .output_buffer_30_we0(grp_conv_fu_1033_output_buffer_30_we0),
    .output_buffer_30_d0(grp_conv_fu_1033_output_buffer_30_d0),
    .output_buffer_30_q0(output_buffer_30_q0),
    .output_buffer_31_address0(grp_conv_fu_1033_output_buffer_31_address0),
    .output_buffer_31_ce0(grp_conv_fu_1033_output_buffer_31_ce0),
    .output_buffer_31_we0(grp_conv_fu_1033_output_buffer_31_we0),
    .output_buffer_31_d0(grp_conv_fu_1033_output_buffer_31_d0),
    .output_buffer_31_q0(output_buffer_31_q0),
    .beta_buffer_address0(grp_conv_fu_1033_beta_buffer_address0),
    .beta_buffer_ce0(grp_conv_fu_1033_beta_buffer_ce0),
    .beta_buffer_q0(beta_buffer_q0),
    .TM_offset(phi_mul2_reg_927),
    .TN(TN_read_reg_2439),
    .TR(TR_read_reg_2426),
    .TC(TC_read_reg_2413),
    .enable(grp_conv_fu_1033_enable),
    .n(n1_reg_939),
    .weight_buffer_V_0_25_address0(grp_conv_fu_1033_weight_buffer_V_0_25_address0),
    .weight_buffer_V_0_25_ce0(grp_conv_fu_1033_weight_buffer_V_0_25_ce0),
    .weight_buffer_V_0_25_q0(weight_buffer_V_0_25_q0),
    .weight_buffer_V_0_1_address0(grp_conv_fu_1033_weight_buffer_V_0_1_address0),
    .weight_buffer_V_0_1_ce0(grp_conv_fu_1033_weight_buffer_V_0_1_ce0),
    .weight_buffer_V_0_1_q0(weight_buffer_V_0_1_q0),
    .weight_buffer_V_0_9_address0(grp_conv_fu_1033_weight_buffer_V_0_9_address0),
    .weight_buffer_V_0_9_ce0(grp_conv_fu_1033_weight_buffer_V_0_9_ce0),
    .weight_buffer_V_0_9_q0(weight_buffer_V_0_9_q0),
    .weight_buffer_V_0_17_address0(grp_conv_fu_1033_weight_buffer_V_0_17_address0),
    .weight_buffer_V_0_17_ce0(grp_conv_fu_1033_weight_buffer_V_0_17_ce0),
    .weight_buffer_V_0_17_q0(weight_buffer_V_0_17_q0),
    .weight_buffer_V_1_25_address0(grp_conv_fu_1033_weight_buffer_V_1_25_address0),
    .weight_buffer_V_1_25_ce0(grp_conv_fu_1033_weight_buffer_V_1_25_ce0),
    .weight_buffer_V_1_25_q0(weight_buffer_V_1_25_q0),
    .weight_buffer_V_1_1_address0(grp_conv_fu_1033_weight_buffer_V_1_1_address0),
    .weight_buffer_V_1_1_ce0(grp_conv_fu_1033_weight_buffer_V_1_1_ce0),
    .weight_buffer_V_1_1_q0(weight_buffer_V_1_1_q0),
    .weight_buffer_V_1_9_address0(grp_conv_fu_1033_weight_buffer_V_1_9_address0),
    .weight_buffer_V_1_9_ce0(grp_conv_fu_1033_weight_buffer_V_1_9_ce0),
    .weight_buffer_V_1_9_q0(weight_buffer_V_1_9_q0),
    .weight_buffer_V_1_17_address0(grp_conv_fu_1033_weight_buffer_V_1_17_address0),
    .weight_buffer_V_1_17_ce0(grp_conv_fu_1033_weight_buffer_V_1_17_ce0),
    .weight_buffer_V_1_17_q0(weight_buffer_V_1_17_q0),
    .weight_buffer_V_2_25_address0(grp_conv_fu_1033_weight_buffer_V_2_25_address0),
    .weight_buffer_V_2_25_ce0(grp_conv_fu_1033_weight_buffer_V_2_25_ce0),
    .weight_buffer_V_2_25_q0(weight_buffer_V_2_25_q0),
    .weight_buffer_V_2_1_address0(grp_conv_fu_1033_weight_buffer_V_2_1_address0),
    .weight_buffer_V_2_1_ce0(grp_conv_fu_1033_weight_buffer_V_2_1_ce0),
    .weight_buffer_V_2_1_q0(weight_buffer_V_2_1_q0),
    .weight_buffer_V_2_9_address0(grp_conv_fu_1033_weight_buffer_V_2_9_address0),
    .weight_buffer_V_2_9_ce0(grp_conv_fu_1033_weight_buffer_V_2_9_ce0),
    .weight_buffer_V_2_9_q0(weight_buffer_V_2_9_q0),
    .weight_buffer_V_2_17_address0(grp_conv_fu_1033_weight_buffer_V_2_17_address0),
    .weight_buffer_V_2_17_ce0(grp_conv_fu_1033_weight_buffer_V_2_17_ce0),
    .weight_buffer_V_2_17_q0(weight_buffer_V_2_17_q0),
    .weight_buffer_V_3_25_address0(grp_conv_fu_1033_weight_buffer_V_3_25_address0),
    .weight_buffer_V_3_25_ce0(grp_conv_fu_1033_weight_buffer_V_3_25_ce0),
    .weight_buffer_V_3_25_q0(weight_buffer_V_3_25_q0),
    .weight_buffer_V_3_1_address0(grp_conv_fu_1033_weight_buffer_V_3_1_address0),
    .weight_buffer_V_3_1_ce0(grp_conv_fu_1033_weight_buffer_V_3_1_ce0),
    .weight_buffer_V_3_1_q0(weight_buffer_V_3_1_q0),
    .weight_buffer_V_3_9_address0(grp_conv_fu_1033_weight_buffer_V_3_9_address0),
    .weight_buffer_V_3_9_ce0(grp_conv_fu_1033_weight_buffer_V_3_9_ce0),
    .weight_buffer_V_3_9_q0(weight_buffer_V_3_9_q0),
    .weight_buffer_V_3_17_address0(grp_conv_fu_1033_weight_buffer_V_3_17_address0),
    .weight_buffer_V_3_17_ce0(grp_conv_fu_1033_weight_buffer_V_3_17_ce0),
    .weight_buffer_V_3_17_q0(weight_buffer_V_3_17_q0),
    .weight_buffer_V_0_26_address0(grp_conv_fu_1033_weight_buffer_V_0_26_address0),
    .weight_buffer_V_0_26_ce0(grp_conv_fu_1033_weight_buffer_V_0_26_ce0),
    .weight_buffer_V_0_26_q0(weight_buffer_V_0_26_q0),
    .weight_buffer_V_0_2_address0(grp_conv_fu_1033_weight_buffer_V_0_2_address0),
    .weight_buffer_V_0_2_ce0(grp_conv_fu_1033_weight_buffer_V_0_2_ce0),
    .weight_buffer_V_0_2_q0(weight_buffer_V_0_2_q0),
    .weight_buffer_V_0_10_address0(grp_conv_fu_1033_weight_buffer_V_0_10_address0),
    .weight_buffer_V_0_10_ce0(grp_conv_fu_1033_weight_buffer_V_0_10_ce0),
    .weight_buffer_V_0_10_q0(weight_buffer_V_0_10_q0),
    .weight_buffer_V_0_18_address0(grp_conv_fu_1033_weight_buffer_V_0_18_address0),
    .weight_buffer_V_0_18_ce0(grp_conv_fu_1033_weight_buffer_V_0_18_ce0),
    .weight_buffer_V_0_18_q0(weight_buffer_V_0_18_q0),
    .weight_buffer_V_1_26_address0(grp_conv_fu_1033_weight_buffer_V_1_26_address0),
    .weight_buffer_V_1_26_ce0(grp_conv_fu_1033_weight_buffer_V_1_26_ce0),
    .weight_buffer_V_1_26_q0(weight_buffer_V_1_26_q0),
    .weight_buffer_V_1_2_address0(grp_conv_fu_1033_weight_buffer_V_1_2_address0),
    .weight_buffer_V_1_2_ce0(grp_conv_fu_1033_weight_buffer_V_1_2_ce0),
    .weight_buffer_V_1_2_q0(weight_buffer_V_1_2_q0),
    .weight_buffer_V_1_10_address0(grp_conv_fu_1033_weight_buffer_V_1_10_address0),
    .weight_buffer_V_1_10_ce0(grp_conv_fu_1033_weight_buffer_V_1_10_ce0),
    .weight_buffer_V_1_10_q0(weight_buffer_V_1_10_q0),
    .weight_buffer_V_1_18_address0(grp_conv_fu_1033_weight_buffer_V_1_18_address0),
    .weight_buffer_V_1_18_ce0(grp_conv_fu_1033_weight_buffer_V_1_18_ce0),
    .weight_buffer_V_1_18_q0(weight_buffer_V_1_18_q0),
    .weight_buffer_V_2_26_address0(grp_conv_fu_1033_weight_buffer_V_2_26_address0),
    .weight_buffer_V_2_26_ce0(grp_conv_fu_1033_weight_buffer_V_2_26_ce0),
    .weight_buffer_V_2_26_q0(weight_buffer_V_2_26_q0),
    .weight_buffer_V_2_2_address0(grp_conv_fu_1033_weight_buffer_V_2_2_address0),
    .weight_buffer_V_2_2_ce0(grp_conv_fu_1033_weight_buffer_V_2_2_ce0),
    .weight_buffer_V_2_2_q0(weight_buffer_V_2_2_q0),
    .weight_buffer_V_2_10_address0(grp_conv_fu_1033_weight_buffer_V_2_10_address0),
    .weight_buffer_V_2_10_ce0(grp_conv_fu_1033_weight_buffer_V_2_10_ce0),
    .weight_buffer_V_2_10_q0(weight_buffer_V_2_10_q0),
    .weight_buffer_V_2_18_address0(grp_conv_fu_1033_weight_buffer_V_2_18_address0),
    .weight_buffer_V_2_18_ce0(grp_conv_fu_1033_weight_buffer_V_2_18_ce0),
    .weight_buffer_V_2_18_q0(weight_buffer_V_2_18_q0),
    .weight_buffer_V_3_26_address0(grp_conv_fu_1033_weight_buffer_V_3_26_address0),
    .weight_buffer_V_3_26_ce0(grp_conv_fu_1033_weight_buffer_V_3_26_ce0),
    .weight_buffer_V_3_26_q0(weight_buffer_V_3_26_q0),
    .weight_buffer_V_3_2_address0(grp_conv_fu_1033_weight_buffer_V_3_2_address0),
    .weight_buffer_V_3_2_ce0(grp_conv_fu_1033_weight_buffer_V_3_2_ce0),
    .weight_buffer_V_3_2_q0(weight_buffer_V_3_2_q0),
    .weight_buffer_V_3_10_address0(grp_conv_fu_1033_weight_buffer_V_3_10_address0),
    .weight_buffer_V_3_10_ce0(grp_conv_fu_1033_weight_buffer_V_3_10_ce0),
    .weight_buffer_V_3_10_q0(weight_buffer_V_3_10_q0),
    .weight_buffer_V_3_18_address0(grp_conv_fu_1033_weight_buffer_V_3_18_address0),
    .weight_buffer_V_3_18_ce0(grp_conv_fu_1033_weight_buffer_V_3_18_ce0),
    .weight_buffer_V_3_18_q0(weight_buffer_V_3_18_q0),
    .weight_buffer_V_0_27_address0(grp_conv_fu_1033_weight_buffer_V_0_27_address0),
    .weight_buffer_V_0_27_ce0(grp_conv_fu_1033_weight_buffer_V_0_27_ce0),
    .weight_buffer_V_0_27_q0(weight_buffer_V_0_27_q0),
    .weight_buffer_V_0_3_address0(grp_conv_fu_1033_weight_buffer_V_0_3_address0),
    .weight_buffer_V_0_3_ce0(grp_conv_fu_1033_weight_buffer_V_0_3_ce0),
    .weight_buffer_V_0_3_q0(weight_buffer_V_0_3_q0),
    .weight_buffer_V_0_11_address0(grp_conv_fu_1033_weight_buffer_V_0_11_address0),
    .weight_buffer_V_0_11_ce0(grp_conv_fu_1033_weight_buffer_V_0_11_ce0),
    .weight_buffer_V_0_11_q0(weight_buffer_V_0_11_q0),
    .weight_buffer_V_0_19_address0(grp_conv_fu_1033_weight_buffer_V_0_19_address0),
    .weight_buffer_V_0_19_ce0(grp_conv_fu_1033_weight_buffer_V_0_19_ce0),
    .weight_buffer_V_0_19_q0(weight_buffer_V_0_19_q0),
    .weight_buffer_V_1_27_address0(grp_conv_fu_1033_weight_buffer_V_1_27_address0),
    .weight_buffer_V_1_27_ce0(grp_conv_fu_1033_weight_buffer_V_1_27_ce0),
    .weight_buffer_V_1_27_q0(weight_buffer_V_1_27_q0),
    .weight_buffer_V_1_3_address0(grp_conv_fu_1033_weight_buffer_V_1_3_address0),
    .weight_buffer_V_1_3_ce0(grp_conv_fu_1033_weight_buffer_V_1_3_ce0),
    .weight_buffer_V_1_3_q0(weight_buffer_V_1_3_q0),
    .weight_buffer_V_1_11_address0(grp_conv_fu_1033_weight_buffer_V_1_11_address0),
    .weight_buffer_V_1_11_ce0(grp_conv_fu_1033_weight_buffer_V_1_11_ce0),
    .weight_buffer_V_1_11_q0(weight_buffer_V_1_11_q0),
    .weight_buffer_V_1_19_address0(grp_conv_fu_1033_weight_buffer_V_1_19_address0),
    .weight_buffer_V_1_19_ce0(grp_conv_fu_1033_weight_buffer_V_1_19_ce0),
    .weight_buffer_V_1_19_q0(weight_buffer_V_1_19_q0),
    .weight_buffer_V_2_27_address0(grp_conv_fu_1033_weight_buffer_V_2_27_address0),
    .weight_buffer_V_2_27_ce0(grp_conv_fu_1033_weight_buffer_V_2_27_ce0),
    .weight_buffer_V_2_27_q0(weight_buffer_V_2_27_q0),
    .weight_buffer_V_2_3_address0(grp_conv_fu_1033_weight_buffer_V_2_3_address0),
    .weight_buffer_V_2_3_ce0(grp_conv_fu_1033_weight_buffer_V_2_3_ce0),
    .weight_buffer_V_2_3_q0(weight_buffer_V_2_3_q0),
    .weight_buffer_V_2_11_address0(grp_conv_fu_1033_weight_buffer_V_2_11_address0),
    .weight_buffer_V_2_11_ce0(grp_conv_fu_1033_weight_buffer_V_2_11_ce0),
    .weight_buffer_V_2_11_q0(weight_buffer_V_2_11_q0),
    .weight_buffer_V_2_19_address0(grp_conv_fu_1033_weight_buffer_V_2_19_address0),
    .weight_buffer_V_2_19_ce0(grp_conv_fu_1033_weight_buffer_V_2_19_ce0),
    .weight_buffer_V_2_19_q0(weight_buffer_V_2_19_q0),
    .weight_buffer_V_3_27_address0(grp_conv_fu_1033_weight_buffer_V_3_27_address0),
    .weight_buffer_V_3_27_ce0(grp_conv_fu_1033_weight_buffer_V_3_27_ce0),
    .weight_buffer_V_3_27_q0(weight_buffer_V_3_27_q0),
    .weight_buffer_V_3_3_address0(grp_conv_fu_1033_weight_buffer_V_3_3_address0),
    .weight_buffer_V_3_3_ce0(grp_conv_fu_1033_weight_buffer_V_3_3_ce0),
    .weight_buffer_V_3_3_q0(weight_buffer_V_3_3_q0),
    .weight_buffer_V_3_11_address0(grp_conv_fu_1033_weight_buffer_V_3_11_address0),
    .weight_buffer_V_3_11_ce0(grp_conv_fu_1033_weight_buffer_V_3_11_ce0),
    .weight_buffer_V_3_11_q0(weight_buffer_V_3_11_q0),
    .weight_buffer_V_3_19_address0(grp_conv_fu_1033_weight_buffer_V_3_19_address0),
    .weight_buffer_V_3_19_ce0(grp_conv_fu_1033_weight_buffer_V_3_19_ce0),
    .weight_buffer_V_3_19_q0(weight_buffer_V_3_19_q0),
    .weight_buffer_V_0_28_address0(grp_conv_fu_1033_weight_buffer_V_0_28_address0),
    .weight_buffer_V_0_28_ce0(grp_conv_fu_1033_weight_buffer_V_0_28_ce0),
    .weight_buffer_V_0_28_q0(weight_buffer_V_0_28_q0),
    .weight_buffer_V_0_4_address0(grp_conv_fu_1033_weight_buffer_V_0_4_address0),
    .weight_buffer_V_0_4_ce0(grp_conv_fu_1033_weight_buffer_V_0_4_ce0),
    .weight_buffer_V_0_4_q0(weight_buffer_V_0_4_q0),
    .weight_buffer_V_0_12_address0(grp_conv_fu_1033_weight_buffer_V_0_12_address0),
    .weight_buffer_V_0_12_ce0(grp_conv_fu_1033_weight_buffer_V_0_12_ce0),
    .weight_buffer_V_0_12_q0(weight_buffer_V_0_12_q0),
    .weight_buffer_V_0_20_address0(grp_conv_fu_1033_weight_buffer_V_0_20_address0),
    .weight_buffer_V_0_20_ce0(grp_conv_fu_1033_weight_buffer_V_0_20_ce0),
    .weight_buffer_V_0_20_q0(weight_buffer_V_0_20_q0),
    .weight_buffer_V_1_28_address0(grp_conv_fu_1033_weight_buffer_V_1_28_address0),
    .weight_buffer_V_1_28_ce0(grp_conv_fu_1033_weight_buffer_V_1_28_ce0),
    .weight_buffer_V_1_28_q0(weight_buffer_V_1_28_q0),
    .weight_buffer_V_1_4_address0(grp_conv_fu_1033_weight_buffer_V_1_4_address0),
    .weight_buffer_V_1_4_ce0(grp_conv_fu_1033_weight_buffer_V_1_4_ce0),
    .weight_buffer_V_1_4_q0(weight_buffer_V_1_4_q0),
    .weight_buffer_V_1_12_address0(grp_conv_fu_1033_weight_buffer_V_1_12_address0),
    .weight_buffer_V_1_12_ce0(grp_conv_fu_1033_weight_buffer_V_1_12_ce0),
    .weight_buffer_V_1_12_q0(weight_buffer_V_1_12_q0),
    .weight_buffer_V_1_20_address0(grp_conv_fu_1033_weight_buffer_V_1_20_address0),
    .weight_buffer_V_1_20_ce0(grp_conv_fu_1033_weight_buffer_V_1_20_ce0),
    .weight_buffer_V_1_20_q0(weight_buffer_V_1_20_q0),
    .weight_buffer_V_2_28_address0(grp_conv_fu_1033_weight_buffer_V_2_28_address0),
    .weight_buffer_V_2_28_ce0(grp_conv_fu_1033_weight_buffer_V_2_28_ce0),
    .weight_buffer_V_2_28_q0(weight_buffer_V_2_28_q0),
    .weight_buffer_V_2_4_address0(grp_conv_fu_1033_weight_buffer_V_2_4_address0),
    .weight_buffer_V_2_4_ce0(grp_conv_fu_1033_weight_buffer_V_2_4_ce0),
    .weight_buffer_V_2_4_q0(weight_buffer_V_2_4_q0),
    .weight_buffer_V_2_12_address0(grp_conv_fu_1033_weight_buffer_V_2_12_address0),
    .weight_buffer_V_2_12_ce0(grp_conv_fu_1033_weight_buffer_V_2_12_ce0),
    .weight_buffer_V_2_12_q0(weight_buffer_V_2_12_q0),
    .weight_buffer_V_2_20_address0(grp_conv_fu_1033_weight_buffer_V_2_20_address0),
    .weight_buffer_V_2_20_ce0(grp_conv_fu_1033_weight_buffer_V_2_20_ce0),
    .weight_buffer_V_2_20_q0(weight_buffer_V_2_20_q0),
    .weight_buffer_V_3_28_address0(grp_conv_fu_1033_weight_buffer_V_3_28_address0),
    .weight_buffer_V_3_28_ce0(grp_conv_fu_1033_weight_buffer_V_3_28_ce0),
    .weight_buffer_V_3_28_q0(weight_buffer_V_3_28_q0),
    .weight_buffer_V_3_4_address0(grp_conv_fu_1033_weight_buffer_V_3_4_address0),
    .weight_buffer_V_3_4_ce0(grp_conv_fu_1033_weight_buffer_V_3_4_ce0),
    .weight_buffer_V_3_4_q0(weight_buffer_V_3_4_q0),
    .weight_buffer_V_3_12_address0(grp_conv_fu_1033_weight_buffer_V_3_12_address0),
    .weight_buffer_V_3_12_ce0(grp_conv_fu_1033_weight_buffer_V_3_12_ce0),
    .weight_buffer_V_3_12_q0(weight_buffer_V_3_12_q0),
    .weight_buffer_V_3_20_address0(grp_conv_fu_1033_weight_buffer_V_3_20_address0),
    .weight_buffer_V_3_20_ce0(grp_conv_fu_1033_weight_buffer_V_3_20_ce0),
    .weight_buffer_V_3_20_q0(weight_buffer_V_3_20_q0),
    .weight_buffer_V_0_29_address0(grp_conv_fu_1033_weight_buffer_V_0_29_address0),
    .weight_buffer_V_0_29_ce0(grp_conv_fu_1033_weight_buffer_V_0_29_ce0),
    .weight_buffer_V_0_29_q0(weight_buffer_V_0_29_q0),
    .weight_buffer_V_0_5_address0(grp_conv_fu_1033_weight_buffer_V_0_5_address0),
    .weight_buffer_V_0_5_ce0(grp_conv_fu_1033_weight_buffer_V_0_5_ce0),
    .weight_buffer_V_0_5_q0(weight_buffer_V_0_5_q0),
    .weight_buffer_V_0_13_address0(grp_conv_fu_1033_weight_buffer_V_0_13_address0),
    .weight_buffer_V_0_13_ce0(grp_conv_fu_1033_weight_buffer_V_0_13_ce0),
    .weight_buffer_V_0_13_q0(weight_buffer_V_0_13_q0),
    .weight_buffer_V_0_21_address0(grp_conv_fu_1033_weight_buffer_V_0_21_address0),
    .weight_buffer_V_0_21_ce0(grp_conv_fu_1033_weight_buffer_V_0_21_ce0),
    .weight_buffer_V_0_21_q0(weight_buffer_V_0_21_q0),
    .weight_buffer_V_1_29_address0(grp_conv_fu_1033_weight_buffer_V_1_29_address0),
    .weight_buffer_V_1_29_ce0(grp_conv_fu_1033_weight_buffer_V_1_29_ce0),
    .weight_buffer_V_1_29_q0(weight_buffer_V_1_29_q0),
    .weight_buffer_V_1_5_address0(grp_conv_fu_1033_weight_buffer_V_1_5_address0),
    .weight_buffer_V_1_5_ce0(grp_conv_fu_1033_weight_buffer_V_1_5_ce0),
    .weight_buffer_V_1_5_q0(weight_buffer_V_1_5_q0),
    .weight_buffer_V_1_13_address0(grp_conv_fu_1033_weight_buffer_V_1_13_address0),
    .weight_buffer_V_1_13_ce0(grp_conv_fu_1033_weight_buffer_V_1_13_ce0),
    .weight_buffer_V_1_13_q0(weight_buffer_V_1_13_q0),
    .weight_buffer_V_1_21_address0(grp_conv_fu_1033_weight_buffer_V_1_21_address0),
    .weight_buffer_V_1_21_ce0(grp_conv_fu_1033_weight_buffer_V_1_21_ce0),
    .weight_buffer_V_1_21_q0(weight_buffer_V_1_21_q0),
    .weight_buffer_V_2_29_address0(grp_conv_fu_1033_weight_buffer_V_2_29_address0),
    .weight_buffer_V_2_29_ce0(grp_conv_fu_1033_weight_buffer_V_2_29_ce0),
    .weight_buffer_V_2_29_q0(weight_buffer_V_2_29_q0),
    .weight_buffer_V_2_5_address0(grp_conv_fu_1033_weight_buffer_V_2_5_address0),
    .weight_buffer_V_2_5_ce0(grp_conv_fu_1033_weight_buffer_V_2_5_ce0),
    .weight_buffer_V_2_5_q0(weight_buffer_V_2_5_q0),
    .weight_buffer_V_2_13_address0(grp_conv_fu_1033_weight_buffer_V_2_13_address0),
    .weight_buffer_V_2_13_ce0(grp_conv_fu_1033_weight_buffer_V_2_13_ce0),
    .weight_buffer_V_2_13_q0(weight_buffer_V_2_13_q0),
    .weight_buffer_V_2_21_address0(grp_conv_fu_1033_weight_buffer_V_2_21_address0),
    .weight_buffer_V_2_21_ce0(grp_conv_fu_1033_weight_buffer_V_2_21_ce0),
    .weight_buffer_V_2_21_q0(weight_buffer_V_2_21_q0),
    .weight_buffer_V_3_29_address0(grp_conv_fu_1033_weight_buffer_V_3_29_address0),
    .weight_buffer_V_3_29_ce0(grp_conv_fu_1033_weight_buffer_V_3_29_ce0),
    .weight_buffer_V_3_29_q0(weight_buffer_V_3_29_q0),
    .weight_buffer_V_3_5_address0(grp_conv_fu_1033_weight_buffer_V_3_5_address0),
    .weight_buffer_V_3_5_ce0(grp_conv_fu_1033_weight_buffer_V_3_5_ce0),
    .weight_buffer_V_3_5_q0(weight_buffer_V_3_5_q0),
    .weight_buffer_V_3_13_address0(grp_conv_fu_1033_weight_buffer_V_3_13_address0),
    .weight_buffer_V_3_13_ce0(grp_conv_fu_1033_weight_buffer_V_3_13_ce0),
    .weight_buffer_V_3_13_q0(weight_buffer_V_3_13_q0),
    .weight_buffer_V_3_21_address0(grp_conv_fu_1033_weight_buffer_V_3_21_address0),
    .weight_buffer_V_3_21_ce0(grp_conv_fu_1033_weight_buffer_V_3_21_ce0),
    .weight_buffer_V_3_21_q0(weight_buffer_V_3_21_q0),
    .weight_buffer_V_0_30_address0(grp_conv_fu_1033_weight_buffer_V_0_30_address0),
    .weight_buffer_V_0_30_ce0(grp_conv_fu_1033_weight_buffer_V_0_30_ce0),
    .weight_buffer_V_0_30_q0(weight_buffer_V_0_30_q0),
    .weight_buffer_V_0_6_address0(grp_conv_fu_1033_weight_buffer_V_0_6_address0),
    .weight_buffer_V_0_6_ce0(grp_conv_fu_1033_weight_buffer_V_0_6_ce0),
    .weight_buffer_V_0_6_q0(weight_buffer_V_0_6_q0),
    .weight_buffer_V_0_14_address0(grp_conv_fu_1033_weight_buffer_V_0_14_address0),
    .weight_buffer_V_0_14_ce0(grp_conv_fu_1033_weight_buffer_V_0_14_ce0),
    .weight_buffer_V_0_14_q0(weight_buffer_V_0_14_q0),
    .weight_buffer_V_0_22_address0(grp_conv_fu_1033_weight_buffer_V_0_22_address0),
    .weight_buffer_V_0_22_ce0(grp_conv_fu_1033_weight_buffer_V_0_22_ce0),
    .weight_buffer_V_0_22_q0(weight_buffer_V_0_22_q0),
    .weight_buffer_V_1_30_address0(grp_conv_fu_1033_weight_buffer_V_1_30_address0),
    .weight_buffer_V_1_30_ce0(grp_conv_fu_1033_weight_buffer_V_1_30_ce0),
    .weight_buffer_V_1_30_q0(weight_buffer_V_1_30_q0),
    .weight_buffer_V_1_6_address0(grp_conv_fu_1033_weight_buffer_V_1_6_address0),
    .weight_buffer_V_1_6_ce0(grp_conv_fu_1033_weight_buffer_V_1_6_ce0),
    .weight_buffer_V_1_6_q0(weight_buffer_V_1_6_q0),
    .weight_buffer_V_1_14_address0(grp_conv_fu_1033_weight_buffer_V_1_14_address0),
    .weight_buffer_V_1_14_ce0(grp_conv_fu_1033_weight_buffer_V_1_14_ce0),
    .weight_buffer_V_1_14_q0(weight_buffer_V_1_14_q0),
    .weight_buffer_V_1_22_address0(grp_conv_fu_1033_weight_buffer_V_1_22_address0),
    .weight_buffer_V_1_22_ce0(grp_conv_fu_1033_weight_buffer_V_1_22_ce0),
    .weight_buffer_V_1_22_q0(weight_buffer_V_1_22_q0),
    .weight_buffer_V_2_30_address0(grp_conv_fu_1033_weight_buffer_V_2_30_address0),
    .weight_buffer_V_2_30_ce0(grp_conv_fu_1033_weight_buffer_V_2_30_ce0),
    .weight_buffer_V_2_30_q0(weight_buffer_V_2_30_q0),
    .weight_buffer_V_2_6_address0(grp_conv_fu_1033_weight_buffer_V_2_6_address0),
    .weight_buffer_V_2_6_ce0(grp_conv_fu_1033_weight_buffer_V_2_6_ce0),
    .weight_buffer_V_2_6_q0(weight_buffer_V_2_6_q0),
    .weight_buffer_V_2_14_address0(grp_conv_fu_1033_weight_buffer_V_2_14_address0),
    .weight_buffer_V_2_14_ce0(grp_conv_fu_1033_weight_buffer_V_2_14_ce0),
    .weight_buffer_V_2_14_q0(weight_buffer_V_2_14_q0),
    .weight_buffer_V_2_22_address0(grp_conv_fu_1033_weight_buffer_V_2_22_address0),
    .weight_buffer_V_2_22_ce0(grp_conv_fu_1033_weight_buffer_V_2_22_ce0),
    .weight_buffer_V_2_22_q0(weight_buffer_V_2_22_q0),
    .weight_buffer_V_3_30_address0(grp_conv_fu_1033_weight_buffer_V_3_30_address0),
    .weight_buffer_V_3_30_ce0(grp_conv_fu_1033_weight_buffer_V_3_30_ce0),
    .weight_buffer_V_3_30_q0(weight_buffer_V_3_30_q0),
    .weight_buffer_V_3_6_address0(grp_conv_fu_1033_weight_buffer_V_3_6_address0),
    .weight_buffer_V_3_6_ce0(grp_conv_fu_1033_weight_buffer_V_3_6_ce0),
    .weight_buffer_V_3_6_q0(weight_buffer_V_3_6_q0),
    .weight_buffer_V_3_14_address0(grp_conv_fu_1033_weight_buffer_V_3_14_address0),
    .weight_buffer_V_3_14_ce0(grp_conv_fu_1033_weight_buffer_V_3_14_ce0),
    .weight_buffer_V_3_14_q0(weight_buffer_V_3_14_q0),
    .weight_buffer_V_3_22_address0(grp_conv_fu_1033_weight_buffer_V_3_22_address0),
    .weight_buffer_V_3_22_ce0(grp_conv_fu_1033_weight_buffer_V_3_22_ce0),
    .weight_buffer_V_3_22_q0(weight_buffer_V_3_22_q0),
    .weight_buffer_V_0_31_address0(grp_conv_fu_1033_weight_buffer_V_0_31_address0),
    .weight_buffer_V_0_31_ce0(grp_conv_fu_1033_weight_buffer_V_0_31_ce0),
    .weight_buffer_V_0_31_q0(weight_buffer_V_0_31_q0),
    .weight_buffer_V_0_7_address0(grp_conv_fu_1033_weight_buffer_V_0_7_address0),
    .weight_buffer_V_0_7_ce0(grp_conv_fu_1033_weight_buffer_V_0_7_ce0),
    .weight_buffer_V_0_7_q0(weight_buffer_V_0_7_q0),
    .weight_buffer_V_0_15_address0(grp_conv_fu_1033_weight_buffer_V_0_15_address0),
    .weight_buffer_V_0_15_ce0(grp_conv_fu_1033_weight_buffer_V_0_15_ce0),
    .weight_buffer_V_0_15_q0(weight_buffer_V_0_15_q0),
    .weight_buffer_V_0_23_address0(grp_conv_fu_1033_weight_buffer_V_0_23_address0),
    .weight_buffer_V_0_23_ce0(grp_conv_fu_1033_weight_buffer_V_0_23_ce0),
    .weight_buffer_V_0_23_q0(weight_buffer_V_0_23_q0),
    .weight_buffer_V_1_31_address0(grp_conv_fu_1033_weight_buffer_V_1_31_address0),
    .weight_buffer_V_1_31_ce0(grp_conv_fu_1033_weight_buffer_V_1_31_ce0),
    .weight_buffer_V_1_31_q0(weight_buffer_V_1_31_q0),
    .weight_buffer_V_1_7_address0(grp_conv_fu_1033_weight_buffer_V_1_7_address0),
    .weight_buffer_V_1_7_ce0(grp_conv_fu_1033_weight_buffer_V_1_7_ce0),
    .weight_buffer_V_1_7_q0(weight_buffer_V_1_7_q0),
    .weight_buffer_V_1_15_address0(grp_conv_fu_1033_weight_buffer_V_1_15_address0),
    .weight_buffer_V_1_15_ce0(grp_conv_fu_1033_weight_buffer_V_1_15_ce0),
    .weight_buffer_V_1_15_q0(weight_buffer_V_1_15_q0),
    .weight_buffer_V_1_23_address0(grp_conv_fu_1033_weight_buffer_V_1_23_address0),
    .weight_buffer_V_1_23_ce0(grp_conv_fu_1033_weight_buffer_V_1_23_ce0),
    .weight_buffer_V_1_23_q0(weight_buffer_V_1_23_q0),
    .weight_buffer_V_2_31_address0(grp_conv_fu_1033_weight_buffer_V_2_31_address0),
    .weight_buffer_V_2_31_ce0(grp_conv_fu_1033_weight_buffer_V_2_31_ce0),
    .weight_buffer_V_2_31_q0(weight_buffer_V_2_31_q0),
    .weight_buffer_V_2_7_address0(grp_conv_fu_1033_weight_buffer_V_2_7_address0),
    .weight_buffer_V_2_7_ce0(grp_conv_fu_1033_weight_buffer_V_2_7_ce0),
    .weight_buffer_V_2_7_q0(weight_buffer_V_2_7_q0),
    .weight_buffer_V_2_15_address0(grp_conv_fu_1033_weight_buffer_V_2_15_address0),
    .weight_buffer_V_2_15_ce0(grp_conv_fu_1033_weight_buffer_V_2_15_ce0),
    .weight_buffer_V_2_15_q0(weight_buffer_V_2_15_q0),
    .weight_buffer_V_2_23_address0(grp_conv_fu_1033_weight_buffer_V_2_23_address0),
    .weight_buffer_V_2_23_ce0(grp_conv_fu_1033_weight_buffer_V_2_23_ce0),
    .weight_buffer_V_2_23_q0(weight_buffer_V_2_23_q0),
    .weight_buffer_V_3_31_address0(grp_conv_fu_1033_weight_buffer_V_3_31_address0),
    .weight_buffer_V_3_31_ce0(grp_conv_fu_1033_weight_buffer_V_3_31_ce0),
    .weight_buffer_V_3_31_q0(weight_buffer_V_3_31_q0),
    .weight_buffer_V_3_7_address0(grp_conv_fu_1033_weight_buffer_V_3_7_address0),
    .weight_buffer_V_3_7_ce0(grp_conv_fu_1033_weight_buffer_V_3_7_ce0),
    .weight_buffer_V_3_7_q0(weight_buffer_V_3_7_q0),
    .weight_buffer_V_3_15_address0(grp_conv_fu_1033_weight_buffer_V_3_15_address0),
    .weight_buffer_V_3_15_ce0(grp_conv_fu_1033_weight_buffer_V_3_15_ce0),
    .weight_buffer_V_3_15_q0(weight_buffer_V_3_15_q0),
    .weight_buffer_V_3_23_address0(grp_conv_fu_1033_weight_buffer_V_3_23_address0),
    .weight_buffer_V_3_23_ce0(grp_conv_fu_1033_weight_buffer_V_3_23_ce0),
    .weight_buffer_V_3_23_q0(weight_buffer_V_3_23_q0),
    .input_buffer_V_0_address0(grp_conv_fu_1033_input_buffer_V_0_address0),
    .input_buffer_V_0_ce0(grp_conv_fu_1033_input_buffer_V_0_ce0),
    .input_buffer_V_0_q0(input_buffer_V_0_q0),
    .weight_buffer_V_0_24_address0(grp_conv_fu_1033_weight_buffer_V_0_24_address0),
    .weight_buffer_V_0_24_ce0(grp_conv_fu_1033_weight_buffer_V_0_24_ce0),
    .weight_buffer_V_0_24_q0(weight_buffer_V_0_24_q0),
    .weight_buffer_V_0_0_address0(grp_conv_fu_1033_weight_buffer_V_0_0_address0),
    .weight_buffer_V_0_0_ce0(grp_conv_fu_1033_weight_buffer_V_0_0_ce0),
    .weight_buffer_V_0_0_q0(weight_buffer_V_0_0_q0),
    .weight_buffer_V_0_8_address0(grp_conv_fu_1033_weight_buffer_V_0_8_address0),
    .weight_buffer_V_0_8_ce0(grp_conv_fu_1033_weight_buffer_V_0_8_ce0),
    .weight_buffer_V_0_8_q0(weight_buffer_V_0_8_q0),
    .weight_buffer_V_0_16_address0(grp_conv_fu_1033_weight_buffer_V_0_16_address0),
    .weight_buffer_V_0_16_ce0(grp_conv_fu_1033_weight_buffer_V_0_16_ce0),
    .weight_buffer_V_0_16_q0(weight_buffer_V_0_16_q0),
    .input_buffer_V_1_address0(grp_conv_fu_1033_input_buffer_V_1_address0),
    .input_buffer_V_1_ce0(grp_conv_fu_1033_input_buffer_V_1_ce0),
    .input_buffer_V_1_q0(input_buffer_V_1_q0),
    .weight_buffer_V_1_24_address0(grp_conv_fu_1033_weight_buffer_V_1_24_address0),
    .weight_buffer_V_1_24_ce0(grp_conv_fu_1033_weight_buffer_V_1_24_ce0),
    .weight_buffer_V_1_24_q0(weight_buffer_V_1_24_q0),
    .weight_buffer_V_1_0_address0(grp_conv_fu_1033_weight_buffer_V_1_0_address0),
    .weight_buffer_V_1_0_ce0(grp_conv_fu_1033_weight_buffer_V_1_0_ce0),
    .weight_buffer_V_1_0_q0(weight_buffer_V_1_0_q0),
    .weight_buffer_V_1_8_address0(grp_conv_fu_1033_weight_buffer_V_1_8_address0),
    .weight_buffer_V_1_8_ce0(grp_conv_fu_1033_weight_buffer_V_1_8_ce0),
    .weight_buffer_V_1_8_q0(weight_buffer_V_1_8_q0),
    .weight_buffer_V_1_16_address0(grp_conv_fu_1033_weight_buffer_V_1_16_address0),
    .weight_buffer_V_1_16_ce0(grp_conv_fu_1033_weight_buffer_V_1_16_ce0),
    .weight_buffer_V_1_16_q0(weight_buffer_V_1_16_q0),
    .input_buffer_V_2_address0(grp_conv_fu_1033_input_buffer_V_2_address0),
    .input_buffer_V_2_ce0(grp_conv_fu_1033_input_buffer_V_2_ce0),
    .input_buffer_V_2_q0(input_buffer_V_2_q0),
    .weight_buffer_V_2_24_address0(grp_conv_fu_1033_weight_buffer_V_2_24_address0),
    .weight_buffer_V_2_24_ce0(grp_conv_fu_1033_weight_buffer_V_2_24_ce0),
    .weight_buffer_V_2_24_q0(weight_buffer_V_2_24_q0),
    .weight_buffer_V_2_0_address0(grp_conv_fu_1033_weight_buffer_V_2_0_address0),
    .weight_buffer_V_2_0_ce0(grp_conv_fu_1033_weight_buffer_V_2_0_ce0),
    .weight_buffer_V_2_0_q0(weight_buffer_V_2_0_q0),
    .weight_buffer_V_2_8_address0(grp_conv_fu_1033_weight_buffer_V_2_8_address0),
    .weight_buffer_V_2_8_ce0(grp_conv_fu_1033_weight_buffer_V_2_8_ce0),
    .weight_buffer_V_2_8_q0(weight_buffer_V_2_8_q0),
    .weight_buffer_V_2_16_address0(grp_conv_fu_1033_weight_buffer_V_2_16_address0),
    .weight_buffer_V_2_16_ce0(grp_conv_fu_1033_weight_buffer_V_2_16_ce0),
    .weight_buffer_V_2_16_q0(weight_buffer_V_2_16_q0),
    .input_buffer_V_3_address0(grp_conv_fu_1033_input_buffer_V_3_address0),
    .input_buffer_V_3_ce0(grp_conv_fu_1033_input_buffer_V_3_ce0),
    .input_buffer_V_3_q0(input_buffer_V_3_q0),
    .weight_buffer_V_3_24_address0(grp_conv_fu_1033_weight_buffer_V_3_24_address0),
    .weight_buffer_V_3_24_ce0(grp_conv_fu_1033_weight_buffer_V_3_24_ce0),
    .weight_buffer_V_3_24_q0(weight_buffer_V_3_24_q0),
    .weight_buffer_V_3_0_address0(grp_conv_fu_1033_weight_buffer_V_3_0_address0),
    .weight_buffer_V_3_0_ce0(grp_conv_fu_1033_weight_buffer_V_3_0_ce0),
    .weight_buffer_V_3_0_q0(weight_buffer_V_3_0_q0),
    .weight_buffer_V_3_8_address0(grp_conv_fu_1033_weight_buffer_V_3_8_address0),
    .weight_buffer_V_3_8_ce0(grp_conv_fu_1033_weight_buffer_V_3_8_ce0),
    .weight_buffer_V_3_8_q0(weight_buffer_V_3_8_q0),
    .weight_buffer_V_3_16_address0(grp_conv_fu_1033_weight_buffer_V_3_16_address0),
    .weight_buffer_V_3_16_ce0(grp_conv_fu_1033_weight_buffer_V_3_16_ce0),
    .weight_buffer_V_3_16_q0(weight_buffer_V_3_16_q0)
);

weight_load grp_weight_load_fu_1439(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_weight_load_fu_1439_ap_start),
    .ap_done(grp_weight_load_fu_1439_ap_done),
    .ap_idle(grp_weight_load_fu_1439_ap_idle),
    .ap_ready(grp_weight_load_fu_1439_ap_ready),
    .m_axi_weight_AWVALID(grp_weight_load_fu_1439_m_axi_weight_AWVALID),
    .m_axi_weight_AWREADY(1'b0),
    .m_axi_weight_AWADDR(grp_weight_load_fu_1439_m_axi_weight_AWADDR),
    .m_axi_weight_AWID(grp_weight_load_fu_1439_m_axi_weight_AWID),
    .m_axi_weight_AWLEN(grp_weight_load_fu_1439_m_axi_weight_AWLEN),
    .m_axi_weight_AWSIZE(grp_weight_load_fu_1439_m_axi_weight_AWSIZE),
    .m_axi_weight_AWBURST(grp_weight_load_fu_1439_m_axi_weight_AWBURST),
    .m_axi_weight_AWLOCK(grp_weight_load_fu_1439_m_axi_weight_AWLOCK),
    .m_axi_weight_AWCACHE(grp_weight_load_fu_1439_m_axi_weight_AWCACHE),
    .m_axi_weight_AWPROT(grp_weight_load_fu_1439_m_axi_weight_AWPROT),
    .m_axi_weight_AWQOS(grp_weight_load_fu_1439_m_axi_weight_AWQOS),
    .m_axi_weight_AWREGION(grp_weight_load_fu_1439_m_axi_weight_AWREGION),
    .m_axi_weight_AWUSER(grp_weight_load_fu_1439_m_axi_weight_AWUSER),
    .m_axi_weight_WVALID(grp_weight_load_fu_1439_m_axi_weight_WVALID),
    .m_axi_weight_WREADY(1'b0),
    .m_axi_weight_WDATA(grp_weight_load_fu_1439_m_axi_weight_WDATA),
    .m_axi_weight_WSTRB(grp_weight_load_fu_1439_m_axi_weight_WSTRB),
    .m_axi_weight_WLAST(grp_weight_load_fu_1439_m_axi_weight_WLAST),
    .m_axi_weight_WID(grp_weight_load_fu_1439_m_axi_weight_WID),
    .m_axi_weight_WUSER(grp_weight_load_fu_1439_m_axi_weight_WUSER),
    .m_axi_weight_ARVALID(grp_weight_load_fu_1439_m_axi_weight_ARVALID),
    .m_axi_weight_ARREADY(Weight_ARREADY),
    .m_axi_weight_ARADDR(grp_weight_load_fu_1439_m_axi_weight_ARADDR),
    .m_axi_weight_ARID(grp_weight_load_fu_1439_m_axi_weight_ARID),
    .m_axi_weight_ARLEN(grp_weight_load_fu_1439_m_axi_weight_ARLEN),
    .m_axi_weight_ARSIZE(grp_weight_load_fu_1439_m_axi_weight_ARSIZE),
    .m_axi_weight_ARBURST(grp_weight_load_fu_1439_m_axi_weight_ARBURST),
    .m_axi_weight_ARLOCK(grp_weight_load_fu_1439_m_axi_weight_ARLOCK),
    .m_axi_weight_ARCACHE(grp_weight_load_fu_1439_m_axi_weight_ARCACHE),
    .m_axi_weight_ARPROT(grp_weight_load_fu_1439_m_axi_weight_ARPROT),
    .m_axi_weight_ARQOS(grp_weight_load_fu_1439_m_axi_weight_ARQOS),
    .m_axi_weight_ARREGION(grp_weight_load_fu_1439_m_axi_weight_ARREGION),
    .m_axi_weight_ARUSER(grp_weight_load_fu_1439_m_axi_weight_ARUSER),
    .m_axi_weight_RVALID(Weight_RVALID),
    .m_axi_weight_RREADY(grp_weight_load_fu_1439_m_axi_weight_RREADY),
    .m_axi_weight_RDATA(Weight_RDATA),
    .m_axi_weight_RLAST(Weight_RLAST),
    .m_axi_weight_RID(Weight_RID),
    .m_axi_weight_RUSER(Weight_RUSER),
    .m_axi_weight_RRESP(Weight_RRESP),
    .m_axi_weight_BVALID(1'b0),
    .m_axi_weight_BREADY(grp_weight_load_fu_1439_m_axi_weight_BREADY),
    .m_axi_weight_BRESP(2'd0),
    .m_axi_weight_BID(1'd0),
    .m_axi_weight_BUSER(1'd0),
    .weight_offset(Weight_offset5_reg_2469),
    .weight_buffer_0_0_V_address0(grp_weight_load_fu_1439_weight_buffer_0_0_V_address0),
    .weight_buffer_0_0_V_ce0(grp_weight_load_fu_1439_weight_buffer_0_0_V_ce0),
    .weight_buffer_0_0_V_we0(grp_weight_load_fu_1439_weight_buffer_0_0_V_we0),
    .weight_buffer_0_0_V_d0(grp_weight_load_fu_1439_weight_buffer_0_0_V_d0),
    .weight_buffer_0_1_V_address0(grp_weight_load_fu_1439_weight_buffer_0_1_V_address0),
    .weight_buffer_0_1_V_ce0(grp_weight_load_fu_1439_weight_buffer_0_1_V_ce0),
    .weight_buffer_0_1_V_we0(grp_weight_load_fu_1439_weight_buffer_0_1_V_we0),
    .weight_buffer_0_1_V_d0(grp_weight_load_fu_1439_weight_buffer_0_1_V_d0),
    .weight_buffer_0_2_V_address0(grp_weight_load_fu_1439_weight_buffer_0_2_V_address0),
    .weight_buffer_0_2_V_ce0(grp_weight_load_fu_1439_weight_buffer_0_2_V_ce0),
    .weight_buffer_0_2_V_we0(grp_weight_load_fu_1439_weight_buffer_0_2_V_we0),
    .weight_buffer_0_2_V_d0(grp_weight_load_fu_1439_weight_buffer_0_2_V_d0),
    .weight_buffer_0_3_V_address0(grp_weight_load_fu_1439_weight_buffer_0_3_V_address0),
    .weight_buffer_0_3_V_ce0(grp_weight_load_fu_1439_weight_buffer_0_3_V_ce0),
    .weight_buffer_0_3_V_we0(grp_weight_load_fu_1439_weight_buffer_0_3_V_we0),
    .weight_buffer_0_3_V_d0(grp_weight_load_fu_1439_weight_buffer_0_3_V_d0),
    .weight_buffer_0_4_V_address0(grp_weight_load_fu_1439_weight_buffer_0_4_V_address0),
    .weight_buffer_0_4_V_ce0(grp_weight_load_fu_1439_weight_buffer_0_4_V_ce0),
    .weight_buffer_0_4_V_we0(grp_weight_load_fu_1439_weight_buffer_0_4_V_we0),
    .weight_buffer_0_4_V_d0(grp_weight_load_fu_1439_weight_buffer_0_4_V_d0),
    .weight_buffer_0_5_V_address0(grp_weight_load_fu_1439_weight_buffer_0_5_V_address0),
    .weight_buffer_0_5_V_ce0(grp_weight_load_fu_1439_weight_buffer_0_5_V_ce0),
    .weight_buffer_0_5_V_we0(grp_weight_load_fu_1439_weight_buffer_0_5_V_we0),
    .weight_buffer_0_5_V_d0(grp_weight_load_fu_1439_weight_buffer_0_5_V_d0),
    .weight_buffer_0_6_V_address0(grp_weight_load_fu_1439_weight_buffer_0_6_V_address0),
    .weight_buffer_0_6_V_ce0(grp_weight_load_fu_1439_weight_buffer_0_6_V_ce0),
    .weight_buffer_0_6_V_we0(grp_weight_load_fu_1439_weight_buffer_0_6_V_we0),
    .weight_buffer_0_6_V_d0(grp_weight_load_fu_1439_weight_buffer_0_6_V_d0),
    .weight_buffer_0_7_V_address0(grp_weight_load_fu_1439_weight_buffer_0_7_V_address0),
    .weight_buffer_0_7_V_ce0(grp_weight_load_fu_1439_weight_buffer_0_7_V_ce0),
    .weight_buffer_0_7_V_we0(grp_weight_load_fu_1439_weight_buffer_0_7_V_we0),
    .weight_buffer_0_7_V_d0(grp_weight_load_fu_1439_weight_buffer_0_7_V_d0),
    .weight_buffer_0_8_V_address0(grp_weight_load_fu_1439_weight_buffer_0_8_V_address0),
    .weight_buffer_0_8_V_ce0(grp_weight_load_fu_1439_weight_buffer_0_8_V_ce0),
    .weight_buffer_0_8_V_we0(grp_weight_load_fu_1439_weight_buffer_0_8_V_we0),
    .weight_buffer_0_8_V_d0(grp_weight_load_fu_1439_weight_buffer_0_8_V_d0),
    .weight_buffer_0_9_V_address0(grp_weight_load_fu_1439_weight_buffer_0_9_V_address0),
    .weight_buffer_0_9_V_ce0(grp_weight_load_fu_1439_weight_buffer_0_9_V_ce0),
    .weight_buffer_0_9_V_we0(grp_weight_load_fu_1439_weight_buffer_0_9_V_we0),
    .weight_buffer_0_9_V_d0(grp_weight_load_fu_1439_weight_buffer_0_9_V_d0),
    .weight_buffer_0_10_V_address0(grp_weight_load_fu_1439_weight_buffer_0_10_V_address0),
    .weight_buffer_0_10_V_ce0(grp_weight_load_fu_1439_weight_buffer_0_10_V_ce0),
    .weight_buffer_0_10_V_we0(grp_weight_load_fu_1439_weight_buffer_0_10_V_we0),
    .weight_buffer_0_10_V_d0(grp_weight_load_fu_1439_weight_buffer_0_10_V_d0),
    .weight_buffer_0_11_V_address0(grp_weight_load_fu_1439_weight_buffer_0_11_V_address0),
    .weight_buffer_0_11_V_ce0(grp_weight_load_fu_1439_weight_buffer_0_11_V_ce0),
    .weight_buffer_0_11_V_we0(grp_weight_load_fu_1439_weight_buffer_0_11_V_we0),
    .weight_buffer_0_11_V_d0(grp_weight_load_fu_1439_weight_buffer_0_11_V_d0),
    .weight_buffer_0_12_V_address0(grp_weight_load_fu_1439_weight_buffer_0_12_V_address0),
    .weight_buffer_0_12_V_ce0(grp_weight_load_fu_1439_weight_buffer_0_12_V_ce0),
    .weight_buffer_0_12_V_we0(grp_weight_load_fu_1439_weight_buffer_0_12_V_we0),
    .weight_buffer_0_12_V_d0(grp_weight_load_fu_1439_weight_buffer_0_12_V_d0),
    .weight_buffer_0_13_V_address0(grp_weight_load_fu_1439_weight_buffer_0_13_V_address0),
    .weight_buffer_0_13_V_ce0(grp_weight_load_fu_1439_weight_buffer_0_13_V_ce0),
    .weight_buffer_0_13_V_we0(grp_weight_load_fu_1439_weight_buffer_0_13_V_we0),
    .weight_buffer_0_13_V_d0(grp_weight_load_fu_1439_weight_buffer_0_13_V_d0),
    .weight_buffer_0_14_V_address0(grp_weight_load_fu_1439_weight_buffer_0_14_V_address0),
    .weight_buffer_0_14_V_ce0(grp_weight_load_fu_1439_weight_buffer_0_14_V_ce0),
    .weight_buffer_0_14_V_we0(grp_weight_load_fu_1439_weight_buffer_0_14_V_we0),
    .weight_buffer_0_14_V_d0(grp_weight_load_fu_1439_weight_buffer_0_14_V_d0),
    .weight_buffer_0_15_V_address0(grp_weight_load_fu_1439_weight_buffer_0_15_V_address0),
    .weight_buffer_0_15_V_ce0(grp_weight_load_fu_1439_weight_buffer_0_15_V_ce0),
    .weight_buffer_0_15_V_we0(grp_weight_load_fu_1439_weight_buffer_0_15_V_we0),
    .weight_buffer_0_15_V_d0(grp_weight_load_fu_1439_weight_buffer_0_15_V_d0),
    .weight_buffer_0_16_V_address0(grp_weight_load_fu_1439_weight_buffer_0_16_V_address0),
    .weight_buffer_0_16_V_ce0(grp_weight_load_fu_1439_weight_buffer_0_16_V_ce0),
    .weight_buffer_0_16_V_we0(grp_weight_load_fu_1439_weight_buffer_0_16_V_we0),
    .weight_buffer_0_16_V_d0(grp_weight_load_fu_1439_weight_buffer_0_16_V_d0),
    .weight_buffer_0_17_V_address0(grp_weight_load_fu_1439_weight_buffer_0_17_V_address0),
    .weight_buffer_0_17_V_ce0(grp_weight_load_fu_1439_weight_buffer_0_17_V_ce0),
    .weight_buffer_0_17_V_we0(grp_weight_load_fu_1439_weight_buffer_0_17_V_we0),
    .weight_buffer_0_17_V_d0(grp_weight_load_fu_1439_weight_buffer_0_17_V_d0),
    .weight_buffer_0_18_V_address0(grp_weight_load_fu_1439_weight_buffer_0_18_V_address0),
    .weight_buffer_0_18_V_ce0(grp_weight_load_fu_1439_weight_buffer_0_18_V_ce0),
    .weight_buffer_0_18_V_we0(grp_weight_load_fu_1439_weight_buffer_0_18_V_we0),
    .weight_buffer_0_18_V_d0(grp_weight_load_fu_1439_weight_buffer_0_18_V_d0),
    .weight_buffer_0_19_V_address0(grp_weight_load_fu_1439_weight_buffer_0_19_V_address0),
    .weight_buffer_0_19_V_ce0(grp_weight_load_fu_1439_weight_buffer_0_19_V_ce0),
    .weight_buffer_0_19_V_we0(grp_weight_load_fu_1439_weight_buffer_0_19_V_we0),
    .weight_buffer_0_19_V_d0(grp_weight_load_fu_1439_weight_buffer_0_19_V_d0),
    .weight_buffer_0_20_V_address0(grp_weight_load_fu_1439_weight_buffer_0_20_V_address0),
    .weight_buffer_0_20_V_ce0(grp_weight_load_fu_1439_weight_buffer_0_20_V_ce0),
    .weight_buffer_0_20_V_we0(grp_weight_load_fu_1439_weight_buffer_0_20_V_we0),
    .weight_buffer_0_20_V_d0(grp_weight_load_fu_1439_weight_buffer_0_20_V_d0),
    .weight_buffer_0_21_V_address0(grp_weight_load_fu_1439_weight_buffer_0_21_V_address0),
    .weight_buffer_0_21_V_ce0(grp_weight_load_fu_1439_weight_buffer_0_21_V_ce0),
    .weight_buffer_0_21_V_we0(grp_weight_load_fu_1439_weight_buffer_0_21_V_we0),
    .weight_buffer_0_21_V_d0(grp_weight_load_fu_1439_weight_buffer_0_21_V_d0),
    .weight_buffer_0_22_V_address0(grp_weight_load_fu_1439_weight_buffer_0_22_V_address0),
    .weight_buffer_0_22_V_ce0(grp_weight_load_fu_1439_weight_buffer_0_22_V_ce0),
    .weight_buffer_0_22_V_we0(grp_weight_load_fu_1439_weight_buffer_0_22_V_we0),
    .weight_buffer_0_22_V_d0(grp_weight_load_fu_1439_weight_buffer_0_22_V_d0),
    .weight_buffer_0_23_V_address0(grp_weight_load_fu_1439_weight_buffer_0_23_V_address0),
    .weight_buffer_0_23_V_ce0(grp_weight_load_fu_1439_weight_buffer_0_23_V_ce0),
    .weight_buffer_0_23_V_we0(grp_weight_load_fu_1439_weight_buffer_0_23_V_we0),
    .weight_buffer_0_23_V_d0(grp_weight_load_fu_1439_weight_buffer_0_23_V_d0),
    .weight_buffer_0_24_V_address0(grp_weight_load_fu_1439_weight_buffer_0_24_V_address0),
    .weight_buffer_0_24_V_ce0(grp_weight_load_fu_1439_weight_buffer_0_24_V_ce0),
    .weight_buffer_0_24_V_we0(grp_weight_load_fu_1439_weight_buffer_0_24_V_we0),
    .weight_buffer_0_24_V_d0(grp_weight_load_fu_1439_weight_buffer_0_24_V_d0),
    .weight_buffer_0_25_V_address0(grp_weight_load_fu_1439_weight_buffer_0_25_V_address0),
    .weight_buffer_0_25_V_ce0(grp_weight_load_fu_1439_weight_buffer_0_25_V_ce0),
    .weight_buffer_0_25_V_we0(grp_weight_load_fu_1439_weight_buffer_0_25_V_we0),
    .weight_buffer_0_25_V_d0(grp_weight_load_fu_1439_weight_buffer_0_25_V_d0),
    .weight_buffer_0_26_V_address0(grp_weight_load_fu_1439_weight_buffer_0_26_V_address0),
    .weight_buffer_0_26_V_ce0(grp_weight_load_fu_1439_weight_buffer_0_26_V_ce0),
    .weight_buffer_0_26_V_we0(grp_weight_load_fu_1439_weight_buffer_0_26_V_we0),
    .weight_buffer_0_26_V_d0(grp_weight_load_fu_1439_weight_buffer_0_26_V_d0),
    .weight_buffer_0_27_V_address0(grp_weight_load_fu_1439_weight_buffer_0_27_V_address0),
    .weight_buffer_0_27_V_ce0(grp_weight_load_fu_1439_weight_buffer_0_27_V_ce0),
    .weight_buffer_0_27_V_we0(grp_weight_load_fu_1439_weight_buffer_0_27_V_we0),
    .weight_buffer_0_27_V_d0(grp_weight_load_fu_1439_weight_buffer_0_27_V_d0),
    .weight_buffer_0_28_V_address0(grp_weight_load_fu_1439_weight_buffer_0_28_V_address0),
    .weight_buffer_0_28_V_ce0(grp_weight_load_fu_1439_weight_buffer_0_28_V_ce0),
    .weight_buffer_0_28_V_we0(grp_weight_load_fu_1439_weight_buffer_0_28_V_we0),
    .weight_buffer_0_28_V_d0(grp_weight_load_fu_1439_weight_buffer_0_28_V_d0),
    .weight_buffer_0_29_V_address0(grp_weight_load_fu_1439_weight_buffer_0_29_V_address0),
    .weight_buffer_0_29_V_ce0(grp_weight_load_fu_1439_weight_buffer_0_29_V_ce0),
    .weight_buffer_0_29_V_we0(grp_weight_load_fu_1439_weight_buffer_0_29_V_we0),
    .weight_buffer_0_29_V_d0(grp_weight_load_fu_1439_weight_buffer_0_29_V_d0),
    .weight_buffer_0_30_V_address0(grp_weight_load_fu_1439_weight_buffer_0_30_V_address0),
    .weight_buffer_0_30_V_ce0(grp_weight_load_fu_1439_weight_buffer_0_30_V_ce0),
    .weight_buffer_0_30_V_we0(grp_weight_load_fu_1439_weight_buffer_0_30_V_we0),
    .weight_buffer_0_30_V_d0(grp_weight_load_fu_1439_weight_buffer_0_30_V_d0),
    .weight_buffer_0_31_V_address0(grp_weight_load_fu_1439_weight_buffer_0_31_V_address0),
    .weight_buffer_0_31_V_ce0(grp_weight_load_fu_1439_weight_buffer_0_31_V_ce0),
    .weight_buffer_0_31_V_we0(grp_weight_load_fu_1439_weight_buffer_0_31_V_we0),
    .weight_buffer_0_31_V_d0(grp_weight_load_fu_1439_weight_buffer_0_31_V_d0),
    .weight_buffer_1_0_V_address0(grp_weight_load_fu_1439_weight_buffer_1_0_V_address0),
    .weight_buffer_1_0_V_ce0(grp_weight_load_fu_1439_weight_buffer_1_0_V_ce0),
    .weight_buffer_1_0_V_we0(grp_weight_load_fu_1439_weight_buffer_1_0_V_we0),
    .weight_buffer_1_0_V_d0(grp_weight_load_fu_1439_weight_buffer_1_0_V_d0),
    .weight_buffer_1_1_V_address0(grp_weight_load_fu_1439_weight_buffer_1_1_V_address0),
    .weight_buffer_1_1_V_ce0(grp_weight_load_fu_1439_weight_buffer_1_1_V_ce0),
    .weight_buffer_1_1_V_we0(grp_weight_load_fu_1439_weight_buffer_1_1_V_we0),
    .weight_buffer_1_1_V_d0(grp_weight_load_fu_1439_weight_buffer_1_1_V_d0),
    .weight_buffer_1_2_V_address0(grp_weight_load_fu_1439_weight_buffer_1_2_V_address0),
    .weight_buffer_1_2_V_ce0(grp_weight_load_fu_1439_weight_buffer_1_2_V_ce0),
    .weight_buffer_1_2_V_we0(grp_weight_load_fu_1439_weight_buffer_1_2_V_we0),
    .weight_buffer_1_2_V_d0(grp_weight_load_fu_1439_weight_buffer_1_2_V_d0),
    .weight_buffer_1_3_V_address0(grp_weight_load_fu_1439_weight_buffer_1_3_V_address0),
    .weight_buffer_1_3_V_ce0(grp_weight_load_fu_1439_weight_buffer_1_3_V_ce0),
    .weight_buffer_1_3_V_we0(grp_weight_load_fu_1439_weight_buffer_1_3_V_we0),
    .weight_buffer_1_3_V_d0(grp_weight_load_fu_1439_weight_buffer_1_3_V_d0),
    .weight_buffer_1_4_V_address0(grp_weight_load_fu_1439_weight_buffer_1_4_V_address0),
    .weight_buffer_1_4_V_ce0(grp_weight_load_fu_1439_weight_buffer_1_4_V_ce0),
    .weight_buffer_1_4_V_we0(grp_weight_load_fu_1439_weight_buffer_1_4_V_we0),
    .weight_buffer_1_4_V_d0(grp_weight_load_fu_1439_weight_buffer_1_4_V_d0),
    .weight_buffer_1_5_V_address0(grp_weight_load_fu_1439_weight_buffer_1_5_V_address0),
    .weight_buffer_1_5_V_ce0(grp_weight_load_fu_1439_weight_buffer_1_5_V_ce0),
    .weight_buffer_1_5_V_we0(grp_weight_load_fu_1439_weight_buffer_1_5_V_we0),
    .weight_buffer_1_5_V_d0(grp_weight_load_fu_1439_weight_buffer_1_5_V_d0),
    .weight_buffer_1_6_V_address0(grp_weight_load_fu_1439_weight_buffer_1_6_V_address0),
    .weight_buffer_1_6_V_ce0(grp_weight_load_fu_1439_weight_buffer_1_6_V_ce0),
    .weight_buffer_1_6_V_we0(grp_weight_load_fu_1439_weight_buffer_1_6_V_we0),
    .weight_buffer_1_6_V_d0(grp_weight_load_fu_1439_weight_buffer_1_6_V_d0),
    .weight_buffer_1_7_V_address0(grp_weight_load_fu_1439_weight_buffer_1_7_V_address0),
    .weight_buffer_1_7_V_ce0(grp_weight_load_fu_1439_weight_buffer_1_7_V_ce0),
    .weight_buffer_1_7_V_we0(grp_weight_load_fu_1439_weight_buffer_1_7_V_we0),
    .weight_buffer_1_7_V_d0(grp_weight_load_fu_1439_weight_buffer_1_7_V_d0),
    .weight_buffer_1_8_V_address0(grp_weight_load_fu_1439_weight_buffer_1_8_V_address0),
    .weight_buffer_1_8_V_ce0(grp_weight_load_fu_1439_weight_buffer_1_8_V_ce0),
    .weight_buffer_1_8_V_we0(grp_weight_load_fu_1439_weight_buffer_1_8_V_we0),
    .weight_buffer_1_8_V_d0(grp_weight_load_fu_1439_weight_buffer_1_8_V_d0),
    .weight_buffer_1_9_V_address0(grp_weight_load_fu_1439_weight_buffer_1_9_V_address0),
    .weight_buffer_1_9_V_ce0(grp_weight_load_fu_1439_weight_buffer_1_9_V_ce0),
    .weight_buffer_1_9_V_we0(grp_weight_load_fu_1439_weight_buffer_1_9_V_we0),
    .weight_buffer_1_9_V_d0(grp_weight_load_fu_1439_weight_buffer_1_9_V_d0),
    .weight_buffer_1_10_V_address0(grp_weight_load_fu_1439_weight_buffer_1_10_V_address0),
    .weight_buffer_1_10_V_ce0(grp_weight_load_fu_1439_weight_buffer_1_10_V_ce0),
    .weight_buffer_1_10_V_we0(grp_weight_load_fu_1439_weight_buffer_1_10_V_we0),
    .weight_buffer_1_10_V_d0(grp_weight_load_fu_1439_weight_buffer_1_10_V_d0),
    .weight_buffer_1_11_V_address0(grp_weight_load_fu_1439_weight_buffer_1_11_V_address0),
    .weight_buffer_1_11_V_ce0(grp_weight_load_fu_1439_weight_buffer_1_11_V_ce0),
    .weight_buffer_1_11_V_we0(grp_weight_load_fu_1439_weight_buffer_1_11_V_we0),
    .weight_buffer_1_11_V_d0(grp_weight_load_fu_1439_weight_buffer_1_11_V_d0),
    .weight_buffer_1_12_V_address0(grp_weight_load_fu_1439_weight_buffer_1_12_V_address0),
    .weight_buffer_1_12_V_ce0(grp_weight_load_fu_1439_weight_buffer_1_12_V_ce0),
    .weight_buffer_1_12_V_we0(grp_weight_load_fu_1439_weight_buffer_1_12_V_we0),
    .weight_buffer_1_12_V_d0(grp_weight_load_fu_1439_weight_buffer_1_12_V_d0),
    .weight_buffer_1_13_V_address0(grp_weight_load_fu_1439_weight_buffer_1_13_V_address0),
    .weight_buffer_1_13_V_ce0(grp_weight_load_fu_1439_weight_buffer_1_13_V_ce0),
    .weight_buffer_1_13_V_we0(grp_weight_load_fu_1439_weight_buffer_1_13_V_we0),
    .weight_buffer_1_13_V_d0(grp_weight_load_fu_1439_weight_buffer_1_13_V_d0),
    .weight_buffer_1_14_V_address0(grp_weight_load_fu_1439_weight_buffer_1_14_V_address0),
    .weight_buffer_1_14_V_ce0(grp_weight_load_fu_1439_weight_buffer_1_14_V_ce0),
    .weight_buffer_1_14_V_we0(grp_weight_load_fu_1439_weight_buffer_1_14_V_we0),
    .weight_buffer_1_14_V_d0(grp_weight_load_fu_1439_weight_buffer_1_14_V_d0),
    .weight_buffer_1_15_V_address0(grp_weight_load_fu_1439_weight_buffer_1_15_V_address0),
    .weight_buffer_1_15_V_ce0(grp_weight_load_fu_1439_weight_buffer_1_15_V_ce0),
    .weight_buffer_1_15_V_we0(grp_weight_load_fu_1439_weight_buffer_1_15_V_we0),
    .weight_buffer_1_15_V_d0(grp_weight_load_fu_1439_weight_buffer_1_15_V_d0),
    .weight_buffer_1_16_V_address0(grp_weight_load_fu_1439_weight_buffer_1_16_V_address0),
    .weight_buffer_1_16_V_ce0(grp_weight_load_fu_1439_weight_buffer_1_16_V_ce0),
    .weight_buffer_1_16_V_we0(grp_weight_load_fu_1439_weight_buffer_1_16_V_we0),
    .weight_buffer_1_16_V_d0(grp_weight_load_fu_1439_weight_buffer_1_16_V_d0),
    .weight_buffer_1_17_V_address0(grp_weight_load_fu_1439_weight_buffer_1_17_V_address0),
    .weight_buffer_1_17_V_ce0(grp_weight_load_fu_1439_weight_buffer_1_17_V_ce0),
    .weight_buffer_1_17_V_we0(grp_weight_load_fu_1439_weight_buffer_1_17_V_we0),
    .weight_buffer_1_17_V_d0(grp_weight_load_fu_1439_weight_buffer_1_17_V_d0),
    .weight_buffer_1_18_V_address0(grp_weight_load_fu_1439_weight_buffer_1_18_V_address0),
    .weight_buffer_1_18_V_ce0(grp_weight_load_fu_1439_weight_buffer_1_18_V_ce0),
    .weight_buffer_1_18_V_we0(grp_weight_load_fu_1439_weight_buffer_1_18_V_we0),
    .weight_buffer_1_18_V_d0(grp_weight_load_fu_1439_weight_buffer_1_18_V_d0),
    .weight_buffer_1_19_V_address0(grp_weight_load_fu_1439_weight_buffer_1_19_V_address0),
    .weight_buffer_1_19_V_ce0(grp_weight_load_fu_1439_weight_buffer_1_19_V_ce0),
    .weight_buffer_1_19_V_we0(grp_weight_load_fu_1439_weight_buffer_1_19_V_we0),
    .weight_buffer_1_19_V_d0(grp_weight_load_fu_1439_weight_buffer_1_19_V_d0),
    .weight_buffer_1_20_V_address0(grp_weight_load_fu_1439_weight_buffer_1_20_V_address0),
    .weight_buffer_1_20_V_ce0(grp_weight_load_fu_1439_weight_buffer_1_20_V_ce0),
    .weight_buffer_1_20_V_we0(grp_weight_load_fu_1439_weight_buffer_1_20_V_we0),
    .weight_buffer_1_20_V_d0(grp_weight_load_fu_1439_weight_buffer_1_20_V_d0),
    .weight_buffer_1_21_V_address0(grp_weight_load_fu_1439_weight_buffer_1_21_V_address0),
    .weight_buffer_1_21_V_ce0(grp_weight_load_fu_1439_weight_buffer_1_21_V_ce0),
    .weight_buffer_1_21_V_we0(grp_weight_load_fu_1439_weight_buffer_1_21_V_we0),
    .weight_buffer_1_21_V_d0(grp_weight_load_fu_1439_weight_buffer_1_21_V_d0),
    .weight_buffer_1_22_V_address0(grp_weight_load_fu_1439_weight_buffer_1_22_V_address0),
    .weight_buffer_1_22_V_ce0(grp_weight_load_fu_1439_weight_buffer_1_22_V_ce0),
    .weight_buffer_1_22_V_we0(grp_weight_load_fu_1439_weight_buffer_1_22_V_we0),
    .weight_buffer_1_22_V_d0(grp_weight_load_fu_1439_weight_buffer_1_22_V_d0),
    .weight_buffer_1_23_V_address0(grp_weight_load_fu_1439_weight_buffer_1_23_V_address0),
    .weight_buffer_1_23_V_ce0(grp_weight_load_fu_1439_weight_buffer_1_23_V_ce0),
    .weight_buffer_1_23_V_we0(grp_weight_load_fu_1439_weight_buffer_1_23_V_we0),
    .weight_buffer_1_23_V_d0(grp_weight_load_fu_1439_weight_buffer_1_23_V_d0),
    .weight_buffer_1_24_V_address0(grp_weight_load_fu_1439_weight_buffer_1_24_V_address0),
    .weight_buffer_1_24_V_ce0(grp_weight_load_fu_1439_weight_buffer_1_24_V_ce0),
    .weight_buffer_1_24_V_we0(grp_weight_load_fu_1439_weight_buffer_1_24_V_we0),
    .weight_buffer_1_24_V_d0(grp_weight_load_fu_1439_weight_buffer_1_24_V_d0),
    .weight_buffer_1_25_V_address0(grp_weight_load_fu_1439_weight_buffer_1_25_V_address0),
    .weight_buffer_1_25_V_ce0(grp_weight_load_fu_1439_weight_buffer_1_25_V_ce0),
    .weight_buffer_1_25_V_we0(grp_weight_load_fu_1439_weight_buffer_1_25_V_we0),
    .weight_buffer_1_25_V_d0(grp_weight_load_fu_1439_weight_buffer_1_25_V_d0),
    .weight_buffer_1_26_V_address0(grp_weight_load_fu_1439_weight_buffer_1_26_V_address0),
    .weight_buffer_1_26_V_ce0(grp_weight_load_fu_1439_weight_buffer_1_26_V_ce0),
    .weight_buffer_1_26_V_we0(grp_weight_load_fu_1439_weight_buffer_1_26_V_we0),
    .weight_buffer_1_26_V_d0(grp_weight_load_fu_1439_weight_buffer_1_26_V_d0),
    .weight_buffer_1_27_V_address0(grp_weight_load_fu_1439_weight_buffer_1_27_V_address0),
    .weight_buffer_1_27_V_ce0(grp_weight_load_fu_1439_weight_buffer_1_27_V_ce0),
    .weight_buffer_1_27_V_we0(grp_weight_load_fu_1439_weight_buffer_1_27_V_we0),
    .weight_buffer_1_27_V_d0(grp_weight_load_fu_1439_weight_buffer_1_27_V_d0),
    .weight_buffer_1_28_V_address0(grp_weight_load_fu_1439_weight_buffer_1_28_V_address0),
    .weight_buffer_1_28_V_ce0(grp_weight_load_fu_1439_weight_buffer_1_28_V_ce0),
    .weight_buffer_1_28_V_we0(grp_weight_load_fu_1439_weight_buffer_1_28_V_we0),
    .weight_buffer_1_28_V_d0(grp_weight_load_fu_1439_weight_buffer_1_28_V_d0),
    .weight_buffer_1_29_V_address0(grp_weight_load_fu_1439_weight_buffer_1_29_V_address0),
    .weight_buffer_1_29_V_ce0(grp_weight_load_fu_1439_weight_buffer_1_29_V_ce0),
    .weight_buffer_1_29_V_we0(grp_weight_load_fu_1439_weight_buffer_1_29_V_we0),
    .weight_buffer_1_29_V_d0(grp_weight_load_fu_1439_weight_buffer_1_29_V_d0),
    .weight_buffer_1_30_V_address0(grp_weight_load_fu_1439_weight_buffer_1_30_V_address0),
    .weight_buffer_1_30_V_ce0(grp_weight_load_fu_1439_weight_buffer_1_30_V_ce0),
    .weight_buffer_1_30_V_we0(grp_weight_load_fu_1439_weight_buffer_1_30_V_we0),
    .weight_buffer_1_30_V_d0(grp_weight_load_fu_1439_weight_buffer_1_30_V_d0),
    .weight_buffer_1_31_V_address0(grp_weight_load_fu_1439_weight_buffer_1_31_V_address0),
    .weight_buffer_1_31_V_ce0(grp_weight_load_fu_1439_weight_buffer_1_31_V_ce0),
    .weight_buffer_1_31_V_we0(grp_weight_load_fu_1439_weight_buffer_1_31_V_we0),
    .weight_buffer_1_31_V_d0(grp_weight_load_fu_1439_weight_buffer_1_31_V_d0),
    .weight_buffer_2_0_V_address0(grp_weight_load_fu_1439_weight_buffer_2_0_V_address0),
    .weight_buffer_2_0_V_ce0(grp_weight_load_fu_1439_weight_buffer_2_0_V_ce0),
    .weight_buffer_2_0_V_we0(grp_weight_load_fu_1439_weight_buffer_2_0_V_we0),
    .weight_buffer_2_0_V_d0(grp_weight_load_fu_1439_weight_buffer_2_0_V_d0),
    .weight_buffer_2_1_V_address0(grp_weight_load_fu_1439_weight_buffer_2_1_V_address0),
    .weight_buffer_2_1_V_ce0(grp_weight_load_fu_1439_weight_buffer_2_1_V_ce0),
    .weight_buffer_2_1_V_we0(grp_weight_load_fu_1439_weight_buffer_2_1_V_we0),
    .weight_buffer_2_1_V_d0(grp_weight_load_fu_1439_weight_buffer_2_1_V_d0),
    .weight_buffer_2_2_V_address0(grp_weight_load_fu_1439_weight_buffer_2_2_V_address0),
    .weight_buffer_2_2_V_ce0(grp_weight_load_fu_1439_weight_buffer_2_2_V_ce0),
    .weight_buffer_2_2_V_we0(grp_weight_load_fu_1439_weight_buffer_2_2_V_we0),
    .weight_buffer_2_2_V_d0(grp_weight_load_fu_1439_weight_buffer_2_2_V_d0),
    .weight_buffer_2_3_V_address0(grp_weight_load_fu_1439_weight_buffer_2_3_V_address0),
    .weight_buffer_2_3_V_ce0(grp_weight_load_fu_1439_weight_buffer_2_3_V_ce0),
    .weight_buffer_2_3_V_we0(grp_weight_load_fu_1439_weight_buffer_2_3_V_we0),
    .weight_buffer_2_3_V_d0(grp_weight_load_fu_1439_weight_buffer_2_3_V_d0),
    .weight_buffer_2_4_V_address0(grp_weight_load_fu_1439_weight_buffer_2_4_V_address0),
    .weight_buffer_2_4_V_ce0(grp_weight_load_fu_1439_weight_buffer_2_4_V_ce0),
    .weight_buffer_2_4_V_we0(grp_weight_load_fu_1439_weight_buffer_2_4_V_we0),
    .weight_buffer_2_4_V_d0(grp_weight_load_fu_1439_weight_buffer_2_4_V_d0),
    .weight_buffer_2_5_V_address0(grp_weight_load_fu_1439_weight_buffer_2_5_V_address0),
    .weight_buffer_2_5_V_ce0(grp_weight_load_fu_1439_weight_buffer_2_5_V_ce0),
    .weight_buffer_2_5_V_we0(grp_weight_load_fu_1439_weight_buffer_2_5_V_we0),
    .weight_buffer_2_5_V_d0(grp_weight_load_fu_1439_weight_buffer_2_5_V_d0),
    .weight_buffer_2_6_V_address0(grp_weight_load_fu_1439_weight_buffer_2_6_V_address0),
    .weight_buffer_2_6_V_ce0(grp_weight_load_fu_1439_weight_buffer_2_6_V_ce0),
    .weight_buffer_2_6_V_we0(grp_weight_load_fu_1439_weight_buffer_2_6_V_we0),
    .weight_buffer_2_6_V_d0(grp_weight_load_fu_1439_weight_buffer_2_6_V_d0),
    .weight_buffer_2_7_V_address0(grp_weight_load_fu_1439_weight_buffer_2_7_V_address0),
    .weight_buffer_2_7_V_ce0(grp_weight_load_fu_1439_weight_buffer_2_7_V_ce0),
    .weight_buffer_2_7_V_we0(grp_weight_load_fu_1439_weight_buffer_2_7_V_we0),
    .weight_buffer_2_7_V_d0(grp_weight_load_fu_1439_weight_buffer_2_7_V_d0),
    .weight_buffer_2_8_V_address0(grp_weight_load_fu_1439_weight_buffer_2_8_V_address0),
    .weight_buffer_2_8_V_ce0(grp_weight_load_fu_1439_weight_buffer_2_8_V_ce0),
    .weight_buffer_2_8_V_we0(grp_weight_load_fu_1439_weight_buffer_2_8_V_we0),
    .weight_buffer_2_8_V_d0(grp_weight_load_fu_1439_weight_buffer_2_8_V_d0),
    .weight_buffer_2_9_V_address0(grp_weight_load_fu_1439_weight_buffer_2_9_V_address0),
    .weight_buffer_2_9_V_ce0(grp_weight_load_fu_1439_weight_buffer_2_9_V_ce0),
    .weight_buffer_2_9_V_we0(grp_weight_load_fu_1439_weight_buffer_2_9_V_we0),
    .weight_buffer_2_9_V_d0(grp_weight_load_fu_1439_weight_buffer_2_9_V_d0),
    .weight_buffer_2_10_V_address0(grp_weight_load_fu_1439_weight_buffer_2_10_V_address0),
    .weight_buffer_2_10_V_ce0(grp_weight_load_fu_1439_weight_buffer_2_10_V_ce0),
    .weight_buffer_2_10_V_we0(grp_weight_load_fu_1439_weight_buffer_2_10_V_we0),
    .weight_buffer_2_10_V_d0(grp_weight_load_fu_1439_weight_buffer_2_10_V_d0),
    .weight_buffer_2_11_V_address0(grp_weight_load_fu_1439_weight_buffer_2_11_V_address0),
    .weight_buffer_2_11_V_ce0(grp_weight_load_fu_1439_weight_buffer_2_11_V_ce0),
    .weight_buffer_2_11_V_we0(grp_weight_load_fu_1439_weight_buffer_2_11_V_we0),
    .weight_buffer_2_11_V_d0(grp_weight_load_fu_1439_weight_buffer_2_11_V_d0),
    .weight_buffer_2_12_V_address0(grp_weight_load_fu_1439_weight_buffer_2_12_V_address0),
    .weight_buffer_2_12_V_ce0(grp_weight_load_fu_1439_weight_buffer_2_12_V_ce0),
    .weight_buffer_2_12_V_we0(grp_weight_load_fu_1439_weight_buffer_2_12_V_we0),
    .weight_buffer_2_12_V_d0(grp_weight_load_fu_1439_weight_buffer_2_12_V_d0),
    .weight_buffer_2_13_V_address0(grp_weight_load_fu_1439_weight_buffer_2_13_V_address0),
    .weight_buffer_2_13_V_ce0(grp_weight_load_fu_1439_weight_buffer_2_13_V_ce0),
    .weight_buffer_2_13_V_we0(grp_weight_load_fu_1439_weight_buffer_2_13_V_we0),
    .weight_buffer_2_13_V_d0(grp_weight_load_fu_1439_weight_buffer_2_13_V_d0),
    .weight_buffer_2_14_V_address0(grp_weight_load_fu_1439_weight_buffer_2_14_V_address0),
    .weight_buffer_2_14_V_ce0(grp_weight_load_fu_1439_weight_buffer_2_14_V_ce0),
    .weight_buffer_2_14_V_we0(grp_weight_load_fu_1439_weight_buffer_2_14_V_we0),
    .weight_buffer_2_14_V_d0(grp_weight_load_fu_1439_weight_buffer_2_14_V_d0),
    .weight_buffer_2_15_V_address0(grp_weight_load_fu_1439_weight_buffer_2_15_V_address0),
    .weight_buffer_2_15_V_ce0(grp_weight_load_fu_1439_weight_buffer_2_15_V_ce0),
    .weight_buffer_2_15_V_we0(grp_weight_load_fu_1439_weight_buffer_2_15_V_we0),
    .weight_buffer_2_15_V_d0(grp_weight_load_fu_1439_weight_buffer_2_15_V_d0),
    .weight_buffer_2_16_V_address0(grp_weight_load_fu_1439_weight_buffer_2_16_V_address0),
    .weight_buffer_2_16_V_ce0(grp_weight_load_fu_1439_weight_buffer_2_16_V_ce0),
    .weight_buffer_2_16_V_we0(grp_weight_load_fu_1439_weight_buffer_2_16_V_we0),
    .weight_buffer_2_16_V_d0(grp_weight_load_fu_1439_weight_buffer_2_16_V_d0),
    .weight_buffer_2_17_V_address0(grp_weight_load_fu_1439_weight_buffer_2_17_V_address0),
    .weight_buffer_2_17_V_ce0(grp_weight_load_fu_1439_weight_buffer_2_17_V_ce0),
    .weight_buffer_2_17_V_we0(grp_weight_load_fu_1439_weight_buffer_2_17_V_we0),
    .weight_buffer_2_17_V_d0(grp_weight_load_fu_1439_weight_buffer_2_17_V_d0),
    .weight_buffer_2_18_V_address0(grp_weight_load_fu_1439_weight_buffer_2_18_V_address0),
    .weight_buffer_2_18_V_ce0(grp_weight_load_fu_1439_weight_buffer_2_18_V_ce0),
    .weight_buffer_2_18_V_we0(grp_weight_load_fu_1439_weight_buffer_2_18_V_we0),
    .weight_buffer_2_18_V_d0(grp_weight_load_fu_1439_weight_buffer_2_18_V_d0),
    .weight_buffer_2_19_V_address0(grp_weight_load_fu_1439_weight_buffer_2_19_V_address0),
    .weight_buffer_2_19_V_ce0(grp_weight_load_fu_1439_weight_buffer_2_19_V_ce0),
    .weight_buffer_2_19_V_we0(grp_weight_load_fu_1439_weight_buffer_2_19_V_we0),
    .weight_buffer_2_19_V_d0(grp_weight_load_fu_1439_weight_buffer_2_19_V_d0),
    .weight_buffer_2_20_V_address0(grp_weight_load_fu_1439_weight_buffer_2_20_V_address0),
    .weight_buffer_2_20_V_ce0(grp_weight_load_fu_1439_weight_buffer_2_20_V_ce0),
    .weight_buffer_2_20_V_we0(grp_weight_load_fu_1439_weight_buffer_2_20_V_we0),
    .weight_buffer_2_20_V_d0(grp_weight_load_fu_1439_weight_buffer_2_20_V_d0),
    .weight_buffer_2_21_V_address0(grp_weight_load_fu_1439_weight_buffer_2_21_V_address0),
    .weight_buffer_2_21_V_ce0(grp_weight_load_fu_1439_weight_buffer_2_21_V_ce0),
    .weight_buffer_2_21_V_we0(grp_weight_load_fu_1439_weight_buffer_2_21_V_we0),
    .weight_buffer_2_21_V_d0(grp_weight_load_fu_1439_weight_buffer_2_21_V_d0),
    .weight_buffer_2_22_V_address0(grp_weight_load_fu_1439_weight_buffer_2_22_V_address0),
    .weight_buffer_2_22_V_ce0(grp_weight_load_fu_1439_weight_buffer_2_22_V_ce0),
    .weight_buffer_2_22_V_we0(grp_weight_load_fu_1439_weight_buffer_2_22_V_we0),
    .weight_buffer_2_22_V_d0(grp_weight_load_fu_1439_weight_buffer_2_22_V_d0),
    .weight_buffer_2_23_V_address0(grp_weight_load_fu_1439_weight_buffer_2_23_V_address0),
    .weight_buffer_2_23_V_ce0(grp_weight_load_fu_1439_weight_buffer_2_23_V_ce0),
    .weight_buffer_2_23_V_we0(grp_weight_load_fu_1439_weight_buffer_2_23_V_we0),
    .weight_buffer_2_23_V_d0(grp_weight_load_fu_1439_weight_buffer_2_23_V_d0),
    .weight_buffer_2_24_V_address0(grp_weight_load_fu_1439_weight_buffer_2_24_V_address0),
    .weight_buffer_2_24_V_ce0(grp_weight_load_fu_1439_weight_buffer_2_24_V_ce0),
    .weight_buffer_2_24_V_we0(grp_weight_load_fu_1439_weight_buffer_2_24_V_we0),
    .weight_buffer_2_24_V_d0(grp_weight_load_fu_1439_weight_buffer_2_24_V_d0),
    .weight_buffer_2_25_V_address0(grp_weight_load_fu_1439_weight_buffer_2_25_V_address0),
    .weight_buffer_2_25_V_ce0(grp_weight_load_fu_1439_weight_buffer_2_25_V_ce0),
    .weight_buffer_2_25_V_we0(grp_weight_load_fu_1439_weight_buffer_2_25_V_we0),
    .weight_buffer_2_25_V_d0(grp_weight_load_fu_1439_weight_buffer_2_25_V_d0),
    .weight_buffer_2_26_V_address0(grp_weight_load_fu_1439_weight_buffer_2_26_V_address0),
    .weight_buffer_2_26_V_ce0(grp_weight_load_fu_1439_weight_buffer_2_26_V_ce0),
    .weight_buffer_2_26_V_we0(grp_weight_load_fu_1439_weight_buffer_2_26_V_we0),
    .weight_buffer_2_26_V_d0(grp_weight_load_fu_1439_weight_buffer_2_26_V_d0),
    .weight_buffer_2_27_V_address0(grp_weight_load_fu_1439_weight_buffer_2_27_V_address0),
    .weight_buffer_2_27_V_ce0(grp_weight_load_fu_1439_weight_buffer_2_27_V_ce0),
    .weight_buffer_2_27_V_we0(grp_weight_load_fu_1439_weight_buffer_2_27_V_we0),
    .weight_buffer_2_27_V_d0(grp_weight_load_fu_1439_weight_buffer_2_27_V_d0),
    .weight_buffer_2_28_V_address0(grp_weight_load_fu_1439_weight_buffer_2_28_V_address0),
    .weight_buffer_2_28_V_ce0(grp_weight_load_fu_1439_weight_buffer_2_28_V_ce0),
    .weight_buffer_2_28_V_we0(grp_weight_load_fu_1439_weight_buffer_2_28_V_we0),
    .weight_buffer_2_28_V_d0(grp_weight_load_fu_1439_weight_buffer_2_28_V_d0),
    .weight_buffer_2_29_V_address0(grp_weight_load_fu_1439_weight_buffer_2_29_V_address0),
    .weight_buffer_2_29_V_ce0(grp_weight_load_fu_1439_weight_buffer_2_29_V_ce0),
    .weight_buffer_2_29_V_we0(grp_weight_load_fu_1439_weight_buffer_2_29_V_we0),
    .weight_buffer_2_29_V_d0(grp_weight_load_fu_1439_weight_buffer_2_29_V_d0),
    .weight_buffer_2_30_V_address0(grp_weight_load_fu_1439_weight_buffer_2_30_V_address0),
    .weight_buffer_2_30_V_ce0(grp_weight_load_fu_1439_weight_buffer_2_30_V_ce0),
    .weight_buffer_2_30_V_we0(grp_weight_load_fu_1439_weight_buffer_2_30_V_we0),
    .weight_buffer_2_30_V_d0(grp_weight_load_fu_1439_weight_buffer_2_30_V_d0),
    .weight_buffer_2_31_V_address0(grp_weight_load_fu_1439_weight_buffer_2_31_V_address0),
    .weight_buffer_2_31_V_ce0(grp_weight_load_fu_1439_weight_buffer_2_31_V_ce0),
    .weight_buffer_2_31_V_we0(grp_weight_load_fu_1439_weight_buffer_2_31_V_we0),
    .weight_buffer_2_31_V_d0(grp_weight_load_fu_1439_weight_buffer_2_31_V_d0),
    .weight_buffer_3_0_V_address0(grp_weight_load_fu_1439_weight_buffer_3_0_V_address0),
    .weight_buffer_3_0_V_ce0(grp_weight_load_fu_1439_weight_buffer_3_0_V_ce0),
    .weight_buffer_3_0_V_we0(grp_weight_load_fu_1439_weight_buffer_3_0_V_we0),
    .weight_buffer_3_0_V_d0(grp_weight_load_fu_1439_weight_buffer_3_0_V_d0),
    .weight_buffer_3_1_V_address0(grp_weight_load_fu_1439_weight_buffer_3_1_V_address0),
    .weight_buffer_3_1_V_ce0(grp_weight_load_fu_1439_weight_buffer_3_1_V_ce0),
    .weight_buffer_3_1_V_we0(grp_weight_load_fu_1439_weight_buffer_3_1_V_we0),
    .weight_buffer_3_1_V_d0(grp_weight_load_fu_1439_weight_buffer_3_1_V_d0),
    .weight_buffer_3_2_V_address0(grp_weight_load_fu_1439_weight_buffer_3_2_V_address0),
    .weight_buffer_3_2_V_ce0(grp_weight_load_fu_1439_weight_buffer_3_2_V_ce0),
    .weight_buffer_3_2_V_we0(grp_weight_load_fu_1439_weight_buffer_3_2_V_we0),
    .weight_buffer_3_2_V_d0(grp_weight_load_fu_1439_weight_buffer_3_2_V_d0),
    .weight_buffer_3_3_V_address0(grp_weight_load_fu_1439_weight_buffer_3_3_V_address0),
    .weight_buffer_3_3_V_ce0(grp_weight_load_fu_1439_weight_buffer_3_3_V_ce0),
    .weight_buffer_3_3_V_we0(grp_weight_load_fu_1439_weight_buffer_3_3_V_we0),
    .weight_buffer_3_3_V_d0(grp_weight_load_fu_1439_weight_buffer_3_3_V_d0),
    .weight_buffer_3_4_V_address0(grp_weight_load_fu_1439_weight_buffer_3_4_V_address0),
    .weight_buffer_3_4_V_ce0(grp_weight_load_fu_1439_weight_buffer_3_4_V_ce0),
    .weight_buffer_3_4_V_we0(grp_weight_load_fu_1439_weight_buffer_3_4_V_we0),
    .weight_buffer_3_4_V_d0(grp_weight_load_fu_1439_weight_buffer_3_4_V_d0),
    .weight_buffer_3_5_V_address0(grp_weight_load_fu_1439_weight_buffer_3_5_V_address0),
    .weight_buffer_3_5_V_ce0(grp_weight_load_fu_1439_weight_buffer_3_5_V_ce0),
    .weight_buffer_3_5_V_we0(grp_weight_load_fu_1439_weight_buffer_3_5_V_we0),
    .weight_buffer_3_5_V_d0(grp_weight_load_fu_1439_weight_buffer_3_5_V_d0),
    .weight_buffer_3_6_V_address0(grp_weight_load_fu_1439_weight_buffer_3_6_V_address0),
    .weight_buffer_3_6_V_ce0(grp_weight_load_fu_1439_weight_buffer_3_6_V_ce0),
    .weight_buffer_3_6_V_we0(grp_weight_load_fu_1439_weight_buffer_3_6_V_we0),
    .weight_buffer_3_6_V_d0(grp_weight_load_fu_1439_weight_buffer_3_6_V_d0),
    .weight_buffer_3_7_V_address0(grp_weight_load_fu_1439_weight_buffer_3_7_V_address0),
    .weight_buffer_3_7_V_ce0(grp_weight_load_fu_1439_weight_buffer_3_7_V_ce0),
    .weight_buffer_3_7_V_we0(grp_weight_load_fu_1439_weight_buffer_3_7_V_we0),
    .weight_buffer_3_7_V_d0(grp_weight_load_fu_1439_weight_buffer_3_7_V_d0),
    .weight_buffer_3_8_V_address0(grp_weight_load_fu_1439_weight_buffer_3_8_V_address0),
    .weight_buffer_3_8_V_ce0(grp_weight_load_fu_1439_weight_buffer_3_8_V_ce0),
    .weight_buffer_3_8_V_we0(grp_weight_load_fu_1439_weight_buffer_3_8_V_we0),
    .weight_buffer_3_8_V_d0(grp_weight_load_fu_1439_weight_buffer_3_8_V_d0),
    .weight_buffer_3_9_V_address0(grp_weight_load_fu_1439_weight_buffer_3_9_V_address0),
    .weight_buffer_3_9_V_ce0(grp_weight_load_fu_1439_weight_buffer_3_9_V_ce0),
    .weight_buffer_3_9_V_we0(grp_weight_load_fu_1439_weight_buffer_3_9_V_we0),
    .weight_buffer_3_9_V_d0(grp_weight_load_fu_1439_weight_buffer_3_9_V_d0),
    .weight_buffer_3_10_V_address0(grp_weight_load_fu_1439_weight_buffer_3_10_V_address0),
    .weight_buffer_3_10_V_ce0(grp_weight_load_fu_1439_weight_buffer_3_10_V_ce0),
    .weight_buffer_3_10_V_we0(grp_weight_load_fu_1439_weight_buffer_3_10_V_we0),
    .weight_buffer_3_10_V_d0(grp_weight_load_fu_1439_weight_buffer_3_10_V_d0),
    .weight_buffer_3_11_V_address0(grp_weight_load_fu_1439_weight_buffer_3_11_V_address0),
    .weight_buffer_3_11_V_ce0(grp_weight_load_fu_1439_weight_buffer_3_11_V_ce0),
    .weight_buffer_3_11_V_we0(grp_weight_load_fu_1439_weight_buffer_3_11_V_we0),
    .weight_buffer_3_11_V_d0(grp_weight_load_fu_1439_weight_buffer_3_11_V_d0),
    .weight_buffer_3_12_V_address0(grp_weight_load_fu_1439_weight_buffer_3_12_V_address0),
    .weight_buffer_3_12_V_ce0(grp_weight_load_fu_1439_weight_buffer_3_12_V_ce0),
    .weight_buffer_3_12_V_we0(grp_weight_load_fu_1439_weight_buffer_3_12_V_we0),
    .weight_buffer_3_12_V_d0(grp_weight_load_fu_1439_weight_buffer_3_12_V_d0),
    .weight_buffer_3_13_V_address0(grp_weight_load_fu_1439_weight_buffer_3_13_V_address0),
    .weight_buffer_3_13_V_ce0(grp_weight_load_fu_1439_weight_buffer_3_13_V_ce0),
    .weight_buffer_3_13_V_we0(grp_weight_load_fu_1439_weight_buffer_3_13_V_we0),
    .weight_buffer_3_13_V_d0(grp_weight_load_fu_1439_weight_buffer_3_13_V_d0),
    .weight_buffer_3_14_V_address0(grp_weight_load_fu_1439_weight_buffer_3_14_V_address0),
    .weight_buffer_3_14_V_ce0(grp_weight_load_fu_1439_weight_buffer_3_14_V_ce0),
    .weight_buffer_3_14_V_we0(grp_weight_load_fu_1439_weight_buffer_3_14_V_we0),
    .weight_buffer_3_14_V_d0(grp_weight_load_fu_1439_weight_buffer_3_14_V_d0),
    .weight_buffer_3_15_V_address0(grp_weight_load_fu_1439_weight_buffer_3_15_V_address0),
    .weight_buffer_3_15_V_ce0(grp_weight_load_fu_1439_weight_buffer_3_15_V_ce0),
    .weight_buffer_3_15_V_we0(grp_weight_load_fu_1439_weight_buffer_3_15_V_we0),
    .weight_buffer_3_15_V_d0(grp_weight_load_fu_1439_weight_buffer_3_15_V_d0),
    .weight_buffer_3_16_V_address0(grp_weight_load_fu_1439_weight_buffer_3_16_V_address0),
    .weight_buffer_3_16_V_ce0(grp_weight_load_fu_1439_weight_buffer_3_16_V_ce0),
    .weight_buffer_3_16_V_we0(grp_weight_load_fu_1439_weight_buffer_3_16_V_we0),
    .weight_buffer_3_16_V_d0(grp_weight_load_fu_1439_weight_buffer_3_16_V_d0),
    .weight_buffer_3_17_V_address0(grp_weight_load_fu_1439_weight_buffer_3_17_V_address0),
    .weight_buffer_3_17_V_ce0(grp_weight_load_fu_1439_weight_buffer_3_17_V_ce0),
    .weight_buffer_3_17_V_we0(grp_weight_load_fu_1439_weight_buffer_3_17_V_we0),
    .weight_buffer_3_17_V_d0(grp_weight_load_fu_1439_weight_buffer_3_17_V_d0),
    .weight_buffer_3_18_V_address0(grp_weight_load_fu_1439_weight_buffer_3_18_V_address0),
    .weight_buffer_3_18_V_ce0(grp_weight_load_fu_1439_weight_buffer_3_18_V_ce0),
    .weight_buffer_3_18_V_we0(grp_weight_load_fu_1439_weight_buffer_3_18_V_we0),
    .weight_buffer_3_18_V_d0(grp_weight_load_fu_1439_weight_buffer_3_18_V_d0),
    .weight_buffer_3_19_V_address0(grp_weight_load_fu_1439_weight_buffer_3_19_V_address0),
    .weight_buffer_3_19_V_ce0(grp_weight_load_fu_1439_weight_buffer_3_19_V_ce0),
    .weight_buffer_3_19_V_we0(grp_weight_load_fu_1439_weight_buffer_3_19_V_we0),
    .weight_buffer_3_19_V_d0(grp_weight_load_fu_1439_weight_buffer_3_19_V_d0),
    .weight_buffer_3_20_V_address0(grp_weight_load_fu_1439_weight_buffer_3_20_V_address0),
    .weight_buffer_3_20_V_ce0(grp_weight_load_fu_1439_weight_buffer_3_20_V_ce0),
    .weight_buffer_3_20_V_we0(grp_weight_load_fu_1439_weight_buffer_3_20_V_we0),
    .weight_buffer_3_20_V_d0(grp_weight_load_fu_1439_weight_buffer_3_20_V_d0),
    .weight_buffer_3_21_V_address0(grp_weight_load_fu_1439_weight_buffer_3_21_V_address0),
    .weight_buffer_3_21_V_ce0(grp_weight_load_fu_1439_weight_buffer_3_21_V_ce0),
    .weight_buffer_3_21_V_we0(grp_weight_load_fu_1439_weight_buffer_3_21_V_we0),
    .weight_buffer_3_21_V_d0(grp_weight_load_fu_1439_weight_buffer_3_21_V_d0),
    .weight_buffer_3_22_V_address0(grp_weight_load_fu_1439_weight_buffer_3_22_V_address0),
    .weight_buffer_3_22_V_ce0(grp_weight_load_fu_1439_weight_buffer_3_22_V_ce0),
    .weight_buffer_3_22_V_we0(grp_weight_load_fu_1439_weight_buffer_3_22_V_we0),
    .weight_buffer_3_22_V_d0(grp_weight_load_fu_1439_weight_buffer_3_22_V_d0),
    .weight_buffer_3_23_V_address0(grp_weight_load_fu_1439_weight_buffer_3_23_V_address0),
    .weight_buffer_3_23_V_ce0(grp_weight_load_fu_1439_weight_buffer_3_23_V_ce0),
    .weight_buffer_3_23_V_we0(grp_weight_load_fu_1439_weight_buffer_3_23_V_we0),
    .weight_buffer_3_23_V_d0(grp_weight_load_fu_1439_weight_buffer_3_23_V_d0),
    .weight_buffer_3_24_V_address0(grp_weight_load_fu_1439_weight_buffer_3_24_V_address0),
    .weight_buffer_3_24_V_ce0(grp_weight_load_fu_1439_weight_buffer_3_24_V_ce0),
    .weight_buffer_3_24_V_we0(grp_weight_load_fu_1439_weight_buffer_3_24_V_we0),
    .weight_buffer_3_24_V_d0(grp_weight_load_fu_1439_weight_buffer_3_24_V_d0),
    .weight_buffer_3_25_V_address0(grp_weight_load_fu_1439_weight_buffer_3_25_V_address0),
    .weight_buffer_3_25_V_ce0(grp_weight_load_fu_1439_weight_buffer_3_25_V_ce0),
    .weight_buffer_3_25_V_we0(grp_weight_load_fu_1439_weight_buffer_3_25_V_we0),
    .weight_buffer_3_25_V_d0(grp_weight_load_fu_1439_weight_buffer_3_25_V_d0),
    .weight_buffer_3_26_V_address0(grp_weight_load_fu_1439_weight_buffer_3_26_V_address0),
    .weight_buffer_3_26_V_ce0(grp_weight_load_fu_1439_weight_buffer_3_26_V_ce0),
    .weight_buffer_3_26_V_we0(grp_weight_load_fu_1439_weight_buffer_3_26_V_we0),
    .weight_buffer_3_26_V_d0(grp_weight_load_fu_1439_weight_buffer_3_26_V_d0),
    .weight_buffer_3_27_V_address0(grp_weight_load_fu_1439_weight_buffer_3_27_V_address0),
    .weight_buffer_3_27_V_ce0(grp_weight_load_fu_1439_weight_buffer_3_27_V_ce0),
    .weight_buffer_3_27_V_we0(grp_weight_load_fu_1439_weight_buffer_3_27_V_we0),
    .weight_buffer_3_27_V_d0(grp_weight_load_fu_1439_weight_buffer_3_27_V_d0),
    .weight_buffer_3_28_V_address0(grp_weight_load_fu_1439_weight_buffer_3_28_V_address0),
    .weight_buffer_3_28_V_ce0(grp_weight_load_fu_1439_weight_buffer_3_28_V_ce0),
    .weight_buffer_3_28_V_we0(grp_weight_load_fu_1439_weight_buffer_3_28_V_we0),
    .weight_buffer_3_28_V_d0(grp_weight_load_fu_1439_weight_buffer_3_28_V_d0),
    .weight_buffer_3_29_V_address0(grp_weight_load_fu_1439_weight_buffer_3_29_V_address0),
    .weight_buffer_3_29_V_ce0(grp_weight_load_fu_1439_weight_buffer_3_29_V_ce0),
    .weight_buffer_3_29_V_we0(grp_weight_load_fu_1439_weight_buffer_3_29_V_we0),
    .weight_buffer_3_29_V_d0(grp_weight_load_fu_1439_weight_buffer_3_29_V_d0),
    .weight_buffer_3_30_V_address0(grp_weight_load_fu_1439_weight_buffer_3_30_V_address0),
    .weight_buffer_3_30_V_ce0(grp_weight_load_fu_1439_weight_buffer_3_30_V_ce0),
    .weight_buffer_3_30_V_we0(grp_weight_load_fu_1439_weight_buffer_3_30_V_we0),
    .weight_buffer_3_30_V_d0(grp_weight_load_fu_1439_weight_buffer_3_30_V_d0),
    .weight_buffer_3_31_V_address0(grp_weight_load_fu_1439_weight_buffer_3_31_V_address0),
    .weight_buffer_3_31_V_ce0(grp_weight_load_fu_1439_weight_buffer_3_31_V_ce0),
    .weight_buffer_3_31_V_we0(grp_weight_load_fu_1439_weight_buffer_3_31_V_we0),
    .weight_buffer_3_31_V_d0(grp_weight_load_fu_1439_weight_buffer_3_31_V_d0),
    .TN(TN_read_reg_2439),
    .TM(TM_read_reg_2448),
    .k(Kernel_size_read_reg_2457),
    .offset(tmp_82_reg_2672),
    .enable(grp_weight_load_fu_1439_enable)
);

output_write grp_output_write_fu_1709(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_output_write_fu_1709_ap_start),
    .ap_done(grp_output_write_fu_1709_ap_done),
    .ap_idle(grp_output_write_fu_1709_ap_idle),
    .ap_ready(grp_output_write_fu_1709_ap_ready),
    .m_axi_Output_r_AWVALID(grp_output_write_fu_1709_m_axi_Output_r_AWVALID),
    .m_axi_Output_r_AWREADY(Output_r_AWREADY),
    .m_axi_Output_r_AWADDR(grp_output_write_fu_1709_m_axi_Output_r_AWADDR),
    .m_axi_Output_r_AWID(grp_output_write_fu_1709_m_axi_Output_r_AWID),
    .m_axi_Output_r_AWLEN(grp_output_write_fu_1709_m_axi_Output_r_AWLEN),
    .m_axi_Output_r_AWSIZE(grp_output_write_fu_1709_m_axi_Output_r_AWSIZE),
    .m_axi_Output_r_AWBURST(grp_output_write_fu_1709_m_axi_Output_r_AWBURST),
    .m_axi_Output_r_AWLOCK(grp_output_write_fu_1709_m_axi_Output_r_AWLOCK),
    .m_axi_Output_r_AWCACHE(grp_output_write_fu_1709_m_axi_Output_r_AWCACHE),
    .m_axi_Output_r_AWPROT(grp_output_write_fu_1709_m_axi_Output_r_AWPROT),
    .m_axi_Output_r_AWQOS(grp_output_write_fu_1709_m_axi_Output_r_AWQOS),
    .m_axi_Output_r_AWREGION(grp_output_write_fu_1709_m_axi_Output_r_AWREGION),
    .m_axi_Output_r_AWUSER(grp_output_write_fu_1709_m_axi_Output_r_AWUSER),
    .m_axi_Output_r_WVALID(grp_output_write_fu_1709_m_axi_Output_r_WVALID),
    .m_axi_Output_r_WREADY(Output_r_WREADY),
    .m_axi_Output_r_WDATA(grp_output_write_fu_1709_m_axi_Output_r_WDATA),
    .m_axi_Output_r_WSTRB(grp_output_write_fu_1709_m_axi_Output_r_WSTRB),
    .m_axi_Output_r_WLAST(grp_output_write_fu_1709_m_axi_Output_r_WLAST),
    .m_axi_Output_r_WID(grp_output_write_fu_1709_m_axi_Output_r_WID),
    .m_axi_Output_r_WUSER(grp_output_write_fu_1709_m_axi_Output_r_WUSER),
    .m_axi_Output_r_ARVALID(grp_output_write_fu_1709_m_axi_Output_r_ARVALID),
    .m_axi_Output_r_ARREADY(1'b0),
    .m_axi_Output_r_ARADDR(grp_output_write_fu_1709_m_axi_Output_r_ARADDR),
    .m_axi_Output_r_ARID(grp_output_write_fu_1709_m_axi_Output_r_ARID),
    .m_axi_Output_r_ARLEN(grp_output_write_fu_1709_m_axi_Output_r_ARLEN),
    .m_axi_Output_r_ARSIZE(grp_output_write_fu_1709_m_axi_Output_r_ARSIZE),
    .m_axi_Output_r_ARBURST(grp_output_write_fu_1709_m_axi_Output_r_ARBURST),
    .m_axi_Output_r_ARLOCK(grp_output_write_fu_1709_m_axi_Output_r_ARLOCK),
    .m_axi_Output_r_ARCACHE(grp_output_write_fu_1709_m_axi_Output_r_ARCACHE),
    .m_axi_Output_r_ARPROT(grp_output_write_fu_1709_m_axi_Output_r_ARPROT),
    .m_axi_Output_r_ARQOS(grp_output_write_fu_1709_m_axi_Output_r_ARQOS),
    .m_axi_Output_r_ARREGION(grp_output_write_fu_1709_m_axi_Output_r_ARREGION),
    .m_axi_Output_r_ARUSER(grp_output_write_fu_1709_m_axi_Output_r_ARUSER),
    .m_axi_Output_r_RVALID(1'b0),
    .m_axi_Output_r_RREADY(grp_output_write_fu_1709_m_axi_Output_r_RREADY),
    .m_axi_Output_r_RDATA(32'd0),
    .m_axi_Output_r_RLAST(1'b0),
    .m_axi_Output_r_RID(1'd0),
    .m_axi_Output_r_RUSER(1'd0),
    .m_axi_Output_r_RRESP(2'd0),
    .m_axi_Output_r_BVALID(Output_r_BVALID),
    .m_axi_Output_r_BREADY(grp_output_write_fu_1709_m_axi_Output_r_BREADY),
    .m_axi_Output_r_BRESP(Output_r_BRESP),
    .m_axi_Output_r_BID(Output_r_BID),
    .m_axi_Output_r_BUSER(Output_r_BUSER),
    .Output_offset(Output_offset3_reg_2475),
    .TR(TR_read_reg_2426),
    .TC(TC_read_reg_2413),
    .TM(TM_read_reg_2448),
    .offset(tmp_84_reg_2657),
    .write_flag(grp_output_write_fu_1709_write_flag),
    .half(grp_output_write_fu_1709_half),
    .output_buffer_0_address0(grp_output_write_fu_1709_output_buffer_0_address0),
    .output_buffer_0_ce0(grp_output_write_fu_1709_output_buffer_0_ce0),
    .output_buffer_0_q0(output_buffer_0_q0),
    .output_buffer_1_address0(grp_output_write_fu_1709_output_buffer_1_address0),
    .output_buffer_1_ce0(grp_output_write_fu_1709_output_buffer_1_ce0),
    .output_buffer_1_q0(output_buffer_1_q0),
    .output_buffer_2_address0(grp_output_write_fu_1709_output_buffer_2_address0),
    .output_buffer_2_ce0(grp_output_write_fu_1709_output_buffer_2_ce0),
    .output_buffer_2_q0(output_buffer_2_q0),
    .output_buffer_3_address0(grp_output_write_fu_1709_output_buffer_3_address0),
    .output_buffer_3_ce0(grp_output_write_fu_1709_output_buffer_3_ce0),
    .output_buffer_3_q0(output_buffer_3_q0),
    .output_buffer_4_address0(grp_output_write_fu_1709_output_buffer_4_address0),
    .output_buffer_4_ce0(grp_output_write_fu_1709_output_buffer_4_ce0),
    .output_buffer_4_q0(output_buffer_4_q0),
    .output_buffer_5_address0(grp_output_write_fu_1709_output_buffer_5_address0),
    .output_buffer_5_ce0(grp_output_write_fu_1709_output_buffer_5_ce0),
    .output_buffer_5_q0(output_buffer_5_q0),
    .output_buffer_6_address0(grp_output_write_fu_1709_output_buffer_6_address0),
    .output_buffer_6_ce0(grp_output_write_fu_1709_output_buffer_6_ce0),
    .output_buffer_6_q0(output_buffer_6_q0),
    .output_buffer_7_address0(grp_output_write_fu_1709_output_buffer_7_address0),
    .output_buffer_7_ce0(grp_output_write_fu_1709_output_buffer_7_ce0),
    .output_buffer_7_q0(output_buffer_7_q0),
    .output_buffer_8_address0(grp_output_write_fu_1709_output_buffer_8_address0),
    .output_buffer_8_ce0(grp_output_write_fu_1709_output_buffer_8_ce0),
    .output_buffer_8_q0(output_buffer_8_q0),
    .output_buffer_9_address0(grp_output_write_fu_1709_output_buffer_9_address0),
    .output_buffer_9_ce0(grp_output_write_fu_1709_output_buffer_9_ce0),
    .output_buffer_9_q0(output_buffer_9_q0),
    .output_buffer_10_address0(grp_output_write_fu_1709_output_buffer_10_address0),
    .output_buffer_10_ce0(grp_output_write_fu_1709_output_buffer_10_ce0),
    .output_buffer_10_q0(output_buffer_10_q0),
    .output_buffer_11_address0(grp_output_write_fu_1709_output_buffer_11_address0),
    .output_buffer_11_ce0(grp_output_write_fu_1709_output_buffer_11_ce0),
    .output_buffer_11_q0(output_buffer_11_q0),
    .output_buffer_12_address0(grp_output_write_fu_1709_output_buffer_12_address0),
    .output_buffer_12_ce0(grp_output_write_fu_1709_output_buffer_12_ce0),
    .output_buffer_12_q0(output_buffer_12_q0),
    .output_buffer_13_address0(grp_output_write_fu_1709_output_buffer_13_address0),
    .output_buffer_13_ce0(grp_output_write_fu_1709_output_buffer_13_ce0),
    .output_buffer_13_q0(output_buffer_13_q0),
    .output_buffer_14_address0(grp_output_write_fu_1709_output_buffer_14_address0),
    .output_buffer_14_ce0(grp_output_write_fu_1709_output_buffer_14_ce0),
    .output_buffer_14_q0(output_buffer_14_q0),
    .output_buffer_15_address0(grp_output_write_fu_1709_output_buffer_15_address0),
    .output_buffer_15_ce0(grp_output_write_fu_1709_output_buffer_15_ce0),
    .output_buffer_15_q0(output_buffer_15_q0),
    .output_buffer_16_address0(grp_output_write_fu_1709_output_buffer_16_address0),
    .output_buffer_16_ce0(grp_output_write_fu_1709_output_buffer_16_ce0),
    .output_buffer_16_q0(output_buffer_16_q0),
    .output_buffer_17_address0(grp_output_write_fu_1709_output_buffer_17_address0),
    .output_buffer_17_ce0(grp_output_write_fu_1709_output_buffer_17_ce0),
    .output_buffer_17_q0(output_buffer_17_q0),
    .output_buffer_18_address0(grp_output_write_fu_1709_output_buffer_18_address0),
    .output_buffer_18_ce0(grp_output_write_fu_1709_output_buffer_18_ce0),
    .output_buffer_18_q0(output_buffer_18_q0),
    .output_buffer_19_address0(grp_output_write_fu_1709_output_buffer_19_address0),
    .output_buffer_19_ce0(grp_output_write_fu_1709_output_buffer_19_ce0),
    .output_buffer_19_q0(output_buffer_19_q0),
    .output_buffer_20_address0(grp_output_write_fu_1709_output_buffer_20_address0),
    .output_buffer_20_ce0(grp_output_write_fu_1709_output_buffer_20_ce0),
    .output_buffer_20_q0(output_buffer_20_q0),
    .output_buffer_21_address0(grp_output_write_fu_1709_output_buffer_21_address0),
    .output_buffer_21_ce0(grp_output_write_fu_1709_output_buffer_21_ce0),
    .output_buffer_21_q0(output_buffer_21_q0),
    .output_buffer_22_address0(grp_output_write_fu_1709_output_buffer_22_address0),
    .output_buffer_22_ce0(grp_output_write_fu_1709_output_buffer_22_ce0),
    .output_buffer_22_q0(output_buffer_22_q0),
    .output_buffer_23_address0(grp_output_write_fu_1709_output_buffer_23_address0),
    .output_buffer_23_ce0(grp_output_write_fu_1709_output_buffer_23_ce0),
    .output_buffer_23_q0(output_buffer_23_q0),
    .output_buffer_24_address0(grp_output_write_fu_1709_output_buffer_24_address0),
    .output_buffer_24_ce0(grp_output_write_fu_1709_output_buffer_24_ce0),
    .output_buffer_24_q0(output_buffer_24_q0),
    .output_buffer_25_address0(grp_output_write_fu_1709_output_buffer_25_address0),
    .output_buffer_25_ce0(grp_output_write_fu_1709_output_buffer_25_ce0),
    .output_buffer_25_q0(output_buffer_25_q0),
    .output_buffer_26_address0(grp_output_write_fu_1709_output_buffer_26_address0),
    .output_buffer_26_ce0(grp_output_write_fu_1709_output_buffer_26_ce0),
    .output_buffer_26_q0(output_buffer_26_q0),
    .output_buffer_27_address0(grp_output_write_fu_1709_output_buffer_27_address0),
    .output_buffer_27_ce0(grp_output_write_fu_1709_output_buffer_27_ce0),
    .output_buffer_27_q0(output_buffer_27_q0),
    .output_buffer_28_address0(grp_output_write_fu_1709_output_buffer_28_address0),
    .output_buffer_28_ce0(grp_output_write_fu_1709_output_buffer_28_ce0),
    .output_buffer_28_q0(output_buffer_28_q0),
    .output_buffer_29_address0(grp_output_write_fu_1709_output_buffer_29_address0),
    .output_buffer_29_ce0(grp_output_write_fu_1709_output_buffer_29_ce0),
    .output_buffer_29_q0(output_buffer_29_q0),
    .output_buffer_30_address0(grp_output_write_fu_1709_output_buffer_30_address0),
    .output_buffer_30_ce0(grp_output_write_fu_1709_output_buffer_30_ce0),
    .output_buffer_30_q0(output_buffer_30_q0),
    .output_buffer_31_address0(grp_output_write_fu_1709_output_buffer_31_address0),
    .output_buffer_31_ce0(grp_output_write_fu_1709_output_buffer_31_ce0),
    .output_buffer_31_q0(output_buffer_31_q0)
);

input_load_conv grp_input_load_conv_fu_1788(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_input_load_conv_fu_1788_ap_start),
    .ap_done(grp_input_load_conv_fu_1788_ap_done),
    .ap_idle(grp_input_load_conv_fu_1788_ap_idle),
    .ap_ready(grp_input_load_conv_fu_1788_ap_ready),
    .m_axi_input_r_AWVALID(grp_input_load_conv_fu_1788_m_axi_input_r_AWVALID),
    .m_axi_input_r_AWREADY(1'b0),
    .m_axi_input_r_AWADDR(grp_input_load_conv_fu_1788_m_axi_input_r_AWADDR),
    .m_axi_input_r_AWID(grp_input_load_conv_fu_1788_m_axi_input_r_AWID),
    .m_axi_input_r_AWLEN(grp_input_load_conv_fu_1788_m_axi_input_r_AWLEN),
    .m_axi_input_r_AWSIZE(grp_input_load_conv_fu_1788_m_axi_input_r_AWSIZE),
    .m_axi_input_r_AWBURST(grp_input_load_conv_fu_1788_m_axi_input_r_AWBURST),
    .m_axi_input_r_AWLOCK(grp_input_load_conv_fu_1788_m_axi_input_r_AWLOCK),
    .m_axi_input_r_AWCACHE(grp_input_load_conv_fu_1788_m_axi_input_r_AWCACHE),
    .m_axi_input_r_AWPROT(grp_input_load_conv_fu_1788_m_axi_input_r_AWPROT),
    .m_axi_input_r_AWQOS(grp_input_load_conv_fu_1788_m_axi_input_r_AWQOS),
    .m_axi_input_r_AWREGION(grp_input_load_conv_fu_1788_m_axi_input_r_AWREGION),
    .m_axi_input_r_AWUSER(grp_input_load_conv_fu_1788_m_axi_input_r_AWUSER),
    .m_axi_input_r_WVALID(grp_input_load_conv_fu_1788_m_axi_input_r_WVALID),
    .m_axi_input_r_WREADY(1'b0),
    .m_axi_input_r_WDATA(grp_input_load_conv_fu_1788_m_axi_input_r_WDATA),
    .m_axi_input_r_WSTRB(grp_input_load_conv_fu_1788_m_axi_input_r_WSTRB),
    .m_axi_input_r_WLAST(grp_input_load_conv_fu_1788_m_axi_input_r_WLAST),
    .m_axi_input_r_WID(grp_input_load_conv_fu_1788_m_axi_input_r_WID),
    .m_axi_input_r_WUSER(grp_input_load_conv_fu_1788_m_axi_input_r_WUSER),
    .m_axi_input_r_ARVALID(grp_input_load_conv_fu_1788_m_axi_input_r_ARVALID),
    .m_axi_input_r_ARREADY(Input_r_ARREADY),
    .m_axi_input_r_ARADDR(grp_input_load_conv_fu_1788_m_axi_input_r_ARADDR),
    .m_axi_input_r_ARID(grp_input_load_conv_fu_1788_m_axi_input_r_ARID),
    .m_axi_input_r_ARLEN(grp_input_load_conv_fu_1788_m_axi_input_r_ARLEN),
    .m_axi_input_r_ARSIZE(grp_input_load_conv_fu_1788_m_axi_input_r_ARSIZE),
    .m_axi_input_r_ARBURST(grp_input_load_conv_fu_1788_m_axi_input_r_ARBURST),
    .m_axi_input_r_ARLOCK(grp_input_load_conv_fu_1788_m_axi_input_r_ARLOCK),
    .m_axi_input_r_ARCACHE(grp_input_load_conv_fu_1788_m_axi_input_r_ARCACHE),
    .m_axi_input_r_ARPROT(grp_input_load_conv_fu_1788_m_axi_input_r_ARPROT),
    .m_axi_input_r_ARQOS(grp_input_load_conv_fu_1788_m_axi_input_r_ARQOS),
    .m_axi_input_r_ARREGION(grp_input_load_conv_fu_1788_m_axi_input_r_ARREGION),
    .m_axi_input_r_ARUSER(grp_input_load_conv_fu_1788_m_axi_input_r_ARUSER),
    .m_axi_input_r_RVALID(Input_r_RVALID),
    .m_axi_input_r_RREADY(grp_input_load_conv_fu_1788_m_axi_input_r_RREADY),
    .m_axi_input_r_RDATA(Input_r_RDATA),
    .m_axi_input_r_RLAST(Input_r_RLAST),
    .m_axi_input_r_RID(Input_r_RID),
    .m_axi_input_r_RUSER(Input_r_RUSER),
    .m_axi_input_r_RRESP(Input_r_RRESP),
    .m_axi_input_r_BVALID(1'b0),
    .m_axi_input_r_BREADY(grp_input_load_conv_fu_1788_m_axi_input_r_BREADY),
    .m_axi_input_r_BRESP(2'd0),
    .m_axi_input_r_BID(1'd0),
    .m_axi_input_r_BUSER(1'd0),
    .input_offset(Input_offset1_reg_2481),
    .input_buffer_0_V_address0(grp_input_load_conv_fu_1788_input_buffer_0_V_address0),
    .input_buffer_0_V_ce0(grp_input_load_conv_fu_1788_input_buffer_0_V_ce0),
    .input_buffer_0_V_we0(grp_input_load_conv_fu_1788_input_buffer_0_V_we0),
    .input_buffer_0_V_d0(grp_input_load_conv_fu_1788_input_buffer_0_V_d0),
    .input_buffer_1_V_address0(grp_input_load_conv_fu_1788_input_buffer_1_V_address0),
    .input_buffer_1_V_ce0(grp_input_load_conv_fu_1788_input_buffer_1_V_ce0),
    .input_buffer_1_V_we0(grp_input_load_conv_fu_1788_input_buffer_1_V_we0),
    .input_buffer_1_V_d0(grp_input_load_conv_fu_1788_input_buffer_1_V_d0),
    .input_buffer_2_V_address0(grp_input_load_conv_fu_1788_input_buffer_2_V_address0),
    .input_buffer_2_V_ce0(grp_input_load_conv_fu_1788_input_buffer_2_V_ce0),
    .input_buffer_2_V_we0(grp_input_load_conv_fu_1788_input_buffer_2_V_we0),
    .input_buffer_2_V_d0(grp_input_load_conv_fu_1788_input_buffer_2_V_d0),
    .input_buffer_3_V_address0(grp_input_load_conv_fu_1788_input_buffer_3_V_address0),
    .input_buffer_3_V_ce0(grp_input_load_conv_fu_1788_input_buffer_3_V_ce0),
    .input_buffer_3_V_we0(grp_input_load_conv_fu_1788_input_buffer_3_V_we0),
    .input_buffer_3_V_d0(grp_input_load_conv_fu_1788_input_buffer_3_V_d0),
    .TR(TR_read_reg_2426),
    .TC(TC_read_reg_2413),
    .TN(TN_read_reg_2439),
    .offset(tmp_81_reg_2647),
    .enable(grp_input_load_conv_fu_1788_enable)
);

relu grp_relu_fu_1810(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_relu_fu_1810_ap_start),
    .ap_done(grp_relu_fu_1810_ap_done),
    .ap_idle(grp_relu_fu_1810_ap_idle),
    .ap_ready(grp_relu_fu_1810_ap_ready),
    .input_0_address0(grp_relu_fu_1810_input_0_address0),
    .input_0_ce0(grp_relu_fu_1810_input_0_ce0),
    .input_0_we0(grp_relu_fu_1810_input_0_we0),
    .input_0_d0(grp_relu_fu_1810_input_0_d0),
    .input_0_q0(output_buffer_0_q0),
    .input_1_address0(grp_relu_fu_1810_input_1_address0),
    .input_1_ce0(grp_relu_fu_1810_input_1_ce0),
    .input_1_we0(grp_relu_fu_1810_input_1_we0),
    .input_1_d0(grp_relu_fu_1810_input_1_d0),
    .input_1_q0(output_buffer_1_q0),
    .input_2_address0(grp_relu_fu_1810_input_2_address0),
    .input_2_ce0(grp_relu_fu_1810_input_2_ce0),
    .input_2_we0(grp_relu_fu_1810_input_2_we0),
    .input_2_d0(grp_relu_fu_1810_input_2_d0),
    .input_2_q0(output_buffer_2_q0),
    .input_3_address0(grp_relu_fu_1810_input_3_address0),
    .input_3_ce0(grp_relu_fu_1810_input_3_ce0),
    .input_3_we0(grp_relu_fu_1810_input_3_we0),
    .input_3_d0(grp_relu_fu_1810_input_3_d0),
    .input_3_q0(output_buffer_3_q0),
    .input_4_address0(grp_relu_fu_1810_input_4_address0),
    .input_4_ce0(grp_relu_fu_1810_input_4_ce0),
    .input_4_we0(grp_relu_fu_1810_input_4_we0),
    .input_4_d0(grp_relu_fu_1810_input_4_d0),
    .input_4_q0(output_buffer_4_q0),
    .input_5_address0(grp_relu_fu_1810_input_5_address0),
    .input_5_ce0(grp_relu_fu_1810_input_5_ce0),
    .input_5_we0(grp_relu_fu_1810_input_5_we0),
    .input_5_d0(grp_relu_fu_1810_input_5_d0),
    .input_5_q0(output_buffer_5_q0),
    .input_6_address0(grp_relu_fu_1810_input_6_address0),
    .input_6_ce0(grp_relu_fu_1810_input_6_ce0),
    .input_6_we0(grp_relu_fu_1810_input_6_we0),
    .input_6_d0(grp_relu_fu_1810_input_6_d0),
    .input_6_q0(output_buffer_6_q0),
    .input_7_address0(grp_relu_fu_1810_input_7_address0),
    .input_7_ce0(grp_relu_fu_1810_input_7_ce0),
    .input_7_we0(grp_relu_fu_1810_input_7_we0),
    .input_7_d0(grp_relu_fu_1810_input_7_d0),
    .input_7_q0(output_buffer_7_q0),
    .input_8_address0(grp_relu_fu_1810_input_8_address0),
    .input_8_ce0(grp_relu_fu_1810_input_8_ce0),
    .input_8_we0(grp_relu_fu_1810_input_8_we0),
    .input_8_d0(grp_relu_fu_1810_input_8_d0),
    .input_8_q0(output_buffer_8_q0),
    .input_9_address0(grp_relu_fu_1810_input_9_address0),
    .input_9_ce0(grp_relu_fu_1810_input_9_ce0),
    .input_9_we0(grp_relu_fu_1810_input_9_we0),
    .input_9_d0(grp_relu_fu_1810_input_9_d0),
    .input_9_q0(output_buffer_9_q0),
    .input_10_address0(grp_relu_fu_1810_input_10_address0),
    .input_10_ce0(grp_relu_fu_1810_input_10_ce0),
    .input_10_we0(grp_relu_fu_1810_input_10_we0),
    .input_10_d0(grp_relu_fu_1810_input_10_d0),
    .input_10_q0(output_buffer_10_q0),
    .input_11_address0(grp_relu_fu_1810_input_11_address0),
    .input_11_ce0(grp_relu_fu_1810_input_11_ce0),
    .input_11_we0(grp_relu_fu_1810_input_11_we0),
    .input_11_d0(grp_relu_fu_1810_input_11_d0),
    .input_11_q0(output_buffer_11_q0),
    .input_12_address0(grp_relu_fu_1810_input_12_address0),
    .input_12_ce0(grp_relu_fu_1810_input_12_ce0),
    .input_12_we0(grp_relu_fu_1810_input_12_we0),
    .input_12_d0(grp_relu_fu_1810_input_12_d0),
    .input_12_q0(output_buffer_12_q0),
    .input_13_address0(grp_relu_fu_1810_input_13_address0),
    .input_13_ce0(grp_relu_fu_1810_input_13_ce0),
    .input_13_we0(grp_relu_fu_1810_input_13_we0),
    .input_13_d0(grp_relu_fu_1810_input_13_d0),
    .input_13_q0(output_buffer_13_q0),
    .input_14_address0(grp_relu_fu_1810_input_14_address0),
    .input_14_ce0(grp_relu_fu_1810_input_14_ce0),
    .input_14_we0(grp_relu_fu_1810_input_14_we0),
    .input_14_d0(grp_relu_fu_1810_input_14_d0),
    .input_14_q0(output_buffer_14_q0),
    .input_15_address0(grp_relu_fu_1810_input_15_address0),
    .input_15_ce0(grp_relu_fu_1810_input_15_ce0),
    .input_15_we0(grp_relu_fu_1810_input_15_we0),
    .input_15_d0(grp_relu_fu_1810_input_15_d0),
    .input_15_q0(output_buffer_15_q0),
    .input_16_address0(grp_relu_fu_1810_input_16_address0),
    .input_16_ce0(grp_relu_fu_1810_input_16_ce0),
    .input_16_we0(grp_relu_fu_1810_input_16_we0),
    .input_16_d0(grp_relu_fu_1810_input_16_d0),
    .input_16_q0(output_buffer_16_q0),
    .input_17_address0(grp_relu_fu_1810_input_17_address0),
    .input_17_ce0(grp_relu_fu_1810_input_17_ce0),
    .input_17_we0(grp_relu_fu_1810_input_17_we0),
    .input_17_d0(grp_relu_fu_1810_input_17_d0),
    .input_17_q0(output_buffer_17_q0),
    .input_18_address0(grp_relu_fu_1810_input_18_address0),
    .input_18_ce0(grp_relu_fu_1810_input_18_ce0),
    .input_18_we0(grp_relu_fu_1810_input_18_we0),
    .input_18_d0(grp_relu_fu_1810_input_18_d0),
    .input_18_q0(output_buffer_18_q0),
    .input_19_address0(grp_relu_fu_1810_input_19_address0),
    .input_19_ce0(grp_relu_fu_1810_input_19_ce0),
    .input_19_we0(grp_relu_fu_1810_input_19_we0),
    .input_19_d0(grp_relu_fu_1810_input_19_d0),
    .input_19_q0(output_buffer_19_q0),
    .input_20_address0(grp_relu_fu_1810_input_20_address0),
    .input_20_ce0(grp_relu_fu_1810_input_20_ce0),
    .input_20_we0(grp_relu_fu_1810_input_20_we0),
    .input_20_d0(grp_relu_fu_1810_input_20_d0),
    .input_20_q0(output_buffer_20_q0),
    .input_21_address0(grp_relu_fu_1810_input_21_address0),
    .input_21_ce0(grp_relu_fu_1810_input_21_ce0),
    .input_21_we0(grp_relu_fu_1810_input_21_we0),
    .input_21_d0(grp_relu_fu_1810_input_21_d0),
    .input_21_q0(output_buffer_21_q0),
    .input_22_address0(grp_relu_fu_1810_input_22_address0),
    .input_22_ce0(grp_relu_fu_1810_input_22_ce0),
    .input_22_we0(grp_relu_fu_1810_input_22_we0),
    .input_22_d0(grp_relu_fu_1810_input_22_d0),
    .input_22_q0(output_buffer_22_q0),
    .input_23_address0(grp_relu_fu_1810_input_23_address0),
    .input_23_ce0(grp_relu_fu_1810_input_23_ce0),
    .input_23_we0(grp_relu_fu_1810_input_23_we0),
    .input_23_d0(grp_relu_fu_1810_input_23_d0),
    .input_23_q0(output_buffer_23_q0),
    .input_24_address0(grp_relu_fu_1810_input_24_address0),
    .input_24_ce0(grp_relu_fu_1810_input_24_ce0),
    .input_24_we0(grp_relu_fu_1810_input_24_we0),
    .input_24_d0(grp_relu_fu_1810_input_24_d0),
    .input_24_q0(output_buffer_24_q0),
    .input_25_address0(grp_relu_fu_1810_input_25_address0),
    .input_25_ce0(grp_relu_fu_1810_input_25_ce0),
    .input_25_we0(grp_relu_fu_1810_input_25_we0),
    .input_25_d0(grp_relu_fu_1810_input_25_d0),
    .input_25_q0(output_buffer_25_q0),
    .input_26_address0(grp_relu_fu_1810_input_26_address0),
    .input_26_ce0(grp_relu_fu_1810_input_26_ce0),
    .input_26_we0(grp_relu_fu_1810_input_26_we0),
    .input_26_d0(grp_relu_fu_1810_input_26_d0),
    .input_26_q0(output_buffer_26_q0),
    .input_27_address0(grp_relu_fu_1810_input_27_address0),
    .input_27_ce0(grp_relu_fu_1810_input_27_ce0),
    .input_27_we0(grp_relu_fu_1810_input_27_we0),
    .input_27_d0(grp_relu_fu_1810_input_27_d0),
    .input_27_q0(output_buffer_27_q0),
    .input_28_address0(grp_relu_fu_1810_input_28_address0),
    .input_28_ce0(grp_relu_fu_1810_input_28_ce0),
    .input_28_we0(grp_relu_fu_1810_input_28_we0),
    .input_28_d0(grp_relu_fu_1810_input_28_d0),
    .input_28_q0(output_buffer_28_q0),
    .input_29_address0(grp_relu_fu_1810_input_29_address0),
    .input_29_ce0(grp_relu_fu_1810_input_29_ce0),
    .input_29_we0(grp_relu_fu_1810_input_29_we0),
    .input_29_d0(grp_relu_fu_1810_input_29_d0),
    .input_29_q0(output_buffer_29_q0),
    .input_30_address0(grp_relu_fu_1810_input_30_address0),
    .input_30_ce0(grp_relu_fu_1810_input_30_ce0),
    .input_30_we0(grp_relu_fu_1810_input_30_we0),
    .input_30_d0(grp_relu_fu_1810_input_30_d0),
    .input_30_q0(output_buffer_30_q0),
    .input_31_address0(grp_relu_fu_1810_input_31_address0),
    .input_31_ce0(grp_relu_fu_1810_input_31_ce0),
    .input_31_we0(grp_relu_fu_1810_input_31_we0),
    .input_31_d0(grp_relu_fu_1810_input_31_d0),
    .input_31_q0(output_buffer_31_q0),
    .TR(TR_read_reg_2426),
    .TC(TC_read_reg_2413),
    .enable(grp_relu_fu_1810_enable),
    .M(M_read_reg_2386)
);

fc grp_fc_fu_1882(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_fc_fu_1882_ap_start),
    .ap_done(grp_fc_fu_1882_ap_done),
    .ap_idle(grp_fc_fu_1882_ap_idle),
    .ap_ready(grp_fc_fu_1882_ap_ready),
    .input_buffer_0_address0(grp_fc_fu_1882_input_buffer_0_address0),
    .input_buffer_0_ce0(grp_fc_fu_1882_input_buffer_0_ce0),
    .input_buffer_0_q0(input_buffer_fc_0_q0),
    .input_buffer_1_address0(grp_fc_fu_1882_input_buffer_1_address0),
    .input_buffer_1_ce0(grp_fc_fu_1882_input_buffer_1_ce0),
    .input_buffer_1_q0(input_buffer_fc_1_q0),
    .input_buffer_2_address0(grp_fc_fu_1882_input_buffer_2_address0),
    .input_buffer_2_ce0(grp_fc_fu_1882_input_buffer_2_ce0),
    .input_buffer_2_q0(input_buffer_fc_2_q0),
    .input_buffer_3_address0(grp_fc_fu_1882_input_buffer_3_address0),
    .input_buffer_3_ce0(grp_fc_fu_1882_input_buffer_3_ce0),
    .input_buffer_3_q0(input_buffer_fc_3_q0),
    .input_buffer_4_address0(grp_fc_fu_1882_input_buffer_4_address0),
    .input_buffer_4_ce0(grp_fc_fu_1882_input_buffer_4_ce0),
    .input_buffer_4_q0(input_buffer_fc_4_q0),
    .input_buffer_5_address0(grp_fc_fu_1882_input_buffer_5_address0),
    .input_buffer_5_ce0(grp_fc_fu_1882_input_buffer_5_ce0),
    .input_buffer_5_q0(input_buffer_fc_5_q0),
    .input_buffer_6_address0(grp_fc_fu_1882_input_buffer_6_address0),
    .input_buffer_6_ce0(grp_fc_fu_1882_input_buffer_6_ce0),
    .input_buffer_6_q0(input_buffer_fc_6_q0),
    .input_buffer_7_address0(grp_fc_fu_1882_input_buffer_7_address0),
    .input_buffer_7_ce0(grp_fc_fu_1882_input_buffer_7_ce0),
    .input_buffer_7_q0(input_buffer_fc_7_q0),
    .output_buffer_0_address0(grp_fc_fu_1882_output_buffer_0_address0),
    .output_buffer_0_ce0(grp_fc_fu_1882_output_buffer_0_ce0),
    .output_buffer_0_we0(grp_fc_fu_1882_output_buffer_0_we0),
    .output_buffer_0_d0(grp_fc_fu_1882_output_buffer_0_d0),
    .output_buffer_0_q0(output_buffer_fc_0_q0),
    .output_buffer_1_address0(grp_fc_fu_1882_output_buffer_1_address0),
    .output_buffer_1_ce0(grp_fc_fu_1882_output_buffer_1_ce0),
    .output_buffer_1_we0(grp_fc_fu_1882_output_buffer_1_we0),
    .output_buffer_1_d0(grp_fc_fu_1882_output_buffer_1_d0),
    .output_buffer_1_q0(output_buffer_fc_1_q0),
    .output_buffer_2_address0(grp_fc_fu_1882_output_buffer_2_address0),
    .output_buffer_2_ce0(grp_fc_fu_1882_output_buffer_2_ce0),
    .output_buffer_2_we0(grp_fc_fu_1882_output_buffer_2_we0),
    .output_buffer_2_d0(grp_fc_fu_1882_output_buffer_2_d0),
    .output_buffer_2_q0(output_buffer_fc_2_q0),
    .output_buffer_3_address0(grp_fc_fu_1882_output_buffer_3_address0),
    .output_buffer_3_ce0(grp_fc_fu_1882_output_buffer_3_ce0),
    .output_buffer_3_we0(grp_fc_fu_1882_output_buffer_3_we0),
    .output_buffer_3_d0(grp_fc_fu_1882_output_buffer_3_d0),
    .output_buffer_3_q0(output_buffer_fc_3_q0),
    .output_buffer_4_address0(grp_fc_fu_1882_output_buffer_4_address0),
    .output_buffer_4_ce0(grp_fc_fu_1882_output_buffer_4_ce0),
    .output_buffer_4_we0(grp_fc_fu_1882_output_buffer_4_we0),
    .output_buffer_4_d0(grp_fc_fu_1882_output_buffer_4_d0),
    .output_buffer_4_q0(output_buffer_fc_4_q0),
    .output_buffer_5_address0(grp_fc_fu_1882_output_buffer_5_address0),
    .output_buffer_5_ce0(grp_fc_fu_1882_output_buffer_5_ce0),
    .output_buffer_5_we0(grp_fc_fu_1882_output_buffer_5_we0),
    .output_buffer_5_d0(grp_fc_fu_1882_output_buffer_5_d0),
    .output_buffer_5_q0(output_buffer_fc_5_q0),
    .output_buffer_6_address0(grp_fc_fu_1882_output_buffer_6_address0),
    .output_buffer_6_ce0(grp_fc_fu_1882_output_buffer_6_ce0),
    .output_buffer_6_we0(grp_fc_fu_1882_output_buffer_6_we0),
    .output_buffer_6_d0(grp_fc_fu_1882_output_buffer_6_d0),
    .output_buffer_6_q0(output_buffer_fc_6_q0),
    .output_buffer_7_address0(grp_fc_fu_1882_output_buffer_7_address0),
    .output_buffer_7_ce0(grp_fc_fu_1882_output_buffer_7_ce0),
    .output_buffer_7_we0(grp_fc_fu_1882_output_buffer_7_we0),
    .output_buffer_7_d0(grp_fc_fu_1882_output_buffer_7_d0),
    .output_buffer_7_q0(output_buffer_fc_7_q0),
    .beta_buffer_address0(grp_fc_fu_1882_beta_buffer_address0),
    .beta_buffer_ce0(grp_fc_fu_1882_beta_buffer_ce0),
    .beta_buffer_q0(beta_buffer_q0),
    .enable(grp_fc_fu_1882_enable),
    .m(m_reg_891),
    .n(n1_reg_939),
    .weight_buffer_fc_0_address0(grp_fc_fu_1882_weight_buffer_fc_0_address0),
    .weight_buffer_fc_0_ce0(grp_fc_fu_1882_weight_buffer_fc_0_ce0),
    .weight_buffer_fc_0_q0(weight_buffer_fc_0_q0),
    .weight_buffer_fc_1_address0(grp_fc_fu_1882_weight_buffer_fc_1_address0),
    .weight_buffer_fc_1_ce0(grp_fc_fu_1882_weight_buffer_fc_1_ce0),
    .weight_buffer_fc_1_q0(weight_buffer_fc_1_q0),
    .weight_buffer_fc_2_address0(grp_fc_fu_1882_weight_buffer_fc_2_address0),
    .weight_buffer_fc_2_ce0(grp_fc_fu_1882_weight_buffer_fc_2_ce0),
    .weight_buffer_fc_2_q0(weight_buffer_fc_2_q0),
    .weight_buffer_fc_3_address0(grp_fc_fu_1882_weight_buffer_fc_3_address0),
    .weight_buffer_fc_3_ce0(grp_fc_fu_1882_weight_buffer_fc_3_ce0),
    .weight_buffer_fc_3_q0(weight_buffer_fc_3_q0),
    .weight_buffer_fc_4_address0(grp_fc_fu_1882_weight_buffer_fc_4_address0),
    .weight_buffer_fc_4_ce0(grp_fc_fu_1882_weight_buffer_fc_4_ce0),
    .weight_buffer_fc_4_q0(weight_buffer_fc_4_q0),
    .weight_buffer_fc_5_address0(grp_fc_fu_1882_weight_buffer_fc_5_address0),
    .weight_buffer_fc_5_ce0(grp_fc_fu_1882_weight_buffer_fc_5_ce0),
    .weight_buffer_fc_5_q0(weight_buffer_fc_5_q0),
    .weight_buffer_fc_6_address0(grp_fc_fu_1882_weight_buffer_fc_6_address0),
    .weight_buffer_fc_6_ce0(grp_fc_fu_1882_weight_buffer_fc_6_ce0),
    .weight_buffer_fc_6_q0(weight_buffer_fc_6_q0),
    .weight_buffer_fc_7_address0(grp_fc_fu_1882_weight_buffer_fc_7_address0),
    .weight_buffer_fc_7_ce0(grp_fc_fu_1882_weight_buffer_fc_7_ce0),
    .weight_buffer_fc_7_q0(weight_buffer_fc_7_q0)
);

relu_fc grp_relu_fc_fu_1941(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_relu_fc_fu_1941_ap_start),
    .ap_done(grp_relu_fc_fu_1941_ap_done),
    .ap_idle(grp_relu_fc_fu_1941_ap_idle),
    .ap_ready(grp_relu_fc_fu_1941_ap_ready),
    .enable(grp_relu_fc_fu_1941_enable),
    .M(M_read_reg_2386),
    .output_buffer_fc_0_address0(grp_relu_fc_fu_1941_output_buffer_fc_0_address0),
    .output_buffer_fc_0_ce0(grp_relu_fc_fu_1941_output_buffer_fc_0_ce0),
    .output_buffer_fc_0_we0(grp_relu_fc_fu_1941_output_buffer_fc_0_we0),
    .output_buffer_fc_0_d0(grp_relu_fc_fu_1941_output_buffer_fc_0_d0),
    .output_buffer_fc_0_q0(output_buffer_fc_0_q0),
    .output_buffer_fc_1_address0(grp_relu_fc_fu_1941_output_buffer_fc_1_address0),
    .output_buffer_fc_1_ce0(grp_relu_fc_fu_1941_output_buffer_fc_1_ce0),
    .output_buffer_fc_1_we0(grp_relu_fc_fu_1941_output_buffer_fc_1_we0),
    .output_buffer_fc_1_d0(grp_relu_fc_fu_1941_output_buffer_fc_1_d0),
    .output_buffer_fc_1_q0(output_buffer_fc_1_q0),
    .output_buffer_fc_2_address0(grp_relu_fc_fu_1941_output_buffer_fc_2_address0),
    .output_buffer_fc_2_ce0(grp_relu_fc_fu_1941_output_buffer_fc_2_ce0),
    .output_buffer_fc_2_we0(grp_relu_fc_fu_1941_output_buffer_fc_2_we0),
    .output_buffer_fc_2_d0(grp_relu_fc_fu_1941_output_buffer_fc_2_d0),
    .output_buffer_fc_2_q0(output_buffer_fc_2_q0),
    .output_buffer_fc_3_address0(grp_relu_fc_fu_1941_output_buffer_fc_3_address0),
    .output_buffer_fc_3_ce0(grp_relu_fc_fu_1941_output_buffer_fc_3_ce0),
    .output_buffer_fc_3_we0(grp_relu_fc_fu_1941_output_buffer_fc_3_we0),
    .output_buffer_fc_3_d0(grp_relu_fc_fu_1941_output_buffer_fc_3_d0),
    .output_buffer_fc_3_q0(output_buffer_fc_3_q0),
    .output_buffer_fc_4_address0(grp_relu_fc_fu_1941_output_buffer_fc_4_address0),
    .output_buffer_fc_4_ce0(grp_relu_fc_fu_1941_output_buffer_fc_4_ce0),
    .output_buffer_fc_4_we0(grp_relu_fc_fu_1941_output_buffer_fc_4_we0),
    .output_buffer_fc_4_d0(grp_relu_fc_fu_1941_output_buffer_fc_4_d0),
    .output_buffer_fc_4_q0(output_buffer_fc_4_q0),
    .output_buffer_fc_5_address0(grp_relu_fc_fu_1941_output_buffer_fc_5_address0),
    .output_buffer_fc_5_ce0(grp_relu_fc_fu_1941_output_buffer_fc_5_ce0),
    .output_buffer_fc_5_we0(grp_relu_fc_fu_1941_output_buffer_fc_5_we0),
    .output_buffer_fc_5_d0(grp_relu_fc_fu_1941_output_buffer_fc_5_d0),
    .output_buffer_fc_5_q0(output_buffer_fc_5_q0),
    .output_buffer_fc_6_address0(grp_relu_fc_fu_1941_output_buffer_fc_6_address0),
    .output_buffer_fc_6_ce0(grp_relu_fc_fu_1941_output_buffer_fc_6_ce0),
    .output_buffer_fc_6_we0(grp_relu_fc_fu_1941_output_buffer_fc_6_we0),
    .output_buffer_fc_6_d0(grp_relu_fc_fu_1941_output_buffer_fc_6_d0),
    .output_buffer_fc_6_q0(output_buffer_fc_6_q0),
    .output_buffer_fc_7_address0(grp_relu_fc_fu_1941_output_buffer_fc_7_address0),
    .output_buffer_fc_7_ce0(grp_relu_fc_fu_1941_output_buffer_fc_7_ce0),
    .output_buffer_fc_7_we0(grp_relu_fc_fu_1941_output_buffer_fc_7_we0),
    .output_buffer_fc_7_d0(grp_relu_fc_fu_1941_output_buffer_fc_7_d0),
    .output_buffer_fc_7_q0(output_buffer_fc_7_q0)
);

output_write_fc grp_output_write_fc_fu_1963(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_output_write_fc_fu_1963_ap_start),
    .ap_done(grp_output_write_fc_fu_1963_ap_done),
    .ap_idle(grp_output_write_fc_fu_1963_ap_idle),
    .ap_ready(grp_output_write_fc_fu_1963_ap_ready),
    .m_axi_Output_r_AWVALID(grp_output_write_fc_fu_1963_m_axi_Output_r_AWVALID),
    .m_axi_Output_r_AWREADY(Output_r_AWREADY),
    .m_axi_Output_r_AWADDR(grp_output_write_fc_fu_1963_m_axi_Output_r_AWADDR),
    .m_axi_Output_r_AWID(grp_output_write_fc_fu_1963_m_axi_Output_r_AWID),
    .m_axi_Output_r_AWLEN(grp_output_write_fc_fu_1963_m_axi_Output_r_AWLEN),
    .m_axi_Output_r_AWSIZE(grp_output_write_fc_fu_1963_m_axi_Output_r_AWSIZE),
    .m_axi_Output_r_AWBURST(grp_output_write_fc_fu_1963_m_axi_Output_r_AWBURST),
    .m_axi_Output_r_AWLOCK(grp_output_write_fc_fu_1963_m_axi_Output_r_AWLOCK),
    .m_axi_Output_r_AWCACHE(grp_output_write_fc_fu_1963_m_axi_Output_r_AWCACHE),
    .m_axi_Output_r_AWPROT(grp_output_write_fc_fu_1963_m_axi_Output_r_AWPROT),
    .m_axi_Output_r_AWQOS(grp_output_write_fc_fu_1963_m_axi_Output_r_AWQOS),
    .m_axi_Output_r_AWREGION(grp_output_write_fc_fu_1963_m_axi_Output_r_AWREGION),
    .m_axi_Output_r_AWUSER(grp_output_write_fc_fu_1963_m_axi_Output_r_AWUSER),
    .m_axi_Output_r_WVALID(grp_output_write_fc_fu_1963_m_axi_Output_r_WVALID),
    .m_axi_Output_r_WREADY(Output_r_WREADY),
    .m_axi_Output_r_WDATA(grp_output_write_fc_fu_1963_m_axi_Output_r_WDATA),
    .m_axi_Output_r_WSTRB(grp_output_write_fc_fu_1963_m_axi_Output_r_WSTRB),
    .m_axi_Output_r_WLAST(grp_output_write_fc_fu_1963_m_axi_Output_r_WLAST),
    .m_axi_Output_r_WID(grp_output_write_fc_fu_1963_m_axi_Output_r_WID),
    .m_axi_Output_r_WUSER(grp_output_write_fc_fu_1963_m_axi_Output_r_WUSER),
    .m_axi_Output_r_ARVALID(grp_output_write_fc_fu_1963_m_axi_Output_r_ARVALID),
    .m_axi_Output_r_ARREADY(1'b0),
    .m_axi_Output_r_ARADDR(grp_output_write_fc_fu_1963_m_axi_Output_r_ARADDR),
    .m_axi_Output_r_ARID(grp_output_write_fc_fu_1963_m_axi_Output_r_ARID),
    .m_axi_Output_r_ARLEN(grp_output_write_fc_fu_1963_m_axi_Output_r_ARLEN),
    .m_axi_Output_r_ARSIZE(grp_output_write_fc_fu_1963_m_axi_Output_r_ARSIZE),
    .m_axi_Output_r_ARBURST(grp_output_write_fc_fu_1963_m_axi_Output_r_ARBURST),
    .m_axi_Output_r_ARLOCK(grp_output_write_fc_fu_1963_m_axi_Output_r_ARLOCK),
    .m_axi_Output_r_ARCACHE(grp_output_write_fc_fu_1963_m_axi_Output_r_ARCACHE),
    .m_axi_Output_r_ARPROT(grp_output_write_fc_fu_1963_m_axi_Output_r_ARPROT),
    .m_axi_Output_r_ARQOS(grp_output_write_fc_fu_1963_m_axi_Output_r_ARQOS),
    .m_axi_Output_r_ARREGION(grp_output_write_fc_fu_1963_m_axi_Output_r_ARREGION),
    .m_axi_Output_r_ARUSER(grp_output_write_fc_fu_1963_m_axi_Output_r_ARUSER),
    .m_axi_Output_r_RVALID(1'b0),
    .m_axi_Output_r_RREADY(grp_output_write_fc_fu_1963_m_axi_Output_r_RREADY),
    .m_axi_Output_r_RDATA(32'd0),
    .m_axi_Output_r_RLAST(1'b0),
    .m_axi_Output_r_RID(1'd0),
    .m_axi_Output_r_RUSER(1'd0),
    .m_axi_Output_r_RRESP(2'd0),
    .m_axi_Output_r_BVALID(Output_r_BVALID),
    .m_axi_Output_r_BREADY(grp_output_write_fc_fu_1963_m_axi_Output_r_BREADY),
    .m_axi_Output_r_BRESP(Output_r_BRESP),
    .m_axi_Output_r_BID(Output_r_BID),
    .m_axi_Output_r_BUSER(Output_r_BUSER),
    .Output_offset(Output_offset3_reg_2475),
    .enable(grp_output_write_fc_fu_1963_enable),
    .output_buffer_fc_0_address0(grp_output_write_fc_fu_1963_output_buffer_fc_0_address0),
    .output_buffer_fc_0_ce0(grp_output_write_fc_fu_1963_output_buffer_fc_0_ce0),
    .output_buffer_fc_0_q0(output_buffer_fc_0_q0),
    .output_buffer_fc_1_address0(grp_output_write_fc_fu_1963_output_buffer_fc_1_address0),
    .output_buffer_fc_1_ce0(grp_output_write_fc_fu_1963_output_buffer_fc_1_ce0),
    .output_buffer_fc_1_q0(output_buffer_fc_1_q0),
    .output_buffer_fc_2_address0(grp_output_write_fc_fu_1963_output_buffer_fc_2_address0),
    .output_buffer_fc_2_ce0(grp_output_write_fc_fu_1963_output_buffer_fc_2_ce0),
    .output_buffer_fc_2_q0(output_buffer_fc_2_q0),
    .output_buffer_fc_3_address0(grp_output_write_fc_fu_1963_output_buffer_fc_3_address0),
    .output_buffer_fc_3_ce0(grp_output_write_fc_fu_1963_output_buffer_fc_3_ce0),
    .output_buffer_fc_3_q0(output_buffer_fc_3_q0),
    .output_buffer_fc_4_address0(grp_output_write_fc_fu_1963_output_buffer_fc_4_address0),
    .output_buffer_fc_4_ce0(grp_output_write_fc_fu_1963_output_buffer_fc_4_ce0),
    .output_buffer_fc_4_q0(output_buffer_fc_4_q0),
    .output_buffer_fc_5_address0(grp_output_write_fc_fu_1963_output_buffer_fc_5_address0),
    .output_buffer_fc_5_ce0(grp_output_write_fc_fu_1963_output_buffer_fc_5_ce0),
    .output_buffer_fc_5_q0(output_buffer_fc_5_q0),
    .output_buffer_fc_6_address0(grp_output_write_fc_fu_1963_output_buffer_fc_6_address0),
    .output_buffer_fc_6_ce0(grp_output_write_fc_fu_1963_output_buffer_fc_6_ce0),
    .output_buffer_fc_6_q0(output_buffer_fc_6_q0),
    .output_buffer_fc_7_address0(grp_output_write_fc_fu_1963_output_buffer_fc_7_address0),
    .output_buffer_fc_7_ce0(grp_output_write_fc_fu_1963_output_buffer_fc_7_ce0),
    .output_buffer_fc_7_q0(output_buffer_fc_7_q0)
);

weight_load_fc grp_weight_load_fc_fu_1987(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_weight_load_fc_fu_1987_ap_start),
    .ap_done(grp_weight_load_fc_fu_1987_ap_done),
    .ap_idle(grp_weight_load_fc_fu_1987_ap_idle),
    .ap_ready(grp_weight_load_fc_fu_1987_ap_ready),
    .weight_buffer_fc_0_address0(grp_weight_load_fc_fu_1987_weight_buffer_fc_0_address0),
    .weight_buffer_fc_0_ce0(grp_weight_load_fc_fu_1987_weight_buffer_fc_0_ce0),
    .weight_buffer_fc_0_we0(grp_weight_load_fc_fu_1987_weight_buffer_fc_0_we0),
    .weight_buffer_fc_0_d0(grp_weight_load_fc_fu_1987_weight_buffer_fc_0_d0),
    .weight_buffer_fc_1_address0(grp_weight_load_fc_fu_1987_weight_buffer_fc_1_address0),
    .weight_buffer_fc_1_ce0(grp_weight_load_fc_fu_1987_weight_buffer_fc_1_ce0),
    .weight_buffer_fc_1_we0(grp_weight_load_fc_fu_1987_weight_buffer_fc_1_we0),
    .weight_buffer_fc_1_d0(grp_weight_load_fc_fu_1987_weight_buffer_fc_1_d0),
    .weight_buffer_fc_2_address0(grp_weight_load_fc_fu_1987_weight_buffer_fc_2_address0),
    .weight_buffer_fc_2_ce0(grp_weight_load_fc_fu_1987_weight_buffer_fc_2_ce0),
    .weight_buffer_fc_2_we0(grp_weight_load_fc_fu_1987_weight_buffer_fc_2_we0),
    .weight_buffer_fc_2_d0(grp_weight_load_fc_fu_1987_weight_buffer_fc_2_d0),
    .weight_buffer_fc_3_address0(grp_weight_load_fc_fu_1987_weight_buffer_fc_3_address0),
    .weight_buffer_fc_3_ce0(grp_weight_load_fc_fu_1987_weight_buffer_fc_3_ce0),
    .weight_buffer_fc_3_we0(grp_weight_load_fc_fu_1987_weight_buffer_fc_3_we0),
    .weight_buffer_fc_3_d0(grp_weight_load_fc_fu_1987_weight_buffer_fc_3_d0),
    .weight_buffer_fc_4_address0(grp_weight_load_fc_fu_1987_weight_buffer_fc_4_address0),
    .weight_buffer_fc_4_ce0(grp_weight_load_fc_fu_1987_weight_buffer_fc_4_ce0),
    .weight_buffer_fc_4_we0(grp_weight_load_fc_fu_1987_weight_buffer_fc_4_we0),
    .weight_buffer_fc_4_d0(grp_weight_load_fc_fu_1987_weight_buffer_fc_4_d0),
    .weight_buffer_fc_5_address0(grp_weight_load_fc_fu_1987_weight_buffer_fc_5_address0),
    .weight_buffer_fc_5_ce0(grp_weight_load_fc_fu_1987_weight_buffer_fc_5_ce0),
    .weight_buffer_fc_5_we0(grp_weight_load_fc_fu_1987_weight_buffer_fc_5_we0),
    .weight_buffer_fc_5_d0(grp_weight_load_fc_fu_1987_weight_buffer_fc_5_d0),
    .weight_buffer_fc_6_address0(grp_weight_load_fc_fu_1987_weight_buffer_fc_6_address0),
    .weight_buffer_fc_6_ce0(grp_weight_load_fc_fu_1987_weight_buffer_fc_6_ce0),
    .weight_buffer_fc_6_we0(grp_weight_load_fc_fu_1987_weight_buffer_fc_6_we0),
    .weight_buffer_fc_6_d0(grp_weight_load_fc_fu_1987_weight_buffer_fc_6_d0),
    .weight_buffer_fc_7_address0(grp_weight_load_fc_fu_1987_weight_buffer_fc_7_address0),
    .weight_buffer_fc_7_ce0(grp_weight_load_fc_fu_1987_weight_buffer_fc_7_ce0),
    .weight_buffer_fc_7_we0(grp_weight_load_fc_fu_1987_weight_buffer_fc_7_we0),
    .weight_buffer_fc_7_d0(grp_weight_load_fc_fu_1987_weight_buffer_fc_7_d0),
    .m_axi_Weight_AWVALID(grp_weight_load_fc_fu_1987_m_axi_Weight_AWVALID),
    .m_axi_Weight_AWREADY(1'b0),
    .m_axi_Weight_AWADDR(grp_weight_load_fc_fu_1987_m_axi_Weight_AWADDR),
    .m_axi_Weight_AWID(grp_weight_load_fc_fu_1987_m_axi_Weight_AWID),
    .m_axi_Weight_AWLEN(grp_weight_load_fc_fu_1987_m_axi_Weight_AWLEN),
    .m_axi_Weight_AWSIZE(grp_weight_load_fc_fu_1987_m_axi_Weight_AWSIZE),
    .m_axi_Weight_AWBURST(grp_weight_load_fc_fu_1987_m_axi_Weight_AWBURST),
    .m_axi_Weight_AWLOCK(grp_weight_load_fc_fu_1987_m_axi_Weight_AWLOCK),
    .m_axi_Weight_AWCACHE(grp_weight_load_fc_fu_1987_m_axi_Weight_AWCACHE),
    .m_axi_Weight_AWPROT(grp_weight_load_fc_fu_1987_m_axi_Weight_AWPROT),
    .m_axi_Weight_AWQOS(grp_weight_load_fc_fu_1987_m_axi_Weight_AWQOS),
    .m_axi_Weight_AWREGION(grp_weight_load_fc_fu_1987_m_axi_Weight_AWREGION),
    .m_axi_Weight_AWUSER(grp_weight_load_fc_fu_1987_m_axi_Weight_AWUSER),
    .m_axi_Weight_WVALID(grp_weight_load_fc_fu_1987_m_axi_Weight_WVALID),
    .m_axi_Weight_WREADY(1'b0),
    .m_axi_Weight_WDATA(grp_weight_load_fc_fu_1987_m_axi_Weight_WDATA),
    .m_axi_Weight_WSTRB(grp_weight_load_fc_fu_1987_m_axi_Weight_WSTRB),
    .m_axi_Weight_WLAST(grp_weight_load_fc_fu_1987_m_axi_Weight_WLAST),
    .m_axi_Weight_WID(grp_weight_load_fc_fu_1987_m_axi_Weight_WID),
    .m_axi_Weight_WUSER(grp_weight_load_fc_fu_1987_m_axi_Weight_WUSER),
    .m_axi_Weight_ARVALID(grp_weight_load_fc_fu_1987_m_axi_Weight_ARVALID),
    .m_axi_Weight_ARREADY(Weight_ARREADY),
    .m_axi_Weight_ARADDR(grp_weight_load_fc_fu_1987_m_axi_Weight_ARADDR),
    .m_axi_Weight_ARID(grp_weight_load_fc_fu_1987_m_axi_Weight_ARID),
    .m_axi_Weight_ARLEN(grp_weight_load_fc_fu_1987_m_axi_Weight_ARLEN),
    .m_axi_Weight_ARSIZE(grp_weight_load_fc_fu_1987_m_axi_Weight_ARSIZE),
    .m_axi_Weight_ARBURST(grp_weight_load_fc_fu_1987_m_axi_Weight_ARBURST),
    .m_axi_Weight_ARLOCK(grp_weight_load_fc_fu_1987_m_axi_Weight_ARLOCK),
    .m_axi_Weight_ARCACHE(grp_weight_load_fc_fu_1987_m_axi_Weight_ARCACHE),
    .m_axi_Weight_ARPROT(grp_weight_load_fc_fu_1987_m_axi_Weight_ARPROT),
    .m_axi_Weight_ARQOS(grp_weight_load_fc_fu_1987_m_axi_Weight_ARQOS),
    .m_axi_Weight_ARREGION(grp_weight_load_fc_fu_1987_m_axi_Weight_ARREGION),
    .m_axi_Weight_ARUSER(grp_weight_load_fc_fu_1987_m_axi_Weight_ARUSER),
    .m_axi_Weight_RVALID(Weight_RVALID),
    .m_axi_Weight_RREADY(grp_weight_load_fc_fu_1987_m_axi_Weight_RREADY),
    .m_axi_Weight_RDATA(Weight_RDATA),
    .m_axi_Weight_RLAST(Weight_RLAST),
    .m_axi_Weight_RID(Weight_RID),
    .m_axi_Weight_RUSER(Weight_RUSER),
    .m_axi_Weight_RRESP(Weight_RRESP),
    .m_axi_Weight_BVALID(1'b0),
    .m_axi_Weight_BREADY(grp_weight_load_fc_fu_1987_m_axi_Weight_BREADY),
    .m_axi_Weight_BRESP(2'd0),
    .m_axi_Weight_BID(1'd0),
    .m_axi_Weight_BUSER(1'd0),
    .Weight_offset(Weight_offset5_reg_2469),
    .offset(tmp_78_reg_2629),
    .enable(grp_weight_load_fc_fu_1987_enable)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state9) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state8)) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state9)) begin
                ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state9);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end else if ((1'b1 == ap_CS_fsm_state8)) begin
            ap_enable_reg_pp0_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_subdone) & (1'b1 == ap_condition_pp1_exit_iter0_state19) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state18)) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp1_exit_iter0_state19)) begin
                ap_enable_reg_pp1_iter1 <= (1'b1 ^ ap_condition_pp1_exit_iter0_state19);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp1_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
        end else if ((1'b1 == ap_CS_fsm_state18)) begin
            ap_enable_reg_pp1_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ioackin_Beta_ARREADY <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state2)) begin
            if ((ap_sig_ioackin_Beta_ARREADY == 1'b1)) begin
                ap_reg_ioackin_Beta_ARREADY <= 1'b0;
            end else if ((1'b1 == Beta_ARREADY)) begin
                ap_reg_ioackin_Beta_ARREADY <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_reg_ioackin_Input_r_ARREADY <= 1'b0;
    end else begin
        if (((tmp_s_fu_2095_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state12))) begin
            if ((1'b0 == ap_block_state12_io)) begin
                ap_reg_ioackin_Input_r_ARREADY <= 1'b0;
            end else if ((1'b1 == Input_r_ARREADY)) begin
                ap_reg_ioackin_Input_r_ARREADY <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_conv_fu_1033_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state30)) begin
            grp_conv_fu_1033_ap_start_reg <= 1'b1;
        end else if ((grp_conv_fu_1033_ap_ready == 1'b1)) begin
            grp_conv_fu_1033_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_fc_fu_1882_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state32)) begin
            grp_fc_fu_1882_ap_start_reg <= 1'b1;
        end else if ((grp_fc_fu_1882_ap_ready == 1'b1)) begin
            grp_fc_fu_1882_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_input_load_conv_fu_1788_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state28)) begin
            grp_input_load_conv_fu_1788_ap_start_reg <= 1'b1;
        end else if ((grp_input_load_conv_fu_1788_ap_ready == 1'b1)) begin
            grp_input_load_conv_fu_1788_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_output_write_fc_fu_1963_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state40)) begin
            grp_output_write_fc_fu_1963_ap_start_reg <= 1'b1;
        end else if ((grp_output_write_fc_fu_1963_ap_ready == 1'b1)) begin
            grp_output_write_fc_fu_1963_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_output_write_fu_1709_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state37)) begin
            grp_output_write_fu_1709_ap_start_reg <= 1'b1;
        end else if ((grp_output_write_fu_1709_ap_ready == 1'b1)) begin
            grp_output_write_fu_1709_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_pool_fu_962_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state35)) begin
            grp_pool_fu_962_ap_start_reg <= 1'b1;
        end else if ((grp_pool_fu_962_ap_ready == 1'b1)) begin
            grp_pool_fu_962_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_relu_fc_fu_1941_ap_start_reg <= 1'b0;
    end else begin
        if (((tmp_76_fu_2315_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state23))) begin
            grp_relu_fc_fu_1941_ap_start_reg <= 1'b1;
        end else if ((grp_relu_fc_fu_1941_ap_ready == 1'b1)) begin
            grp_relu_fc_fu_1941_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_relu_fu_1810_ap_start_reg <= 1'b0;
    end else begin
        if (((tmp_80_fu_2342_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state24))) begin
            grp_relu_fu_1810_ap_start_reg <= 1'b1;
        end else if ((grp_relu_fu_1810_ap_ready == 1'b1)) begin
            grp_relu_fu_1810_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_weight_load_fc_fu_1987_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state30)) begin
            grp_weight_load_fc_fu_1987_ap_start_reg <= 1'b1;
        end else if ((grp_weight_load_fc_fu_1987_ap_ready == 1'b1)) begin
            grp_weight_load_fc_fu_1987_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_weight_load_fu_1439_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state28)) begin
            grp_weight_load_fu_1439_ap_start_reg <= 1'b1;
        end else if ((grp_weight_load_fu_1439_ap_ready == 1'b1)) begin
            grp_weight_load_fu_1439_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        indvar2_reg_880 <= 13'd0;
    end else if (((1'b0 == ap_block_pp1_stage0_11001) & (exitcond1_fu_2100_p2 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        indvar2_reg_880 <= indvar_next1_fu_2106_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (exitcond_reg_2510 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        indvar_reg_868 <= indvar_next_reg_2514;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        indvar_reg_868 <= 30'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_output_write_fu_1709_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state38))) begin
        m_reg_891 <= m_1_reg_2624;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        m_reg_891 <= 31'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_76_fu_2315_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state23))) begin
        n1_reg_939 <= 31'd0;
    end else if (((grp_fc_fu_1882_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state33))) begin
        n1_reg_939 <= tmp_83_reg_2637;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_output_write_fu_1709_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state38))) begin
        phi_mul1_reg_915 <= next_mul2_reg_2611;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        phi_mul1_reg_915 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_output_write_fu_1709_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state38))) begin
        phi_mul2_reg_927 <= next_mul1_reg_2606;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        phi_mul2_reg_927 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_output_write_fu_1709_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state38))) begin
        phi_mul9_reg_903 <= next_mul3_reg_2616;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        phi_mul9_reg_903 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_76_fu_2315_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state23))) begin
        phi_mul_reg_951 <= 32'd0;
    end else if (((grp_fc_fu_1882_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state33))) begin
        phi_mul_reg_951 <= next_mul_reg_2642;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (exitcond_reg_2510 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        Beta_addr_read_reg_2519 <= Beta_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        Beta_offset7_reg_2464 <= {{Beta_offset[31:2]}};
        Input_offset1_reg_2481 <= {{Input_offset[31:2]}};
        Kernel_size_read_reg_2457 <= Kernel_size;
        LayerType_read_reg_2392 <= LayerType;
        M_read_reg_2386 <= M;
        Output_offset3_reg_2475 <= {{Output_offset[31:2]}};
        TC_read_reg_2413 <= TC;
        TM_read_reg_2448 <= TM;
        TN_read_reg_2439 <= TN;
        TR_read_reg_2426 <= TR;
        Weight_offset5_reg_2469 <= {{Weight_offset[31:2]}};
        mLoops_read_reg_2408 <= mLoops;
        nLoops_read_reg_2399 <= nLoops;
        tmp_197_reg_2487 <= tmp_197_fu_2052_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        Input_addr_read_reg_2546 <= Input_r_RDATA;
        newIndex_reg_2541_pp1_iter1_reg <= newIndex_reg_2541;
        tmp_198_reg_2537_pp1_iter1_reg <= tmp_198_reg_2537;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        Input_addr_reg_2504[29 : 0] <= tmp_114_fu_2070_p1[29 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        exitcond_reg_2510 <= exitcond_fu_2079_p2;
        exitcond_reg_2510_pp0_iter1_reg <= exitcond_reg_2510;
        indvar_reg_868_pp0_iter1_reg <= indvar_reg_868;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        indvar_next_reg_2514 <= indvar_next_fu_2084_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        m_1_reg_2624 <= m_1_fu_2320_p2;
        next_mul1_reg_2606 <= next_mul1_fu_2296_p2;
        next_mul2_reg_2611 <= next_mul2_fu_2301_p2;
        next_mul3_reg_2616 <= next_mul3_fu_2306_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (exitcond1_fu_2100_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        newIndex_reg_2541 <= {{indvar2_reg_880[12:3]}};
        tmp_198_reg_2537 <= tmp_198_fu_2112_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_80_fu_2342_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state24))) begin
        next_mul_reg_2642 <= next_mul_fu_2353_p2;
        tmp6_reg_2652 <= tmp6_fu_2363_p2;
        tmp_81_reg_2647 <= tmp_81_fu_2358_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        tmp2_reg_2596 <= tmp2_fu_2288_p2;
        tmp5_reg_2601 <= tmp5_fu_2292_p2;
        tmp_70_reg_2558 <= tmp_70_fu_2157_p2;
        tmp_71_reg_2570 <= tmp_71_fu_2162_p2;
        tmp_72_reg_2576 <= tmp_72_fu_2212_p3;
        tmp_73_reg_2581 <= tmp_73_fu_2265_p3;
        tmp_75_reg_2586 <= tmp_75_fu_2278_p2;
        tmp_reg_2591 <= tmp_fu_2284_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state26)) begin
        tmp3_reg_2667 <= tmp3_fu_2378_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state25)) begin
        tmp4_reg_2662 <= tmp4_fu_2374_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_76_fu_2315_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state23))) begin
        tmp_78_reg_2629[31 : 12] <= tmp_78_fu_2330_p3[31 : 12];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state27)) begin
        tmp_82_reg_2672 <= tmp_82_fu_2382_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        tmp_83_reg_2637 <= tmp_83_fu_2347_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_80_fu_2342_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state24))) begin
        tmp_84_reg_2657 <= tmp_84_fu_2369_p2;
    end
end

always @ (*) begin
    if (((ap_reg_ioackin_Beta_ARREADY == 1'b0) & (1'b1 == ap_CS_fsm_state2))) begin
        Beta_ARVALID = 1'b1;
    end else begin
        Beta_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (exitcond_reg_2510 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        Beta_RREADY = 1'b1;
    end else begin
        Beta_RREADY = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        Beta_blk_n_AR = m_axi_Beta_ARREADY;
    end else begin
        Beta_blk_n_AR = 1'b1;
    end
end

always @ (*) begin
    if (((exitcond_reg_2510 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        Beta_blk_n_R = m_axi_Beta_RVALID;
    end else begin
        Beta_blk_n_R = 1'b1;
    end
end

always @ (*) begin
    if (((ap_reg_ioackin_Input_r_ARREADY == 1'b0) & (tmp_s_fu_2095_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state12))) begin
        Input_r_ARADDR = Input_addr_reg_2504;
    end else if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state28))) begin
        Input_r_ARADDR = grp_input_load_conv_fu_1788_m_axi_input_r_ARADDR;
    end else begin
        Input_r_ARADDR = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state28))) begin
        Input_r_ARBURST = grp_input_load_conv_fu_1788_m_axi_input_r_ARBURST;
    end else begin
        Input_r_ARBURST = 2'd0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state28))) begin
        Input_r_ARCACHE = grp_input_load_conv_fu_1788_m_axi_input_r_ARCACHE;
    end else begin
        Input_r_ARCACHE = 4'd0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state28))) begin
        Input_r_ARID = grp_input_load_conv_fu_1788_m_axi_input_r_ARID;
    end else begin
        Input_r_ARID = 1'd0;
    end
end

always @ (*) begin
    if (((ap_reg_ioackin_Input_r_ARREADY == 1'b0) & (tmp_s_fu_2095_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state12))) begin
        Input_r_ARLEN = 32'd4096;
    end else if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state28))) begin
        Input_r_ARLEN = grp_input_load_conv_fu_1788_m_axi_input_r_ARLEN;
    end else begin
        Input_r_ARLEN = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state28))) begin
        Input_r_ARLOCK = grp_input_load_conv_fu_1788_m_axi_input_r_ARLOCK;
    end else begin
        Input_r_ARLOCK = 2'd0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state28))) begin
        Input_r_ARPROT = grp_input_load_conv_fu_1788_m_axi_input_r_ARPROT;
    end else begin
        Input_r_ARPROT = 3'd0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state28))) begin
        Input_r_ARQOS = grp_input_load_conv_fu_1788_m_axi_input_r_ARQOS;
    end else begin
        Input_r_ARQOS = 4'd0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state28))) begin
        Input_r_ARREGION = grp_input_load_conv_fu_1788_m_axi_input_r_ARREGION;
    end else begin
        Input_r_ARREGION = 4'd0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state28))) begin
        Input_r_ARSIZE = grp_input_load_conv_fu_1788_m_axi_input_r_ARSIZE;
    end else begin
        Input_r_ARSIZE = 3'd0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state28))) begin
        Input_r_ARUSER = grp_input_load_conv_fu_1788_m_axi_input_r_ARUSER;
    end else begin
        Input_r_ARUSER = 1'd0;
    end
end

always @ (*) begin
    if (((ap_reg_ioackin_Input_r_ARREADY == 1'b0) & (tmp_s_fu_2095_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state12))) begin
        Input_r_ARVALID = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state28))) begin
        Input_r_ARVALID = grp_input_load_conv_fu_1788_m_axi_input_r_ARVALID;
    end else begin
        Input_r_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        Input_r_RREADY = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state28))) begin
        Input_r_RREADY = grp_input_load_conv_fu_1788_m_axi_input_r_RREADY;
    end else begin
        Input_r_RREADY = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_s_fu_2095_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state12))) begin
        Input_r_blk_n_AR = m_axi_Input_r_ARREADY;
    end else begin
        Input_r_blk_n_AR = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        Input_r_blk_n_R = m_axi_Input_r_RVALID;
    end else begin
        Input_r_blk_n_R = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state40))) begin
        Output_r_AWADDR = grp_output_write_fc_fu_1963_m_axi_Output_r_AWADDR;
    end else if (((1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state38))) begin
        Output_r_AWADDR = grp_output_write_fu_1709_m_axi_Output_r_AWADDR;
    end else begin
        Output_r_AWADDR = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state40))) begin
        Output_r_AWBURST = grp_output_write_fc_fu_1963_m_axi_Output_r_AWBURST;
    end else if (((1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state38))) begin
        Output_r_AWBURST = grp_output_write_fu_1709_m_axi_Output_r_AWBURST;
    end else begin
        Output_r_AWBURST = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state40))) begin
        Output_r_AWCACHE = grp_output_write_fc_fu_1963_m_axi_Output_r_AWCACHE;
    end else if (((1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state38))) begin
        Output_r_AWCACHE = grp_output_write_fu_1709_m_axi_Output_r_AWCACHE;
    end else begin
        Output_r_AWCACHE = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state40))) begin
        Output_r_AWID = grp_output_write_fc_fu_1963_m_axi_Output_r_AWID;
    end else if (((1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state38))) begin
        Output_r_AWID = grp_output_write_fu_1709_m_axi_Output_r_AWID;
    end else begin
        Output_r_AWID = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state40))) begin
        Output_r_AWLEN = grp_output_write_fc_fu_1963_m_axi_Output_r_AWLEN;
    end else if (((1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state38))) begin
        Output_r_AWLEN = grp_output_write_fu_1709_m_axi_Output_r_AWLEN;
    end else begin
        Output_r_AWLEN = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state40))) begin
        Output_r_AWLOCK = grp_output_write_fc_fu_1963_m_axi_Output_r_AWLOCK;
    end else if (((1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state38))) begin
        Output_r_AWLOCK = grp_output_write_fu_1709_m_axi_Output_r_AWLOCK;
    end else begin
        Output_r_AWLOCK = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state40))) begin
        Output_r_AWPROT = grp_output_write_fc_fu_1963_m_axi_Output_r_AWPROT;
    end else if (((1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state38))) begin
        Output_r_AWPROT = grp_output_write_fu_1709_m_axi_Output_r_AWPROT;
    end else begin
        Output_r_AWPROT = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state40))) begin
        Output_r_AWQOS = grp_output_write_fc_fu_1963_m_axi_Output_r_AWQOS;
    end else if (((1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state38))) begin
        Output_r_AWQOS = grp_output_write_fu_1709_m_axi_Output_r_AWQOS;
    end else begin
        Output_r_AWQOS = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state40))) begin
        Output_r_AWREGION = grp_output_write_fc_fu_1963_m_axi_Output_r_AWREGION;
    end else if (((1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state38))) begin
        Output_r_AWREGION = grp_output_write_fu_1709_m_axi_Output_r_AWREGION;
    end else begin
        Output_r_AWREGION = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state40))) begin
        Output_r_AWSIZE = grp_output_write_fc_fu_1963_m_axi_Output_r_AWSIZE;
    end else if (((1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state38))) begin
        Output_r_AWSIZE = grp_output_write_fu_1709_m_axi_Output_r_AWSIZE;
    end else begin
        Output_r_AWSIZE = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state40))) begin
        Output_r_AWUSER = grp_output_write_fc_fu_1963_m_axi_Output_r_AWUSER;
    end else if (((1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state38))) begin
        Output_r_AWUSER = grp_output_write_fu_1709_m_axi_Output_r_AWUSER;
    end else begin
        Output_r_AWUSER = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state40))) begin
        Output_r_AWVALID = grp_output_write_fc_fu_1963_m_axi_Output_r_AWVALID;
    end else if (((1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state38))) begin
        Output_r_AWVALID = grp_output_write_fu_1709_m_axi_Output_r_AWVALID;
    end else begin
        Output_r_AWVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state40))) begin
        Output_r_BREADY = grp_output_write_fc_fu_1963_m_axi_Output_r_BREADY;
    end else if (((1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state38))) begin
        Output_r_BREADY = grp_output_write_fu_1709_m_axi_Output_r_BREADY;
    end else begin
        Output_r_BREADY = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state40))) begin
        Output_r_WDATA = grp_output_write_fc_fu_1963_m_axi_Output_r_WDATA;
    end else if (((1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state38))) begin
        Output_r_WDATA = grp_output_write_fu_1709_m_axi_Output_r_WDATA;
    end else begin
        Output_r_WDATA = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state40))) begin
        Output_r_WID = grp_output_write_fc_fu_1963_m_axi_Output_r_WID;
    end else if (((1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state38))) begin
        Output_r_WID = grp_output_write_fu_1709_m_axi_Output_r_WID;
    end else begin
        Output_r_WID = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state40))) begin
        Output_r_WLAST = grp_output_write_fc_fu_1963_m_axi_Output_r_WLAST;
    end else if (((1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state38))) begin
        Output_r_WLAST = grp_output_write_fu_1709_m_axi_Output_r_WLAST;
    end else begin
        Output_r_WLAST = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state40))) begin
        Output_r_WSTRB = grp_output_write_fc_fu_1963_m_axi_Output_r_WSTRB;
    end else if (((1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state38))) begin
        Output_r_WSTRB = grp_output_write_fu_1709_m_axi_Output_r_WSTRB;
    end else begin
        Output_r_WSTRB = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state40))) begin
        Output_r_WUSER = grp_output_write_fc_fu_1963_m_axi_Output_r_WUSER;
    end else if (((1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state38))) begin
        Output_r_WUSER = grp_output_write_fu_1709_m_axi_Output_r_WUSER;
    end else begin
        Output_r_WUSER = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state40))) begin
        Output_r_WVALID = grp_output_write_fc_fu_1963_m_axi_Output_r_WVALID;
    end else if (((1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state38))) begin
        Output_r_WVALID = grp_output_write_fu_1709_m_axi_Output_r_WVALID;
    end else begin
        Output_r_WVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state30))) begin
        Weight_ARADDR = grp_weight_load_fc_fu_1987_m_axi_Weight_ARADDR;
    end else if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state28))) begin
        Weight_ARADDR = grp_weight_load_fu_1439_m_axi_weight_ARADDR;
    end else begin
        Weight_ARADDR = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state30))) begin
        Weight_ARBURST = grp_weight_load_fc_fu_1987_m_axi_Weight_ARBURST;
    end else if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state28))) begin
        Weight_ARBURST = grp_weight_load_fu_1439_m_axi_weight_ARBURST;
    end else begin
        Weight_ARBURST = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state30))) begin
        Weight_ARCACHE = grp_weight_load_fc_fu_1987_m_axi_Weight_ARCACHE;
    end else if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state28))) begin
        Weight_ARCACHE = grp_weight_load_fu_1439_m_axi_weight_ARCACHE;
    end else begin
        Weight_ARCACHE = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state30))) begin
        Weight_ARID = grp_weight_load_fc_fu_1987_m_axi_Weight_ARID;
    end else if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state28))) begin
        Weight_ARID = grp_weight_load_fu_1439_m_axi_weight_ARID;
    end else begin
        Weight_ARID = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state30))) begin
        Weight_ARLEN = grp_weight_load_fc_fu_1987_m_axi_Weight_ARLEN;
    end else if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state28))) begin
        Weight_ARLEN = grp_weight_load_fu_1439_m_axi_weight_ARLEN;
    end else begin
        Weight_ARLEN = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state30))) begin
        Weight_ARLOCK = grp_weight_load_fc_fu_1987_m_axi_Weight_ARLOCK;
    end else if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state28))) begin
        Weight_ARLOCK = grp_weight_load_fu_1439_m_axi_weight_ARLOCK;
    end else begin
        Weight_ARLOCK = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state30))) begin
        Weight_ARPROT = grp_weight_load_fc_fu_1987_m_axi_Weight_ARPROT;
    end else if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state28))) begin
        Weight_ARPROT = grp_weight_load_fu_1439_m_axi_weight_ARPROT;
    end else begin
        Weight_ARPROT = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state30))) begin
        Weight_ARQOS = grp_weight_load_fc_fu_1987_m_axi_Weight_ARQOS;
    end else if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state28))) begin
        Weight_ARQOS = grp_weight_load_fu_1439_m_axi_weight_ARQOS;
    end else begin
        Weight_ARQOS = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state30))) begin
        Weight_ARREGION = grp_weight_load_fc_fu_1987_m_axi_Weight_ARREGION;
    end else if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state28))) begin
        Weight_ARREGION = grp_weight_load_fu_1439_m_axi_weight_ARREGION;
    end else begin
        Weight_ARREGION = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state30))) begin
        Weight_ARSIZE = grp_weight_load_fc_fu_1987_m_axi_Weight_ARSIZE;
    end else if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state28))) begin
        Weight_ARSIZE = grp_weight_load_fu_1439_m_axi_weight_ARSIZE;
    end else begin
        Weight_ARSIZE = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state30))) begin
        Weight_ARUSER = grp_weight_load_fc_fu_1987_m_axi_Weight_ARUSER;
    end else if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state28))) begin
        Weight_ARUSER = grp_weight_load_fu_1439_m_axi_weight_ARUSER;
    end else begin
        Weight_ARUSER = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state30))) begin
        Weight_ARVALID = grp_weight_load_fc_fu_1987_m_axi_Weight_ARVALID;
    end else if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state28))) begin
        Weight_ARVALID = grp_weight_load_fu_1439_m_axi_weight_ARVALID;
    end else begin
        Weight_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state30))) begin
        Weight_RREADY = grp_weight_load_fc_fu_1987_m_axi_Weight_RREADY;
    end else if (((1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state28))) begin
        Weight_RREADY = grp_weight_load_fu_1439_m_axi_weight_RREADY;
    end else begin
        Weight_RREADY = 1'b0;
    end
end

always @ (*) begin
    if ((exitcond_fu_2079_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state9 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state9 = 1'b0;
    end
end

always @ (*) begin
    if ((exitcond1_fu_2100_p2 == 1'd1)) begin
        ap_condition_pp1_exit_iter0_state19 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter0_state19 = 1'b0;
    end
end

always @ (*) begin
    if (((grp_output_write_fc_fu_1963_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state41))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter2 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b0))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond_reg_2510 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_indvar_phi_fu_872_p4 = indvar_next_reg_2514;
    end else begin
        ap_phi_mux_indvar_phi_fu_872_p4 = indvar_reg_868;
    end
end

always @ (*) begin
    if (((grp_output_write_fc_fu_1963_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state41))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((ap_reg_ioackin_Beta_ARREADY == 1'b0)) begin
        ap_sig_ioackin_Beta_ARREADY = Beta_ARREADY;
    end else begin
        ap_sig_ioackin_Beta_ARREADY = 1'b1;
    end
end

always @ (*) begin
    if ((ap_reg_ioackin_Input_r_ARREADY == 1'b0)) begin
        ap_sig_ioackin_Input_r_ARREADY = Input_r_ARREADY;
    end else begin
        ap_sig_ioackin_Input_r_ARREADY = 1'b1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        beta_buffer_address0 = indvar1_fu_2090_p1;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        beta_buffer_address0 = grp_fc_fu_1882_beta_buffer_address0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        beta_buffer_address0 = grp_conv_fu_1033_beta_buffer_address0;
    end else begin
        beta_buffer_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        beta_buffer_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        beta_buffer_ce0 = grp_fc_fu_1882_beta_buffer_ce0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        beta_buffer_ce0 = grp_conv_fu_1033_beta_buffer_ce0;
    end else begin
        beta_buffer_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (exitcond_reg_2510_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        beta_buffer_we0 = 1'b1;
    end else begin
        beta_buffer_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        input_buffer_V_0_address0 = grp_input_load_conv_fu_1788_input_buffer_0_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        input_buffer_V_0_address0 = grp_conv_fu_1033_input_buffer_V_0_address0;
    end else begin
        input_buffer_V_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        input_buffer_V_0_ce0 = grp_input_load_conv_fu_1788_input_buffer_0_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        input_buffer_V_0_ce0 = grp_conv_fu_1033_input_buffer_V_0_ce0;
    end else begin
        input_buffer_V_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        input_buffer_V_0_we0 = grp_input_load_conv_fu_1788_input_buffer_0_V_we0;
    end else begin
        input_buffer_V_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        input_buffer_V_1_address0 = grp_input_load_conv_fu_1788_input_buffer_1_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        input_buffer_V_1_address0 = grp_conv_fu_1033_input_buffer_V_1_address0;
    end else begin
        input_buffer_V_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        input_buffer_V_1_ce0 = grp_input_load_conv_fu_1788_input_buffer_1_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        input_buffer_V_1_ce0 = grp_conv_fu_1033_input_buffer_V_1_ce0;
    end else begin
        input_buffer_V_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        input_buffer_V_1_we0 = grp_input_load_conv_fu_1788_input_buffer_1_V_we0;
    end else begin
        input_buffer_V_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        input_buffer_V_2_address0 = grp_input_load_conv_fu_1788_input_buffer_2_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        input_buffer_V_2_address0 = grp_conv_fu_1033_input_buffer_V_2_address0;
    end else begin
        input_buffer_V_2_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        input_buffer_V_2_ce0 = grp_input_load_conv_fu_1788_input_buffer_2_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        input_buffer_V_2_ce0 = grp_conv_fu_1033_input_buffer_V_2_ce0;
    end else begin
        input_buffer_V_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        input_buffer_V_2_we0 = grp_input_load_conv_fu_1788_input_buffer_2_V_we0;
    end else begin
        input_buffer_V_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        input_buffer_V_3_address0 = grp_input_load_conv_fu_1788_input_buffer_3_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        input_buffer_V_3_address0 = grp_conv_fu_1033_input_buffer_V_3_address0;
    end else begin
        input_buffer_V_3_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        input_buffer_V_3_ce0 = grp_input_load_conv_fu_1788_input_buffer_3_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        input_buffer_V_3_ce0 = grp_conv_fu_1033_input_buffer_V_3_ce0;
    end else begin
        input_buffer_V_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        input_buffer_V_3_we0 = grp_input_load_conv_fu_1788_input_buffer_3_V_we0;
    end else begin
        input_buffer_V_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter2 == 1'b1))) begin
        input_buffer_fc_0_address0 = newIndex2_fu_2126_p1;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        input_buffer_fc_0_address0 = grp_fc_fu_1882_input_buffer_0_address0;
    end else begin
        input_buffer_fc_0_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1))) begin
        input_buffer_fc_0_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        input_buffer_fc_0_ce0 = grp_fc_fu_1882_input_buffer_0_ce0;
    end else begin
        input_buffer_fc_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_198_reg_2537_pp1_iter1_reg == 3'd0) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1))) begin
        input_buffer_fc_0_we0 = 1'b1;
    end else begin
        input_buffer_fc_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter2 == 1'b1))) begin
        input_buffer_fc_1_address0 = newIndex2_fu_2126_p1;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        input_buffer_fc_1_address0 = grp_fc_fu_1882_input_buffer_1_address0;
    end else begin
        input_buffer_fc_1_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1))) begin
        input_buffer_fc_1_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        input_buffer_fc_1_ce0 = grp_fc_fu_1882_input_buffer_1_ce0;
    end else begin
        input_buffer_fc_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_198_reg_2537_pp1_iter1_reg == 3'd1) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1))) begin
        input_buffer_fc_1_we0 = 1'b1;
    end else begin
        input_buffer_fc_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter2 == 1'b1))) begin
        input_buffer_fc_2_address0 = newIndex2_fu_2126_p1;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        input_buffer_fc_2_address0 = grp_fc_fu_1882_input_buffer_2_address0;
    end else begin
        input_buffer_fc_2_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1))) begin
        input_buffer_fc_2_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        input_buffer_fc_2_ce0 = grp_fc_fu_1882_input_buffer_2_ce0;
    end else begin
        input_buffer_fc_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_198_reg_2537_pp1_iter1_reg == 3'd2) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1))) begin
        input_buffer_fc_2_we0 = 1'b1;
    end else begin
        input_buffer_fc_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter2 == 1'b1))) begin
        input_buffer_fc_3_address0 = newIndex2_fu_2126_p1;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        input_buffer_fc_3_address0 = grp_fc_fu_1882_input_buffer_3_address0;
    end else begin
        input_buffer_fc_3_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1))) begin
        input_buffer_fc_3_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        input_buffer_fc_3_ce0 = grp_fc_fu_1882_input_buffer_3_ce0;
    end else begin
        input_buffer_fc_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_198_reg_2537_pp1_iter1_reg == 3'd3) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1))) begin
        input_buffer_fc_3_we0 = 1'b1;
    end else begin
        input_buffer_fc_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter2 == 1'b1))) begin
        input_buffer_fc_4_address0 = newIndex2_fu_2126_p1;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        input_buffer_fc_4_address0 = grp_fc_fu_1882_input_buffer_4_address0;
    end else begin
        input_buffer_fc_4_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1))) begin
        input_buffer_fc_4_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        input_buffer_fc_4_ce0 = grp_fc_fu_1882_input_buffer_4_ce0;
    end else begin
        input_buffer_fc_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_198_reg_2537_pp1_iter1_reg == 3'd4) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1))) begin
        input_buffer_fc_4_we0 = 1'b1;
    end else begin
        input_buffer_fc_4_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter2 == 1'b1))) begin
        input_buffer_fc_5_address0 = newIndex2_fu_2126_p1;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        input_buffer_fc_5_address0 = grp_fc_fu_1882_input_buffer_5_address0;
    end else begin
        input_buffer_fc_5_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1))) begin
        input_buffer_fc_5_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        input_buffer_fc_5_ce0 = grp_fc_fu_1882_input_buffer_5_ce0;
    end else begin
        input_buffer_fc_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_198_reg_2537_pp1_iter1_reg == 3'd5) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1))) begin
        input_buffer_fc_5_we0 = 1'b1;
    end else begin
        input_buffer_fc_5_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter2 == 1'b1))) begin
        input_buffer_fc_6_address0 = newIndex2_fu_2126_p1;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        input_buffer_fc_6_address0 = grp_fc_fu_1882_input_buffer_6_address0;
    end else begin
        input_buffer_fc_6_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1))) begin
        input_buffer_fc_6_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        input_buffer_fc_6_ce0 = grp_fc_fu_1882_input_buffer_6_ce0;
    end else begin
        input_buffer_fc_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_198_reg_2537_pp1_iter1_reg == 3'd6) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1))) begin
        input_buffer_fc_6_we0 = 1'b1;
    end else begin
        input_buffer_fc_6_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter2 == 1'b1))) begin
        input_buffer_fc_7_address0 = newIndex2_fu_2126_p1;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        input_buffer_fc_7_address0 = grp_fc_fu_1882_input_buffer_7_address0;
    end else begin
        input_buffer_fc_7_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1))) begin
        input_buffer_fc_7_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        input_buffer_fc_7_ce0 = grp_fc_fu_1882_input_buffer_7_ce0;
    end else begin
        input_buffer_fc_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_198_reg_2537_pp1_iter1_reg == 3'd7) & (1'b0 == ap_block_pp1_stage0_11001) & (ap_enable_reg_pp1_iter2 == 1'b1))) begin
        input_buffer_fc_7_we0 = 1'b1;
    end else begin
        input_buffer_fc_7_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        output_buffer_0_address0 = grp_relu_fu_1810_input_0_address0;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        output_buffer_0_address0 = grp_output_write_fu_1709_output_buffer_0_address0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        output_buffer_0_address0 = grp_conv_fu_1033_output_buffer_0_address0;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        output_buffer_0_address0 = grp_pool_fu_962_Input_0_address0;
    end else begin
        output_buffer_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        output_buffer_0_ce0 = grp_relu_fu_1810_input_0_ce0;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        output_buffer_0_ce0 = grp_output_write_fu_1709_output_buffer_0_ce0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        output_buffer_0_ce0 = grp_conv_fu_1033_output_buffer_0_ce0;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        output_buffer_0_ce0 = grp_pool_fu_962_Input_0_ce0;
    end else begin
        output_buffer_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        output_buffer_0_ce1 = grp_pool_fu_962_Input_0_ce1;
    end else begin
        output_buffer_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        output_buffer_0_d0 = grp_relu_fu_1810_input_0_d0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        output_buffer_0_d0 = grp_conv_fu_1033_output_buffer_0_d0;
    end else begin
        output_buffer_0_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        output_buffer_0_we0 = grp_relu_fu_1810_input_0_we0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        output_buffer_0_we0 = grp_conv_fu_1033_output_buffer_0_we0;
    end else begin
        output_buffer_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        output_buffer_0_we1 = grp_pool_fu_962_Input_0_we1;
    end else begin
        output_buffer_0_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        output_buffer_10_address0 = grp_relu_fu_1810_input_10_address0;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        output_buffer_10_address0 = grp_output_write_fu_1709_output_buffer_10_address0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        output_buffer_10_address0 = grp_conv_fu_1033_output_buffer_10_address0;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        output_buffer_10_address0 = grp_pool_fu_962_Input_10_address0;
    end else begin
        output_buffer_10_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        output_buffer_10_ce0 = grp_relu_fu_1810_input_10_ce0;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        output_buffer_10_ce0 = grp_output_write_fu_1709_output_buffer_10_ce0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        output_buffer_10_ce0 = grp_conv_fu_1033_output_buffer_10_ce0;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        output_buffer_10_ce0 = grp_pool_fu_962_Input_10_ce0;
    end else begin
        output_buffer_10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        output_buffer_10_ce1 = grp_pool_fu_962_Input_10_ce1;
    end else begin
        output_buffer_10_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        output_buffer_10_d0 = grp_relu_fu_1810_input_10_d0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        output_buffer_10_d0 = grp_conv_fu_1033_output_buffer_10_d0;
    end else begin
        output_buffer_10_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        output_buffer_10_we0 = grp_relu_fu_1810_input_10_we0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        output_buffer_10_we0 = grp_conv_fu_1033_output_buffer_10_we0;
    end else begin
        output_buffer_10_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        output_buffer_10_we1 = grp_pool_fu_962_Input_10_we1;
    end else begin
        output_buffer_10_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        output_buffer_11_address0 = grp_relu_fu_1810_input_11_address0;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        output_buffer_11_address0 = grp_output_write_fu_1709_output_buffer_11_address0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        output_buffer_11_address0 = grp_conv_fu_1033_output_buffer_11_address0;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        output_buffer_11_address0 = grp_pool_fu_962_Input_11_address0;
    end else begin
        output_buffer_11_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        output_buffer_11_ce0 = grp_relu_fu_1810_input_11_ce0;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        output_buffer_11_ce0 = grp_output_write_fu_1709_output_buffer_11_ce0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        output_buffer_11_ce0 = grp_conv_fu_1033_output_buffer_11_ce0;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        output_buffer_11_ce0 = grp_pool_fu_962_Input_11_ce0;
    end else begin
        output_buffer_11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        output_buffer_11_ce1 = grp_pool_fu_962_Input_11_ce1;
    end else begin
        output_buffer_11_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        output_buffer_11_d0 = grp_relu_fu_1810_input_11_d0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        output_buffer_11_d0 = grp_conv_fu_1033_output_buffer_11_d0;
    end else begin
        output_buffer_11_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        output_buffer_11_we0 = grp_relu_fu_1810_input_11_we0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        output_buffer_11_we0 = grp_conv_fu_1033_output_buffer_11_we0;
    end else begin
        output_buffer_11_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        output_buffer_11_we1 = grp_pool_fu_962_Input_11_we1;
    end else begin
        output_buffer_11_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        output_buffer_12_address0 = grp_relu_fu_1810_input_12_address0;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        output_buffer_12_address0 = grp_output_write_fu_1709_output_buffer_12_address0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        output_buffer_12_address0 = grp_conv_fu_1033_output_buffer_12_address0;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        output_buffer_12_address0 = grp_pool_fu_962_Input_12_address0;
    end else begin
        output_buffer_12_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        output_buffer_12_ce0 = grp_relu_fu_1810_input_12_ce0;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        output_buffer_12_ce0 = grp_output_write_fu_1709_output_buffer_12_ce0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        output_buffer_12_ce0 = grp_conv_fu_1033_output_buffer_12_ce0;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        output_buffer_12_ce0 = grp_pool_fu_962_Input_12_ce0;
    end else begin
        output_buffer_12_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        output_buffer_12_ce1 = grp_pool_fu_962_Input_12_ce1;
    end else begin
        output_buffer_12_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        output_buffer_12_d0 = grp_relu_fu_1810_input_12_d0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        output_buffer_12_d0 = grp_conv_fu_1033_output_buffer_12_d0;
    end else begin
        output_buffer_12_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        output_buffer_12_we0 = grp_relu_fu_1810_input_12_we0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        output_buffer_12_we0 = grp_conv_fu_1033_output_buffer_12_we0;
    end else begin
        output_buffer_12_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        output_buffer_12_we1 = grp_pool_fu_962_Input_12_we1;
    end else begin
        output_buffer_12_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        output_buffer_13_address0 = grp_relu_fu_1810_input_13_address0;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        output_buffer_13_address0 = grp_output_write_fu_1709_output_buffer_13_address0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        output_buffer_13_address0 = grp_conv_fu_1033_output_buffer_13_address0;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        output_buffer_13_address0 = grp_pool_fu_962_Input_13_address0;
    end else begin
        output_buffer_13_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        output_buffer_13_ce0 = grp_relu_fu_1810_input_13_ce0;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        output_buffer_13_ce0 = grp_output_write_fu_1709_output_buffer_13_ce0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        output_buffer_13_ce0 = grp_conv_fu_1033_output_buffer_13_ce0;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        output_buffer_13_ce0 = grp_pool_fu_962_Input_13_ce0;
    end else begin
        output_buffer_13_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        output_buffer_13_ce1 = grp_pool_fu_962_Input_13_ce1;
    end else begin
        output_buffer_13_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        output_buffer_13_d0 = grp_relu_fu_1810_input_13_d0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        output_buffer_13_d0 = grp_conv_fu_1033_output_buffer_13_d0;
    end else begin
        output_buffer_13_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        output_buffer_13_we0 = grp_relu_fu_1810_input_13_we0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        output_buffer_13_we0 = grp_conv_fu_1033_output_buffer_13_we0;
    end else begin
        output_buffer_13_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        output_buffer_13_we1 = grp_pool_fu_962_Input_13_we1;
    end else begin
        output_buffer_13_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        output_buffer_14_address0 = grp_relu_fu_1810_input_14_address0;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        output_buffer_14_address0 = grp_output_write_fu_1709_output_buffer_14_address0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        output_buffer_14_address0 = grp_conv_fu_1033_output_buffer_14_address0;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        output_buffer_14_address0 = grp_pool_fu_962_Input_14_address0;
    end else begin
        output_buffer_14_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        output_buffer_14_ce0 = grp_relu_fu_1810_input_14_ce0;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        output_buffer_14_ce0 = grp_output_write_fu_1709_output_buffer_14_ce0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        output_buffer_14_ce0 = grp_conv_fu_1033_output_buffer_14_ce0;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        output_buffer_14_ce0 = grp_pool_fu_962_Input_14_ce0;
    end else begin
        output_buffer_14_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        output_buffer_14_ce1 = grp_pool_fu_962_Input_14_ce1;
    end else begin
        output_buffer_14_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        output_buffer_14_d0 = grp_relu_fu_1810_input_14_d0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        output_buffer_14_d0 = grp_conv_fu_1033_output_buffer_14_d0;
    end else begin
        output_buffer_14_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        output_buffer_14_we0 = grp_relu_fu_1810_input_14_we0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        output_buffer_14_we0 = grp_conv_fu_1033_output_buffer_14_we0;
    end else begin
        output_buffer_14_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        output_buffer_14_we1 = grp_pool_fu_962_Input_14_we1;
    end else begin
        output_buffer_14_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        output_buffer_15_address0 = grp_relu_fu_1810_input_15_address0;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        output_buffer_15_address0 = grp_output_write_fu_1709_output_buffer_15_address0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        output_buffer_15_address0 = grp_conv_fu_1033_output_buffer_15_address0;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        output_buffer_15_address0 = grp_pool_fu_962_Input_15_address0;
    end else begin
        output_buffer_15_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        output_buffer_15_ce0 = grp_relu_fu_1810_input_15_ce0;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        output_buffer_15_ce0 = grp_output_write_fu_1709_output_buffer_15_ce0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        output_buffer_15_ce0 = grp_conv_fu_1033_output_buffer_15_ce0;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        output_buffer_15_ce0 = grp_pool_fu_962_Input_15_ce0;
    end else begin
        output_buffer_15_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        output_buffer_15_ce1 = grp_pool_fu_962_Input_15_ce1;
    end else begin
        output_buffer_15_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        output_buffer_15_d0 = grp_relu_fu_1810_input_15_d0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        output_buffer_15_d0 = grp_conv_fu_1033_output_buffer_15_d0;
    end else begin
        output_buffer_15_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        output_buffer_15_we0 = grp_relu_fu_1810_input_15_we0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        output_buffer_15_we0 = grp_conv_fu_1033_output_buffer_15_we0;
    end else begin
        output_buffer_15_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        output_buffer_15_we1 = grp_pool_fu_962_Input_15_we1;
    end else begin
        output_buffer_15_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        output_buffer_16_address0 = grp_relu_fu_1810_input_16_address0;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        output_buffer_16_address0 = grp_output_write_fu_1709_output_buffer_16_address0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        output_buffer_16_address0 = grp_conv_fu_1033_output_buffer_16_address0;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        output_buffer_16_address0 = grp_pool_fu_962_Input_16_address0;
    end else begin
        output_buffer_16_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        output_buffer_16_ce0 = grp_relu_fu_1810_input_16_ce0;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        output_buffer_16_ce0 = grp_output_write_fu_1709_output_buffer_16_ce0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        output_buffer_16_ce0 = grp_conv_fu_1033_output_buffer_16_ce0;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        output_buffer_16_ce0 = grp_pool_fu_962_Input_16_ce0;
    end else begin
        output_buffer_16_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        output_buffer_16_ce1 = grp_pool_fu_962_Input_16_ce1;
    end else begin
        output_buffer_16_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        output_buffer_16_d0 = grp_relu_fu_1810_input_16_d0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        output_buffer_16_d0 = grp_conv_fu_1033_output_buffer_16_d0;
    end else begin
        output_buffer_16_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        output_buffer_16_we0 = grp_relu_fu_1810_input_16_we0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        output_buffer_16_we0 = grp_conv_fu_1033_output_buffer_16_we0;
    end else begin
        output_buffer_16_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        output_buffer_16_we1 = grp_pool_fu_962_Input_16_we1;
    end else begin
        output_buffer_16_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        output_buffer_17_address0 = grp_relu_fu_1810_input_17_address0;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        output_buffer_17_address0 = grp_output_write_fu_1709_output_buffer_17_address0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        output_buffer_17_address0 = grp_conv_fu_1033_output_buffer_17_address0;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        output_buffer_17_address0 = grp_pool_fu_962_Input_17_address0;
    end else begin
        output_buffer_17_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        output_buffer_17_ce0 = grp_relu_fu_1810_input_17_ce0;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        output_buffer_17_ce0 = grp_output_write_fu_1709_output_buffer_17_ce0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        output_buffer_17_ce0 = grp_conv_fu_1033_output_buffer_17_ce0;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        output_buffer_17_ce0 = grp_pool_fu_962_Input_17_ce0;
    end else begin
        output_buffer_17_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        output_buffer_17_ce1 = grp_pool_fu_962_Input_17_ce1;
    end else begin
        output_buffer_17_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        output_buffer_17_d0 = grp_relu_fu_1810_input_17_d0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        output_buffer_17_d0 = grp_conv_fu_1033_output_buffer_17_d0;
    end else begin
        output_buffer_17_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        output_buffer_17_we0 = grp_relu_fu_1810_input_17_we0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        output_buffer_17_we0 = grp_conv_fu_1033_output_buffer_17_we0;
    end else begin
        output_buffer_17_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        output_buffer_17_we1 = grp_pool_fu_962_Input_17_we1;
    end else begin
        output_buffer_17_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        output_buffer_18_address0 = grp_relu_fu_1810_input_18_address0;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        output_buffer_18_address0 = grp_output_write_fu_1709_output_buffer_18_address0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        output_buffer_18_address0 = grp_conv_fu_1033_output_buffer_18_address0;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        output_buffer_18_address0 = grp_pool_fu_962_Input_18_address0;
    end else begin
        output_buffer_18_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        output_buffer_18_ce0 = grp_relu_fu_1810_input_18_ce0;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        output_buffer_18_ce0 = grp_output_write_fu_1709_output_buffer_18_ce0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        output_buffer_18_ce0 = grp_conv_fu_1033_output_buffer_18_ce0;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        output_buffer_18_ce0 = grp_pool_fu_962_Input_18_ce0;
    end else begin
        output_buffer_18_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        output_buffer_18_ce1 = grp_pool_fu_962_Input_18_ce1;
    end else begin
        output_buffer_18_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        output_buffer_18_d0 = grp_relu_fu_1810_input_18_d0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        output_buffer_18_d0 = grp_conv_fu_1033_output_buffer_18_d0;
    end else begin
        output_buffer_18_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        output_buffer_18_we0 = grp_relu_fu_1810_input_18_we0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        output_buffer_18_we0 = grp_conv_fu_1033_output_buffer_18_we0;
    end else begin
        output_buffer_18_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        output_buffer_18_we1 = grp_pool_fu_962_Input_18_we1;
    end else begin
        output_buffer_18_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        output_buffer_19_address0 = grp_relu_fu_1810_input_19_address0;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        output_buffer_19_address0 = grp_output_write_fu_1709_output_buffer_19_address0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        output_buffer_19_address0 = grp_conv_fu_1033_output_buffer_19_address0;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        output_buffer_19_address0 = grp_pool_fu_962_Input_19_address0;
    end else begin
        output_buffer_19_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        output_buffer_19_ce0 = grp_relu_fu_1810_input_19_ce0;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        output_buffer_19_ce0 = grp_output_write_fu_1709_output_buffer_19_ce0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        output_buffer_19_ce0 = grp_conv_fu_1033_output_buffer_19_ce0;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        output_buffer_19_ce0 = grp_pool_fu_962_Input_19_ce0;
    end else begin
        output_buffer_19_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        output_buffer_19_ce1 = grp_pool_fu_962_Input_19_ce1;
    end else begin
        output_buffer_19_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        output_buffer_19_d0 = grp_relu_fu_1810_input_19_d0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        output_buffer_19_d0 = grp_conv_fu_1033_output_buffer_19_d0;
    end else begin
        output_buffer_19_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        output_buffer_19_we0 = grp_relu_fu_1810_input_19_we0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        output_buffer_19_we0 = grp_conv_fu_1033_output_buffer_19_we0;
    end else begin
        output_buffer_19_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        output_buffer_19_we1 = grp_pool_fu_962_Input_19_we1;
    end else begin
        output_buffer_19_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        output_buffer_1_address0 = grp_relu_fu_1810_input_1_address0;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        output_buffer_1_address0 = grp_output_write_fu_1709_output_buffer_1_address0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        output_buffer_1_address0 = grp_conv_fu_1033_output_buffer_1_address0;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        output_buffer_1_address0 = grp_pool_fu_962_Input_1_address0;
    end else begin
        output_buffer_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        output_buffer_1_ce0 = grp_relu_fu_1810_input_1_ce0;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        output_buffer_1_ce0 = grp_output_write_fu_1709_output_buffer_1_ce0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        output_buffer_1_ce0 = grp_conv_fu_1033_output_buffer_1_ce0;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        output_buffer_1_ce0 = grp_pool_fu_962_Input_1_ce0;
    end else begin
        output_buffer_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        output_buffer_1_ce1 = grp_pool_fu_962_Input_1_ce1;
    end else begin
        output_buffer_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        output_buffer_1_d0 = grp_relu_fu_1810_input_1_d0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        output_buffer_1_d0 = grp_conv_fu_1033_output_buffer_1_d0;
    end else begin
        output_buffer_1_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        output_buffer_1_we0 = grp_relu_fu_1810_input_1_we0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        output_buffer_1_we0 = grp_conv_fu_1033_output_buffer_1_we0;
    end else begin
        output_buffer_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        output_buffer_1_we1 = grp_pool_fu_962_Input_1_we1;
    end else begin
        output_buffer_1_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        output_buffer_20_address0 = grp_relu_fu_1810_input_20_address0;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        output_buffer_20_address0 = grp_output_write_fu_1709_output_buffer_20_address0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        output_buffer_20_address0 = grp_conv_fu_1033_output_buffer_20_address0;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        output_buffer_20_address0 = grp_pool_fu_962_Input_20_address0;
    end else begin
        output_buffer_20_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        output_buffer_20_ce0 = grp_relu_fu_1810_input_20_ce0;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        output_buffer_20_ce0 = grp_output_write_fu_1709_output_buffer_20_ce0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        output_buffer_20_ce0 = grp_conv_fu_1033_output_buffer_20_ce0;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        output_buffer_20_ce0 = grp_pool_fu_962_Input_20_ce0;
    end else begin
        output_buffer_20_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        output_buffer_20_ce1 = grp_pool_fu_962_Input_20_ce1;
    end else begin
        output_buffer_20_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        output_buffer_20_d0 = grp_relu_fu_1810_input_20_d0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        output_buffer_20_d0 = grp_conv_fu_1033_output_buffer_20_d0;
    end else begin
        output_buffer_20_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        output_buffer_20_we0 = grp_relu_fu_1810_input_20_we0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        output_buffer_20_we0 = grp_conv_fu_1033_output_buffer_20_we0;
    end else begin
        output_buffer_20_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        output_buffer_20_we1 = grp_pool_fu_962_Input_20_we1;
    end else begin
        output_buffer_20_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        output_buffer_21_address0 = grp_relu_fu_1810_input_21_address0;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        output_buffer_21_address0 = grp_output_write_fu_1709_output_buffer_21_address0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        output_buffer_21_address0 = grp_conv_fu_1033_output_buffer_21_address0;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        output_buffer_21_address0 = grp_pool_fu_962_Input_21_address0;
    end else begin
        output_buffer_21_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        output_buffer_21_ce0 = grp_relu_fu_1810_input_21_ce0;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        output_buffer_21_ce0 = grp_output_write_fu_1709_output_buffer_21_ce0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        output_buffer_21_ce0 = grp_conv_fu_1033_output_buffer_21_ce0;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        output_buffer_21_ce0 = grp_pool_fu_962_Input_21_ce0;
    end else begin
        output_buffer_21_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        output_buffer_21_ce1 = grp_pool_fu_962_Input_21_ce1;
    end else begin
        output_buffer_21_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        output_buffer_21_d0 = grp_relu_fu_1810_input_21_d0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        output_buffer_21_d0 = grp_conv_fu_1033_output_buffer_21_d0;
    end else begin
        output_buffer_21_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        output_buffer_21_we0 = grp_relu_fu_1810_input_21_we0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        output_buffer_21_we0 = grp_conv_fu_1033_output_buffer_21_we0;
    end else begin
        output_buffer_21_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        output_buffer_21_we1 = grp_pool_fu_962_Input_21_we1;
    end else begin
        output_buffer_21_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        output_buffer_22_address0 = grp_relu_fu_1810_input_22_address0;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        output_buffer_22_address0 = grp_output_write_fu_1709_output_buffer_22_address0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        output_buffer_22_address0 = grp_conv_fu_1033_output_buffer_22_address0;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        output_buffer_22_address0 = grp_pool_fu_962_Input_22_address0;
    end else begin
        output_buffer_22_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        output_buffer_22_ce0 = grp_relu_fu_1810_input_22_ce0;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        output_buffer_22_ce0 = grp_output_write_fu_1709_output_buffer_22_ce0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        output_buffer_22_ce0 = grp_conv_fu_1033_output_buffer_22_ce0;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        output_buffer_22_ce0 = grp_pool_fu_962_Input_22_ce0;
    end else begin
        output_buffer_22_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        output_buffer_22_ce1 = grp_pool_fu_962_Input_22_ce1;
    end else begin
        output_buffer_22_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        output_buffer_22_d0 = grp_relu_fu_1810_input_22_d0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        output_buffer_22_d0 = grp_conv_fu_1033_output_buffer_22_d0;
    end else begin
        output_buffer_22_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        output_buffer_22_we0 = grp_relu_fu_1810_input_22_we0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        output_buffer_22_we0 = grp_conv_fu_1033_output_buffer_22_we0;
    end else begin
        output_buffer_22_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        output_buffer_22_we1 = grp_pool_fu_962_Input_22_we1;
    end else begin
        output_buffer_22_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        output_buffer_23_address0 = grp_relu_fu_1810_input_23_address0;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        output_buffer_23_address0 = grp_output_write_fu_1709_output_buffer_23_address0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        output_buffer_23_address0 = grp_conv_fu_1033_output_buffer_23_address0;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        output_buffer_23_address0 = grp_pool_fu_962_Input_23_address0;
    end else begin
        output_buffer_23_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        output_buffer_23_ce0 = grp_relu_fu_1810_input_23_ce0;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        output_buffer_23_ce0 = grp_output_write_fu_1709_output_buffer_23_ce0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        output_buffer_23_ce0 = grp_conv_fu_1033_output_buffer_23_ce0;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        output_buffer_23_ce0 = grp_pool_fu_962_Input_23_ce0;
    end else begin
        output_buffer_23_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        output_buffer_23_ce1 = grp_pool_fu_962_Input_23_ce1;
    end else begin
        output_buffer_23_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        output_buffer_23_d0 = grp_relu_fu_1810_input_23_d0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        output_buffer_23_d0 = grp_conv_fu_1033_output_buffer_23_d0;
    end else begin
        output_buffer_23_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        output_buffer_23_we0 = grp_relu_fu_1810_input_23_we0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        output_buffer_23_we0 = grp_conv_fu_1033_output_buffer_23_we0;
    end else begin
        output_buffer_23_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        output_buffer_23_we1 = grp_pool_fu_962_Input_23_we1;
    end else begin
        output_buffer_23_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        output_buffer_24_address0 = grp_relu_fu_1810_input_24_address0;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        output_buffer_24_address0 = grp_output_write_fu_1709_output_buffer_24_address0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        output_buffer_24_address0 = grp_conv_fu_1033_output_buffer_24_address0;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        output_buffer_24_address0 = grp_pool_fu_962_Input_24_address0;
    end else begin
        output_buffer_24_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        output_buffer_24_ce0 = grp_relu_fu_1810_input_24_ce0;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        output_buffer_24_ce0 = grp_output_write_fu_1709_output_buffer_24_ce0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        output_buffer_24_ce0 = grp_conv_fu_1033_output_buffer_24_ce0;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        output_buffer_24_ce0 = grp_pool_fu_962_Input_24_ce0;
    end else begin
        output_buffer_24_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        output_buffer_24_ce1 = grp_pool_fu_962_Input_24_ce1;
    end else begin
        output_buffer_24_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        output_buffer_24_d0 = grp_relu_fu_1810_input_24_d0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        output_buffer_24_d0 = grp_conv_fu_1033_output_buffer_24_d0;
    end else begin
        output_buffer_24_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        output_buffer_24_we0 = grp_relu_fu_1810_input_24_we0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        output_buffer_24_we0 = grp_conv_fu_1033_output_buffer_24_we0;
    end else begin
        output_buffer_24_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        output_buffer_24_we1 = grp_pool_fu_962_Input_24_we1;
    end else begin
        output_buffer_24_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        output_buffer_25_address0 = grp_relu_fu_1810_input_25_address0;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        output_buffer_25_address0 = grp_output_write_fu_1709_output_buffer_25_address0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        output_buffer_25_address0 = grp_conv_fu_1033_output_buffer_25_address0;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        output_buffer_25_address0 = grp_pool_fu_962_Input_25_address0;
    end else begin
        output_buffer_25_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        output_buffer_25_ce0 = grp_relu_fu_1810_input_25_ce0;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        output_buffer_25_ce0 = grp_output_write_fu_1709_output_buffer_25_ce0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        output_buffer_25_ce0 = grp_conv_fu_1033_output_buffer_25_ce0;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        output_buffer_25_ce0 = grp_pool_fu_962_Input_25_ce0;
    end else begin
        output_buffer_25_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        output_buffer_25_ce1 = grp_pool_fu_962_Input_25_ce1;
    end else begin
        output_buffer_25_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        output_buffer_25_d0 = grp_relu_fu_1810_input_25_d0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        output_buffer_25_d0 = grp_conv_fu_1033_output_buffer_25_d0;
    end else begin
        output_buffer_25_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        output_buffer_25_we0 = grp_relu_fu_1810_input_25_we0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        output_buffer_25_we0 = grp_conv_fu_1033_output_buffer_25_we0;
    end else begin
        output_buffer_25_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        output_buffer_25_we1 = grp_pool_fu_962_Input_25_we1;
    end else begin
        output_buffer_25_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        output_buffer_26_address0 = grp_relu_fu_1810_input_26_address0;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        output_buffer_26_address0 = grp_output_write_fu_1709_output_buffer_26_address0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        output_buffer_26_address0 = grp_conv_fu_1033_output_buffer_26_address0;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        output_buffer_26_address0 = grp_pool_fu_962_Input_26_address0;
    end else begin
        output_buffer_26_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        output_buffer_26_ce0 = grp_relu_fu_1810_input_26_ce0;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        output_buffer_26_ce0 = grp_output_write_fu_1709_output_buffer_26_ce0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        output_buffer_26_ce0 = grp_conv_fu_1033_output_buffer_26_ce0;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        output_buffer_26_ce0 = grp_pool_fu_962_Input_26_ce0;
    end else begin
        output_buffer_26_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        output_buffer_26_ce1 = grp_pool_fu_962_Input_26_ce1;
    end else begin
        output_buffer_26_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        output_buffer_26_d0 = grp_relu_fu_1810_input_26_d0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        output_buffer_26_d0 = grp_conv_fu_1033_output_buffer_26_d0;
    end else begin
        output_buffer_26_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        output_buffer_26_we0 = grp_relu_fu_1810_input_26_we0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        output_buffer_26_we0 = grp_conv_fu_1033_output_buffer_26_we0;
    end else begin
        output_buffer_26_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        output_buffer_26_we1 = grp_pool_fu_962_Input_26_we1;
    end else begin
        output_buffer_26_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        output_buffer_27_address0 = grp_relu_fu_1810_input_27_address0;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        output_buffer_27_address0 = grp_output_write_fu_1709_output_buffer_27_address0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        output_buffer_27_address0 = grp_conv_fu_1033_output_buffer_27_address0;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        output_buffer_27_address0 = grp_pool_fu_962_Input_27_address0;
    end else begin
        output_buffer_27_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        output_buffer_27_ce0 = grp_relu_fu_1810_input_27_ce0;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        output_buffer_27_ce0 = grp_output_write_fu_1709_output_buffer_27_ce0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        output_buffer_27_ce0 = grp_conv_fu_1033_output_buffer_27_ce0;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        output_buffer_27_ce0 = grp_pool_fu_962_Input_27_ce0;
    end else begin
        output_buffer_27_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        output_buffer_27_ce1 = grp_pool_fu_962_Input_27_ce1;
    end else begin
        output_buffer_27_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        output_buffer_27_d0 = grp_relu_fu_1810_input_27_d0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        output_buffer_27_d0 = grp_conv_fu_1033_output_buffer_27_d0;
    end else begin
        output_buffer_27_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        output_buffer_27_we0 = grp_relu_fu_1810_input_27_we0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        output_buffer_27_we0 = grp_conv_fu_1033_output_buffer_27_we0;
    end else begin
        output_buffer_27_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        output_buffer_27_we1 = grp_pool_fu_962_Input_27_we1;
    end else begin
        output_buffer_27_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        output_buffer_28_address0 = grp_relu_fu_1810_input_28_address0;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        output_buffer_28_address0 = grp_output_write_fu_1709_output_buffer_28_address0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        output_buffer_28_address0 = grp_conv_fu_1033_output_buffer_28_address0;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        output_buffer_28_address0 = grp_pool_fu_962_Input_28_address0;
    end else begin
        output_buffer_28_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        output_buffer_28_ce0 = grp_relu_fu_1810_input_28_ce0;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        output_buffer_28_ce0 = grp_output_write_fu_1709_output_buffer_28_ce0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        output_buffer_28_ce0 = grp_conv_fu_1033_output_buffer_28_ce0;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        output_buffer_28_ce0 = grp_pool_fu_962_Input_28_ce0;
    end else begin
        output_buffer_28_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        output_buffer_28_ce1 = grp_pool_fu_962_Input_28_ce1;
    end else begin
        output_buffer_28_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        output_buffer_28_d0 = grp_relu_fu_1810_input_28_d0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        output_buffer_28_d0 = grp_conv_fu_1033_output_buffer_28_d0;
    end else begin
        output_buffer_28_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        output_buffer_28_we0 = grp_relu_fu_1810_input_28_we0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        output_buffer_28_we0 = grp_conv_fu_1033_output_buffer_28_we0;
    end else begin
        output_buffer_28_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        output_buffer_28_we1 = grp_pool_fu_962_Input_28_we1;
    end else begin
        output_buffer_28_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        output_buffer_29_address0 = grp_relu_fu_1810_input_29_address0;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        output_buffer_29_address0 = grp_output_write_fu_1709_output_buffer_29_address0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        output_buffer_29_address0 = grp_conv_fu_1033_output_buffer_29_address0;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        output_buffer_29_address0 = grp_pool_fu_962_Input_29_address0;
    end else begin
        output_buffer_29_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        output_buffer_29_ce0 = grp_relu_fu_1810_input_29_ce0;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        output_buffer_29_ce0 = grp_output_write_fu_1709_output_buffer_29_ce0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        output_buffer_29_ce0 = grp_conv_fu_1033_output_buffer_29_ce0;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        output_buffer_29_ce0 = grp_pool_fu_962_Input_29_ce0;
    end else begin
        output_buffer_29_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        output_buffer_29_ce1 = grp_pool_fu_962_Input_29_ce1;
    end else begin
        output_buffer_29_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        output_buffer_29_d0 = grp_relu_fu_1810_input_29_d0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        output_buffer_29_d0 = grp_conv_fu_1033_output_buffer_29_d0;
    end else begin
        output_buffer_29_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        output_buffer_29_we0 = grp_relu_fu_1810_input_29_we0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        output_buffer_29_we0 = grp_conv_fu_1033_output_buffer_29_we0;
    end else begin
        output_buffer_29_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        output_buffer_29_we1 = grp_pool_fu_962_Input_29_we1;
    end else begin
        output_buffer_29_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        output_buffer_2_address0 = grp_relu_fu_1810_input_2_address0;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        output_buffer_2_address0 = grp_output_write_fu_1709_output_buffer_2_address0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        output_buffer_2_address0 = grp_conv_fu_1033_output_buffer_2_address0;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        output_buffer_2_address0 = grp_pool_fu_962_Input_2_address0;
    end else begin
        output_buffer_2_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        output_buffer_2_ce0 = grp_relu_fu_1810_input_2_ce0;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        output_buffer_2_ce0 = grp_output_write_fu_1709_output_buffer_2_ce0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        output_buffer_2_ce0 = grp_conv_fu_1033_output_buffer_2_ce0;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        output_buffer_2_ce0 = grp_pool_fu_962_Input_2_ce0;
    end else begin
        output_buffer_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        output_buffer_2_ce1 = grp_pool_fu_962_Input_2_ce1;
    end else begin
        output_buffer_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        output_buffer_2_d0 = grp_relu_fu_1810_input_2_d0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        output_buffer_2_d0 = grp_conv_fu_1033_output_buffer_2_d0;
    end else begin
        output_buffer_2_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        output_buffer_2_we0 = grp_relu_fu_1810_input_2_we0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        output_buffer_2_we0 = grp_conv_fu_1033_output_buffer_2_we0;
    end else begin
        output_buffer_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        output_buffer_2_we1 = grp_pool_fu_962_Input_2_we1;
    end else begin
        output_buffer_2_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        output_buffer_30_address0 = grp_relu_fu_1810_input_30_address0;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        output_buffer_30_address0 = grp_output_write_fu_1709_output_buffer_30_address0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        output_buffer_30_address0 = grp_conv_fu_1033_output_buffer_30_address0;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        output_buffer_30_address0 = grp_pool_fu_962_Input_30_address0;
    end else begin
        output_buffer_30_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        output_buffer_30_ce0 = grp_relu_fu_1810_input_30_ce0;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        output_buffer_30_ce0 = grp_output_write_fu_1709_output_buffer_30_ce0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        output_buffer_30_ce0 = grp_conv_fu_1033_output_buffer_30_ce0;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        output_buffer_30_ce0 = grp_pool_fu_962_Input_30_ce0;
    end else begin
        output_buffer_30_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        output_buffer_30_ce1 = grp_pool_fu_962_Input_30_ce1;
    end else begin
        output_buffer_30_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        output_buffer_30_d0 = grp_relu_fu_1810_input_30_d0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        output_buffer_30_d0 = grp_conv_fu_1033_output_buffer_30_d0;
    end else begin
        output_buffer_30_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        output_buffer_30_we0 = grp_relu_fu_1810_input_30_we0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        output_buffer_30_we0 = grp_conv_fu_1033_output_buffer_30_we0;
    end else begin
        output_buffer_30_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        output_buffer_30_we1 = grp_pool_fu_962_Input_30_we1;
    end else begin
        output_buffer_30_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        output_buffer_31_address0 = grp_relu_fu_1810_input_31_address0;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        output_buffer_31_address0 = grp_output_write_fu_1709_output_buffer_31_address0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        output_buffer_31_address0 = grp_conv_fu_1033_output_buffer_31_address0;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        output_buffer_31_address0 = grp_pool_fu_962_Input_31_address0;
    end else begin
        output_buffer_31_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        output_buffer_31_ce0 = grp_relu_fu_1810_input_31_ce0;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        output_buffer_31_ce0 = grp_output_write_fu_1709_output_buffer_31_ce0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        output_buffer_31_ce0 = grp_conv_fu_1033_output_buffer_31_ce0;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        output_buffer_31_ce0 = grp_pool_fu_962_Input_31_ce0;
    end else begin
        output_buffer_31_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        output_buffer_31_ce1 = grp_pool_fu_962_Input_31_ce1;
    end else begin
        output_buffer_31_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        output_buffer_31_d0 = grp_relu_fu_1810_input_31_d0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        output_buffer_31_d0 = grp_conv_fu_1033_output_buffer_31_d0;
    end else begin
        output_buffer_31_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        output_buffer_31_we0 = grp_relu_fu_1810_input_31_we0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        output_buffer_31_we0 = grp_conv_fu_1033_output_buffer_31_we0;
    end else begin
        output_buffer_31_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        output_buffer_31_we1 = grp_pool_fu_962_Input_31_we1;
    end else begin
        output_buffer_31_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        output_buffer_3_address0 = grp_relu_fu_1810_input_3_address0;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        output_buffer_3_address0 = grp_output_write_fu_1709_output_buffer_3_address0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        output_buffer_3_address0 = grp_conv_fu_1033_output_buffer_3_address0;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        output_buffer_3_address0 = grp_pool_fu_962_Input_3_address0;
    end else begin
        output_buffer_3_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        output_buffer_3_ce0 = grp_relu_fu_1810_input_3_ce0;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        output_buffer_3_ce0 = grp_output_write_fu_1709_output_buffer_3_ce0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        output_buffer_3_ce0 = grp_conv_fu_1033_output_buffer_3_ce0;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        output_buffer_3_ce0 = grp_pool_fu_962_Input_3_ce0;
    end else begin
        output_buffer_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        output_buffer_3_ce1 = grp_pool_fu_962_Input_3_ce1;
    end else begin
        output_buffer_3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        output_buffer_3_d0 = grp_relu_fu_1810_input_3_d0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        output_buffer_3_d0 = grp_conv_fu_1033_output_buffer_3_d0;
    end else begin
        output_buffer_3_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        output_buffer_3_we0 = grp_relu_fu_1810_input_3_we0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        output_buffer_3_we0 = grp_conv_fu_1033_output_buffer_3_we0;
    end else begin
        output_buffer_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        output_buffer_3_we1 = grp_pool_fu_962_Input_3_we1;
    end else begin
        output_buffer_3_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        output_buffer_4_address0 = grp_relu_fu_1810_input_4_address0;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        output_buffer_4_address0 = grp_output_write_fu_1709_output_buffer_4_address0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        output_buffer_4_address0 = grp_conv_fu_1033_output_buffer_4_address0;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        output_buffer_4_address0 = grp_pool_fu_962_Input_4_address0;
    end else begin
        output_buffer_4_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        output_buffer_4_ce0 = grp_relu_fu_1810_input_4_ce0;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        output_buffer_4_ce0 = grp_output_write_fu_1709_output_buffer_4_ce0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        output_buffer_4_ce0 = grp_conv_fu_1033_output_buffer_4_ce0;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        output_buffer_4_ce0 = grp_pool_fu_962_Input_4_ce0;
    end else begin
        output_buffer_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        output_buffer_4_ce1 = grp_pool_fu_962_Input_4_ce1;
    end else begin
        output_buffer_4_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        output_buffer_4_d0 = grp_relu_fu_1810_input_4_d0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        output_buffer_4_d0 = grp_conv_fu_1033_output_buffer_4_d0;
    end else begin
        output_buffer_4_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        output_buffer_4_we0 = grp_relu_fu_1810_input_4_we0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        output_buffer_4_we0 = grp_conv_fu_1033_output_buffer_4_we0;
    end else begin
        output_buffer_4_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        output_buffer_4_we1 = grp_pool_fu_962_Input_4_we1;
    end else begin
        output_buffer_4_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        output_buffer_5_address0 = grp_relu_fu_1810_input_5_address0;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        output_buffer_5_address0 = grp_output_write_fu_1709_output_buffer_5_address0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        output_buffer_5_address0 = grp_conv_fu_1033_output_buffer_5_address0;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        output_buffer_5_address0 = grp_pool_fu_962_Input_5_address0;
    end else begin
        output_buffer_5_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        output_buffer_5_ce0 = grp_relu_fu_1810_input_5_ce0;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        output_buffer_5_ce0 = grp_output_write_fu_1709_output_buffer_5_ce0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        output_buffer_5_ce0 = grp_conv_fu_1033_output_buffer_5_ce0;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        output_buffer_5_ce0 = grp_pool_fu_962_Input_5_ce0;
    end else begin
        output_buffer_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        output_buffer_5_ce1 = grp_pool_fu_962_Input_5_ce1;
    end else begin
        output_buffer_5_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        output_buffer_5_d0 = grp_relu_fu_1810_input_5_d0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        output_buffer_5_d0 = grp_conv_fu_1033_output_buffer_5_d0;
    end else begin
        output_buffer_5_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        output_buffer_5_we0 = grp_relu_fu_1810_input_5_we0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        output_buffer_5_we0 = grp_conv_fu_1033_output_buffer_5_we0;
    end else begin
        output_buffer_5_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        output_buffer_5_we1 = grp_pool_fu_962_Input_5_we1;
    end else begin
        output_buffer_5_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        output_buffer_6_address0 = grp_relu_fu_1810_input_6_address0;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        output_buffer_6_address0 = grp_output_write_fu_1709_output_buffer_6_address0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        output_buffer_6_address0 = grp_conv_fu_1033_output_buffer_6_address0;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        output_buffer_6_address0 = grp_pool_fu_962_Input_6_address0;
    end else begin
        output_buffer_6_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        output_buffer_6_ce0 = grp_relu_fu_1810_input_6_ce0;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        output_buffer_6_ce0 = grp_output_write_fu_1709_output_buffer_6_ce0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        output_buffer_6_ce0 = grp_conv_fu_1033_output_buffer_6_ce0;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        output_buffer_6_ce0 = grp_pool_fu_962_Input_6_ce0;
    end else begin
        output_buffer_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        output_buffer_6_ce1 = grp_pool_fu_962_Input_6_ce1;
    end else begin
        output_buffer_6_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        output_buffer_6_d0 = grp_relu_fu_1810_input_6_d0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        output_buffer_6_d0 = grp_conv_fu_1033_output_buffer_6_d0;
    end else begin
        output_buffer_6_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        output_buffer_6_we0 = grp_relu_fu_1810_input_6_we0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        output_buffer_6_we0 = grp_conv_fu_1033_output_buffer_6_we0;
    end else begin
        output_buffer_6_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        output_buffer_6_we1 = grp_pool_fu_962_Input_6_we1;
    end else begin
        output_buffer_6_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        output_buffer_7_address0 = grp_relu_fu_1810_input_7_address0;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        output_buffer_7_address0 = grp_output_write_fu_1709_output_buffer_7_address0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        output_buffer_7_address0 = grp_conv_fu_1033_output_buffer_7_address0;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        output_buffer_7_address0 = grp_pool_fu_962_Input_7_address0;
    end else begin
        output_buffer_7_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        output_buffer_7_ce0 = grp_relu_fu_1810_input_7_ce0;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        output_buffer_7_ce0 = grp_output_write_fu_1709_output_buffer_7_ce0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        output_buffer_7_ce0 = grp_conv_fu_1033_output_buffer_7_ce0;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        output_buffer_7_ce0 = grp_pool_fu_962_Input_7_ce0;
    end else begin
        output_buffer_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        output_buffer_7_ce1 = grp_pool_fu_962_Input_7_ce1;
    end else begin
        output_buffer_7_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        output_buffer_7_d0 = grp_relu_fu_1810_input_7_d0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        output_buffer_7_d0 = grp_conv_fu_1033_output_buffer_7_d0;
    end else begin
        output_buffer_7_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        output_buffer_7_we0 = grp_relu_fu_1810_input_7_we0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        output_buffer_7_we0 = grp_conv_fu_1033_output_buffer_7_we0;
    end else begin
        output_buffer_7_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        output_buffer_7_we1 = grp_pool_fu_962_Input_7_we1;
    end else begin
        output_buffer_7_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        output_buffer_8_address0 = grp_relu_fu_1810_input_8_address0;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        output_buffer_8_address0 = grp_output_write_fu_1709_output_buffer_8_address0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        output_buffer_8_address0 = grp_conv_fu_1033_output_buffer_8_address0;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        output_buffer_8_address0 = grp_pool_fu_962_Input_8_address0;
    end else begin
        output_buffer_8_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        output_buffer_8_ce0 = grp_relu_fu_1810_input_8_ce0;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        output_buffer_8_ce0 = grp_output_write_fu_1709_output_buffer_8_ce0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        output_buffer_8_ce0 = grp_conv_fu_1033_output_buffer_8_ce0;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        output_buffer_8_ce0 = grp_pool_fu_962_Input_8_ce0;
    end else begin
        output_buffer_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        output_buffer_8_ce1 = grp_pool_fu_962_Input_8_ce1;
    end else begin
        output_buffer_8_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        output_buffer_8_d0 = grp_relu_fu_1810_input_8_d0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        output_buffer_8_d0 = grp_conv_fu_1033_output_buffer_8_d0;
    end else begin
        output_buffer_8_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        output_buffer_8_we0 = grp_relu_fu_1810_input_8_we0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        output_buffer_8_we0 = grp_conv_fu_1033_output_buffer_8_we0;
    end else begin
        output_buffer_8_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        output_buffer_8_we1 = grp_pool_fu_962_Input_8_we1;
    end else begin
        output_buffer_8_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        output_buffer_9_address0 = grp_relu_fu_1810_input_9_address0;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        output_buffer_9_address0 = grp_output_write_fu_1709_output_buffer_9_address0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        output_buffer_9_address0 = grp_conv_fu_1033_output_buffer_9_address0;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        output_buffer_9_address0 = grp_pool_fu_962_Input_9_address0;
    end else begin
        output_buffer_9_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        output_buffer_9_ce0 = grp_relu_fu_1810_input_9_ce0;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        output_buffer_9_ce0 = grp_output_write_fu_1709_output_buffer_9_ce0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        output_buffer_9_ce0 = grp_conv_fu_1033_output_buffer_9_ce0;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        output_buffer_9_ce0 = grp_pool_fu_962_Input_9_ce0;
    end else begin
        output_buffer_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        output_buffer_9_ce1 = grp_pool_fu_962_Input_9_ce1;
    end else begin
        output_buffer_9_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        output_buffer_9_d0 = grp_relu_fu_1810_input_9_d0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        output_buffer_9_d0 = grp_conv_fu_1033_output_buffer_9_d0;
    end else begin
        output_buffer_9_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        output_buffer_9_we0 = grp_relu_fu_1810_input_9_we0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        output_buffer_9_we0 = grp_conv_fu_1033_output_buffer_9_we0;
    end else begin
        output_buffer_9_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        output_buffer_9_we1 = grp_pool_fu_962_Input_9_we1;
    end else begin
        output_buffer_9_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state41)) begin
        output_buffer_fc_0_address0 = grp_output_write_fc_fu_1963_output_buffer_fc_0_address0;
    end else if ((1'b1 == ap_CS_fsm_state39)) begin
        output_buffer_fc_0_address0 = grp_relu_fc_fu_1941_output_buffer_fc_0_address0;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        output_buffer_fc_0_address0 = grp_fc_fu_1882_output_buffer_0_address0;
    end else begin
        output_buffer_fc_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state41)) begin
        output_buffer_fc_0_ce0 = grp_output_write_fc_fu_1963_output_buffer_fc_0_ce0;
    end else if ((1'b1 == ap_CS_fsm_state39)) begin
        output_buffer_fc_0_ce0 = grp_relu_fc_fu_1941_output_buffer_fc_0_ce0;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        output_buffer_fc_0_ce0 = grp_fc_fu_1882_output_buffer_0_ce0;
    end else begin
        output_buffer_fc_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        output_buffer_fc_0_d0 = grp_relu_fc_fu_1941_output_buffer_fc_0_d0;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        output_buffer_fc_0_d0 = grp_fc_fu_1882_output_buffer_0_d0;
    end else begin
        output_buffer_fc_0_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        output_buffer_fc_0_we0 = grp_relu_fc_fu_1941_output_buffer_fc_0_we0;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        output_buffer_fc_0_we0 = grp_fc_fu_1882_output_buffer_0_we0;
    end else begin
        output_buffer_fc_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state41)) begin
        output_buffer_fc_1_address0 = grp_output_write_fc_fu_1963_output_buffer_fc_1_address0;
    end else if ((1'b1 == ap_CS_fsm_state39)) begin
        output_buffer_fc_1_address0 = grp_relu_fc_fu_1941_output_buffer_fc_1_address0;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        output_buffer_fc_1_address0 = grp_fc_fu_1882_output_buffer_1_address0;
    end else begin
        output_buffer_fc_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state41)) begin
        output_buffer_fc_1_ce0 = grp_output_write_fc_fu_1963_output_buffer_fc_1_ce0;
    end else if ((1'b1 == ap_CS_fsm_state39)) begin
        output_buffer_fc_1_ce0 = grp_relu_fc_fu_1941_output_buffer_fc_1_ce0;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        output_buffer_fc_1_ce0 = grp_fc_fu_1882_output_buffer_1_ce0;
    end else begin
        output_buffer_fc_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        output_buffer_fc_1_d0 = grp_relu_fc_fu_1941_output_buffer_fc_1_d0;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        output_buffer_fc_1_d0 = grp_fc_fu_1882_output_buffer_1_d0;
    end else begin
        output_buffer_fc_1_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        output_buffer_fc_1_we0 = grp_relu_fc_fu_1941_output_buffer_fc_1_we0;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        output_buffer_fc_1_we0 = grp_fc_fu_1882_output_buffer_1_we0;
    end else begin
        output_buffer_fc_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state41)) begin
        output_buffer_fc_2_address0 = grp_output_write_fc_fu_1963_output_buffer_fc_2_address0;
    end else if ((1'b1 == ap_CS_fsm_state39)) begin
        output_buffer_fc_2_address0 = grp_relu_fc_fu_1941_output_buffer_fc_2_address0;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        output_buffer_fc_2_address0 = grp_fc_fu_1882_output_buffer_2_address0;
    end else begin
        output_buffer_fc_2_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state41)) begin
        output_buffer_fc_2_ce0 = grp_output_write_fc_fu_1963_output_buffer_fc_2_ce0;
    end else if ((1'b1 == ap_CS_fsm_state39)) begin
        output_buffer_fc_2_ce0 = grp_relu_fc_fu_1941_output_buffer_fc_2_ce0;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        output_buffer_fc_2_ce0 = grp_fc_fu_1882_output_buffer_2_ce0;
    end else begin
        output_buffer_fc_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        output_buffer_fc_2_d0 = grp_relu_fc_fu_1941_output_buffer_fc_2_d0;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        output_buffer_fc_2_d0 = grp_fc_fu_1882_output_buffer_2_d0;
    end else begin
        output_buffer_fc_2_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        output_buffer_fc_2_we0 = grp_relu_fc_fu_1941_output_buffer_fc_2_we0;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        output_buffer_fc_2_we0 = grp_fc_fu_1882_output_buffer_2_we0;
    end else begin
        output_buffer_fc_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state41)) begin
        output_buffer_fc_3_address0 = grp_output_write_fc_fu_1963_output_buffer_fc_3_address0;
    end else if ((1'b1 == ap_CS_fsm_state39)) begin
        output_buffer_fc_3_address0 = grp_relu_fc_fu_1941_output_buffer_fc_3_address0;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        output_buffer_fc_3_address0 = grp_fc_fu_1882_output_buffer_3_address0;
    end else begin
        output_buffer_fc_3_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state41)) begin
        output_buffer_fc_3_ce0 = grp_output_write_fc_fu_1963_output_buffer_fc_3_ce0;
    end else if ((1'b1 == ap_CS_fsm_state39)) begin
        output_buffer_fc_3_ce0 = grp_relu_fc_fu_1941_output_buffer_fc_3_ce0;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        output_buffer_fc_3_ce0 = grp_fc_fu_1882_output_buffer_3_ce0;
    end else begin
        output_buffer_fc_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        output_buffer_fc_3_d0 = grp_relu_fc_fu_1941_output_buffer_fc_3_d0;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        output_buffer_fc_3_d0 = grp_fc_fu_1882_output_buffer_3_d0;
    end else begin
        output_buffer_fc_3_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        output_buffer_fc_3_we0 = grp_relu_fc_fu_1941_output_buffer_fc_3_we0;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        output_buffer_fc_3_we0 = grp_fc_fu_1882_output_buffer_3_we0;
    end else begin
        output_buffer_fc_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state41)) begin
        output_buffer_fc_4_address0 = grp_output_write_fc_fu_1963_output_buffer_fc_4_address0;
    end else if ((1'b1 == ap_CS_fsm_state39)) begin
        output_buffer_fc_4_address0 = grp_relu_fc_fu_1941_output_buffer_fc_4_address0;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        output_buffer_fc_4_address0 = grp_fc_fu_1882_output_buffer_4_address0;
    end else begin
        output_buffer_fc_4_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state41)) begin
        output_buffer_fc_4_ce0 = grp_output_write_fc_fu_1963_output_buffer_fc_4_ce0;
    end else if ((1'b1 == ap_CS_fsm_state39)) begin
        output_buffer_fc_4_ce0 = grp_relu_fc_fu_1941_output_buffer_fc_4_ce0;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        output_buffer_fc_4_ce0 = grp_fc_fu_1882_output_buffer_4_ce0;
    end else begin
        output_buffer_fc_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        output_buffer_fc_4_d0 = grp_relu_fc_fu_1941_output_buffer_fc_4_d0;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        output_buffer_fc_4_d0 = grp_fc_fu_1882_output_buffer_4_d0;
    end else begin
        output_buffer_fc_4_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        output_buffer_fc_4_we0 = grp_relu_fc_fu_1941_output_buffer_fc_4_we0;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        output_buffer_fc_4_we0 = grp_fc_fu_1882_output_buffer_4_we0;
    end else begin
        output_buffer_fc_4_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state41)) begin
        output_buffer_fc_5_address0 = grp_output_write_fc_fu_1963_output_buffer_fc_5_address0;
    end else if ((1'b1 == ap_CS_fsm_state39)) begin
        output_buffer_fc_5_address0 = grp_relu_fc_fu_1941_output_buffer_fc_5_address0;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        output_buffer_fc_5_address0 = grp_fc_fu_1882_output_buffer_5_address0;
    end else begin
        output_buffer_fc_5_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state41)) begin
        output_buffer_fc_5_ce0 = grp_output_write_fc_fu_1963_output_buffer_fc_5_ce0;
    end else if ((1'b1 == ap_CS_fsm_state39)) begin
        output_buffer_fc_5_ce0 = grp_relu_fc_fu_1941_output_buffer_fc_5_ce0;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        output_buffer_fc_5_ce0 = grp_fc_fu_1882_output_buffer_5_ce0;
    end else begin
        output_buffer_fc_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        output_buffer_fc_5_d0 = grp_relu_fc_fu_1941_output_buffer_fc_5_d0;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        output_buffer_fc_5_d0 = grp_fc_fu_1882_output_buffer_5_d0;
    end else begin
        output_buffer_fc_5_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        output_buffer_fc_5_we0 = grp_relu_fc_fu_1941_output_buffer_fc_5_we0;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        output_buffer_fc_5_we0 = grp_fc_fu_1882_output_buffer_5_we0;
    end else begin
        output_buffer_fc_5_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state41)) begin
        output_buffer_fc_6_address0 = grp_output_write_fc_fu_1963_output_buffer_fc_6_address0;
    end else if ((1'b1 == ap_CS_fsm_state39)) begin
        output_buffer_fc_6_address0 = grp_relu_fc_fu_1941_output_buffer_fc_6_address0;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        output_buffer_fc_6_address0 = grp_fc_fu_1882_output_buffer_6_address0;
    end else begin
        output_buffer_fc_6_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state41)) begin
        output_buffer_fc_6_ce0 = grp_output_write_fc_fu_1963_output_buffer_fc_6_ce0;
    end else if ((1'b1 == ap_CS_fsm_state39)) begin
        output_buffer_fc_6_ce0 = grp_relu_fc_fu_1941_output_buffer_fc_6_ce0;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        output_buffer_fc_6_ce0 = grp_fc_fu_1882_output_buffer_6_ce0;
    end else begin
        output_buffer_fc_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        output_buffer_fc_6_d0 = grp_relu_fc_fu_1941_output_buffer_fc_6_d0;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        output_buffer_fc_6_d0 = grp_fc_fu_1882_output_buffer_6_d0;
    end else begin
        output_buffer_fc_6_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        output_buffer_fc_6_we0 = grp_relu_fc_fu_1941_output_buffer_fc_6_we0;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        output_buffer_fc_6_we0 = grp_fc_fu_1882_output_buffer_6_we0;
    end else begin
        output_buffer_fc_6_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state41)) begin
        output_buffer_fc_7_address0 = grp_output_write_fc_fu_1963_output_buffer_fc_7_address0;
    end else if ((1'b1 == ap_CS_fsm_state39)) begin
        output_buffer_fc_7_address0 = grp_relu_fc_fu_1941_output_buffer_fc_7_address0;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        output_buffer_fc_7_address0 = grp_fc_fu_1882_output_buffer_7_address0;
    end else begin
        output_buffer_fc_7_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state41)) begin
        output_buffer_fc_7_ce0 = grp_output_write_fc_fu_1963_output_buffer_fc_7_ce0;
    end else if ((1'b1 == ap_CS_fsm_state39)) begin
        output_buffer_fc_7_ce0 = grp_relu_fc_fu_1941_output_buffer_fc_7_ce0;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        output_buffer_fc_7_ce0 = grp_fc_fu_1882_output_buffer_7_ce0;
    end else begin
        output_buffer_fc_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        output_buffer_fc_7_d0 = grp_relu_fc_fu_1941_output_buffer_fc_7_d0;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        output_buffer_fc_7_d0 = grp_fc_fu_1882_output_buffer_7_d0;
    end else begin
        output_buffer_fc_7_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        output_buffer_fc_7_we0 = grp_relu_fc_fu_1941_output_buffer_fc_7_we0;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        output_buffer_fc_7_we0 = grp_fc_fu_1882_output_buffer_7_we0;
    end else begin
        output_buffer_fc_7_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_0_0_address0 = grp_weight_load_fu_1439_weight_buffer_0_0_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_buffer_V_0_0_address0 = grp_conv_fu_1033_weight_buffer_V_0_0_address0;
    end else begin
        weight_buffer_V_0_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_0_0_ce0 = grp_weight_load_fu_1439_weight_buffer_0_0_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_buffer_V_0_0_ce0 = grp_conv_fu_1033_weight_buffer_V_0_0_ce0;
    end else begin
        weight_buffer_V_0_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_0_0_we0 = grp_weight_load_fu_1439_weight_buffer_0_0_V_we0;
    end else begin
        weight_buffer_V_0_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_0_10_address0 = grp_weight_load_fu_1439_weight_buffer_0_10_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_buffer_V_0_10_address0 = grp_conv_fu_1033_weight_buffer_V_0_10_address0;
    end else begin
        weight_buffer_V_0_10_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_0_10_ce0 = grp_weight_load_fu_1439_weight_buffer_0_10_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_buffer_V_0_10_ce0 = grp_conv_fu_1033_weight_buffer_V_0_10_ce0;
    end else begin
        weight_buffer_V_0_10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_0_10_we0 = grp_weight_load_fu_1439_weight_buffer_0_10_V_we0;
    end else begin
        weight_buffer_V_0_10_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_0_11_address0 = grp_weight_load_fu_1439_weight_buffer_0_11_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_buffer_V_0_11_address0 = grp_conv_fu_1033_weight_buffer_V_0_11_address0;
    end else begin
        weight_buffer_V_0_11_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_0_11_ce0 = grp_weight_load_fu_1439_weight_buffer_0_11_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_buffer_V_0_11_ce0 = grp_conv_fu_1033_weight_buffer_V_0_11_ce0;
    end else begin
        weight_buffer_V_0_11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_0_11_we0 = grp_weight_load_fu_1439_weight_buffer_0_11_V_we0;
    end else begin
        weight_buffer_V_0_11_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_0_12_address0 = grp_weight_load_fu_1439_weight_buffer_0_12_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_buffer_V_0_12_address0 = grp_conv_fu_1033_weight_buffer_V_0_12_address0;
    end else begin
        weight_buffer_V_0_12_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_0_12_ce0 = grp_weight_load_fu_1439_weight_buffer_0_12_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_buffer_V_0_12_ce0 = grp_conv_fu_1033_weight_buffer_V_0_12_ce0;
    end else begin
        weight_buffer_V_0_12_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_0_12_we0 = grp_weight_load_fu_1439_weight_buffer_0_12_V_we0;
    end else begin
        weight_buffer_V_0_12_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_0_13_address0 = grp_weight_load_fu_1439_weight_buffer_0_13_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_buffer_V_0_13_address0 = grp_conv_fu_1033_weight_buffer_V_0_13_address0;
    end else begin
        weight_buffer_V_0_13_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_0_13_ce0 = grp_weight_load_fu_1439_weight_buffer_0_13_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_buffer_V_0_13_ce0 = grp_conv_fu_1033_weight_buffer_V_0_13_ce0;
    end else begin
        weight_buffer_V_0_13_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_0_13_we0 = grp_weight_load_fu_1439_weight_buffer_0_13_V_we0;
    end else begin
        weight_buffer_V_0_13_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_0_14_address0 = grp_weight_load_fu_1439_weight_buffer_0_14_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_buffer_V_0_14_address0 = grp_conv_fu_1033_weight_buffer_V_0_14_address0;
    end else begin
        weight_buffer_V_0_14_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_0_14_ce0 = grp_weight_load_fu_1439_weight_buffer_0_14_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_buffer_V_0_14_ce0 = grp_conv_fu_1033_weight_buffer_V_0_14_ce0;
    end else begin
        weight_buffer_V_0_14_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_0_14_we0 = grp_weight_load_fu_1439_weight_buffer_0_14_V_we0;
    end else begin
        weight_buffer_V_0_14_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_0_15_address0 = grp_weight_load_fu_1439_weight_buffer_0_15_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_buffer_V_0_15_address0 = grp_conv_fu_1033_weight_buffer_V_0_15_address0;
    end else begin
        weight_buffer_V_0_15_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_0_15_ce0 = grp_weight_load_fu_1439_weight_buffer_0_15_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_buffer_V_0_15_ce0 = grp_conv_fu_1033_weight_buffer_V_0_15_ce0;
    end else begin
        weight_buffer_V_0_15_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_0_15_we0 = grp_weight_load_fu_1439_weight_buffer_0_15_V_we0;
    end else begin
        weight_buffer_V_0_15_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_0_16_address0 = grp_weight_load_fu_1439_weight_buffer_0_16_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_buffer_V_0_16_address0 = grp_conv_fu_1033_weight_buffer_V_0_16_address0;
    end else begin
        weight_buffer_V_0_16_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_0_16_ce0 = grp_weight_load_fu_1439_weight_buffer_0_16_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_buffer_V_0_16_ce0 = grp_conv_fu_1033_weight_buffer_V_0_16_ce0;
    end else begin
        weight_buffer_V_0_16_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_0_16_we0 = grp_weight_load_fu_1439_weight_buffer_0_16_V_we0;
    end else begin
        weight_buffer_V_0_16_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_0_17_address0 = grp_weight_load_fu_1439_weight_buffer_0_17_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_buffer_V_0_17_address0 = grp_conv_fu_1033_weight_buffer_V_0_17_address0;
    end else begin
        weight_buffer_V_0_17_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_0_17_ce0 = grp_weight_load_fu_1439_weight_buffer_0_17_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_buffer_V_0_17_ce0 = grp_conv_fu_1033_weight_buffer_V_0_17_ce0;
    end else begin
        weight_buffer_V_0_17_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_0_17_we0 = grp_weight_load_fu_1439_weight_buffer_0_17_V_we0;
    end else begin
        weight_buffer_V_0_17_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_0_18_address0 = grp_weight_load_fu_1439_weight_buffer_0_18_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_buffer_V_0_18_address0 = grp_conv_fu_1033_weight_buffer_V_0_18_address0;
    end else begin
        weight_buffer_V_0_18_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_0_18_ce0 = grp_weight_load_fu_1439_weight_buffer_0_18_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_buffer_V_0_18_ce0 = grp_conv_fu_1033_weight_buffer_V_0_18_ce0;
    end else begin
        weight_buffer_V_0_18_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_0_18_we0 = grp_weight_load_fu_1439_weight_buffer_0_18_V_we0;
    end else begin
        weight_buffer_V_0_18_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_0_19_address0 = grp_weight_load_fu_1439_weight_buffer_0_19_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_buffer_V_0_19_address0 = grp_conv_fu_1033_weight_buffer_V_0_19_address0;
    end else begin
        weight_buffer_V_0_19_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_0_19_ce0 = grp_weight_load_fu_1439_weight_buffer_0_19_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_buffer_V_0_19_ce0 = grp_conv_fu_1033_weight_buffer_V_0_19_ce0;
    end else begin
        weight_buffer_V_0_19_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_0_19_we0 = grp_weight_load_fu_1439_weight_buffer_0_19_V_we0;
    end else begin
        weight_buffer_V_0_19_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_0_1_address0 = grp_weight_load_fu_1439_weight_buffer_0_1_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_buffer_V_0_1_address0 = grp_conv_fu_1033_weight_buffer_V_0_1_address0;
    end else begin
        weight_buffer_V_0_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_0_1_ce0 = grp_weight_load_fu_1439_weight_buffer_0_1_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_buffer_V_0_1_ce0 = grp_conv_fu_1033_weight_buffer_V_0_1_ce0;
    end else begin
        weight_buffer_V_0_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_0_1_we0 = grp_weight_load_fu_1439_weight_buffer_0_1_V_we0;
    end else begin
        weight_buffer_V_0_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_0_20_address0 = grp_weight_load_fu_1439_weight_buffer_0_20_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_buffer_V_0_20_address0 = grp_conv_fu_1033_weight_buffer_V_0_20_address0;
    end else begin
        weight_buffer_V_0_20_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_0_20_ce0 = grp_weight_load_fu_1439_weight_buffer_0_20_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_buffer_V_0_20_ce0 = grp_conv_fu_1033_weight_buffer_V_0_20_ce0;
    end else begin
        weight_buffer_V_0_20_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_0_20_we0 = grp_weight_load_fu_1439_weight_buffer_0_20_V_we0;
    end else begin
        weight_buffer_V_0_20_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_0_21_address0 = grp_weight_load_fu_1439_weight_buffer_0_21_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_buffer_V_0_21_address0 = grp_conv_fu_1033_weight_buffer_V_0_21_address0;
    end else begin
        weight_buffer_V_0_21_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_0_21_ce0 = grp_weight_load_fu_1439_weight_buffer_0_21_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_buffer_V_0_21_ce0 = grp_conv_fu_1033_weight_buffer_V_0_21_ce0;
    end else begin
        weight_buffer_V_0_21_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_0_21_we0 = grp_weight_load_fu_1439_weight_buffer_0_21_V_we0;
    end else begin
        weight_buffer_V_0_21_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_0_22_address0 = grp_weight_load_fu_1439_weight_buffer_0_22_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_buffer_V_0_22_address0 = grp_conv_fu_1033_weight_buffer_V_0_22_address0;
    end else begin
        weight_buffer_V_0_22_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_0_22_ce0 = grp_weight_load_fu_1439_weight_buffer_0_22_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_buffer_V_0_22_ce0 = grp_conv_fu_1033_weight_buffer_V_0_22_ce0;
    end else begin
        weight_buffer_V_0_22_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_0_22_we0 = grp_weight_load_fu_1439_weight_buffer_0_22_V_we0;
    end else begin
        weight_buffer_V_0_22_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_0_23_address0 = grp_weight_load_fu_1439_weight_buffer_0_23_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_buffer_V_0_23_address0 = grp_conv_fu_1033_weight_buffer_V_0_23_address0;
    end else begin
        weight_buffer_V_0_23_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_0_23_ce0 = grp_weight_load_fu_1439_weight_buffer_0_23_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_buffer_V_0_23_ce0 = grp_conv_fu_1033_weight_buffer_V_0_23_ce0;
    end else begin
        weight_buffer_V_0_23_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_0_23_we0 = grp_weight_load_fu_1439_weight_buffer_0_23_V_we0;
    end else begin
        weight_buffer_V_0_23_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_0_24_address0 = grp_weight_load_fu_1439_weight_buffer_0_24_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_buffer_V_0_24_address0 = grp_conv_fu_1033_weight_buffer_V_0_24_address0;
    end else begin
        weight_buffer_V_0_24_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_0_24_ce0 = grp_weight_load_fu_1439_weight_buffer_0_24_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_buffer_V_0_24_ce0 = grp_conv_fu_1033_weight_buffer_V_0_24_ce0;
    end else begin
        weight_buffer_V_0_24_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_0_24_we0 = grp_weight_load_fu_1439_weight_buffer_0_24_V_we0;
    end else begin
        weight_buffer_V_0_24_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_0_25_address0 = grp_weight_load_fu_1439_weight_buffer_0_25_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_buffer_V_0_25_address0 = grp_conv_fu_1033_weight_buffer_V_0_25_address0;
    end else begin
        weight_buffer_V_0_25_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_0_25_ce0 = grp_weight_load_fu_1439_weight_buffer_0_25_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_buffer_V_0_25_ce0 = grp_conv_fu_1033_weight_buffer_V_0_25_ce0;
    end else begin
        weight_buffer_V_0_25_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_0_25_we0 = grp_weight_load_fu_1439_weight_buffer_0_25_V_we0;
    end else begin
        weight_buffer_V_0_25_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_0_26_address0 = grp_weight_load_fu_1439_weight_buffer_0_26_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_buffer_V_0_26_address0 = grp_conv_fu_1033_weight_buffer_V_0_26_address0;
    end else begin
        weight_buffer_V_0_26_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_0_26_ce0 = grp_weight_load_fu_1439_weight_buffer_0_26_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_buffer_V_0_26_ce0 = grp_conv_fu_1033_weight_buffer_V_0_26_ce0;
    end else begin
        weight_buffer_V_0_26_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_0_26_we0 = grp_weight_load_fu_1439_weight_buffer_0_26_V_we0;
    end else begin
        weight_buffer_V_0_26_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_0_27_address0 = grp_weight_load_fu_1439_weight_buffer_0_27_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_buffer_V_0_27_address0 = grp_conv_fu_1033_weight_buffer_V_0_27_address0;
    end else begin
        weight_buffer_V_0_27_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_0_27_ce0 = grp_weight_load_fu_1439_weight_buffer_0_27_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_buffer_V_0_27_ce0 = grp_conv_fu_1033_weight_buffer_V_0_27_ce0;
    end else begin
        weight_buffer_V_0_27_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_0_27_we0 = grp_weight_load_fu_1439_weight_buffer_0_27_V_we0;
    end else begin
        weight_buffer_V_0_27_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_0_28_address0 = grp_weight_load_fu_1439_weight_buffer_0_28_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_buffer_V_0_28_address0 = grp_conv_fu_1033_weight_buffer_V_0_28_address0;
    end else begin
        weight_buffer_V_0_28_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_0_28_ce0 = grp_weight_load_fu_1439_weight_buffer_0_28_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_buffer_V_0_28_ce0 = grp_conv_fu_1033_weight_buffer_V_0_28_ce0;
    end else begin
        weight_buffer_V_0_28_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_0_28_we0 = grp_weight_load_fu_1439_weight_buffer_0_28_V_we0;
    end else begin
        weight_buffer_V_0_28_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_0_29_address0 = grp_weight_load_fu_1439_weight_buffer_0_29_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_buffer_V_0_29_address0 = grp_conv_fu_1033_weight_buffer_V_0_29_address0;
    end else begin
        weight_buffer_V_0_29_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_0_29_ce0 = grp_weight_load_fu_1439_weight_buffer_0_29_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_buffer_V_0_29_ce0 = grp_conv_fu_1033_weight_buffer_V_0_29_ce0;
    end else begin
        weight_buffer_V_0_29_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_0_29_we0 = grp_weight_load_fu_1439_weight_buffer_0_29_V_we0;
    end else begin
        weight_buffer_V_0_29_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_0_2_address0 = grp_weight_load_fu_1439_weight_buffer_0_2_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_buffer_V_0_2_address0 = grp_conv_fu_1033_weight_buffer_V_0_2_address0;
    end else begin
        weight_buffer_V_0_2_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_0_2_ce0 = grp_weight_load_fu_1439_weight_buffer_0_2_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_buffer_V_0_2_ce0 = grp_conv_fu_1033_weight_buffer_V_0_2_ce0;
    end else begin
        weight_buffer_V_0_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_0_2_we0 = grp_weight_load_fu_1439_weight_buffer_0_2_V_we0;
    end else begin
        weight_buffer_V_0_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_0_30_address0 = grp_weight_load_fu_1439_weight_buffer_0_30_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_buffer_V_0_30_address0 = grp_conv_fu_1033_weight_buffer_V_0_30_address0;
    end else begin
        weight_buffer_V_0_30_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_0_30_ce0 = grp_weight_load_fu_1439_weight_buffer_0_30_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_buffer_V_0_30_ce0 = grp_conv_fu_1033_weight_buffer_V_0_30_ce0;
    end else begin
        weight_buffer_V_0_30_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_0_30_we0 = grp_weight_load_fu_1439_weight_buffer_0_30_V_we0;
    end else begin
        weight_buffer_V_0_30_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_0_31_address0 = grp_weight_load_fu_1439_weight_buffer_0_31_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_buffer_V_0_31_address0 = grp_conv_fu_1033_weight_buffer_V_0_31_address0;
    end else begin
        weight_buffer_V_0_31_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_0_31_ce0 = grp_weight_load_fu_1439_weight_buffer_0_31_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_buffer_V_0_31_ce0 = grp_conv_fu_1033_weight_buffer_V_0_31_ce0;
    end else begin
        weight_buffer_V_0_31_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_0_31_we0 = grp_weight_load_fu_1439_weight_buffer_0_31_V_we0;
    end else begin
        weight_buffer_V_0_31_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_0_3_address0 = grp_weight_load_fu_1439_weight_buffer_0_3_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_buffer_V_0_3_address0 = grp_conv_fu_1033_weight_buffer_V_0_3_address0;
    end else begin
        weight_buffer_V_0_3_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_0_3_ce0 = grp_weight_load_fu_1439_weight_buffer_0_3_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_buffer_V_0_3_ce0 = grp_conv_fu_1033_weight_buffer_V_0_3_ce0;
    end else begin
        weight_buffer_V_0_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_0_3_we0 = grp_weight_load_fu_1439_weight_buffer_0_3_V_we0;
    end else begin
        weight_buffer_V_0_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_0_4_address0 = grp_weight_load_fu_1439_weight_buffer_0_4_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_buffer_V_0_4_address0 = grp_conv_fu_1033_weight_buffer_V_0_4_address0;
    end else begin
        weight_buffer_V_0_4_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_0_4_ce0 = grp_weight_load_fu_1439_weight_buffer_0_4_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_buffer_V_0_4_ce0 = grp_conv_fu_1033_weight_buffer_V_0_4_ce0;
    end else begin
        weight_buffer_V_0_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_0_4_we0 = grp_weight_load_fu_1439_weight_buffer_0_4_V_we0;
    end else begin
        weight_buffer_V_0_4_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_0_5_address0 = grp_weight_load_fu_1439_weight_buffer_0_5_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_buffer_V_0_5_address0 = grp_conv_fu_1033_weight_buffer_V_0_5_address0;
    end else begin
        weight_buffer_V_0_5_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_0_5_ce0 = grp_weight_load_fu_1439_weight_buffer_0_5_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_buffer_V_0_5_ce0 = grp_conv_fu_1033_weight_buffer_V_0_5_ce0;
    end else begin
        weight_buffer_V_0_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_0_5_we0 = grp_weight_load_fu_1439_weight_buffer_0_5_V_we0;
    end else begin
        weight_buffer_V_0_5_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_0_6_address0 = grp_weight_load_fu_1439_weight_buffer_0_6_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_buffer_V_0_6_address0 = grp_conv_fu_1033_weight_buffer_V_0_6_address0;
    end else begin
        weight_buffer_V_0_6_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_0_6_ce0 = grp_weight_load_fu_1439_weight_buffer_0_6_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_buffer_V_0_6_ce0 = grp_conv_fu_1033_weight_buffer_V_0_6_ce0;
    end else begin
        weight_buffer_V_0_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_0_6_we0 = grp_weight_load_fu_1439_weight_buffer_0_6_V_we0;
    end else begin
        weight_buffer_V_0_6_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_0_7_address0 = grp_weight_load_fu_1439_weight_buffer_0_7_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_buffer_V_0_7_address0 = grp_conv_fu_1033_weight_buffer_V_0_7_address0;
    end else begin
        weight_buffer_V_0_7_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_0_7_ce0 = grp_weight_load_fu_1439_weight_buffer_0_7_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_buffer_V_0_7_ce0 = grp_conv_fu_1033_weight_buffer_V_0_7_ce0;
    end else begin
        weight_buffer_V_0_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_0_7_we0 = grp_weight_load_fu_1439_weight_buffer_0_7_V_we0;
    end else begin
        weight_buffer_V_0_7_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_0_8_address0 = grp_weight_load_fu_1439_weight_buffer_0_8_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_buffer_V_0_8_address0 = grp_conv_fu_1033_weight_buffer_V_0_8_address0;
    end else begin
        weight_buffer_V_0_8_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_0_8_ce0 = grp_weight_load_fu_1439_weight_buffer_0_8_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_buffer_V_0_8_ce0 = grp_conv_fu_1033_weight_buffer_V_0_8_ce0;
    end else begin
        weight_buffer_V_0_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_0_8_we0 = grp_weight_load_fu_1439_weight_buffer_0_8_V_we0;
    end else begin
        weight_buffer_V_0_8_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_0_9_address0 = grp_weight_load_fu_1439_weight_buffer_0_9_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_buffer_V_0_9_address0 = grp_conv_fu_1033_weight_buffer_V_0_9_address0;
    end else begin
        weight_buffer_V_0_9_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_0_9_ce0 = grp_weight_load_fu_1439_weight_buffer_0_9_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_buffer_V_0_9_ce0 = grp_conv_fu_1033_weight_buffer_V_0_9_ce0;
    end else begin
        weight_buffer_V_0_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_0_9_we0 = grp_weight_load_fu_1439_weight_buffer_0_9_V_we0;
    end else begin
        weight_buffer_V_0_9_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_1_0_address0 = grp_weight_load_fu_1439_weight_buffer_1_0_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_buffer_V_1_0_address0 = grp_conv_fu_1033_weight_buffer_V_1_0_address0;
    end else begin
        weight_buffer_V_1_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_1_0_ce0 = grp_weight_load_fu_1439_weight_buffer_1_0_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_buffer_V_1_0_ce0 = grp_conv_fu_1033_weight_buffer_V_1_0_ce0;
    end else begin
        weight_buffer_V_1_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_1_0_we0 = grp_weight_load_fu_1439_weight_buffer_1_0_V_we0;
    end else begin
        weight_buffer_V_1_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_1_10_address0 = grp_weight_load_fu_1439_weight_buffer_1_10_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_buffer_V_1_10_address0 = grp_conv_fu_1033_weight_buffer_V_1_10_address0;
    end else begin
        weight_buffer_V_1_10_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_1_10_ce0 = grp_weight_load_fu_1439_weight_buffer_1_10_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_buffer_V_1_10_ce0 = grp_conv_fu_1033_weight_buffer_V_1_10_ce0;
    end else begin
        weight_buffer_V_1_10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_1_10_we0 = grp_weight_load_fu_1439_weight_buffer_1_10_V_we0;
    end else begin
        weight_buffer_V_1_10_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_1_11_address0 = grp_weight_load_fu_1439_weight_buffer_1_11_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_buffer_V_1_11_address0 = grp_conv_fu_1033_weight_buffer_V_1_11_address0;
    end else begin
        weight_buffer_V_1_11_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_1_11_ce0 = grp_weight_load_fu_1439_weight_buffer_1_11_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_buffer_V_1_11_ce0 = grp_conv_fu_1033_weight_buffer_V_1_11_ce0;
    end else begin
        weight_buffer_V_1_11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_1_11_we0 = grp_weight_load_fu_1439_weight_buffer_1_11_V_we0;
    end else begin
        weight_buffer_V_1_11_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_1_12_address0 = grp_weight_load_fu_1439_weight_buffer_1_12_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_buffer_V_1_12_address0 = grp_conv_fu_1033_weight_buffer_V_1_12_address0;
    end else begin
        weight_buffer_V_1_12_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_1_12_ce0 = grp_weight_load_fu_1439_weight_buffer_1_12_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_buffer_V_1_12_ce0 = grp_conv_fu_1033_weight_buffer_V_1_12_ce0;
    end else begin
        weight_buffer_V_1_12_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_1_12_we0 = grp_weight_load_fu_1439_weight_buffer_1_12_V_we0;
    end else begin
        weight_buffer_V_1_12_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_1_13_address0 = grp_weight_load_fu_1439_weight_buffer_1_13_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_buffer_V_1_13_address0 = grp_conv_fu_1033_weight_buffer_V_1_13_address0;
    end else begin
        weight_buffer_V_1_13_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_1_13_ce0 = grp_weight_load_fu_1439_weight_buffer_1_13_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_buffer_V_1_13_ce0 = grp_conv_fu_1033_weight_buffer_V_1_13_ce0;
    end else begin
        weight_buffer_V_1_13_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_1_13_we0 = grp_weight_load_fu_1439_weight_buffer_1_13_V_we0;
    end else begin
        weight_buffer_V_1_13_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_1_14_address0 = grp_weight_load_fu_1439_weight_buffer_1_14_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_buffer_V_1_14_address0 = grp_conv_fu_1033_weight_buffer_V_1_14_address0;
    end else begin
        weight_buffer_V_1_14_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_1_14_ce0 = grp_weight_load_fu_1439_weight_buffer_1_14_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_buffer_V_1_14_ce0 = grp_conv_fu_1033_weight_buffer_V_1_14_ce0;
    end else begin
        weight_buffer_V_1_14_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_1_14_we0 = grp_weight_load_fu_1439_weight_buffer_1_14_V_we0;
    end else begin
        weight_buffer_V_1_14_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_1_15_address0 = grp_weight_load_fu_1439_weight_buffer_1_15_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_buffer_V_1_15_address0 = grp_conv_fu_1033_weight_buffer_V_1_15_address0;
    end else begin
        weight_buffer_V_1_15_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_1_15_ce0 = grp_weight_load_fu_1439_weight_buffer_1_15_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_buffer_V_1_15_ce0 = grp_conv_fu_1033_weight_buffer_V_1_15_ce0;
    end else begin
        weight_buffer_V_1_15_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_1_15_we0 = grp_weight_load_fu_1439_weight_buffer_1_15_V_we0;
    end else begin
        weight_buffer_V_1_15_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_1_16_address0 = grp_weight_load_fu_1439_weight_buffer_1_16_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_buffer_V_1_16_address0 = grp_conv_fu_1033_weight_buffer_V_1_16_address0;
    end else begin
        weight_buffer_V_1_16_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_1_16_ce0 = grp_weight_load_fu_1439_weight_buffer_1_16_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_buffer_V_1_16_ce0 = grp_conv_fu_1033_weight_buffer_V_1_16_ce0;
    end else begin
        weight_buffer_V_1_16_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_1_16_we0 = grp_weight_load_fu_1439_weight_buffer_1_16_V_we0;
    end else begin
        weight_buffer_V_1_16_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_1_17_address0 = grp_weight_load_fu_1439_weight_buffer_1_17_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_buffer_V_1_17_address0 = grp_conv_fu_1033_weight_buffer_V_1_17_address0;
    end else begin
        weight_buffer_V_1_17_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_1_17_ce0 = grp_weight_load_fu_1439_weight_buffer_1_17_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_buffer_V_1_17_ce0 = grp_conv_fu_1033_weight_buffer_V_1_17_ce0;
    end else begin
        weight_buffer_V_1_17_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_1_17_we0 = grp_weight_load_fu_1439_weight_buffer_1_17_V_we0;
    end else begin
        weight_buffer_V_1_17_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_1_18_address0 = grp_weight_load_fu_1439_weight_buffer_1_18_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_buffer_V_1_18_address0 = grp_conv_fu_1033_weight_buffer_V_1_18_address0;
    end else begin
        weight_buffer_V_1_18_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_1_18_ce0 = grp_weight_load_fu_1439_weight_buffer_1_18_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_buffer_V_1_18_ce0 = grp_conv_fu_1033_weight_buffer_V_1_18_ce0;
    end else begin
        weight_buffer_V_1_18_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_1_18_we0 = grp_weight_load_fu_1439_weight_buffer_1_18_V_we0;
    end else begin
        weight_buffer_V_1_18_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_1_19_address0 = grp_weight_load_fu_1439_weight_buffer_1_19_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_buffer_V_1_19_address0 = grp_conv_fu_1033_weight_buffer_V_1_19_address0;
    end else begin
        weight_buffer_V_1_19_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_1_19_ce0 = grp_weight_load_fu_1439_weight_buffer_1_19_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_buffer_V_1_19_ce0 = grp_conv_fu_1033_weight_buffer_V_1_19_ce0;
    end else begin
        weight_buffer_V_1_19_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_1_19_we0 = grp_weight_load_fu_1439_weight_buffer_1_19_V_we0;
    end else begin
        weight_buffer_V_1_19_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_1_1_address0 = grp_weight_load_fu_1439_weight_buffer_1_1_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_buffer_V_1_1_address0 = grp_conv_fu_1033_weight_buffer_V_1_1_address0;
    end else begin
        weight_buffer_V_1_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_1_1_ce0 = grp_weight_load_fu_1439_weight_buffer_1_1_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_buffer_V_1_1_ce0 = grp_conv_fu_1033_weight_buffer_V_1_1_ce0;
    end else begin
        weight_buffer_V_1_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_1_1_we0 = grp_weight_load_fu_1439_weight_buffer_1_1_V_we0;
    end else begin
        weight_buffer_V_1_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_1_20_address0 = grp_weight_load_fu_1439_weight_buffer_1_20_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_buffer_V_1_20_address0 = grp_conv_fu_1033_weight_buffer_V_1_20_address0;
    end else begin
        weight_buffer_V_1_20_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_1_20_ce0 = grp_weight_load_fu_1439_weight_buffer_1_20_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_buffer_V_1_20_ce0 = grp_conv_fu_1033_weight_buffer_V_1_20_ce0;
    end else begin
        weight_buffer_V_1_20_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_1_20_we0 = grp_weight_load_fu_1439_weight_buffer_1_20_V_we0;
    end else begin
        weight_buffer_V_1_20_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_1_21_address0 = grp_weight_load_fu_1439_weight_buffer_1_21_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_buffer_V_1_21_address0 = grp_conv_fu_1033_weight_buffer_V_1_21_address0;
    end else begin
        weight_buffer_V_1_21_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_1_21_ce0 = grp_weight_load_fu_1439_weight_buffer_1_21_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_buffer_V_1_21_ce0 = grp_conv_fu_1033_weight_buffer_V_1_21_ce0;
    end else begin
        weight_buffer_V_1_21_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_1_21_we0 = grp_weight_load_fu_1439_weight_buffer_1_21_V_we0;
    end else begin
        weight_buffer_V_1_21_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_1_22_address0 = grp_weight_load_fu_1439_weight_buffer_1_22_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_buffer_V_1_22_address0 = grp_conv_fu_1033_weight_buffer_V_1_22_address0;
    end else begin
        weight_buffer_V_1_22_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_1_22_ce0 = grp_weight_load_fu_1439_weight_buffer_1_22_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_buffer_V_1_22_ce0 = grp_conv_fu_1033_weight_buffer_V_1_22_ce0;
    end else begin
        weight_buffer_V_1_22_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_1_22_we0 = grp_weight_load_fu_1439_weight_buffer_1_22_V_we0;
    end else begin
        weight_buffer_V_1_22_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_1_23_address0 = grp_weight_load_fu_1439_weight_buffer_1_23_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_buffer_V_1_23_address0 = grp_conv_fu_1033_weight_buffer_V_1_23_address0;
    end else begin
        weight_buffer_V_1_23_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_1_23_ce0 = grp_weight_load_fu_1439_weight_buffer_1_23_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_buffer_V_1_23_ce0 = grp_conv_fu_1033_weight_buffer_V_1_23_ce0;
    end else begin
        weight_buffer_V_1_23_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_1_23_we0 = grp_weight_load_fu_1439_weight_buffer_1_23_V_we0;
    end else begin
        weight_buffer_V_1_23_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_1_24_address0 = grp_weight_load_fu_1439_weight_buffer_1_24_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_buffer_V_1_24_address0 = grp_conv_fu_1033_weight_buffer_V_1_24_address0;
    end else begin
        weight_buffer_V_1_24_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_1_24_ce0 = grp_weight_load_fu_1439_weight_buffer_1_24_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_buffer_V_1_24_ce0 = grp_conv_fu_1033_weight_buffer_V_1_24_ce0;
    end else begin
        weight_buffer_V_1_24_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_1_24_we0 = grp_weight_load_fu_1439_weight_buffer_1_24_V_we0;
    end else begin
        weight_buffer_V_1_24_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_1_25_address0 = grp_weight_load_fu_1439_weight_buffer_1_25_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_buffer_V_1_25_address0 = grp_conv_fu_1033_weight_buffer_V_1_25_address0;
    end else begin
        weight_buffer_V_1_25_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_1_25_ce0 = grp_weight_load_fu_1439_weight_buffer_1_25_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_buffer_V_1_25_ce0 = grp_conv_fu_1033_weight_buffer_V_1_25_ce0;
    end else begin
        weight_buffer_V_1_25_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_1_25_we0 = grp_weight_load_fu_1439_weight_buffer_1_25_V_we0;
    end else begin
        weight_buffer_V_1_25_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_1_26_address0 = grp_weight_load_fu_1439_weight_buffer_1_26_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_buffer_V_1_26_address0 = grp_conv_fu_1033_weight_buffer_V_1_26_address0;
    end else begin
        weight_buffer_V_1_26_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_1_26_ce0 = grp_weight_load_fu_1439_weight_buffer_1_26_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_buffer_V_1_26_ce0 = grp_conv_fu_1033_weight_buffer_V_1_26_ce0;
    end else begin
        weight_buffer_V_1_26_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_1_26_we0 = grp_weight_load_fu_1439_weight_buffer_1_26_V_we0;
    end else begin
        weight_buffer_V_1_26_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_1_27_address0 = grp_weight_load_fu_1439_weight_buffer_1_27_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_buffer_V_1_27_address0 = grp_conv_fu_1033_weight_buffer_V_1_27_address0;
    end else begin
        weight_buffer_V_1_27_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_1_27_ce0 = grp_weight_load_fu_1439_weight_buffer_1_27_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_buffer_V_1_27_ce0 = grp_conv_fu_1033_weight_buffer_V_1_27_ce0;
    end else begin
        weight_buffer_V_1_27_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_1_27_we0 = grp_weight_load_fu_1439_weight_buffer_1_27_V_we0;
    end else begin
        weight_buffer_V_1_27_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_1_28_address0 = grp_weight_load_fu_1439_weight_buffer_1_28_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_buffer_V_1_28_address0 = grp_conv_fu_1033_weight_buffer_V_1_28_address0;
    end else begin
        weight_buffer_V_1_28_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_1_28_ce0 = grp_weight_load_fu_1439_weight_buffer_1_28_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_buffer_V_1_28_ce0 = grp_conv_fu_1033_weight_buffer_V_1_28_ce0;
    end else begin
        weight_buffer_V_1_28_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_1_28_we0 = grp_weight_load_fu_1439_weight_buffer_1_28_V_we0;
    end else begin
        weight_buffer_V_1_28_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_1_29_address0 = grp_weight_load_fu_1439_weight_buffer_1_29_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_buffer_V_1_29_address0 = grp_conv_fu_1033_weight_buffer_V_1_29_address0;
    end else begin
        weight_buffer_V_1_29_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_1_29_ce0 = grp_weight_load_fu_1439_weight_buffer_1_29_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_buffer_V_1_29_ce0 = grp_conv_fu_1033_weight_buffer_V_1_29_ce0;
    end else begin
        weight_buffer_V_1_29_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_1_29_we0 = grp_weight_load_fu_1439_weight_buffer_1_29_V_we0;
    end else begin
        weight_buffer_V_1_29_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_1_2_address0 = grp_weight_load_fu_1439_weight_buffer_1_2_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_buffer_V_1_2_address0 = grp_conv_fu_1033_weight_buffer_V_1_2_address0;
    end else begin
        weight_buffer_V_1_2_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_1_2_ce0 = grp_weight_load_fu_1439_weight_buffer_1_2_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_buffer_V_1_2_ce0 = grp_conv_fu_1033_weight_buffer_V_1_2_ce0;
    end else begin
        weight_buffer_V_1_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_1_2_we0 = grp_weight_load_fu_1439_weight_buffer_1_2_V_we0;
    end else begin
        weight_buffer_V_1_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_1_30_address0 = grp_weight_load_fu_1439_weight_buffer_1_30_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_buffer_V_1_30_address0 = grp_conv_fu_1033_weight_buffer_V_1_30_address0;
    end else begin
        weight_buffer_V_1_30_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_1_30_ce0 = grp_weight_load_fu_1439_weight_buffer_1_30_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_buffer_V_1_30_ce0 = grp_conv_fu_1033_weight_buffer_V_1_30_ce0;
    end else begin
        weight_buffer_V_1_30_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_1_30_we0 = grp_weight_load_fu_1439_weight_buffer_1_30_V_we0;
    end else begin
        weight_buffer_V_1_30_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_1_31_address0 = grp_weight_load_fu_1439_weight_buffer_1_31_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_buffer_V_1_31_address0 = grp_conv_fu_1033_weight_buffer_V_1_31_address0;
    end else begin
        weight_buffer_V_1_31_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_1_31_ce0 = grp_weight_load_fu_1439_weight_buffer_1_31_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_buffer_V_1_31_ce0 = grp_conv_fu_1033_weight_buffer_V_1_31_ce0;
    end else begin
        weight_buffer_V_1_31_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_1_31_we0 = grp_weight_load_fu_1439_weight_buffer_1_31_V_we0;
    end else begin
        weight_buffer_V_1_31_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_1_3_address0 = grp_weight_load_fu_1439_weight_buffer_1_3_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_buffer_V_1_3_address0 = grp_conv_fu_1033_weight_buffer_V_1_3_address0;
    end else begin
        weight_buffer_V_1_3_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_1_3_ce0 = grp_weight_load_fu_1439_weight_buffer_1_3_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_buffer_V_1_3_ce0 = grp_conv_fu_1033_weight_buffer_V_1_3_ce0;
    end else begin
        weight_buffer_V_1_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_1_3_we0 = grp_weight_load_fu_1439_weight_buffer_1_3_V_we0;
    end else begin
        weight_buffer_V_1_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_1_4_address0 = grp_weight_load_fu_1439_weight_buffer_1_4_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_buffer_V_1_4_address0 = grp_conv_fu_1033_weight_buffer_V_1_4_address0;
    end else begin
        weight_buffer_V_1_4_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_1_4_ce0 = grp_weight_load_fu_1439_weight_buffer_1_4_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_buffer_V_1_4_ce0 = grp_conv_fu_1033_weight_buffer_V_1_4_ce0;
    end else begin
        weight_buffer_V_1_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_1_4_we0 = grp_weight_load_fu_1439_weight_buffer_1_4_V_we0;
    end else begin
        weight_buffer_V_1_4_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_1_5_address0 = grp_weight_load_fu_1439_weight_buffer_1_5_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_buffer_V_1_5_address0 = grp_conv_fu_1033_weight_buffer_V_1_5_address0;
    end else begin
        weight_buffer_V_1_5_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_1_5_ce0 = grp_weight_load_fu_1439_weight_buffer_1_5_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_buffer_V_1_5_ce0 = grp_conv_fu_1033_weight_buffer_V_1_5_ce0;
    end else begin
        weight_buffer_V_1_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_1_5_we0 = grp_weight_load_fu_1439_weight_buffer_1_5_V_we0;
    end else begin
        weight_buffer_V_1_5_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_1_6_address0 = grp_weight_load_fu_1439_weight_buffer_1_6_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_buffer_V_1_6_address0 = grp_conv_fu_1033_weight_buffer_V_1_6_address0;
    end else begin
        weight_buffer_V_1_6_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_1_6_ce0 = grp_weight_load_fu_1439_weight_buffer_1_6_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_buffer_V_1_6_ce0 = grp_conv_fu_1033_weight_buffer_V_1_6_ce0;
    end else begin
        weight_buffer_V_1_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_1_6_we0 = grp_weight_load_fu_1439_weight_buffer_1_6_V_we0;
    end else begin
        weight_buffer_V_1_6_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_1_7_address0 = grp_weight_load_fu_1439_weight_buffer_1_7_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_buffer_V_1_7_address0 = grp_conv_fu_1033_weight_buffer_V_1_7_address0;
    end else begin
        weight_buffer_V_1_7_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_1_7_ce0 = grp_weight_load_fu_1439_weight_buffer_1_7_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_buffer_V_1_7_ce0 = grp_conv_fu_1033_weight_buffer_V_1_7_ce0;
    end else begin
        weight_buffer_V_1_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_1_7_we0 = grp_weight_load_fu_1439_weight_buffer_1_7_V_we0;
    end else begin
        weight_buffer_V_1_7_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_1_8_address0 = grp_weight_load_fu_1439_weight_buffer_1_8_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_buffer_V_1_8_address0 = grp_conv_fu_1033_weight_buffer_V_1_8_address0;
    end else begin
        weight_buffer_V_1_8_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_1_8_ce0 = grp_weight_load_fu_1439_weight_buffer_1_8_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_buffer_V_1_8_ce0 = grp_conv_fu_1033_weight_buffer_V_1_8_ce0;
    end else begin
        weight_buffer_V_1_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_1_8_we0 = grp_weight_load_fu_1439_weight_buffer_1_8_V_we0;
    end else begin
        weight_buffer_V_1_8_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_1_9_address0 = grp_weight_load_fu_1439_weight_buffer_1_9_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_buffer_V_1_9_address0 = grp_conv_fu_1033_weight_buffer_V_1_9_address0;
    end else begin
        weight_buffer_V_1_9_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_1_9_ce0 = grp_weight_load_fu_1439_weight_buffer_1_9_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_buffer_V_1_9_ce0 = grp_conv_fu_1033_weight_buffer_V_1_9_ce0;
    end else begin
        weight_buffer_V_1_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_1_9_we0 = grp_weight_load_fu_1439_weight_buffer_1_9_V_we0;
    end else begin
        weight_buffer_V_1_9_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_2_0_address0 = grp_weight_load_fu_1439_weight_buffer_2_0_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_buffer_V_2_0_address0 = grp_conv_fu_1033_weight_buffer_V_2_0_address0;
    end else begin
        weight_buffer_V_2_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_2_0_ce0 = grp_weight_load_fu_1439_weight_buffer_2_0_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_buffer_V_2_0_ce0 = grp_conv_fu_1033_weight_buffer_V_2_0_ce0;
    end else begin
        weight_buffer_V_2_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_2_0_we0 = grp_weight_load_fu_1439_weight_buffer_2_0_V_we0;
    end else begin
        weight_buffer_V_2_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_2_10_address0 = grp_weight_load_fu_1439_weight_buffer_2_10_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_buffer_V_2_10_address0 = grp_conv_fu_1033_weight_buffer_V_2_10_address0;
    end else begin
        weight_buffer_V_2_10_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_2_10_ce0 = grp_weight_load_fu_1439_weight_buffer_2_10_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_buffer_V_2_10_ce0 = grp_conv_fu_1033_weight_buffer_V_2_10_ce0;
    end else begin
        weight_buffer_V_2_10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_2_10_we0 = grp_weight_load_fu_1439_weight_buffer_2_10_V_we0;
    end else begin
        weight_buffer_V_2_10_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_2_11_address0 = grp_weight_load_fu_1439_weight_buffer_2_11_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_buffer_V_2_11_address0 = grp_conv_fu_1033_weight_buffer_V_2_11_address0;
    end else begin
        weight_buffer_V_2_11_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_2_11_ce0 = grp_weight_load_fu_1439_weight_buffer_2_11_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_buffer_V_2_11_ce0 = grp_conv_fu_1033_weight_buffer_V_2_11_ce0;
    end else begin
        weight_buffer_V_2_11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_2_11_we0 = grp_weight_load_fu_1439_weight_buffer_2_11_V_we0;
    end else begin
        weight_buffer_V_2_11_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_2_12_address0 = grp_weight_load_fu_1439_weight_buffer_2_12_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_buffer_V_2_12_address0 = grp_conv_fu_1033_weight_buffer_V_2_12_address0;
    end else begin
        weight_buffer_V_2_12_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_2_12_ce0 = grp_weight_load_fu_1439_weight_buffer_2_12_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_buffer_V_2_12_ce0 = grp_conv_fu_1033_weight_buffer_V_2_12_ce0;
    end else begin
        weight_buffer_V_2_12_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_2_12_we0 = grp_weight_load_fu_1439_weight_buffer_2_12_V_we0;
    end else begin
        weight_buffer_V_2_12_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_2_13_address0 = grp_weight_load_fu_1439_weight_buffer_2_13_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_buffer_V_2_13_address0 = grp_conv_fu_1033_weight_buffer_V_2_13_address0;
    end else begin
        weight_buffer_V_2_13_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_2_13_ce0 = grp_weight_load_fu_1439_weight_buffer_2_13_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_buffer_V_2_13_ce0 = grp_conv_fu_1033_weight_buffer_V_2_13_ce0;
    end else begin
        weight_buffer_V_2_13_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_2_13_we0 = grp_weight_load_fu_1439_weight_buffer_2_13_V_we0;
    end else begin
        weight_buffer_V_2_13_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_2_14_address0 = grp_weight_load_fu_1439_weight_buffer_2_14_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_buffer_V_2_14_address0 = grp_conv_fu_1033_weight_buffer_V_2_14_address0;
    end else begin
        weight_buffer_V_2_14_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_2_14_ce0 = grp_weight_load_fu_1439_weight_buffer_2_14_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_buffer_V_2_14_ce0 = grp_conv_fu_1033_weight_buffer_V_2_14_ce0;
    end else begin
        weight_buffer_V_2_14_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_2_14_we0 = grp_weight_load_fu_1439_weight_buffer_2_14_V_we0;
    end else begin
        weight_buffer_V_2_14_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_2_15_address0 = grp_weight_load_fu_1439_weight_buffer_2_15_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_buffer_V_2_15_address0 = grp_conv_fu_1033_weight_buffer_V_2_15_address0;
    end else begin
        weight_buffer_V_2_15_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_2_15_ce0 = grp_weight_load_fu_1439_weight_buffer_2_15_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_buffer_V_2_15_ce0 = grp_conv_fu_1033_weight_buffer_V_2_15_ce0;
    end else begin
        weight_buffer_V_2_15_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_2_15_we0 = grp_weight_load_fu_1439_weight_buffer_2_15_V_we0;
    end else begin
        weight_buffer_V_2_15_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_2_16_address0 = grp_weight_load_fu_1439_weight_buffer_2_16_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_buffer_V_2_16_address0 = grp_conv_fu_1033_weight_buffer_V_2_16_address0;
    end else begin
        weight_buffer_V_2_16_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_2_16_ce0 = grp_weight_load_fu_1439_weight_buffer_2_16_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_buffer_V_2_16_ce0 = grp_conv_fu_1033_weight_buffer_V_2_16_ce0;
    end else begin
        weight_buffer_V_2_16_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_2_16_we0 = grp_weight_load_fu_1439_weight_buffer_2_16_V_we0;
    end else begin
        weight_buffer_V_2_16_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_2_17_address0 = grp_weight_load_fu_1439_weight_buffer_2_17_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_buffer_V_2_17_address0 = grp_conv_fu_1033_weight_buffer_V_2_17_address0;
    end else begin
        weight_buffer_V_2_17_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_2_17_ce0 = grp_weight_load_fu_1439_weight_buffer_2_17_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_buffer_V_2_17_ce0 = grp_conv_fu_1033_weight_buffer_V_2_17_ce0;
    end else begin
        weight_buffer_V_2_17_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_2_17_we0 = grp_weight_load_fu_1439_weight_buffer_2_17_V_we0;
    end else begin
        weight_buffer_V_2_17_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_2_18_address0 = grp_weight_load_fu_1439_weight_buffer_2_18_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_buffer_V_2_18_address0 = grp_conv_fu_1033_weight_buffer_V_2_18_address0;
    end else begin
        weight_buffer_V_2_18_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_2_18_ce0 = grp_weight_load_fu_1439_weight_buffer_2_18_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_buffer_V_2_18_ce0 = grp_conv_fu_1033_weight_buffer_V_2_18_ce0;
    end else begin
        weight_buffer_V_2_18_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_2_18_we0 = grp_weight_load_fu_1439_weight_buffer_2_18_V_we0;
    end else begin
        weight_buffer_V_2_18_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_2_19_address0 = grp_weight_load_fu_1439_weight_buffer_2_19_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_buffer_V_2_19_address0 = grp_conv_fu_1033_weight_buffer_V_2_19_address0;
    end else begin
        weight_buffer_V_2_19_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_2_19_ce0 = grp_weight_load_fu_1439_weight_buffer_2_19_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_buffer_V_2_19_ce0 = grp_conv_fu_1033_weight_buffer_V_2_19_ce0;
    end else begin
        weight_buffer_V_2_19_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_2_19_we0 = grp_weight_load_fu_1439_weight_buffer_2_19_V_we0;
    end else begin
        weight_buffer_V_2_19_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_2_1_address0 = grp_weight_load_fu_1439_weight_buffer_2_1_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_buffer_V_2_1_address0 = grp_conv_fu_1033_weight_buffer_V_2_1_address0;
    end else begin
        weight_buffer_V_2_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_2_1_ce0 = grp_weight_load_fu_1439_weight_buffer_2_1_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_buffer_V_2_1_ce0 = grp_conv_fu_1033_weight_buffer_V_2_1_ce0;
    end else begin
        weight_buffer_V_2_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_2_1_we0 = grp_weight_load_fu_1439_weight_buffer_2_1_V_we0;
    end else begin
        weight_buffer_V_2_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_2_20_address0 = grp_weight_load_fu_1439_weight_buffer_2_20_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_buffer_V_2_20_address0 = grp_conv_fu_1033_weight_buffer_V_2_20_address0;
    end else begin
        weight_buffer_V_2_20_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_2_20_ce0 = grp_weight_load_fu_1439_weight_buffer_2_20_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_buffer_V_2_20_ce0 = grp_conv_fu_1033_weight_buffer_V_2_20_ce0;
    end else begin
        weight_buffer_V_2_20_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_2_20_we0 = grp_weight_load_fu_1439_weight_buffer_2_20_V_we0;
    end else begin
        weight_buffer_V_2_20_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_2_21_address0 = grp_weight_load_fu_1439_weight_buffer_2_21_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_buffer_V_2_21_address0 = grp_conv_fu_1033_weight_buffer_V_2_21_address0;
    end else begin
        weight_buffer_V_2_21_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_2_21_ce0 = grp_weight_load_fu_1439_weight_buffer_2_21_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_buffer_V_2_21_ce0 = grp_conv_fu_1033_weight_buffer_V_2_21_ce0;
    end else begin
        weight_buffer_V_2_21_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_2_21_we0 = grp_weight_load_fu_1439_weight_buffer_2_21_V_we0;
    end else begin
        weight_buffer_V_2_21_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_2_22_address0 = grp_weight_load_fu_1439_weight_buffer_2_22_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_buffer_V_2_22_address0 = grp_conv_fu_1033_weight_buffer_V_2_22_address0;
    end else begin
        weight_buffer_V_2_22_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_2_22_ce0 = grp_weight_load_fu_1439_weight_buffer_2_22_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_buffer_V_2_22_ce0 = grp_conv_fu_1033_weight_buffer_V_2_22_ce0;
    end else begin
        weight_buffer_V_2_22_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_2_22_we0 = grp_weight_load_fu_1439_weight_buffer_2_22_V_we0;
    end else begin
        weight_buffer_V_2_22_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_2_23_address0 = grp_weight_load_fu_1439_weight_buffer_2_23_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_buffer_V_2_23_address0 = grp_conv_fu_1033_weight_buffer_V_2_23_address0;
    end else begin
        weight_buffer_V_2_23_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_2_23_ce0 = grp_weight_load_fu_1439_weight_buffer_2_23_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_buffer_V_2_23_ce0 = grp_conv_fu_1033_weight_buffer_V_2_23_ce0;
    end else begin
        weight_buffer_V_2_23_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_2_23_we0 = grp_weight_load_fu_1439_weight_buffer_2_23_V_we0;
    end else begin
        weight_buffer_V_2_23_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_2_24_address0 = grp_weight_load_fu_1439_weight_buffer_2_24_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_buffer_V_2_24_address0 = grp_conv_fu_1033_weight_buffer_V_2_24_address0;
    end else begin
        weight_buffer_V_2_24_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_2_24_ce0 = grp_weight_load_fu_1439_weight_buffer_2_24_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_buffer_V_2_24_ce0 = grp_conv_fu_1033_weight_buffer_V_2_24_ce0;
    end else begin
        weight_buffer_V_2_24_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_2_24_we0 = grp_weight_load_fu_1439_weight_buffer_2_24_V_we0;
    end else begin
        weight_buffer_V_2_24_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_2_25_address0 = grp_weight_load_fu_1439_weight_buffer_2_25_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_buffer_V_2_25_address0 = grp_conv_fu_1033_weight_buffer_V_2_25_address0;
    end else begin
        weight_buffer_V_2_25_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_2_25_ce0 = grp_weight_load_fu_1439_weight_buffer_2_25_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_buffer_V_2_25_ce0 = grp_conv_fu_1033_weight_buffer_V_2_25_ce0;
    end else begin
        weight_buffer_V_2_25_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_2_25_we0 = grp_weight_load_fu_1439_weight_buffer_2_25_V_we0;
    end else begin
        weight_buffer_V_2_25_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_2_26_address0 = grp_weight_load_fu_1439_weight_buffer_2_26_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_buffer_V_2_26_address0 = grp_conv_fu_1033_weight_buffer_V_2_26_address0;
    end else begin
        weight_buffer_V_2_26_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_2_26_ce0 = grp_weight_load_fu_1439_weight_buffer_2_26_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_buffer_V_2_26_ce0 = grp_conv_fu_1033_weight_buffer_V_2_26_ce0;
    end else begin
        weight_buffer_V_2_26_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_2_26_we0 = grp_weight_load_fu_1439_weight_buffer_2_26_V_we0;
    end else begin
        weight_buffer_V_2_26_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_2_27_address0 = grp_weight_load_fu_1439_weight_buffer_2_27_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_buffer_V_2_27_address0 = grp_conv_fu_1033_weight_buffer_V_2_27_address0;
    end else begin
        weight_buffer_V_2_27_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_2_27_ce0 = grp_weight_load_fu_1439_weight_buffer_2_27_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_buffer_V_2_27_ce0 = grp_conv_fu_1033_weight_buffer_V_2_27_ce0;
    end else begin
        weight_buffer_V_2_27_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_2_27_we0 = grp_weight_load_fu_1439_weight_buffer_2_27_V_we0;
    end else begin
        weight_buffer_V_2_27_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_2_28_address0 = grp_weight_load_fu_1439_weight_buffer_2_28_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_buffer_V_2_28_address0 = grp_conv_fu_1033_weight_buffer_V_2_28_address0;
    end else begin
        weight_buffer_V_2_28_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_2_28_ce0 = grp_weight_load_fu_1439_weight_buffer_2_28_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_buffer_V_2_28_ce0 = grp_conv_fu_1033_weight_buffer_V_2_28_ce0;
    end else begin
        weight_buffer_V_2_28_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_2_28_we0 = grp_weight_load_fu_1439_weight_buffer_2_28_V_we0;
    end else begin
        weight_buffer_V_2_28_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_2_29_address0 = grp_weight_load_fu_1439_weight_buffer_2_29_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_buffer_V_2_29_address0 = grp_conv_fu_1033_weight_buffer_V_2_29_address0;
    end else begin
        weight_buffer_V_2_29_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_2_29_ce0 = grp_weight_load_fu_1439_weight_buffer_2_29_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_buffer_V_2_29_ce0 = grp_conv_fu_1033_weight_buffer_V_2_29_ce0;
    end else begin
        weight_buffer_V_2_29_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_2_29_we0 = grp_weight_load_fu_1439_weight_buffer_2_29_V_we0;
    end else begin
        weight_buffer_V_2_29_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_2_2_address0 = grp_weight_load_fu_1439_weight_buffer_2_2_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_buffer_V_2_2_address0 = grp_conv_fu_1033_weight_buffer_V_2_2_address0;
    end else begin
        weight_buffer_V_2_2_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_2_2_ce0 = grp_weight_load_fu_1439_weight_buffer_2_2_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_buffer_V_2_2_ce0 = grp_conv_fu_1033_weight_buffer_V_2_2_ce0;
    end else begin
        weight_buffer_V_2_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_2_2_we0 = grp_weight_load_fu_1439_weight_buffer_2_2_V_we0;
    end else begin
        weight_buffer_V_2_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_2_30_address0 = grp_weight_load_fu_1439_weight_buffer_2_30_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_buffer_V_2_30_address0 = grp_conv_fu_1033_weight_buffer_V_2_30_address0;
    end else begin
        weight_buffer_V_2_30_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_2_30_ce0 = grp_weight_load_fu_1439_weight_buffer_2_30_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_buffer_V_2_30_ce0 = grp_conv_fu_1033_weight_buffer_V_2_30_ce0;
    end else begin
        weight_buffer_V_2_30_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_2_30_we0 = grp_weight_load_fu_1439_weight_buffer_2_30_V_we0;
    end else begin
        weight_buffer_V_2_30_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_2_31_address0 = grp_weight_load_fu_1439_weight_buffer_2_31_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_buffer_V_2_31_address0 = grp_conv_fu_1033_weight_buffer_V_2_31_address0;
    end else begin
        weight_buffer_V_2_31_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_2_31_ce0 = grp_weight_load_fu_1439_weight_buffer_2_31_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_buffer_V_2_31_ce0 = grp_conv_fu_1033_weight_buffer_V_2_31_ce0;
    end else begin
        weight_buffer_V_2_31_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_2_31_we0 = grp_weight_load_fu_1439_weight_buffer_2_31_V_we0;
    end else begin
        weight_buffer_V_2_31_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_2_3_address0 = grp_weight_load_fu_1439_weight_buffer_2_3_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_buffer_V_2_3_address0 = grp_conv_fu_1033_weight_buffer_V_2_3_address0;
    end else begin
        weight_buffer_V_2_3_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_2_3_ce0 = grp_weight_load_fu_1439_weight_buffer_2_3_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_buffer_V_2_3_ce0 = grp_conv_fu_1033_weight_buffer_V_2_3_ce0;
    end else begin
        weight_buffer_V_2_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_2_3_we0 = grp_weight_load_fu_1439_weight_buffer_2_3_V_we0;
    end else begin
        weight_buffer_V_2_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_2_4_address0 = grp_weight_load_fu_1439_weight_buffer_2_4_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_buffer_V_2_4_address0 = grp_conv_fu_1033_weight_buffer_V_2_4_address0;
    end else begin
        weight_buffer_V_2_4_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_2_4_ce0 = grp_weight_load_fu_1439_weight_buffer_2_4_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_buffer_V_2_4_ce0 = grp_conv_fu_1033_weight_buffer_V_2_4_ce0;
    end else begin
        weight_buffer_V_2_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_2_4_we0 = grp_weight_load_fu_1439_weight_buffer_2_4_V_we0;
    end else begin
        weight_buffer_V_2_4_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_2_5_address0 = grp_weight_load_fu_1439_weight_buffer_2_5_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_buffer_V_2_5_address0 = grp_conv_fu_1033_weight_buffer_V_2_5_address0;
    end else begin
        weight_buffer_V_2_5_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_2_5_ce0 = grp_weight_load_fu_1439_weight_buffer_2_5_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_buffer_V_2_5_ce0 = grp_conv_fu_1033_weight_buffer_V_2_5_ce0;
    end else begin
        weight_buffer_V_2_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_2_5_we0 = grp_weight_load_fu_1439_weight_buffer_2_5_V_we0;
    end else begin
        weight_buffer_V_2_5_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_2_6_address0 = grp_weight_load_fu_1439_weight_buffer_2_6_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_buffer_V_2_6_address0 = grp_conv_fu_1033_weight_buffer_V_2_6_address0;
    end else begin
        weight_buffer_V_2_6_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_2_6_ce0 = grp_weight_load_fu_1439_weight_buffer_2_6_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_buffer_V_2_6_ce0 = grp_conv_fu_1033_weight_buffer_V_2_6_ce0;
    end else begin
        weight_buffer_V_2_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_2_6_we0 = grp_weight_load_fu_1439_weight_buffer_2_6_V_we0;
    end else begin
        weight_buffer_V_2_6_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_2_7_address0 = grp_weight_load_fu_1439_weight_buffer_2_7_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_buffer_V_2_7_address0 = grp_conv_fu_1033_weight_buffer_V_2_7_address0;
    end else begin
        weight_buffer_V_2_7_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_2_7_ce0 = grp_weight_load_fu_1439_weight_buffer_2_7_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_buffer_V_2_7_ce0 = grp_conv_fu_1033_weight_buffer_V_2_7_ce0;
    end else begin
        weight_buffer_V_2_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_2_7_we0 = grp_weight_load_fu_1439_weight_buffer_2_7_V_we0;
    end else begin
        weight_buffer_V_2_7_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_2_8_address0 = grp_weight_load_fu_1439_weight_buffer_2_8_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_buffer_V_2_8_address0 = grp_conv_fu_1033_weight_buffer_V_2_8_address0;
    end else begin
        weight_buffer_V_2_8_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_2_8_ce0 = grp_weight_load_fu_1439_weight_buffer_2_8_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_buffer_V_2_8_ce0 = grp_conv_fu_1033_weight_buffer_V_2_8_ce0;
    end else begin
        weight_buffer_V_2_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_2_8_we0 = grp_weight_load_fu_1439_weight_buffer_2_8_V_we0;
    end else begin
        weight_buffer_V_2_8_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_2_9_address0 = grp_weight_load_fu_1439_weight_buffer_2_9_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_buffer_V_2_9_address0 = grp_conv_fu_1033_weight_buffer_V_2_9_address0;
    end else begin
        weight_buffer_V_2_9_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_2_9_ce0 = grp_weight_load_fu_1439_weight_buffer_2_9_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_buffer_V_2_9_ce0 = grp_conv_fu_1033_weight_buffer_V_2_9_ce0;
    end else begin
        weight_buffer_V_2_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_2_9_we0 = grp_weight_load_fu_1439_weight_buffer_2_9_V_we0;
    end else begin
        weight_buffer_V_2_9_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_3_0_address0 = grp_weight_load_fu_1439_weight_buffer_3_0_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_buffer_V_3_0_address0 = grp_conv_fu_1033_weight_buffer_V_3_0_address0;
    end else begin
        weight_buffer_V_3_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_3_0_ce0 = grp_weight_load_fu_1439_weight_buffer_3_0_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_buffer_V_3_0_ce0 = grp_conv_fu_1033_weight_buffer_V_3_0_ce0;
    end else begin
        weight_buffer_V_3_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_3_0_we0 = grp_weight_load_fu_1439_weight_buffer_3_0_V_we0;
    end else begin
        weight_buffer_V_3_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_3_10_address0 = grp_weight_load_fu_1439_weight_buffer_3_10_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_buffer_V_3_10_address0 = grp_conv_fu_1033_weight_buffer_V_3_10_address0;
    end else begin
        weight_buffer_V_3_10_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_3_10_ce0 = grp_weight_load_fu_1439_weight_buffer_3_10_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_buffer_V_3_10_ce0 = grp_conv_fu_1033_weight_buffer_V_3_10_ce0;
    end else begin
        weight_buffer_V_3_10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_3_10_we0 = grp_weight_load_fu_1439_weight_buffer_3_10_V_we0;
    end else begin
        weight_buffer_V_3_10_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_3_11_address0 = grp_weight_load_fu_1439_weight_buffer_3_11_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_buffer_V_3_11_address0 = grp_conv_fu_1033_weight_buffer_V_3_11_address0;
    end else begin
        weight_buffer_V_3_11_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_3_11_ce0 = grp_weight_load_fu_1439_weight_buffer_3_11_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_buffer_V_3_11_ce0 = grp_conv_fu_1033_weight_buffer_V_3_11_ce0;
    end else begin
        weight_buffer_V_3_11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_3_11_we0 = grp_weight_load_fu_1439_weight_buffer_3_11_V_we0;
    end else begin
        weight_buffer_V_3_11_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_3_12_address0 = grp_weight_load_fu_1439_weight_buffer_3_12_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_buffer_V_3_12_address0 = grp_conv_fu_1033_weight_buffer_V_3_12_address0;
    end else begin
        weight_buffer_V_3_12_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_3_12_ce0 = grp_weight_load_fu_1439_weight_buffer_3_12_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_buffer_V_3_12_ce0 = grp_conv_fu_1033_weight_buffer_V_3_12_ce0;
    end else begin
        weight_buffer_V_3_12_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_3_12_we0 = grp_weight_load_fu_1439_weight_buffer_3_12_V_we0;
    end else begin
        weight_buffer_V_3_12_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_3_13_address0 = grp_weight_load_fu_1439_weight_buffer_3_13_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_buffer_V_3_13_address0 = grp_conv_fu_1033_weight_buffer_V_3_13_address0;
    end else begin
        weight_buffer_V_3_13_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_3_13_ce0 = grp_weight_load_fu_1439_weight_buffer_3_13_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_buffer_V_3_13_ce0 = grp_conv_fu_1033_weight_buffer_V_3_13_ce0;
    end else begin
        weight_buffer_V_3_13_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_3_13_we0 = grp_weight_load_fu_1439_weight_buffer_3_13_V_we0;
    end else begin
        weight_buffer_V_3_13_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_3_14_address0 = grp_weight_load_fu_1439_weight_buffer_3_14_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_buffer_V_3_14_address0 = grp_conv_fu_1033_weight_buffer_V_3_14_address0;
    end else begin
        weight_buffer_V_3_14_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_3_14_ce0 = grp_weight_load_fu_1439_weight_buffer_3_14_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_buffer_V_3_14_ce0 = grp_conv_fu_1033_weight_buffer_V_3_14_ce0;
    end else begin
        weight_buffer_V_3_14_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_3_14_we0 = grp_weight_load_fu_1439_weight_buffer_3_14_V_we0;
    end else begin
        weight_buffer_V_3_14_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_3_15_address0 = grp_weight_load_fu_1439_weight_buffer_3_15_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_buffer_V_3_15_address0 = grp_conv_fu_1033_weight_buffer_V_3_15_address0;
    end else begin
        weight_buffer_V_3_15_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_3_15_ce0 = grp_weight_load_fu_1439_weight_buffer_3_15_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_buffer_V_3_15_ce0 = grp_conv_fu_1033_weight_buffer_V_3_15_ce0;
    end else begin
        weight_buffer_V_3_15_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_3_15_we0 = grp_weight_load_fu_1439_weight_buffer_3_15_V_we0;
    end else begin
        weight_buffer_V_3_15_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_3_16_address0 = grp_weight_load_fu_1439_weight_buffer_3_16_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_buffer_V_3_16_address0 = grp_conv_fu_1033_weight_buffer_V_3_16_address0;
    end else begin
        weight_buffer_V_3_16_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_3_16_ce0 = grp_weight_load_fu_1439_weight_buffer_3_16_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_buffer_V_3_16_ce0 = grp_conv_fu_1033_weight_buffer_V_3_16_ce0;
    end else begin
        weight_buffer_V_3_16_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_3_16_we0 = grp_weight_load_fu_1439_weight_buffer_3_16_V_we0;
    end else begin
        weight_buffer_V_3_16_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_3_17_address0 = grp_weight_load_fu_1439_weight_buffer_3_17_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_buffer_V_3_17_address0 = grp_conv_fu_1033_weight_buffer_V_3_17_address0;
    end else begin
        weight_buffer_V_3_17_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_3_17_ce0 = grp_weight_load_fu_1439_weight_buffer_3_17_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_buffer_V_3_17_ce0 = grp_conv_fu_1033_weight_buffer_V_3_17_ce0;
    end else begin
        weight_buffer_V_3_17_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_3_17_we0 = grp_weight_load_fu_1439_weight_buffer_3_17_V_we0;
    end else begin
        weight_buffer_V_3_17_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_3_18_address0 = grp_weight_load_fu_1439_weight_buffer_3_18_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_buffer_V_3_18_address0 = grp_conv_fu_1033_weight_buffer_V_3_18_address0;
    end else begin
        weight_buffer_V_3_18_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_3_18_ce0 = grp_weight_load_fu_1439_weight_buffer_3_18_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_buffer_V_3_18_ce0 = grp_conv_fu_1033_weight_buffer_V_3_18_ce0;
    end else begin
        weight_buffer_V_3_18_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_3_18_we0 = grp_weight_load_fu_1439_weight_buffer_3_18_V_we0;
    end else begin
        weight_buffer_V_3_18_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_3_19_address0 = grp_weight_load_fu_1439_weight_buffer_3_19_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_buffer_V_3_19_address0 = grp_conv_fu_1033_weight_buffer_V_3_19_address0;
    end else begin
        weight_buffer_V_3_19_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_3_19_ce0 = grp_weight_load_fu_1439_weight_buffer_3_19_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_buffer_V_3_19_ce0 = grp_conv_fu_1033_weight_buffer_V_3_19_ce0;
    end else begin
        weight_buffer_V_3_19_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_3_19_we0 = grp_weight_load_fu_1439_weight_buffer_3_19_V_we0;
    end else begin
        weight_buffer_V_3_19_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_3_1_address0 = grp_weight_load_fu_1439_weight_buffer_3_1_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_buffer_V_3_1_address0 = grp_conv_fu_1033_weight_buffer_V_3_1_address0;
    end else begin
        weight_buffer_V_3_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_3_1_ce0 = grp_weight_load_fu_1439_weight_buffer_3_1_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_buffer_V_3_1_ce0 = grp_conv_fu_1033_weight_buffer_V_3_1_ce0;
    end else begin
        weight_buffer_V_3_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_3_1_we0 = grp_weight_load_fu_1439_weight_buffer_3_1_V_we0;
    end else begin
        weight_buffer_V_3_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_3_20_address0 = grp_weight_load_fu_1439_weight_buffer_3_20_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_buffer_V_3_20_address0 = grp_conv_fu_1033_weight_buffer_V_3_20_address0;
    end else begin
        weight_buffer_V_3_20_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_3_20_ce0 = grp_weight_load_fu_1439_weight_buffer_3_20_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_buffer_V_3_20_ce0 = grp_conv_fu_1033_weight_buffer_V_3_20_ce0;
    end else begin
        weight_buffer_V_3_20_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_3_20_we0 = grp_weight_load_fu_1439_weight_buffer_3_20_V_we0;
    end else begin
        weight_buffer_V_3_20_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_3_21_address0 = grp_weight_load_fu_1439_weight_buffer_3_21_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_buffer_V_3_21_address0 = grp_conv_fu_1033_weight_buffer_V_3_21_address0;
    end else begin
        weight_buffer_V_3_21_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_3_21_ce0 = grp_weight_load_fu_1439_weight_buffer_3_21_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_buffer_V_3_21_ce0 = grp_conv_fu_1033_weight_buffer_V_3_21_ce0;
    end else begin
        weight_buffer_V_3_21_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_3_21_we0 = grp_weight_load_fu_1439_weight_buffer_3_21_V_we0;
    end else begin
        weight_buffer_V_3_21_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_3_22_address0 = grp_weight_load_fu_1439_weight_buffer_3_22_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_buffer_V_3_22_address0 = grp_conv_fu_1033_weight_buffer_V_3_22_address0;
    end else begin
        weight_buffer_V_3_22_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_3_22_ce0 = grp_weight_load_fu_1439_weight_buffer_3_22_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_buffer_V_3_22_ce0 = grp_conv_fu_1033_weight_buffer_V_3_22_ce0;
    end else begin
        weight_buffer_V_3_22_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_3_22_we0 = grp_weight_load_fu_1439_weight_buffer_3_22_V_we0;
    end else begin
        weight_buffer_V_3_22_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_3_23_address0 = grp_weight_load_fu_1439_weight_buffer_3_23_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_buffer_V_3_23_address0 = grp_conv_fu_1033_weight_buffer_V_3_23_address0;
    end else begin
        weight_buffer_V_3_23_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_3_23_ce0 = grp_weight_load_fu_1439_weight_buffer_3_23_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_buffer_V_3_23_ce0 = grp_conv_fu_1033_weight_buffer_V_3_23_ce0;
    end else begin
        weight_buffer_V_3_23_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_3_23_we0 = grp_weight_load_fu_1439_weight_buffer_3_23_V_we0;
    end else begin
        weight_buffer_V_3_23_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_3_24_address0 = grp_weight_load_fu_1439_weight_buffer_3_24_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_buffer_V_3_24_address0 = grp_conv_fu_1033_weight_buffer_V_3_24_address0;
    end else begin
        weight_buffer_V_3_24_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_3_24_ce0 = grp_weight_load_fu_1439_weight_buffer_3_24_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_buffer_V_3_24_ce0 = grp_conv_fu_1033_weight_buffer_V_3_24_ce0;
    end else begin
        weight_buffer_V_3_24_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_3_24_we0 = grp_weight_load_fu_1439_weight_buffer_3_24_V_we0;
    end else begin
        weight_buffer_V_3_24_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_3_25_address0 = grp_weight_load_fu_1439_weight_buffer_3_25_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_buffer_V_3_25_address0 = grp_conv_fu_1033_weight_buffer_V_3_25_address0;
    end else begin
        weight_buffer_V_3_25_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_3_25_ce0 = grp_weight_load_fu_1439_weight_buffer_3_25_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_buffer_V_3_25_ce0 = grp_conv_fu_1033_weight_buffer_V_3_25_ce0;
    end else begin
        weight_buffer_V_3_25_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_3_25_we0 = grp_weight_load_fu_1439_weight_buffer_3_25_V_we0;
    end else begin
        weight_buffer_V_3_25_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_3_26_address0 = grp_weight_load_fu_1439_weight_buffer_3_26_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_buffer_V_3_26_address0 = grp_conv_fu_1033_weight_buffer_V_3_26_address0;
    end else begin
        weight_buffer_V_3_26_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_3_26_ce0 = grp_weight_load_fu_1439_weight_buffer_3_26_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_buffer_V_3_26_ce0 = grp_conv_fu_1033_weight_buffer_V_3_26_ce0;
    end else begin
        weight_buffer_V_3_26_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_3_26_we0 = grp_weight_load_fu_1439_weight_buffer_3_26_V_we0;
    end else begin
        weight_buffer_V_3_26_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_3_27_address0 = grp_weight_load_fu_1439_weight_buffer_3_27_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_buffer_V_3_27_address0 = grp_conv_fu_1033_weight_buffer_V_3_27_address0;
    end else begin
        weight_buffer_V_3_27_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_3_27_ce0 = grp_weight_load_fu_1439_weight_buffer_3_27_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_buffer_V_3_27_ce0 = grp_conv_fu_1033_weight_buffer_V_3_27_ce0;
    end else begin
        weight_buffer_V_3_27_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_3_27_we0 = grp_weight_load_fu_1439_weight_buffer_3_27_V_we0;
    end else begin
        weight_buffer_V_3_27_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_3_28_address0 = grp_weight_load_fu_1439_weight_buffer_3_28_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_buffer_V_3_28_address0 = grp_conv_fu_1033_weight_buffer_V_3_28_address0;
    end else begin
        weight_buffer_V_3_28_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_3_28_ce0 = grp_weight_load_fu_1439_weight_buffer_3_28_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_buffer_V_3_28_ce0 = grp_conv_fu_1033_weight_buffer_V_3_28_ce0;
    end else begin
        weight_buffer_V_3_28_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_3_28_we0 = grp_weight_load_fu_1439_weight_buffer_3_28_V_we0;
    end else begin
        weight_buffer_V_3_28_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_3_29_address0 = grp_weight_load_fu_1439_weight_buffer_3_29_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_buffer_V_3_29_address0 = grp_conv_fu_1033_weight_buffer_V_3_29_address0;
    end else begin
        weight_buffer_V_3_29_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_3_29_ce0 = grp_weight_load_fu_1439_weight_buffer_3_29_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_buffer_V_3_29_ce0 = grp_conv_fu_1033_weight_buffer_V_3_29_ce0;
    end else begin
        weight_buffer_V_3_29_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_3_29_we0 = grp_weight_load_fu_1439_weight_buffer_3_29_V_we0;
    end else begin
        weight_buffer_V_3_29_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_3_2_address0 = grp_weight_load_fu_1439_weight_buffer_3_2_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_buffer_V_3_2_address0 = grp_conv_fu_1033_weight_buffer_V_3_2_address0;
    end else begin
        weight_buffer_V_3_2_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_3_2_ce0 = grp_weight_load_fu_1439_weight_buffer_3_2_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_buffer_V_3_2_ce0 = grp_conv_fu_1033_weight_buffer_V_3_2_ce0;
    end else begin
        weight_buffer_V_3_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_3_2_we0 = grp_weight_load_fu_1439_weight_buffer_3_2_V_we0;
    end else begin
        weight_buffer_V_3_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_3_30_address0 = grp_weight_load_fu_1439_weight_buffer_3_30_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_buffer_V_3_30_address0 = grp_conv_fu_1033_weight_buffer_V_3_30_address0;
    end else begin
        weight_buffer_V_3_30_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_3_30_ce0 = grp_weight_load_fu_1439_weight_buffer_3_30_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_buffer_V_3_30_ce0 = grp_conv_fu_1033_weight_buffer_V_3_30_ce0;
    end else begin
        weight_buffer_V_3_30_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_3_30_we0 = grp_weight_load_fu_1439_weight_buffer_3_30_V_we0;
    end else begin
        weight_buffer_V_3_30_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_3_31_address0 = grp_weight_load_fu_1439_weight_buffer_3_31_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_buffer_V_3_31_address0 = grp_conv_fu_1033_weight_buffer_V_3_31_address0;
    end else begin
        weight_buffer_V_3_31_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_3_31_ce0 = grp_weight_load_fu_1439_weight_buffer_3_31_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_buffer_V_3_31_ce0 = grp_conv_fu_1033_weight_buffer_V_3_31_ce0;
    end else begin
        weight_buffer_V_3_31_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_3_31_we0 = grp_weight_load_fu_1439_weight_buffer_3_31_V_we0;
    end else begin
        weight_buffer_V_3_31_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_3_3_address0 = grp_weight_load_fu_1439_weight_buffer_3_3_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_buffer_V_3_3_address0 = grp_conv_fu_1033_weight_buffer_V_3_3_address0;
    end else begin
        weight_buffer_V_3_3_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_3_3_ce0 = grp_weight_load_fu_1439_weight_buffer_3_3_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_buffer_V_3_3_ce0 = grp_conv_fu_1033_weight_buffer_V_3_3_ce0;
    end else begin
        weight_buffer_V_3_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_3_3_we0 = grp_weight_load_fu_1439_weight_buffer_3_3_V_we0;
    end else begin
        weight_buffer_V_3_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_3_4_address0 = grp_weight_load_fu_1439_weight_buffer_3_4_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_buffer_V_3_4_address0 = grp_conv_fu_1033_weight_buffer_V_3_4_address0;
    end else begin
        weight_buffer_V_3_4_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_3_4_ce0 = grp_weight_load_fu_1439_weight_buffer_3_4_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_buffer_V_3_4_ce0 = grp_conv_fu_1033_weight_buffer_V_3_4_ce0;
    end else begin
        weight_buffer_V_3_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_3_4_we0 = grp_weight_load_fu_1439_weight_buffer_3_4_V_we0;
    end else begin
        weight_buffer_V_3_4_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_3_5_address0 = grp_weight_load_fu_1439_weight_buffer_3_5_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_buffer_V_3_5_address0 = grp_conv_fu_1033_weight_buffer_V_3_5_address0;
    end else begin
        weight_buffer_V_3_5_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_3_5_ce0 = grp_weight_load_fu_1439_weight_buffer_3_5_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_buffer_V_3_5_ce0 = grp_conv_fu_1033_weight_buffer_V_3_5_ce0;
    end else begin
        weight_buffer_V_3_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_3_5_we0 = grp_weight_load_fu_1439_weight_buffer_3_5_V_we0;
    end else begin
        weight_buffer_V_3_5_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_3_6_address0 = grp_weight_load_fu_1439_weight_buffer_3_6_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_buffer_V_3_6_address0 = grp_conv_fu_1033_weight_buffer_V_3_6_address0;
    end else begin
        weight_buffer_V_3_6_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_3_6_ce0 = grp_weight_load_fu_1439_weight_buffer_3_6_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_buffer_V_3_6_ce0 = grp_conv_fu_1033_weight_buffer_V_3_6_ce0;
    end else begin
        weight_buffer_V_3_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_3_6_we0 = grp_weight_load_fu_1439_weight_buffer_3_6_V_we0;
    end else begin
        weight_buffer_V_3_6_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_3_7_address0 = grp_weight_load_fu_1439_weight_buffer_3_7_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_buffer_V_3_7_address0 = grp_conv_fu_1033_weight_buffer_V_3_7_address0;
    end else begin
        weight_buffer_V_3_7_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_3_7_ce0 = grp_weight_load_fu_1439_weight_buffer_3_7_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_buffer_V_3_7_ce0 = grp_conv_fu_1033_weight_buffer_V_3_7_ce0;
    end else begin
        weight_buffer_V_3_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_3_7_we0 = grp_weight_load_fu_1439_weight_buffer_3_7_V_we0;
    end else begin
        weight_buffer_V_3_7_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_3_8_address0 = grp_weight_load_fu_1439_weight_buffer_3_8_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_buffer_V_3_8_address0 = grp_conv_fu_1033_weight_buffer_V_3_8_address0;
    end else begin
        weight_buffer_V_3_8_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_3_8_ce0 = grp_weight_load_fu_1439_weight_buffer_3_8_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_buffer_V_3_8_ce0 = grp_conv_fu_1033_weight_buffer_V_3_8_ce0;
    end else begin
        weight_buffer_V_3_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_3_8_we0 = grp_weight_load_fu_1439_weight_buffer_3_8_V_we0;
    end else begin
        weight_buffer_V_3_8_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_3_9_address0 = grp_weight_load_fu_1439_weight_buffer_3_9_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_buffer_V_3_9_address0 = grp_conv_fu_1033_weight_buffer_V_3_9_address0;
    end else begin
        weight_buffer_V_3_9_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_3_9_ce0 = grp_weight_load_fu_1439_weight_buffer_3_9_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_buffer_V_3_9_ce0 = grp_conv_fu_1033_weight_buffer_V_3_9_ce0;
    end else begin
        weight_buffer_V_3_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        weight_buffer_V_3_9_we0 = grp_weight_load_fu_1439_weight_buffer_3_9_V_we0;
    end else begin
        weight_buffer_V_3_9_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_buffer_fc_0_address0 = grp_weight_load_fc_fu_1987_weight_buffer_fc_0_address0;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        weight_buffer_fc_0_address0 = grp_fc_fu_1882_weight_buffer_fc_0_address0;
    end else begin
        weight_buffer_fc_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_buffer_fc_0_ce0 = grp_weight_load_fc_fu_1987_weight_buffer_fc_0_ce0;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        weight_buffer_fc_0_ce0 = grp_fc_fu_1882_weight_buffer_fc_0_ce0;
    end else begin
        weight_buffer_fc_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_buffer_fc_0_we0 = grp_weight_load_fc_fu_1987_weight_buffer_fc_0_we0;
    end else begin
        weight_buffer_fc_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_buffer_fc_1_address0 = grp_weight_load_fc_fu_1987_weight_buffer_fc_1_address0;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        weight_buffer_fc_1_address0 = grp_fc_fu_1882_weight_buffer_fc_1_address0;
    end else begin
        weight_buffer_fc_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_buffer_fc_1_ce0 = grp_weight_load_fc_fu_1987_weight_buffer_fc_1_ce0;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        weight_buffer_fc_1_ce0 = grp_fc_fu_1882_weight_buffer_fc_1_ce0;
    end else begin
        weight_buffer_fc_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_buffer_fc_1_we0 = grp_weight_load_fc_fu_1987_weight_buffer_fc_1_we0;
    end else begin
        weight_buffer_fc_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_buffer_fc_2_address0 = grp_weight_load_fc_fu_1987_weight_buffer_fc_2_address0;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        weight_buffer_fc_2_address0 = grp_fc_fu_1882_weight_buffer_fc_2_address0;
    end else begin
        weight_buffer_fc_2_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_buffer_fc_2_ce0 = grp_weight_load_fc_fu_1987_weight_buffer_fc_2_ce0;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        weight_buffer_fc_2_ce0 = grp_fc_fu_1882_weight_buffer_fc_2_ce0;
    end else begin
        weight_buffer_fc_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_buffer_fc_2_we0 = grp_weight_load_fc_fu_1987_weight_buffer_fc_2_we0;
    end else begin
        weight_buffer_fc_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_buffer_fc_3_address0 = grp_weight_load_fc_fu_1987_weight_buffer_fc_3_address0;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        weight_buffer_fc_3_address0 = grp_fc_fu_1882_weight_buffer_fc_3_address0;
    end else begin
        weight_buffer_fc_3_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_buffer_fc_3_ce0 = grp_weight_load_fc_fu_1987_weight_buffer_fc_3_ce0;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        weight_buffer_fc_3_ce0 = grp_fc_fu_1882_weight_buffer_fc_3_ce0;
    end else begin
        weight_buffer_fc_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_buffer_fc_3_we0 = grp_weight_load_fc_fu_1987_weight_buffer_fc_3_we0;
    end else begin
        weight_buffer_fc_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_buffer_fc_4_address0 = grp_weight_load_fc_fu_1987_weight_buffer_fc_4_address0;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        weight_buffer_fc_4_address0 = grp_fc_fu_1882_weight_buffer_fc_4_address0;
    end else begin
        weight_buffer_fc_4_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_buffer_fc_4_ce0 = grp_weight_load_fc_fu_1987_weight_buffer_fc_4_ce0;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        weight_buffer_fc_4_ce0 = grp_fc_fu_1882_weight_buffer_fc_4_ce0;
    end else begin
        weight_buffer_fc_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_buffer_fc_4_we0 = grp_weight_load_fc_fu_1987_weight_buffer_fc_4_we0;
    end else begin
        weight_buffer_fc_4_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_buffer_fc_5_address0 = grp_weight_load_fc_fu_1987_weight_buffer_fc_5_address0;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        weight_buffer_fc_5_address0 = grp_fc_fu_1882_weight_buffer_fc_5_address0;
    end else begin
        weight_buffer_fc_5_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_buffer_fc_5_ce0 = grp_weight_load_fc_fu_1987_weight_buffer_fc_5_ce0;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        weight_buffer_fc_5_ce0 = grp_fc_fu_1882_weight_buffer_fc_5_ce0;
    end else begin
        weight_buffer_fc_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_buffer_fc_5_we0 = grp_weight_load_fc_fu_1987_weight_buffer_fc_5_we0;
    end else begin
        weight_buffer_fc_5_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_buffer_fc_6_address0 = grp_weight_load_fc_fu_1987_weight_buffer_fc_6_address0;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        weight_buffer_fc_6_address0 = grp_fc_fu_1882_weight_buffer_fc_6_address0;
    end else begin
        weight_buffer_fc_6_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_buffer_fc_6_ce0 = grp_weight_load_fc_fu_1987_weight_buffer_fc_6_ce0;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        weight_buffer_fc_6_ce0 = grp_fc_fu_1882_weight_buffer_fc_6_ce0;
    end else begin
        weight_buffer_fc_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_buffer_fc_6_we0 = grp_weight_load_fc_fu_1987_weight_buffer_fc_6_we0;
    end else begin
        weight_buffer_fc_6_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_buffer_fc_7_address0 = grp_weight_load_fc_fu_1987_weight_buffer_fc_7_address0;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        weight_buffer_fc_7_address0 = grp_fc_fu_1882_weight_buffer_fc_7_address0;
    end else begin
        weight_buffer_fc_7_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_buffer_fc_7_ce0 = grp_weight_load_fc_fu_1987_weight_buffer_fc_7_ce0;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        weight_buffer_fc_7_ce0 = grp_fc_fu_1882_weight_buffer_fc_7_ce0;
    end else begin
        weight_buffer_fc_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state31)) begin
        weight_buffer_fc_7_we0 = grp_weight_load_fc_fu_1987_weight_buffer_fc_7_we0;
    end else begin
        weight_buffer_fc_7_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((ap_sig_ioackin_Beta_ARREADY == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0) & (exitcond_fu_2079_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1)) & ~((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0) & (exitcond_fu_2079_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state12 : begin
            if (((1'b0 == ap_block_state12_io) & (tmp_s_fu_2095_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state12))) begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end else if (((1'b0 == ap_block_state12_io) & (tmp_s_fu_2095_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state12))) begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_pp1_stage0;
        end
        ap_ST_fsm_pp1_stage0 : begin
            if ((~((1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter1 == 1'b0) & (exitcond1_fu_2100_p2 == 1'd1) & (ap_enable_reg_pp1_iter0 == 1'b1)) & ~((1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter2 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if ((((1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter2 == 1'b1)) | ((1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter1 == 1'b0) & (exitcond1_fu_2100_p2 == 1'd1) & (ap_enable_reg_pp1_iter0 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            if (((tmp_76_fu_2315_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state23))) begin
                ap_NS_fsm = ap_ST_fsm_state24;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state39;
            end
        end
        ap_ST_fsm_state24 : begin
            if (((tmp_80_fu_2342_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state24))) begin
                ap_NS_fsm = ap_ST_fsm_state34;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state25;
            end
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            if (((1'b0 == ap_block_state29_on_subcall_done) & (1'b1 == ap_CS_fsm_state29))) begin
                ap_NS_fsm = ap_ST_fsm_state30;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state29;
            end
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            if (((1'b0 == ap_block_state31_on_subcall_done) & (1'b1 == ap_CS_fsm_state31))) begin
                ap_NS_fsm = ap_ST_fsm_state32;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state31;
            end
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            if (((grp_fc_fu_1882_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state33))) begin
                ap_NS_fsm = ap_ST_fsm_state24;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state33;
            end
        end
        ap_ST_fsm_state34 : begin
            if (((grp_relu_fu_1810_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state34))) begin
                ap_NS_fsm = ap_ST_fsm_state35;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state34;
            end
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            if (((grp_pool_fu_962_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state36))) begin
                ap_NS_fsm = ap_ST_fsm_state37;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state36;
            end
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            if (((grp_output_write_fu_1709_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state38))) begin
                ap_NS_fsm = ap_ST_fsm_state23;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state38;
            end
        end
        ap_ST_fsm_state39 : begin
            if (((grp_relu_fc_fu_1941_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state39))) begin
                ap_NS_fsm = ap_ST_fsm_state40;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state39;
            end
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_state41;
        end
        ap_ST_fsm_state41 : begin
            if (((grp_output_write_fc_fu_1963_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state41))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state41;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign Beta_ARADDR = tmp_113_fu_2056_p1;

assign Beta_ARLEN = tmp_197_reg_2487;

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state28 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state29 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state30 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state31 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state32 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_state33 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_state34 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_state35 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_state36 = ap_CS_fsm[32'd31];

assign ap_CS_fsm_state37 = ap_CS_fsm[32'd32];

assign ap_CS_fsm_state38 = ap_CS_fsm[32'd33];

assign ap_CS_fsm_state39 = ap_CS_fsm[32'd34];

assign ap_CS_fsm_state40 = ap_CS_fsm[32'd35];

assign ap_CS_fsm_state41 = ap_CS_fsm[32'd36];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((1'b0 == Beta_RVALID) & (exitcond_reg_2510 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((1'b0 == Beta_RVALID) & (exitcond_reg_2510 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

assign ap_block_pp1_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp1_stage0_11001 = ((1'b0 == Input_r_RVALID) & (ap_enable_reg_pp1_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp1_stage0_subdone = ((1'b0 == Input_r_RVALID) & (ap_enable_reg_pp1_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_state10_pp0_stage0_iter1 = ((1'b0 == Beta_RVALID) & (exitcond_reg_2510 == 1'd0));
end

assign ap_block_state11_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state12_io = ((ap_sig_ioackin_Input_r_ARREADY == 1'b0) & (tmp_s_fu_2095_p2 == 1'd1));
end

assign ap_block_state19_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state20_pp1_stage0_iter1 = (1'b0 == Input_r_RVALID);
end

assign ap_block_state21_pp1_stage0_iter2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state29_on_subcall_done = ((grp_input_load_conv_fu_1788_ap_done == 1'b0) | (grp_weight_load_fu_1439_ap_done == 1'b0));
end

always @ (*) begin
    ap_block_state31_on_subcall_done = ((grp_weight_load_fc_fu_1987_ap_done == 1'b0) | (grp_conv_fu_1033_ap_done == 1'b0));
end

assign ap_block_state9_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign exitcond1_fu_2100_p2 = ((indvar2_reg_880 == 13'd4096) ? 1'b1 : 1'b0);

assign exitcond_fu_2079_p2 = ((ap_phi_mux_indvar_phi_fu_872_p4 == tmp_197_reg_2487) ? 1'b1 : 1'b0);

assign grp_conv_fu_1033_ap_start = grp_conv_fu_1033_ap_start_reg;

assign grp_conv_fu_1033_enable = tmp_70_reg_2558;

assign grp_fc_fu_1882_ap_start = grp_fc_fu_1882_ap_start_reg;

assign grp_fc_fu_1882_enable = tmp_70_reg_2558;

assign grp_input_load_conv_fu_1788_ap_start = grp_input_load_conv_fu_1788_ap_start_reg;

assign grp_input_load_conv_fu_1788_enable = tmp_70_reg_2558;

assign grp_output_write_fc_fu_1963_ap_start = grp_output_write_fc_fu_1963_ap_start_reg;

assign grp_output_write_fc_fu_1963_enable = tmp_70_reg_2558;

assign grp_output_write_fu_1709_ap_start = grp_output_write_fu_1709_ap_start_reg;

assign grp_output_write_fu_1709_half = tmp_70_reg_2558;

assign grp_output_write_fu_1709_write_flag = tmp_71_reg_2570;

assign grp_pool_fu_962_ap_start = grp_pool_fu_962_ap_start_reg;

assign grp_pool_fu_962_enable = tmp_75_reg_2586;

assign grp_relu_fc_fu_1941_ap_start = grp_relu_fc_fu_1941_ap_start_reg;

assign grp_relu_fc_fu_1941_enable = tmp_70_reg_2558;

assign grp_relu_fu_1810_ap_start = grp_relu_fu_1810_ap_start_reg;

assign grp_relu_fu_1810_enable = tmp_71_reg_2570;

assign grp_weight_load_fc_fu_1987_ap_start = grp_weight_load_fc_fu_1987_ap_start_reg;

assign grp_weight_load_fc_fu_1987_enable = tmp_70_reg_2558;

assign grp_weight_load_fu_1439_ap_start = grp_weight_load_fu_1439_ap_start_reg;

assign grp_weight_load_fu_1439_enable = tmp_70_reg_2558;

assign indvar1_fu_2090_p1 = indvar_reg_868_pp0_iter1_reg;

assign indvar_next1_fu_2106_p2 = (indvar2_reg_880 + 13'd1);

assign indvar_next_fu_2084_p2 = (ap_phi_mux_indvar_phi_fu_872_p4 + 30'd1);

assign m_1_fu_2320_p2 = (m_reg_891 + 31'd1);

assign m_cast_fu_2311_p1 = m_reg_891;

assign n1_cast_fu_2338_p1 = n1_reg_939;

assign n_cast_fu_2153_p1 = n_fu_2145_p3;

assign n_fu_2145_p3 = ((tmp_69_fu_2137_p2[0:0] === 1'b1) ? tmp_199_fu_2142_p1 : 31'd0);

assign newIndex2_fu_2126_p1 = newIndex_reg_2541_pp1_iter1_reg;

assign next_mul1_fu_2296_p2 = (phi_mul2_reg_927 + TM_read_reg_2448);

assign next_mul2_fu_2301_p2 = (phi_mul1_reg_915 + nLoops_read_reg_2399);

assign next_mul3_fu_2306_p2 = ($signed(phi_mul9_reg_903) + $signed(TC_read_reg_2413));

assign next_mul_fu_2353_p2 = ($signed(TC_read_reg_2413) + $signed(phi_mul_reg_951));

assign p_lshr6_fu_2179_p4 = {{p_neg5_fu_2174_p2[31:1]}};

assign p_lshr_f8_fu_2199_p4 = {{TR_read_reg_2426[31:1]}};

assign p_lshr_f_fu_2252_p4 = {{TC_read_reg_2413[31:1]}};

assign p_lshr_fu_2232_p4 = {{p_neg_fu_2227_p2[31:1]}};

assign p_neg5_fu_2174_p2 = (32'd0 - TR_read_reg_2426);

assign p_neg_fu_2227_p2 = (32'd0 - TC_read_reg_2413);

assign p_neg_t7_fu_2193_p2 = (32'd0 - tmp_115_fu_2189_p1);

assign p_neg_t_fu_2246_p2 = (32'd0 - tmp_117_fu_2242_p1);

assign tmp2_fu_2288_p2 = (Kernel_size_read_reg_2457 * Kernel_size_read_reg_2457);

assign tmp3_fu_2378_p2 = ($signed({{1'b0}, {TM_read_reg_2448}}) * $signed(tmp4_reg_2662));

assign tmp4_fu_2374_p2 = ($signed({{1'b0}, {TN_read_reg_2439}}) * $signed(tmp6_reg_2652));

assign tmp5_fu_2292_p2 = (TM_read_reg_2448 * TR_read_reg_2426);

assign tmp6_fu_2363_p2 = (phi_mul1_reg_915 + n1_cast_fu_2338_p1);

assign tmp_113_fu_2056_p1 = Beta_offset7_reg_2464;

assign tmp_114_fu_2070_p1 = Input_offset1_reg_2481;

assign tmp_115_fu_2189_p1 = p_lshr6_fu_2179_p4;

assign tmp_116_fu_2208_p1 = p_lshr_f8_fu_2199_p4;

assign tmp_117_fu_2242_p1 = p_lshr_fu_2232_p4;

assign tmp_118_fu_2261_p1 = p_lshr_f_fu_2252_p4;

assign tmp_197_fu_2052_p1 = OutFM_num[29:0];

assign tmp_198_fu_2112_p1 = indvar2_reg_880[2:0];

assign tmp_199_fu_2142_p1 = nLoops_read_reg_2399[30:0];

assign tmp_200_fu_2167_p3 = TR_read_reg_2426[32'd31];

assign tmp_201_fu_2220_p3 = TC_read_reg_2413[32'd31];

assign tmp_202_fu_2326_p1 = m_reg_891[19:0];

assign tmp_69_fu_2137_p2 = (($signed(nLoops_read_reg_2399) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign tmp_70_fu_2157_p2 = ((LayerType_read_reg_2392 != 32'd0) ? 1'b1 : 1'b0);

assign tmp_71_fu_2162_p2 = ((n_cast_fu_2153_p1 == nLoops_read_reg_2399) ? 1'b1 : 1'b0);

assign tmp_72_fu_2212_p3 = ((tmp_200_fu_2167_p3[0:0] === 1'b1) ? p_neg_t7_fu_2193_p2 : tmp_116_fu_2208_p1);

assign tmp_73_fu_2265_p3 = ((tmp_201_fu_2220_p3[0:0] === 1'b1) ? p_neg_t_fu_2246_p2 : tmp_118_fu_2261_p1);

assign tmp_74_fu_2273_p2 = ((LayerType_read_reg_2392 == 32'd0) ? 1'b1 : 1'b0);

assign tmp_75_fu_2278_p2 = (tmp_74_fu_2273_p2 & tmp_71_fu_2162_p2);

assign tmp_76_fu_2315_p2 = (($signed(m_cast_fu_2311_p1) < $signed(mLoops_read_reg_2408)) ? 1'b1 : 1'b0);

assign tmp_78_fu_2330_p3 = {{tmp_202_fu_2326_p1}, {12'd0}};

assign tmp_80_fu_2342_p2 = (($signed(n1_cast_fu_2338_p1) < $signed(nLoops_read_reg_2399)) ? 1'b1 : 1'b0);

assign tmp_81_fu_2358_p2 = ($signed(tmp_reg_2591) * $signed(phi_mul_reg_951));

assign tmp_82_fu_2382_p2 = ($signed(tmp2_reg_2596) * $signed(tmp3_reg_2667));

assign tmp_83_fu_2347_p2 = (n1_reg_939 + 31'd1);

assign tmp_84_fu_2369_p2 = ($signed(tmp5_reg_2601) * $signed(phi_mul9_reg_903));

assign tmp_fu_2284_p2 = (TN_read_reg_2439 * TR_read_reg_2426);

assign tmp_s_fu_2095_p2 = ((LayerType_read_reg_2392 == 32'd1) ? 1'b1 : 1'b0);

always @ (posedge ap_clk) begin
    Input_addr_reg_2504[31:30] <= 2'b00;
    tmp_78_reg_2629[11:0] <= 12'b000000000000;
end

endmodule //detection_acc
