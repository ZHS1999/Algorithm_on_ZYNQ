// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module weight_load (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        m_axi_weight_AWVALID,
        m_axi_weight_AWREADY,
        m_axi_weight_AWADDR,
        m_axi_weight_AWID,
        m_axi_weight_AWLEN,
        m_axi_weight_AWSIZE,
        m_axi_weight_AWBURST,
        m_axi_weight_AWLOCK,
        m_axi_weight_AWCACHE,
        m_axi_weight_AWPROT,
        m_axi_weight_AWQOS,
        m_axi_weight_AWREGION,
        m_axi_weight_AWUSER,
        m_axi_weight_WVALID,
        m_axi_weight_WREADY,
        m_axi_weight_WDATA,
        m_axi_weight_WSTRB,
        m_axi_weight_WLAST,
        m_axi_weight_WID,
        m_axi_weight_WUSER,
        m_axi_weight_ARVALID,
        m_axi_weight_ARREADY,
        m_axi_weight_ARADDR,
        m_axi_weight_ARID,
        m_axi_weight_ARLEN,
        m_axi_weight_ARSIZE,
        m_axi_weight_ARBURST,
        m_axi_weight_ARLOCK,
        m_axi_weight_ARCACHE,
        m_axi_weight_ARPROT,
        m_axi_weight_ARQOS,
        m_axi_weight_ARREGION,
        m_axi_weight_ARUSER,
        m_axi_weight_RVALID,
        m_axi_weight_RREADY,
        m_axi_weight_RDATA,
        m_axi_weight_RLAST,
        m_axi_weight_RID,
        m_axi_weight_RUSER,
        m_axi_weight_RRESP,
        m_axi_weight_BVALID,
        m_axi_weight_BREADY,
        m_axi_weight_BRESP,
        m_axi_weight_BID,
        m_axi_weight_BUSER,
        weight_offset,
        weight_buffer_0_0_V_address0,
        weight_buffer_0_0_V_ce0,
        weight_buffer_0_0_V_we0,
        weight_buffer_0_0_V_d0,
        weight_buffer_0_1_V_address0,
        weight_buffer_0_1_V_ce0,
        weight_buffer_0_1_V_we0,
        weight_buffer_0_1_V_d0,
        weight_buffer_0_2_V_address0,
        weight_buffer_0_2_V_ce0,
        weight_buffer_0_2_V_we0,
        weight_buffer_0_2_V_d0,
        weight_buffer_0_3_V_address0,
        weight_buffer_0_3_V_ce0,
        weight_buffer_0_3_V_we0,
        weight_buffer_0_3_V_d0,
        weight_buffer_0_4_V_address0,
        weight_buffer_0_4_V_ce0,
        weight_buffer_0_4_V_we0,
        weight_buffer_0_4_V_d0,
        weight_buffer_0_5_V_address0,
        weight_buffer_0_5_V_ce0,
        weight_buffer_0_5_V_we0,
        weight_buffer_0_5_V_d0,
        weight_buffer_0_6_V_address0,
        weight_buffer_0_6_V_ce0,
        weight_buffer_0_6_V_we0,
        weight_buffer_0_6_V_d0,
        weight_buffer_0_7_V_address0,
        weight_buffer_0_7_V_ce0,
        weight_buffer_0_7_V_we0,
        weight_buffer_0_7_V_d0,
        weight_buffer_0_8_V_address0,
        weight_buffer_0_8_V_ce0,
        weight_buffer_0_8_V_we0,
        weight_buffer_0_8_V_d0,
        weight_buffer_0_9_V_address0,
        weight_buffer_0_9_V_ce0,
        weight_buffer_0_9_V_we0,
        weight_buffer_0_9_V_d0,
        weight_buffer_0_10_V_address0,
        weight_buffer_0_10_V_ce0,
        weight_buffer_0_10_V_we0,
        weight_buffer_0_10_V_d0,
        weight_buffer_0_11_V_address0,
        weight_buffer_0_11_V_ce0,
        weight_buffer_0_11_V_we0,
        weight_buffer_0_11_V_d0,
        weight_buffer_0_12_V_address0,
        weight_buffer_0_12_V_ce0,
        weight_buffer_0_12_V_we0,
        weight_buffer_0_12_V_d0,
        weight_buffer_0_13_V_address0,
        weight_buffer_0_13_V_ce0,
        weight_buffer_0_13_V_we0,
        weight_buffer_0_13_V_d0,
        weight_buffer_0_14_V_address0,
        weight_buffer_0_14_V_ce0,
        weight_buffer_0_14_V_we0,
        weight_buffer_0_14_V_d0,
        weight_buffer_0_15_V_address0,
        weight_buffer_0_15_V_ce0,
        weight_buffer_0_15_V_we0,
        weight_buffer_0_15_V_d0,
        weight_buffer_0_16_V_address0,
        weight_buffer_0_16_V_ce0,
        weight_buffer_0_16_V_we0,
        weight_buffer_0_16_V_d0,
        weight_buffer_0_17_V_address0,
        weight_buffer_0_17_V_ce0,
        weight_buffer_0_17_V_we0,
        weight_buffer_0_17_V_d0,
        weight_buffer_0_18_V_address0,
        weight_buffer_0_18_V_ce0,
        weight_buffer_0_18_V_we0,
        weight_buffer_0_18_V_d0,
        weight_buffer_0_19_V_address0,
        weight_buffer_0_19_V_ce0,
        weight_buffer_0_19_V_we0,
        weight_buffer_0_19_V_d0,
        weight_buffer_0_20_V_address0,
        weight_buffer_0_20_V_ce0,
        weight_buffer_0_20_V_we0,
        weight_buffer_0_20_V_d0,
        weight_buffer_0_21_V_address0,
        weight_buffer_0_21_V_ce0,
        weight_buffer_0_21_V_we0,
        weight_buffer_0_21_V_d0,
        weight_buffer_0_22_V_address0,
        weight_buffer_0_22_V_ce0,
        weight_buffer_0_22_V_we0,
        weight_buffer_0_22_V_d0,
        weight_buffer_0_23_V_address0,
        weight_buffer_0_23_V_ce0,
        weight_buffer_0_23_V_we0,
        weight_buffer_0_23_V_d0,
        weight_buffer_0_24_V_address0,
        weight_buffer_0_24_V_ce0,
        weight_buffer_0_24_V_we0,
        weight_buffer_0_24_V_d0,
        weight_buffer_0_25_V_address0,
        weight_buffer_0_25_V_ce0,
        weight_buffer_0_25_V_we0,
        weight_buffer_0_25_V_d0,
        weight_buffer_0_26_V_address0,
        weight_buffer_0_26_V_ce0,
        weight_buffer_0_26_V_we0,
        weight_buffer_0_26_V_d0,
        weight_buffer_0_27_V_address0,
        weight_buffer_0_27_V_ce0,
        weight_buffer_0_27_V_we0,
        weight_buffer_0_27_V_d0,
        weight_buffer_0_28_V_address0,
        weight_buffer_0_28_V_ce0,
        weight_buffer_0_28_V_we0,
        weight_buffer_0_28_V_d0,
        weight_buffer_0_29_V_address0,
        weight_buffer_0_29_V_ce0,
        weight_buffer_0_29_V_we0,
        weight_buffer_0_29_V_d0,
        weight_buffer_0_30_V_address0,
        weight_buffer_0_30_V_ce0,
        weight_buffer_0_30_V_we0,
        weight_buffer_0_30_V_d0,
        weight_buffer_0_31_V_address0,
        weight_buffer_0_31_V_ce0,
        weight_buffer_0_31_V_we0,
        weight_buffer_0_31_V_d0,
        weight_buffer_1_0_V_address0,
        weight_buffer_1_0_V_ce0,
        weight_buffer_1_0_V_we0,
        weight_buffer_1_0_V_d0,
        weight_buffer_1_1_V_address0,
        weight_buffer_1_1_V_ce0,
        weight_buffer_1_1_V_we0,
        weight_buffer_1_1_V_d0,
        weight_buffer_1_2_V_address0,
        weight_buffer_1_2_V_ce0,
        weight_buffer_1_2_V_we0,
        weight_buffer_1_2_V_d0,
        weight_buffer_1_3_V_address0,
        weight_buffer_1_3_V_ce0,
        weight_buffer_1_3_V_we0,
        weight_buffer_1_3_V_d0,
        weight_buffer_1_4_V_address0,
        weight_buffer_1_4_V_ce0,
        weight_buffer_1_4_V_we0,
        weight_buffer_1_4_V_d0,
        weight_buffer_1_5_V_address0,
        weight_buffer_1_5_V_ce0,
        weight_buffer_1_5_V_we0,
        weight_buffer_1_5_V_d0,
        weight_buffer_1_6_V_address0,
        weight_buffer_1_6_V_ce0,
        weight_buffer_1_6_V_we0,
        weight_buffer_1_6_V_d0,
        weight_buffer_1_7_V_address0,
        weight_buffer_1_7_V_ce0,
        weight_buffer_1_7_V_we0,
        weight_buffer_1_7_V_d0,
        weight_buffer_1_8_V_address0,
        weight_buffer_1_8_V_ce0,
        weight_buffer_1_8_V_we0,
        weight_buffer_1_8_V_d0,
        weight_buffer_1_9_V_address0,
        weight_buffer_1_9_V_ce0,
        weight_buffer_1_9_V_we0,
        weight_buffer_1_9_V_d0,
        weight_buffer_1_10_V_address0,
        weight_buffer_1_10_V_ce0,
        weight_buffer_1_10_V_we0,
        weight_buffer_1_10_V_d0,
        weight_buffer_1_11_V_address0,
        weight_buffer_1_11_V_ce0,
        weight_buffer_1_11_V_we0,
        weight_buffer_1_11_V_d0,
        weight_buffer_1_12_V_address0,
        weight_buffer_1_12_V_ce0,
        weight_buffer_1_12_V_we0,
        weight_buffer_1_12_V_d0,
        weight_buffer_1_13_V_address0,
        weight_buffer_1_13_V_ce0,
        weight_buffer_1_13_V_we0,
        weight_buffer_1_13_V_d0,
        weight_buffer_1_14_V_address0,
        weight_buffer_1_14_V_ce0,
        weight_buffer_1_14_V_we0,
        weight_buffer_1_14_V_d0,
        weight_buffer_1_15_V_address0,
        weight_buffer_1_15_V_ce0,
        weight_buffer_1_15_V_we0,
        weight_buffer_1_15_V_d0,
        weight_buffer_1_16_V_address0,
        weight_buffer_1_16_V_ce0,
        weight_buffer_1_16_V_we0,
        weight_buffer_1_16_V_d0,
        weight_buffer_1_17_V_address0,
        weight_buffer_1_17_V_ce0,
        weight_buffer_1_17_V_we0,
        weight_buffer_1_17_V_d0,
        weight_buffer_1_18_V_address0,
        weight_buffer_1_18_V_ce0,
        weight_buffer_1_18_V_we0,
        weight_buffer_1_18_V_d0,
        weight_buffer_1_19_V_address0,
        weight_buffer_1_19_V_ce0,
        weight_buffer_1_19_V_we0,
        weight_buffer_1_19_V_d0,
        weight_buffer_1_20_V_address0,
        weight_buffer_1_20_V_ce0,
        weight_buffer_1_20_V_we0,
        weight_buffer_1_20_V_d0,
        weight_buffer_1_21_V_address0,
        weight_buffer_1_21_V_ce0,
        weight_buffer_1_21_V_we0,
        weight_buffer_1_21_V_d0,
        weight_buffer_1_22_V_address0,
        weight_buffer_1_22_V_ce0,
        weight_buffer_1_22_V_we0,
        weight_buffer_1_22_V_d0,
        weight_buffer_1_23_V_address0,
        weight_buffer_1_23_V_ce0,
        weight_buffer_1_23_V_we0,
        weight_buffer_1_23_V_d0,
        weight_buffer_1_24_V_address0,
        weight_buffer_1_24_V_ce0,
        weight_buffer_1_24_V_we0,
        weight_buffer_1_24_V_d0,
        weight_buffer_1_25_V_address0,
        weight_buffer_1_25_V_ce0,
        weight_buffer_1_25_V_we0,
        weight_buffer_1_25_V_d0,
        weight_buffer_1_26_V_address0,
        weight_buffer_1_26_V_ce0,
        weight_buffer_1_26_V_we0,
        weight_buffer_1_26_V_d0,
        weight_buffer_1_27_V_address0,
        weight_buffer_1_27_V_ce0,
        weight_buffer_1_27_V_we0,
        weight_buffer_1_27_V_d0,
        weight_buffer_1_28_V_address0,
        weight_buffer_1_28_V_ce0,
        weight_buffer_1_28_V_we0,
        weight_buffer_1_28_V_d0,
        weight_buffer_1_29_V_address0,
        weight_buffer_1_29_V_ce0,
        weight_buffer_1_29_V_we0,
        weight_buffer_1_29_V_d0,
        weight_buffer_1_30_V_address0,
        weight_buffer_1_30_V_ce0,
        weight_buffer_1_30_V_we0,
        weight_buffer_1_30_V_d0,
        weight_buffer_1_31_V_address0,
        weight_buffer_1_31_V_ce0,
        weight_buffer_1_31_V_we0,
        weight_buffer_1_31_V_d0,
        weight_buffer_2_0_V_address0,
        weight_buffer_2_0_V_ce0,
        weight_buffer_2_0_V_we0,
        weight_buffer_2_0_V_d0,
        weight_buffer_2_1_V_address0,
        weight_buffer_2_1_V_ce0,
        weight_buffer_2_1_V_we0,
        weight_buffer_2_1_V_d0,
        weight_buffer_2_2_V_address0,
        weight_buffer_2_2_V_ce0,
        weight_buffer_2_2_V_we0,
        weight_buffer_2_2_V_d0,
        weight_buffer_2_3_V_address0,
        weight_buffer_2_3_V_ce0,
        weight_buffer_2_3_V_we0,
        weight_buffer_2_3_V_d0,
        weight_buffer_2_4_V_address0,
        weight_buffer_2_4_V_ce0,
        weight_buffer_2_4_V_we0,
        weight_buffer_2_4_V_d0,
        weight_buffer_2_5_V_address0,
        weight_buffer_2_5_V_ce0,
        weight_buffer_2_5_V_we0,
        weight_buffer_2_5_V_d0,
        weight_buffer_2_6_V_address0,
        weight_buffer_2_6_V_ce0,
        weight_buffer_2_6_V_we0,
        weight_buffer_2_6_V_d0,
        weight_buffer_2_7_V_address0,
        weight_buffer_2_7_V_ce0,
        weight_buffer_2_7_V_we0,
        weight_buffer_2_7_V_d0,
        weight_buffer_2_8_V_address0,
        weight_buffer_2_8_V_ce0,
        weight_buffer_2_8_V_we0,
        weight_buffer_2_8_V_d0,
        weight_buffer_2_9_V_address0,
        weight_buffer_2_9_V_ce0,
        weight_buffer_2_9_V_we0,
        weight_buffer_2_9_V_d0,
        weight_buffer_2_10_V_address0,
        weight_buffer_2_10_V_ce0,
        weight_buffer_2_10_V_we0,
        weight_buffer_2_10_V_d0,
        weight_buffer_2_11_V_address0,
        weight_buffer_2_11_V_ce0,
        weight_buffer_2_11_V_we0,
        weight_buffer_2_11_V_d0,
        weight_buffer_2_12_V_address0,
        weight_buffer_2_12_V_ce0,
        weight_buffer_2_12_V_we0,
        weight_buffer_2_12_V_d0,
        weight_buffer_2_13_V_address0,
        weight_buffer_2_13_V_ce0,
        weight_buffer_2_13_V_we0,
        weight_buffer_2_13_V_d0,
        weight_buffer_2_14_V_address0,
        weight_buffer_2_14_V_ce0,
        weight_buffer_2_14_V_we0,
        weight_buffer_2_14_V_d0,
        weight_buffer_2_15_V_address0,
        weight_buffer_2_15_V_ce0,
        weight_buffer_2_15_V_we0,
        weight_buffer_2_15_V_d0,
        weight_buffer_2_16_V_address0,
        weight_buffer_2_16_V_ce0,
        weight_buffer_2_16_V_we0,
        weight_buffer_2_16_V_d0,
        weight_buffer_2_17_V_address0,
        weight_buffer_2_17_V_ce0,
        weight_buffer_2_17_V_we0,
        weight_buffer_2_17_V_d0,
        weight_buffer_2_18_V_address0,
        weight_buffer_2_18_V_ce0,
        weight_buffer_2_18_V_we0,
        weight_buffer_2_18_V_d0,
        weight_buffer_2_19_V_address0,
        weight_buffer_2_19_V_ce0,
        weight_buffer_2_19_V_we0,
        weight_buffer_2_19_V_d0,
        weight_buffer_2_20_V_address0,
        weight_buffer_2_20_V_ce0,
        weight_buffer_2_20_V_we0,
        weight_buffer_2_20_V_d0,
        weight_buffer_2_21_V_address0,
        weight_buffer_2_21_V_ce0,
        weight_buffer_2_21_V_we0,
        weight_buffer_2_21_V_d0,
        weight_buffer_2_22_V_address0,
        weight_buffer_2_22_V_ce0,
        weight_buffer_2_22_V_we0,
        weight_buffer_2_22_V_d0,
        weight_buffer_2_23_V_address0,
        weight_buffer_2_23_V_ce0,
        weight_buffer_2_23_V_we0,
        weight_buffer_2_23_V_d0,
        weight_buffer_2_24_V_address0,
        weight_buffer_2_24_V_ce0,
        weight_buffer_2_24_V_we0,
        weight_buffer_2_24_V_d0,
        weight_buffer_2_25_V_address0,
        weight_buffer_2_25_V_ce0,
        weight_buffer_2_25_V_we0,
        weight_buffer_2_25_V_d0,
        weight_buffer_2_26_V_address0,
        weight_buffer_2_26_V_ce0,
        weight_buffer_2_26_V_we0,
        weight_buffer_2_26_V_d0,
        weight_buffer_2_27_V_address0,
        weight_buffer_2_27_V_ce0,
        weight_buffer_2_27_V_we0,
        weight_buffer_2_27_V_d0,
        weight_buffer_2_28_V_address0,
        weight_buffer_2_28_V_ce0,
        weight_buffer_2_28_V_we0,
        weight_buffer_2_28_V_d0,
        weight_buffer_2_29_V_address0,
        weight_buffer_2_29_V_ce0,
        weight_buffer_2_29_V_we0,
        weight_buffer_2_29_V_d0,
        weight_buffer_2_30_V_address0,
        weight_buffer_2_30_V_ce0,
        weight_buffer_2_30_V_we0,
        weight_buffer_2_30_V_d0,
        weight_buffer_2_31_V_address0,
        weight_buffer_2_31_V_ce0,
        weight_buffer_2_31_V_we0,
        weight_buffer_2_31_V_d0,
        weight_buffer_3_0_V_address0,
        weight_buffer_3_0_V_ce0,
        weight_buffer_3_0_V_we0,
        weight_buffer_3_0_V_d0,
        weight_buffer_3_1_V_address0,
        weight_buffer_3_1_V_ce0,
        weight_buffer_3_1_V_we0,
        weight_buffer_3_1_V_d0,
        weight_buffer_3_2_V_address0,
        weight_buffer_3_2_V_ce0,
        weight_buffer_3_2_V_we0,
        weight_buffer_3_2_V_d0,
        weight_buffer_3_3_V_address0,
        weight_buffer_3_3_V_ce0,
        weight_buffer_3_3_V_we0,
        weight_buffer_3_3_V_d0,
        weight_buffer_3_4_V_address0,
        weight_buffer_3_4_V_ce0,
        weight_buffer_3_4_V_we0,
        weight_buffer_3_4_V_d0,
        weight_buffer_3_5_V_address0,
        weight_buffer_3_5_V_ce0,
        weight_buffer_3_5_V_we0,
        weight_buffer_3_5_V_d0,
        weight_buffer_3_6_V_address0,
        weight_buffer_3_6_V_ce0,
        weight_buffer_3_6_V_we0,
        weight_buffer_3_6_V_d0,
        weight_buffer_3_7_V_address0,
        weight_buffer_3_7_V_ce0,
        weight_buffer_3_7_V_we0,
        weight_buffer_3_7_V_d0,
        weight_buffer_3_8_V_address0,
        weight_buffer_3_8_V_ce0,
        weight_buffer_3_8_V_we0,
        weight_buffer_3_8_V_d0,
        weight_buffer_3_9_V_address0,
        weight_buffer_3_9_V_ce0,
        weight_buffer_3_9_V_we0,
        weight_buffer_3_9_V_d0,
        weight_buffer_3_10_V_address0,
        weight_buffer_3_10_V_ce0,
        weight_buffer_3_10_V_we0,
        weight_buffer_3_10_V_d0,
        weight_buffer_3_11_V_address0,
        weight_buffer_3_11_V_ce0,
        weight_buffer_3_11_V_we0,
        weight_buffer_3_11_V_d0,
        weight_buffer_3_12_V_address0,
        weight_buffer_3_12_V_ce0,
        weight_buffer_3_12_V_we0,
        weight_buffer_3_12_V_d0,
        weight_buffer_3_13_V_address0,
        weight_buffer_3_13_V_ce0,
        weight_buffer_3_13_V_we0,
        weight_buffer_3_13_V_d0,
        weight_buffer_3_14_V_address0,
        weight_buffer_3_14_V_ce0,
        weight_buffer_3_14_V_we0,
        weight_buffer_3_14_V_d0,
        weight_buffer_3_15_V_address0,
        weight_buffer_3_15_V_ce0,
        weight_buffer_3_15_V_we0,
        weight_buffer_3_15_V_d0,
        weight_buffer_3_16_V_address0,
        weight_buffer_3_16_V_ce0,
        weight_buffer_3_16_V_we0,
        weight_buffer_3_16_V_d0,
        weight_buffer_3_17_V_address0,
        weight_buffer_3_17_V_ce0,
        weight_buffer_3_17_V_we0,
        weight_buffer_3_17_V_d0,
        weight_buffer_3_18_V_address0,
        weight_buffer_3_18_V_ce0,
        weight_buffer_3_18_V_we0,
        weight_buffer_3_18_V_d0,
        weight_buffer_3_19_V_address0,
        weight_buffer_3_19_V_ce0,
        weight_buffer_3_19_V_we0,
        weight_buffer_3_19_V_d0,
        weight_buffer_3_20_V_address0,
        weight_buffer_3_20_V_ce0,
        weight_buffer_3_20_V_we0,
        weight_buffer_3_20_V_d0,
        weight_buffer_3_21_V_address0,
        weight_buffer_3_21_V_ce0,
        weight_buffer_3_21_V_we0,
        weight_buffer_3_21_V_d0,
        weight_buffer_3_22_V_address0,
        weight_buffer_3_22_V_ce0,
        weight_buffer_3_22_V_we0,
        weight_buffer_3_22_V_d0,
        weight_buffer_3_23_V_address0,
        weight_buffer_3_23_V_ce0,
        weight_buffer_3_23_V_we0,
        weight_buffer_3_23_V_d0,
        weight_buffer_3_24_V_address0,
        weight_buffer_3_24_V_ce0,
        weight_buffer_3_24_V_we0,
        weight_buffer_3_24_V_d0,
        weight_buffer_3_25_V_address0,
        weight_buffer_3_25_V_ce0,
        weight_buffer_3_25_V_we0,
        weight_buffer_3_25_V_d0,
        weight_buffer_3_26_V_address0,
        weight_buffer_3_26_V_ce0,
        weight_buffer_3_26_V_we0,
        weight_buffer_3_26_V_d0,
        weight_buffer_3_27_V_address0,
        weight_buffer_3_27_V_ce0,
        weight_buffer_3_27_V_we0,
        weight_buffer_3_27_V_d0,
        weight_buffer_3_28_V_address0,
        weight_buffer_3_28_V_ce0,
        weight_buffer_3_28_V_we0,
        weight_buffer_3_28_V_d0,
        weight_buffer_3_29_V_address0,
        weight_buffer_3_29_V_ce0,
        weight_buffer_3_29_V_we0,
        weight_buffer_3_29_V_d0,
        weight_buffer_3_30_V_address0,
        weight_buffer_3_30_V_ce0,
        weight_buffer_3_30_V_we0,
        weight_buffer_3_30_V_d0,
        weight_buffer_3_31_V_address0,
        weight_buffer_3_31_V_ce0,
        weight_buffer_3_31_V_we0,
        weight_buffer_3_31_V_d0,
        TN,
        TM,
        k,
        offset,
        enable
);

parameter    ap_ST_fsm_state1 = 17'd1;
parameter    ap_ST_fsm_state2 = 17'd2;
parameter    ap_ST_fsm_state3 = 17'd4;
parameter    ap_ST_fsm_state4 = 17'd8;
parameter    ap_ST_fsm_state5 = 17'd16;
parameter    ap_ST_fsm_state6 = 17'd32;
parameter    ap_ST_fsm_state7 = 17'd64;
parameter    ap_ST_fsm_state8 = 17'd128;
parameter    ap_ST_fsm_pp0_stage0 = 17'd256;
parameter    ap_ST_fsm_state12 = 17'd512;
parameter    ap_ST_fsm_state13 = 17'd1024;
parameter    ap_ST_fsm_state14 = 17'd2048;
parameter    ap_ST_fsm_state15 = 17'd4096;
parameter    ap_ST_fsm_state16 = 17'd8192;
parameter    ap_ST_fsm_pp1_stage0 = 17'd16384;
parameter    ap_ST_fsm_pp1_stage1 = 17'd32768;
parameter    ap_ST_fsm_state20 = 17'd65536;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output   m_axi_weight_AWVALID;
input   m_axi_weight_AWREADY;
output  [31:0] m_axi_weight_AWADDR;
output  [0:0] m_axi_weight_AWID;
output  [31:0] m_axi_weight_AWLEN;
output  [2:0] m_axi_weight_AWSIZE;
output  [1:0] m_axi_weight_AWBURST;
output  [1:0] m_axi_weight_AWLOCK;
output  [3:0] m_axi_weight_AWCACHE;
output  [2:0] m_axi_weight_AWPROT;
output  [3:0] m_axi_weight_AWQOS;
output  [3:0] m_axi_weight_AWREGION;
output  [0:0] m_axi_weight_AWUSER;
output   m_axi_weight_WVALID;
input   m_axi_weight_WREADY;
output  [31:0] m_axi_weight_WDATA;
output  [3:0] m_axi_weight_WSTRB;
output   m_axi_weight_WLAST;
output  [0:0] m_axi_weight_WID;
output  [0:0] m_axi_weight_WUSER;
output   m_axi_weight_ARVALID;
input   m_axi_weight_ARREADY;
output  [31:0] m_axi_weight_ARADDR;
output  [0:0] m_axi_weight_ARID;
output  [31:0] m_axi_weight_ARLEN;
output  [2:0] m_axi_weight_ARSIZE;
output  [1:0] m_axi_weight_ARBURST;
output  [1:0] m_axi_weight_ARLOCK;
output  [3:0] m_axi_weight_ARCACHE;
output  [2:0] m_axi_weight_ARPROT;
output  [3:0] m_axi_weight_ARQOS;
output  [3:0] m_axi_weight_ARREGION;
output  [0:0] m_axi_weight_ARUSER;
input   m_axi_weight_RVALID;
output   m_axi_weight_RREADY;
input  [31:0] m_axi_weight_RDATA;
input   m_axi_weight_RLAST;
input  [0:0] m_axi_weight_RID;
input  [0:0] m_axi_weight_RUSER;
input  [1:0] m_axi_weight_RRESP;
input   m_axi_weight_BVALID;
output   m_axi_weight_BREADY;
input  [1:0] m_axi_weight_BRESP;
input  [0:0] m_axi_weight_BID;
input  [0:0] m_axi_weight_BUSER;
input  [29:0] weight_offset;
output  [4:0] weight_buffer_0_0_V_address0;
output   weight_buffer_0_0_V_ce0;
output   weight_buffer_0_0_V_we0;
output  [7:0] weight_buffer_0_0_V_d0;
output  [4:0] weight_buffer_0_1_V_address0;
output   weight_buffer_0_1_V_ce0;
output   weight_buffer_0_1_V_we0;
output  [7:0] weight_buffer_0_1_V_d0;
output  [4:0] weight_buffer_0_2_V_address0;
output   weight_buffer_0_2_V_ce0;
output   weight_buffer_0_2_V_we0;
output  [7:0] weight_buffer_0_2_V_d0;
output  [4:0] weight_buffer_0_3_V_address0;
output   weight_buffer_0_3_V_ce0;
output   weight_buffer_0_3_V_we0;
output  [7:0] weight_buffer_0_3_V_d0;
output  [4:0] weight_buffer_0_4_V_address0;
output   weight_buffer_0_4_V_ce0;
output   weight_buffer_0_4_V_we0;
output  [7:0] weight_buffer_0_4_V_d0;
output  [4:0] weight_buffer_0_5_V_address0;
output   weight_buffer_0_5_V_ce0;
output   weight_buffer_0_5_V_we0;
output  [7:0] weight_buffer_0_5_V_d0;
output  [4:0] weight_buffer_0_6_V_address0;
output   weight_buffer_0_6_V_ce0;
output   weight_buffer_0_6_V_we0;
output  [7:0] weight_buffer_0_6_V_d0;
output  [4:0] weight_buffer_0_7_V_address0;
output   weight_buffer_0_7_V_ce0;
output   weight_buffer_0_7_V_we0;
output  [7:0] weight_buffer_0_7_V_d0;
output  [4:0] weight_buffer_0_8_V_address0;
output   weight_buffer_0_8_V_ce0;
output   weight_buffer_0_8_V_we0;
output  [7:0] weight_buffer_0_8_V_d0;
output  [4:0] weight_buffer_0_9_V_address0;
output   weight_buffer_0_9_V_ce0;
output   weight_buffer_0_9_V_we0;
output  [7:0] weight_buffer_0_9_V_d0;
output  [4:0] weight_buffer_0_10_V_address0;
output   weight_buffer_0_10_V_ce0;
output   weight_buffer_0_10_V_we0;
output  [7:0] weight_buffer_0_10_V_d0;
output  [4:0] weight_buffer_0_11_V_address0;
output   weight_buffer_0_11_V_ce0;
output   weight_buffer_0_11_V_we0;
output  [7:0] weight_buffer_0_11_V_d0;
output  [4:0] weight_buffer_0_12_V_address0;
output   weight_buffer_0_12_V_ce0;
output   weight_buffer_0_12_V_we0;
output  [7:0] weight_buffer_0_12_V_d0;
output  [4:0] weight_buffer_0_13_V_address0;
output   weight_buffer_0_13_V_ce0;
output   weight_buffer_0_13_V_we0;
output  [7:0] weight_buffer_0_13_V_d0;
output  [4:0] weight_buffer_0_14_V_address0;
output   weight_buffer_0_14_V_ce0;
output   weight_buffer_0_14_V_we0;
output  [7:0] weight_buffer_0_14_V_d0;
output  [4:0] weight_buffer_0_15_V_address0;
output   weight_buffer_0_15_V_ce0;
output   weight_buffer_0_15_V_we0;
output  [7:0] weight_buffer_0_15_V_d0;
output  [4:0] weight_buffer_0_16_V_address0;
output   weight_buffer_0_16_V_ce0;
output   weight_buffer_0_16_V_we0;
output  [7:0] weight_buffer_0_16_V_d0;
output  [4:0] weight_buffer_0_17_V_address0;
output   weight_buffer_0_17_V_ce0;
output   weight_buffer_0_17_V_we0;
output  [7:0] weight_buffer_0_17_V_d0;
output  [4:0] weight_buffer_0_18_V_address0;
output   weight_buffer_0_18_V_ce0;
output   weight_buffer_0_18_V_we0;
output  [7:0] weight_buffer_0_18_V_d0;
output  [4:0] weight_buffer_0_19_V_address0;
output   weight_buffer_0_19_V_ce0;
output   weight_buffer_0_19_V_we0;
output  [7:0] weight_buffer_0_19_V_d0;
output  [4:0] weight_buffer_0_20_V_address0;
output   weight_buffer_0_20_V_ce0;
output   weight_buffer_0_20_V_we0;
output  [7:0] weight_buffer_0_20_V_d0;
output  [4:0] weight_buffer_0_21_V_address0;
output   weight_buffer_0_21_V_ce0;
output   weight_buffer_0_21_V_we0;
output  [7:0] weight_buffer_0_21_V_d0;
output  [4:0] weight_buffer_0_22_V_address0;
output   weight_buffer_0_22_V_ce0;
output   weight_buffer_0_22_V_we0;
output  [7:0] weight_buffer_0_22_V_d0;
output  [4:0] weight_buffer_0_23_V_address0;
output   weight_buffer_0_23_V_ce0;
output   weight_buffer_0_23_V_we0;
output  [7:0] weight_buffer_0_23_V_d0;
output  [4:0] weight_buffer_0_24_V_address0;
output   weight_buffer_0_24_V_ce0;
output   weight_buffer_0_24_V_we0;
output  [7:0] weight_buffer_0_24_V_d0;
output  [4:0] weight_buffer_0_25_V_address0;
output   weight_buffer_0_25_V_ce0;
output   weight_buffer_0_25_V_we0;
output  [7:0] weight_buffer_0_25_V_d0;
output  [4:0] weight_buffer_0_26_V_address0;
output   weight_buffer_0_26_V_ce0;
output   weight_buffer_0_26_V_we0;
output  [7:0] weight_buffer_0_26_V_d0;
output  [4:0] weight_buffer_0_27_V_address0;
output   weight_buffer_0_27_V_ce0;
output   weight_buffer_0_27_V_we0;
output  [7:0] weight_buffer_0_27_V_d0;
output  [4:0] weight_buffer_0_28_V_address0;
output   weight_buffer_0_28_V_ce0;
output   weight_buffer_0_28_V_we0;
output  [7:0] weight_buffer_0_28_V_d0;
output  [4:0] weight_buffer_0_29_V_address0;
output   weight_buffer_0_29_V_ce0;
output   weight_buffer_0_29_V_we0;
output  [7:0] weight_buffer_0_29_V_d0;
output  [4:0] weight_buffer_0_30_V_address0;
output   weight_buffer_0_30_V_ce0;
output   weight_buffer_0_30_V_we0;
output  [7:0] weight_buffer_0_30_V_d0;
output  [4:0] weight_buffer_0_31_V_address0;
output   weight_buffer_0_31_V_ce0;
output   weight_buffer_0_31_V_we0;
output  [7:0] weight_buffer_0_31_V_d0;
output  [4:0] weight_buffer_1_0_V_address0;
output   weight_buffer_1_0_V_ce0;
output   weight_buffer_1_0_V_we0;
output  [7:0] weight_buffer_1_0_V_d0;
output  [4:0] weight_buffer_1_1_V_address0;
output   weight_buffer_1_1_V_ce0;
output   weight_buffer_1_1_V_we0;
output  [7:0] weight_buffer_1_1_V_d0;
output  [4:0] weight_buffer_1_2_V_address0;
output   weight_buffer_1_2_V_ce0;
output   weight_buffer_1_2_V_we0;
output  [7:0] weight_buffer_1_2_V_d0;
output  [4:0] weight_buffer_1_3_V_address0;
output   weight_buffer_1_3_V_ce0;
output   weight_buffer_1_3_V_we0;
output  [7:0] weight_buffer_1_3_V_d0;
output  [4:0] weight_buffer_1_4_V_address0;
output   weight_buffer_1_4_V_ce0;
output   weight_buffer_1_4_V_we0;
output  [7:0] weight_buffer_1_4_V_d0;
output  [4:0] weight_buffer_1_5_V_address0;
output   weight_buffer_1_5_V_ce0;
output   weight_buffer_1_5_V_we0;
output  [7:0] weight_buffer_1_5_V_d0;
output  [4:0] weight_buffer_1_6_V_address0;
output   weight_buffer_1_6_V_ce0;
output   weight_buffer_1_6_V_we0;
output  [7:0] weight_buffer_1_6_V_d0;
output  [4:0] weight_buffer_1_7_V_address0;
output   weight_buffer_1_7_V_ce0;
output   weight_buffer_1_7_V_we0;
output  [7:0] weight_buffer_1_7_V_d0;
output  [4:0] weight_buffer_1_8_V_address0;
output   weight_buffer_1_8_V_ce0;
output   weight_buffer_1_8_V_we0;
output  [7:0] weight_buffer_1_8_V_d0;
output  [4:0] weight_buffer_1_9_V_address0;
output   weight_buffer_1_9_V_ce0;
output   weight_buffer_1_9_V_we0;
output  [7:0] weight_buffer_1_9_V_d0;
output  [4:0] weight_buffer_1_10_V_address0;
output   weight_buffer_1_10_V_ce0;
output   weight_buffer_1_10_V_we0;
output  [7:0] weight_buffer_1_10_V_d0;
output  [4:0] weight_buffer_1_11_V_address0;
output   weight_buffer_1_11_V_ce0;
output   weight_buffer_1_11_V_we0;
output  [7:0] weight_buffer_1_11_V_d0;
output  [4:0] weight_buffer_1_12_V_address0;
output   weight_buffer_1_12_V_ce0;
output   weight_buffer_1_12_V_we0;
output  [7:0] weight_buffer_1_12_V_d0;
output  [4:0] weight_buffer_1_13_V_address0;
output   weight_buffer_1_13_V_ce0;
output   weight_buffer_1_13_V_we0;
output  [7:0] weight_buffer_1_13_V_d0;
output  [4:0] weight_buffer_1_14_V_address0;
output   weight_buffer_1_14_V_ce0;
output   weight_buffer_1_14_V_we0;
output  [7:0] weight_buffer_1_14_V_d0;
output  [4:0] weight_buffer_1_15_V_address0;
output   weight_buffer_1_15_V_ce0;
output   weight_buffer_1_15_V_we0;
output  [7:0] weight_buffer_1_15_V_d0;
output  [4:0] weight_buffer_1_16_V_address0;
output   weight_buffer_1_16_V_ce0;
output   weight_buffer_1_16_V_we0;
output  [7:0] weight_buffer_1_16_V_d0;
output  [4:0] weight_buffer_1_17_V_address0;
output   weight_buffer_1_17_V_ce0;
output   weight_buffer_1_17_V_we0;
output  [7:0] weight_buffer_1_17_V_d0;
output  [4:0] weight_buffer_1_18_V_address0;
output   weight_buffer_1_18_V_ce0;
output   weight_buffer_1_18_V_we0;
output  [7:0] weight_buffer_1_18_V_d0;
output  [4:0] weight_buffer_1_19_V_address0;
output   weight_buffer_1_19_V_ce0;
output   weight_buffer_1_19_V_we0;
output  [7:0] weight_buffer_1_19_V_d0;
output  [4:0] weight_buffer_1_20_V_address0;
output   weight_buffer_1_20_V_ce0;
output   weight_buffer_1_20_V_we0;
output  [7:0] weight_buffer_1_20_V_d0;
output  [4:0] weight_buffer_1_21_V_address0;
output   weight_buffer_1_21_V_ce0;
output   weight_buffer_1_21_V_we0;
output  [7:0] weight_buffer_1_21_V_d0;
output  [4:0] weight_buffer_1_22_V_address0;
output   weight_buffer_1_22_V_ce0;
output   weight_buffer_1_22_V_we0;
output  [7:0] weight_buffer_1_22_V_d0;
output  [4:0] weight_buffer_1_23_V_address0;
output   weight_buffer_1_23_V_ce0;
output   weight_buffer_1_23_V_we0;
output  [7:0] weight_buffer_1_23_V_d0;
output  [4:0] weight_buffer_1_24_V_address0;
output   weight_buffer_1_24_V_ce0;
output   weight_buffer_1_24_V_we0;
output  [7:0] weight_buffer_1_24_V_d0;
output  [4:0] weight_buffer_1_25_V_address0;
output   weight_buffer_1_25_V_ce0;
output   weight_buffer_1_25_V_we0;
output  [7:0] weight_buffer_1_25_V_d0;
output  [4:0] weight_buffer_1_26_V_address0;
output   weight_buffer_1_26_V_ce0;
output   weight_buffer_1_26_V_we0;
output  [7:0] weight_buffer_1_26_V_d0;
output  [4:0] weight_buffer_1_27_V_address0;
output   weight_buffer_1_27_V_ce0;
output   weight_buffer_1_27_V_we0;
output  [7:0] weight_buffer_1_27_V_d0;
output  [4:0] weight_buffer_1_28_V_address0;
output   weight_buffer_1_28_V_ce0;
output   weight_buffer_1_28_V_we0;
output  [7:0] weight_buffer_1_28_V_d0;
output  [4:0] weight_buffer_1_29_V_address0;
output   weight_buffer_1_29_V_ce0;
output   weight_buffer_1_29_V_we0;
output  [7:0] weight_buffer_1_29_V_d0;
output  [4:0] weight_buffer_1_30_V_address0;
output   weight_buffer_1_30_V_ce0;
output   weight_buffer_1_30_V_we0;
output  [7:0] weight_buffer_1_30_V_d0;
output  [4:0] weight_buffer_1_31_V_address0;
output   weight_buffer_1_31_V_ce0;
output   weight_buffer_1_31_V_we0;
output  [7:0] weight_buffer_1_31_V_d0;
output  [4:0] weight_buffer_2_0_V_address0;
output   weight_buffer_2_0_V_ce0;
output   weight_buffer_2_0_V_we0;
output  [7:0] weight_buffer_2_0_V_d0;
output  [4:0] weight_buffer_2_1_V_address0;
output   weight_buffer_2_1_V_ce0;
output   weight_buffer_2_1_V_we0;
output  [7:0] weight_buffer_2_1_V_d0;
output  [4:0] weight_buffer_2_2_V_address0;
output   weight_buffer_2_2_V_ce0;
output   weight_buffer_2_2_V_we0;
output  [7:0] weight_buffer_2_2_V_d0;
output  [4:0] weight_buffer_2_3_V_address0;
output   weight_buffer_2_3_V_ce0;
output   weight_buffer_2_3_V_we0;
output  [7:0] weight_buffer_2_3_V_d0;
output  [4:0] weight_buffer_2_4_V_address0;
output   weight_buffer_2_4_V_ce0;
output   weight_buffer_2_4_V_we0;
output  [7:0] weight_buffer_2_4_V_d0;
output  [4:0] weight_buffer_2_5_V_address0;
output   weight_buffer_2_5_V_ce0;
output   weight_buffer_2_5_V_we0;
output  [7:0] weight_buffer_2_5_V_d0;
output  [4:0] weight_buffer_2_6_V_address0;
output   weight_buffer_2_6_V_ce0;
output   weight_buffer_2_6_V_we0;
output  [7:0] weight_buffer_2_6_V_d0;
output  [4:0] weight_buffer_2_7_V_address0;
output   weight_buffer_2_7_V_ce0;
output   weight_buffer_2_7_V_we0;
output  [7:0] weight_buffer_2_7_V_d0;
output  [4:0] weight_buffer_2_8_V_address0;
output   weight_buffer_2_8_V_ce0;
output   weight_buffer_2_8_V_we0;
output  [7:0] weight_buffer_2_8_V_d0;
output  [4:0] weight_buffer_2_9_V_address0;
output   weight_buffer_2_9_V_ce0;
output   weight_buffer_2_9_V_we0;
output  [7:0] weight_buffer_2_9_V_d0;
output  [4:0] weight_buffer_2_10_V_address0;
output   weight_buffer_2_10_V_ce0;
output   weight_buffer_2_10_V_we0;
output  [7:0] weight_buffer_2_10_V_d0;
output  [4:0] weight_buffer_2_11_V_address0;
output   weight_buffer_2_11_V_ce0;
output   weight_buffer_2_11_V_we0;
output  [7:0] weight_buffer_2_11_V_d0;
output  [4:0] weight_buffer_2_12_V_address0;
output   weight_buffer_2_12_V_ce0;
output   weight_buffer_2_12_V_we0;
output  [7:0] weight_buffer_2_12_V_d0;
output  [4:0] weight_buffer_2_13_V_address0;
output   weight_buffer_2_13_V_ce0;
output   weight_buffer_2_13_V_we0;
output  [7:0] weight_buffer_2_13_V_d0;
output  [4:0] weight_buffer_2_14_V_address0;
output   weight_buffer_2_14_V_ce0;
output   weight_buffer_2_14_V_we0;
output  [7:0] weight_buffer_2_14_V_d0;
output  [4:0] weight_buffer_2_15_V_address0;
output   weight_buffer_2_15_V_ce0;
output   weight_buffer_2_15_V_we0;
output  [7:0] weight_buffer_2_15_V_d0;
output  [4:0] weight_buffer_2_16_V_address0;
output   weight_buffer_2_16_V_ce0;
output   weight_buffer_2_16_V_we0;
output  [7:0] weight_buffer_2_16_V_d0;
output  [4:0] weight_buffer_2_17_V_address0;
output   weight_buffer_2_17_V_ce0;
output   weight_buffer_2_17_V_we0;
output  [7:0] weight_buffer_2_17_V_d0;
output  [4:0] weight_buffer_2_18_V_address0;
output   weight_buffer_2_18_V_ce0;
output   weight_buffer_2_18_V_we0;
output  [7:0] weight_buffer_2_18_V_d0;
output  [4:0] weight_buffer_2_19_V_address0;
output   weight_buffer_2_19_V_ce0;
output   weight_buffer_2_19_V_we0;
output  [7:0] weight_buffer_2_19_V_d0;
output  [4:0] weight_buffer_2_20_V_address0;
output   weight_buffer_2_20_V_ce0;
output   weight_buffer_2_20_V_we0;
output  [7:0] weight_buffer_2_20_V_d0;
output  [4:0] weight_buffer_2_21_V_address0;
output   weight_buffer_2_21_V_ce0;
output   weight_buffer_2_21_V_we0;
output  [7:0] weight_buffer_2_21_V_d0;
output  [4:0] weight_buffer_2_22_V_address0;
output   weight_buffer_2_22_V_ce0;
output   weight_buffer_2_22_V_we0;
output  [7:0] weight_buffer_2_22_V_d0;
output  [4:0] weight_buffer_2_23_V_address0;
output   weight_buffer_2_23_V_ce0;
output   weight_buffer_2_23_V_we0;
output  [7:0] weight_buffer_2_23_V_d0;
output  [4:0] weight_buffer_2_24_V_address0;
output   weight_buffer_2_24_V_ce0;
output   weight_buffer_2_24_V_we0;
output  [7:0] weight_buffer_2_24_V_d0;
output  [4:0] weight_buffer_2_25_V_address0;
output   weight_buffer_2_25_V_ce0;
output   weight_buffer_2_25_V_we0;
output  [7:0] weight_buffer_2_25_V_d0;
output  [4:0] weight_buffer_2_26_V_address0;
output   weight_buffer_2_26_V_ce0;
output   weight_buffer_2_26_V_we0;
output  [7:0] weight_buffer_2_26_V_d0;
output  [4:0] weight_buffer_2_27_V_address0;
output   weight_buffer_2_27_V_ce0;
output   weight_buffer_2_27_V_we0;
output  [7:0] weight_buffer_2_27_V_d0;
output  [4:0] weight_buffer_2_28_V_address0;
output   weight_buffer_2_28_V_ce0;
output   weight_buffer_2_28_V_we0;
output  [7:0] weight_buffer_2_28_V_d0;
output  [4:0] weight_buffer_2_29_V_address0;
output   weight_buffer_2_29_V_ce0;
output   weight_buffer_2_29_V_we0;
output  [7:0] weight_buffer_2_29_V_d0;
output  [4:0] weight_buffer_2_30_V_address0;
output   weight_buffer_2_30_V_ce0;
output   weight_buffer_2_30_V_we0;
output  [7:0] weight_buffer_2_30_V_d0;
output  [4:0] weight_buffer_2_31_V_address0;
output   weight_buffer_2_31_V_ce0;
output   weight_buffer_2_31_V_we0;
output  [7:0] weight_buffer_2_31_V_d0;
output  [4:0] weight_buffer_3_0_V_address0;
output   weight_buffer_3_0_V_ce0;
output   weight_buffer_3_0_V_we0;
output  [7:0] weight_buffer_3_0_V_d0;
output  [4:0] weight_buffer_3_1_V_address0;
output   weight_buffer_3_1_V_ce0;
output   weight_buffer_3_1_V_we0;
output  [7:0] weight_buffer_3_1_V_d0;
output  [4:0] weight_buffer_3_2_V_address0;
output   weight_buffer_3_2_V_ce0;
output   weight_buffer_3_2_V_we0;
output  [7:0] weight_buffer_3_2_V_d0;
output  [4:0] weight_buffer_3_3_V_address0;
output   weight_buffer_3_3_V_ce0;
output   weight_buffer_3_3_V_we0;
output  [7:0] weight_buffer_3_3_V_d0;
output  [4:0] weight_buffer_3_4_V_address0;
output   weight_buffer_3_4_V_ce0;
output   weight_buffer_3_4_V_we0;
output  [7:0] weight_buffer_3_4_V_d0;
output  [4:0] weight_buffer_3_5_V_address0;
output   weight_buffer_3_5_V_ce0;
output   weight_buffer_3_5_V_we0;
output  [7:0] weight_buffer_3_5_V_d0;
output  [4:0] weight_buffer_3_6_V_address0;
output   weight_buffer_3_6_V_ce0;
output   weight_buffer_3_6_V_we0;
output  [7:0] weight_buffer_3_6_V_d0;
output  [4:0] weight_buffer_3_7_V_address0;
output   weight_buffer_3_7_V_ce0;
output   weight_buffer_3_7_V_we0;
output  [7:0] weight_buffer_3_7_V_d0;
output  [4:0] weight_buffer_3_8_V_address0;
output   weight_buffer_3_8_V_ce0;
output   weight_buffer_3_8_V_we0;
output  [7:0] weight_buffer_3_8_V_d0;
output  [4:0] weight_buffer_3_9_V_address0;
output   weight_buffer_3_9_V_ce0;
output   weight_buffer_3_9_V_we0;
output  [7:0] weight_buffer_3_9_V_d0;
output  [4:0] weight_buffer_3_10_V_address0;
output   weight_buffer_3_10_V_ce0;
output   weight_buffer_3_10_V_we0;
output  [7:0] weight_buffer_3_10_V_d0;
output  [4:0] weight_buffer_3_11_V_address0;
output   weight_buffer_3_11_V_ce0;
output   weight_buffer_3_11_V_we0;
output  [7:0] weight_buffer_3_11_V_d0;
output  [4:0] weight_buffer_3_12_V_address0;
output   weight_buffer_3_12_V_ce0;
output   weight_buffer_3_12_V_we0;
output  [7:0] weight_buffer_3_12_V_d0;
output  [4:0] weight_buffer_3_13_V_address0;
output   weight_buffer_3_13_V_ce0;
output   weight_buffer_3_13_V_we0;
output  [7:0] weight_buffer_3_13_V_d0;
output  [4:0] weight_buffer_3_14_V_address0;
output   weight_buffer_3_14_V_ce0;
output   weight_buffer_3_14_V_we0;
output  [7:0] weight_buffer_3_14_V_d0;
output  [4:0] weight_buffer_3_15_V_address0;
output   weight_buffer_3_15_V_ce0;
output   weight_buffer_3_15_V_we0;
output  [7:0] weight_buffer_3_15_V_d0;
output  [4:0] weight_buffer_3_16_V_address0;
output   weight_buffer_3_16_V_ce0;
output   weight_buffer_3_16_V_we0;
output  [7:0] weight_buffer_3_16_V_d0;
output  [4:0] weight_buffer_3_17_V_address0;
output   weight_buffer_3_17_V_ce0;
output   weight_buffer_3_17_V_we0;
output  [7:0] weight_buffer_3_17_V_d0;
output  [4:0] weight_buffer_3_18_V_address0;
output   weight_buffer_3_18_V_ce0;
output   weight_buffer_3_18_V_we0;
output  [7:0] weight_buffer_3_18_V_d0;
output  [4:0] weight_buffer_3_19_V_address0;
output   weight_buffer_3_19_V_ce0;
output   weight_buffer_3_19_V_we0;
output  [7:0] weight_buffer_3_19_V_d0;
output  [4:0] weight_buffer_3_20_V_address0;
output   weight_buffer_3_20_V_ce0;
output   weight_buffer_3_20_V_we0;
output  [7:0] weight_buffer_3_20_V_d0;
output  [4:0] weight_buffer_3_21_V_address0;
output   weight_buffer_3_21_V_ce0;
output   weight_buffer_3_21_V_we0;
output  [7:0] weight_buffer_3_21_V_d0;
output  [4:0] weight_buffer_3_22_V_address0;
output   weight_buffer_3_22_V_ce0;
output   weight_buffer_3_22_V_we0;
output  [7:0] weight_buffer_3_22_V_d0;
output  [4:0] weight_buffer_3_23_V_address0;
output   weight_buffer_3_23_V_ce0;
output   weight_buffer_3_23_V_we0;
output  [7:0] weight_buffer_3_23_V_d0;
output  [4:0] weight_buffer_3_24_V_address0;
output   weight_buffer_3_24_V_ce0;
output   weight_buffer_3_24_V_we0;
output  [7:0] weight_buffer_3_24_V_d0;
output  [4:0] weight_buffer_3_25_V_address0;
output   weight_buffer_3_25_V_ce0;
output   weight_buffer_3_25_V_we0;
output  [7:0] weight_buffer_3_25_V_d0;
output  [4:0] weight_buffer_3_26_V_address0;
output   weight_buffer_3_26_V_ce0;
output   weight_buffer_3_26_V_we0;
output  [7:0] weight_buffer_3_26_V_d0;
output  [4:0] weight_buffer_3_27_V_address0;
output   weight_buffer_3_27_V_ce0;
output   weight_buffer_3_27_V_we0;
output  [7:0] weight_buffer_3_27_V_d0;
output  [4:0] weight_buffer_3_28_V_address0;
output   weight_buffer_3_28_V_ce0;
output   weight_buffer_3_28_V_we0;
output  [7:0] weight_buffer_3_28_V_d0;
output  [4:0] weight_buffer_3_29_V_address0;
output   weight_buffer_3_29_V_ce0;
output   weight_buffer_3_29_V_we0;
output  [7:0] weight_buffer_3_29_V_d0;
output  [4:0] weight_buffer_3_30_V_address0;
output   weight_buffer_3_30_V_ce0;
output   weight_buffer_3_30_V_we0;
output  [7:0] weight_buffer_3_30_V_d0;
output  [4:0] weight_buffer_3_31_V_address0;
output   weight_buffer_3_31_V_ce0;
output   weight_buffer_3_31_V_we0;
output  [7:0] weight_buffer_3_31_V_d0;
input  [31:0] TN;
input  [31:0] TM;
input  [31:0] k;
input  [31:0] offset;
input   enable;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg m_axi_weight_ARVALID;
reg m_axi_weight_RREADY;
reg weight_buffer_0_0_V_ce0;
reg weight_buffer_0_0_V_we0;
reg weight_buffer_0_1_V_ce0;
reg weight_buffer_0_1_V_we0;
reg weight_buffer_0_2_V_ce0;
reg weight_buffer_0_2_V_we0;
reg weight_buffer_0_3_V_ce0;
reg weight_buffer_0_3_V_we0;
reg weight_buffer_0_4_V_ce0;
reg weight_buffer_0_4_V_we0;
reg weight_buffer_0_5_V_ce0;
reg weight_buffer_0_5_V_we0;
reg weight_buffer_0_6_V_ce0;
reg weight_buffer_0_6_V_we0;
reg weight_buffer_0_7_V_ce0;
reg weight_buffer_0_7_V_we0;
reg weight_buffer_0_8_V_ce0;
reg weight_buffer_0_8_V_we0;
reg weight_buffer_0_9_V_ce0;
reg weight_buffer_0_9_V_we0;
reg weight_buffer_0_10_V_ce0;
reg weight_buffer_0_10_V_we0;
reg weight_buffer_0_11_V_ce0;
reg weight_buffer_0_11_V_we0;
reg weight_buffer_0_12_V_ce0;
reg weight_buffer_0_12_V_we0;
reg weight_buffer_0_13_V_ce0;
reg weight_buffer_0_13_V_we0;
reg weight_buffer_0_14_V_ce0;
reg weight_buffer_0_14_V_we0;
reg weight_buffer_0_15_V_ce0;
reg weight_buffer_0_15_V_we0;
reg weight_buffer_0_16_V_ce0;
reg weight_buffer_0_16_V_we0;
reg weight_buffer_0_17_V_ce0;
reg weight_buffer_0_17_V_we0;
reg weight_buffer_0_18_V_ce0;
reg weight_buffer_0_18_V_we0;
reg weight_buffer_0_19_V_ce0;
reg weight_buffer_0_19_V_we0;
reg weight_buffer_0_20_V_ce0;
reg weight_buffer_0_20_V_we0;
reg weight_buffer_0_21_V_ce0;
reg weight_buffer_0_21_V_we0;
reg weight_buffer_0_22_V_ce0;
reg weight_buffer_0_22_V_we0;
reg weight_buffer_0_23_V_ce0;
reg weight_buffer_0_23_V_we0;
reg weight_buffer_0_24_V_ce0;
reg weight_buffer_0_24_V_we0;
reg weight_buffer_0_25_V_ce0;
reg weight_buffer_0_25_V_we0;
reg weight_buffer_0_26_V_ce0;
reg weight_buffer_0_26_V_we0;
reg weight_buffer_0_27_V_ce0;
reg weight_buffer_0_27_V_we0;
reg weight_buffer_0_28_V_ce0;
reg weight_buffer_0_28_V_we0;
reg weight_buffer_0_29_V_ce0;
reg weight_buffer_0_29_V_we0;
reg weight_buffer_0_30_V_ce0;
reg weight_buffer_0_30_V_we0;
reg weight_buffer_0_31_V_ce0;
reg weight_buffer_0_31_V_we0;
reg weight_buffer_1_0_V_ce0;
reg weight_buffer_1_0_V_we0;
reg weight_buffer_1_1_V_ce0;
reg weight_buffer_1_1_V_we0;
reg weight_buffer_1_2_V_ce0;
reg weight_buffer_1_2_V_we0;
reg weight_buffer_1_3_V_ce0;
reg weight_buffer_1_3_V_we0;
reg weight_buffer_1_4_V_ce0;
reg weight_buffer_1_4_V_we0;
reg weight_buffer_1_5_V_ce0;
reg weight_buffer_1_5_V_we0;
reg weight_buffer_1_6_V_ce0;
reg weight_buffer_1_6_V_we0;
reg weight_buffer_1_7_V_ce0;
reg weight_buffer_1_7_V_we0;
reg weight_buffer_1_8_V_ce0;
reg weight_buffer_1_8_V_we0;
reg weight_buffer_1_9_V_ce0;
reg weight_buffer_1_9_V_we0;
reg weight_buffer_1_10_V_ce0;
reg weight_buffer_1_10_V_we0;
reg weight_buffer_1_11_V_ce0;
reg weight_buffer_1_11_V_we0;
reg weight_buffer_1_12_V_ce0;
reg weight_buffer_1_12_V_we0;
reg weight_buffer_1_13_V_ce0;
reg weight_buffer_1_13_V_we0;
reg weight_buffer_1_14_V_ce0;
reg weight_buffer_1_14_V_we0;
reg weight_buffer_1_15_V_ce0;
reg weight_buffer_1_15_V_we0;
reg weight_buffer_1_16_V_ce0;
reg weight_buffer_1_16_V_we0;
reg weight_buffer_1_17_V_ce0;
reg weight_buffer_1_17_V_we0;
reg weight_buffer_1_18_V_ce0;
reg weight_buffer_1_18_V_we0;
reg weight_buffer_1_19_V_ce0;
reg weight_buffer_1_19_V_we0;
reg weight_buffer_1_20_V_ce0;
reg weight_buffer_1_20_V_we0;
reg weight_buffer_1_21_V_ce0;
reg weight_buffer_1_21_V_we0;
reg weight_buffer_1_22_V_ce0;
reg weight_buffer_1_22_V_we0;
reg weight_buffer_1_23_V_ce0;
reg weight_buffer_1_23_V_we0;
reg weight_buffer_1_24_V_ce0;
reg weight_buffer_1_24_V_we0;
reg weight_buffer_1_25_V_ce0;
reg weight_buffer_1_25_V_we0;
reg weight_buffer_1_26_V_ce0;
reg weight_buffer_1_26_V_we0;
reg weight_buffer_1_27_V_ce0;
reg weight_buffer_1_27_V_we0;
reg weight_buffer_1_28_V_ce0;
reg weight_buffer_1_28_V_we0;
reg weight_buffer_1_29_V_ce0;
reg weight_buffer_1_29_V_we0;
reg weight_buffer_1_30_V_ce0;
reg weight_buffer_1_30_V_we0;
reg weight_buffer_1_31_V_ce0;
reg weight_buffer_1_31_V_we0;
reg weight_buffer_2_0_V_ce0;
reg weight_buffer_2_0_V_we0;
reg weight_buffer_2_1_V_ce0;
reg weight_buffer_2_1_V_we0;
reg weight_buffer_2_2_V_ce0;
reg weight_buffer_2_2_V_we0;
reg weight_buffer_2_3_V_ce0;
reg weight_buffer_2_3_V_we0;
reg weight_buffer_2_4_V_ce0;
reg weight_buffer_2_4_V_we0;
reg weight_buffer_2_5_V_ce0;
reg weight_buffer_2_5_V_we0;
reg weight_buffer_2_6_V_ce0;
reg weight_buffer_2_6_V_we0;
reg weight_buffer_2_7_V_ce0;
reg weight_buffer_2_7_V_we0;
reg weight_buffer_2_8_V_ce0;
reg weight_buffer_2_8_V_we0;
reg weight_buffer_2_9_V_ce0;
reg weight_buffer_2_9_V_we0;
reg weight_buffer_2_10_V_ce0;
reg weight_buffer_2_10_V_we0;
reg weight_buffer_2_11_V_ce0;
reg weight_buffer_2_11_V_we0;
reg weight_buffer_2_12_V_ce0;
reg weight_buffer_2_12_V_we0;
reg weight_buffer_2_13_V_ce0;
reg weight_buffer_2_13_V_we0;
reg weight_buffer_2_14_V_ce0;
reg weight_buffer_2_14_V_we0;
reg weight_buffer_2_15_V_ce0;
reg weight_buffer_2_15_V_we0;
reg weight_buffer_2_16_V_ce0;
reg weight_buffer_2_16_V_we0;
reg weight_buffer_2_17_V_ce0;
reg weight_buffer_2_17_V_we0;
reg weight_buffer_2_18_V_ce0;
reg weight_buffer_2_18_V_we0;
reg weight_buffer_2_19_V_ce0;
reg weight_buffer_2_19_V_we0;
reg weight_buffer_2_20_V_ce0;
reg weight_buffer_2_20_V_we0;
reg weight_buffer_2_21_V_ce0;
reg weight_buffer_2_21_V_we0;
reg weight_buffer_2_22_V_ce0;
reg weight_buffer_2_22_V_we0;
reg weight_buffer_2_23_V_ce0;
reg weight_buffer_2_23_V_we0;
reg weight_buffer_2_24_V_ce0;
reg weight_buffer_2_24_V_we0;
reg weight_buffer_2_25_V_ce0;
reg weight_buffer_2_25_V_we0;
reg weight_buffer_2_26_V_ce0;
reg weight_buffer_2_26_V_we0;
reg weight_buffer_2_27_V_ce0;
reg weight_buffer_2_27_V_we0;
reg weight_buffer_2_28_V_ce0;
reg weight_buffer_2_28_V_we0;
reg weight_buffer_2_29_V_ce0;
reg weight_buffer_2_29_V_we0;
reg weight_buffer_2_30_V_ce0;
reg weight_buffer_2_30_V_we0;
reg weight_buffer_2_31_V_ce0;
reg weight_buffer_2_31_V_we0;
reg weight_buffer_3_0_V_ce0;
reg weight_buffer_3_0_V_we0;
reg weight_buffer_3_1_V_ce0;
reg weight_buffer_3_1_V_we0;
reg weight_buffer_3_2_V_ce0;
reg weight_buffer_3_2_V_we0;
reg weight_buffer_3_3_V_ce0;
reg weight_buffer_3_3_V_we0;
reg weight_buffer_3_4_V_ce0;
reg weight_buffer_3_4_V_we0;
reg weight_buffer_3_5_V_ce0;
reg weight_buffer_3_5_V_we0;
reg weight_buffer_3_6_V_ce0;
reg weight_buffer_3_6_V_we0;
reg weight_buffer_3_7_V_ce0;
reg weight_buffer_3_7_V_we0;
reg weight_buffer_3_8_V_ce0;
reg weight_buffer_3_8_V_we0;
reg weight_buffer_3_9_V_ce0;
reg weight_buffer_3_9_V_we0;
reg weight_buffer_3_10_V_ce0;
reg weight_buffer_3_10_V_we0;
reg weight_buffer_3_11_V_ce0;
reg weight_buffer_3_11_V_we0;
reg weight_buffer_3_12_V_ce0;
reg weight_buffer_3_12_V_we0;
reg weight_buffer_3_13_V_ce0;
reg weight_buffer_3_13_V_we0;
reg weight_buffer_3_14_V_ce0;
reg weight_buffer_3_14_V_we0;
reg weight_buffer_3_15_V_ce0;
reg weight_buffer_3_15_V_we0;
reg weight_buffer_3_16_V_ce0;
reg weight_buffer_3_16_V_we0;
reg weight_buffer_3_17_V_ce0;
reg weight_buffer_3_17_V_we0;
reg weight_buffer_3_18_V_ce0;
reg weight_buffer_3_18_V_we0;
reg weight_buffer_3_19_V_ce0;
reg weight_buffer_3_19_V_we0;
reg weight_buffer_3_20_V_ce0;
reg weight_buffer_3_20_V_we0;
reg weight_buffer_3_21_V_ce0;
reg weight_buffer_3_21_V_we0;
reg weight_buffer_3_22_V_ce0;
reg weight_buffer_3_22_V_we0;
reg weight_buffer_3_23_V_ce0;
reg weight_buffer_3_23_V_we0;
reg weight_buffer_3_24_V_ce0;
reg weight_buffer_3_24_V_we0;
reg weight_buffer_3_25_V_ce0;
reg weight_buffer_3_25_V_we0;
reg weight_buffer_3_26_V_ce0;
reg weight_buffer_3_26_V_we0;
reg weight_buffer_3_27_V_ce0;
reg weight_buffer_3_27_V_we0;
reg weight_buffer_3_28_V_ce0;
reg weight_buffer_3_28_V_we0;
reg weight_buffer_3_29_V_ce0;
reg weight_buffer_3_29_V_we0;
reg weight_buffer_3_30_V_ce0;
reg weight_buffer_3_30_V_we0;
reg weight_buffer_3_31_V_ce0;
reg weight_buffer_3_31_V_we0;

(* fsm_encoding = "none" *) reg   [16:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [11:0] weight_tmp_buffer_address0;
reg    weight_tmp_buffer_ce0;
reg    weight_tmp_buffer_we0;
wire   [31:0] weight_tmp_buffer_q0;
reg    weight_blk_n_AR;
wire    ap_CS_fsm_state2;
reg    weight_blk_n_R;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0;
reg   [0:0] exitcond2_reg_3026;
reg   [11:0] indvar_reg_2149;
reg   [11:0] indvar_reg_2149_pp0_iter1_reg;
wire    ap_block_state9_pp0_stage0_iter0;
reg    ap_block_state10_pp0_stage0_iter1;
wire    ap_block_state11_pp0_stage0_iter2;
reg    ap_block_pp0_stage0_11001;
reg   [127:0] indvar_flatten1_reg_2161;
reg   [30:0] tm_reg_2172;
reg   [31:0] weight_tmp_offset_reg_2183;
reg   [95:0] indvar_flatten2_reg_2194;
reg   [30:0] tn_reg_2205;
reg   [31:0] weight_tmp_offset_1_reg_2216;
reg   [63:0] indvar_flatten_reg_2227;
reg   [30:0] kr_reg_2238;
reg   [31:0] weight_tmp_offset_2_reg_2249;
reg   [31:0] kc_reg_2260;
reg   [31:0] weight_tmp_offset_3_reg_2271;
wire   [0:0] enable_read_read_fu_416_p2;
reg   [31:0] weight_addr_reg_3020;
wire   [0:0] exitcond2_fu_2306_p2;
reg   [0:0] exitcond2_reg_3026_pp0_iter1_reg;
wire   [11:0] indvar_next_fu_2312_p2;
reg   [11:0] indvar_next_reg_3030;
reg    ap_enable_reg_pp0_iter0;
reg   [31:0] weight_addr_read_reg_3035;
wire   [63:0] bound_fu_2326_p2;
reg   [63:0] bound_reg_3040;
wire    ap_CS_fsm_state12;
wire   [30:0] smax1_fu_2340_p3;
reg   [30:0] smax1_reg_3047;
wire    ap_CS_fsm_state13;
wire   [0:0] tmp_4_fu_2360_p2;
reg   [0:0] tmp_4_reg_3062;
wire    ap_CS_fsm_state14;
wire   [95:0] grp_fu_2354_p2;
reg   [95:0] bound4_reg_3067;
wire  signed [31:0] tmp_5_fu_2379_p2;
reg  signed [31:0] tmp_5_reg_3073;
wire    ap_CS_fsm_state15;
wire   [31:0] tmp_8_fu_2399_p2;
reg   [31:0] tmp_8_reg_3089;
wire    ap_CS_fsm_state16;
wire   [127:0] grp_fu_2390_p2;
reg   [127:0] bound1_reg_3094;
wire   [0:0] exitcond_mid_fu_2404_p2;
reg   [0:0] exitcond_mid_reg_3099;
wire   [0:0] exitcond_flatten_mid_fu_2409_p2;
reg   [0:0] exitcond_flatten_mid_reg_3105;
wire   [0:0] exitcond_flatten2_fu_2414_p2;
reg   [0:0] exitcond_flatten2_reg_3110;
wire    ap_CS_fsm_pp1_stage0;
wire    ap_block_state17_pp1_stage0_iter0;
wire    ap_block_state19_pp1_stage0_iter1;
wire    ap_block_pp1_stage0_11001;
wire   [127:0] indvar_flatten_next2_fu_2419_p2;
reg   [127:0] indvar_flatten_next2_reg_3114;
reg    ap_enable_reg_pp1_iter0;
wire   [30:0] tm_t_mid2_v_fu_2473_p3;
reg   [30:0] tm_t_mid2_v_reg_3119;
wire   [4:0] tmp_7_fu_2481_p1;
reg   [4:0] tmp_7_reg_3124;
wire   [31:0] weight_tmp_offset_mi_fu_2521_p3;
reg   [31:0] weight_tmp_offset_mi_reg_3128;
wire   [30:0] kr_mid_fu_2546_p3;
reg   [30:0] kr_mid_reg_3133;
wire   [1:0] tn_t_mid2_fu_2574_p3;
reg   [1:0] tn_t_mid2_reg_3139;
wire   [0:0] exitcond_mid2_fu_2582_p3;
reg   [0:0] exitcond_mid2_reg_3143;
wire   [30:0] tn_mid2_fu_2589_p3;
reg   [30:0] tn_mid2_reg_3148;
wire   [31:0] weight_tmp_offset_1_1_fu_2597_p3;
reg   [31:0] weight_tmp_offset_1_1_reg_3153;
wire   [31:0] kc_mid2_fu_2622_p3;
reg   [31:0] kc_mid2_reg_3158;
wire  signed [31:0] weight_tmp_offset_3_2_fu_2630_p3;
reg  signed [31:0] weight_tmp_offset_3_2_reg_3163;
wire   [31:0] weight_tmp_offset_2_2_fu_2638_p3;
reg   [31:0] weight_tmp_offset_2_2_reg_3169;
wire   [5:0] tmp_18_fu_2646_p1;
reg   [5:0] tmp_18_reg_3174;
wire   [63:0] indvar_flatten_next_fu_2656_p3;
reg   [63:0] indvar_flatten_next_reg_3179;
wire   [95:0] indvar_flatten_next1_fu_2670_p3;
reg   [95:0] indvar_flatten_next1_reg_3184;
wire   [30:0] tmp_7_mid2_fu_2683_p3;
reg   [30:0] tmp_7_mid2_reg_3189;
wire    ap_CS_fsm_pp1_stage1;
wire    ap_block_state18_pp1_stage1_iter0;
wire    ap_block_pp1_stage1_11001;
wire   [5:0] tmp_15_fu_2711_p2;
reg   [5:0] tmp_15_reg_3194;
wire   [31:0] tmp_12_fu_2720_p2;
reg   [31:0] tmp_12_reg_3204;
wire   [31:0] kc_1_fu_2725_p2;
reg   [31:0] kc_1_reg_3209;
wire    ap_CS_fsm_state8;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state9;
reg    ap_enable_reg_pp0_iter2;
wire    ap_block_pp1_stage0_subdone;
reg    ap_condition_pp1_exit_iter0_state17;
reg    ap_enable_reg_pp1_iter1;
wire    ap_block_pp1_stage1_subdone;
reg   [11:0] ap_phi_mux_indvar_phi_fu_2153_p4;
reg   [127:0] ap_phi_mux_indvar_flatten1_phi_fu_2165_p4;
wire    ap_block_pp1_stage0;
reg   [30:0] ap_phi_mux_tm_phi_fu_2176_p4;
reg   [31:0] ap_phi_mux_weight_tmp_offset_phi_fu_2187_p4;
reg   [95:0] ap_phi_mux_indvar_flatten2_phi_fu_2198_p4;
reg   [30:0] ap_phi_mux_tn_phi_fu_2209_p4;
reg   [31:0] ap_phi_mux_weight_tmp_offset_1_phi_fu_2220_p4;
reg   [63:0] ap_phi_mux_indvar_flatten_phi_fu_2231_p4;
reg   [30:0] ap_phi_mux_kr_phi_fu_2242_p4;
reg   [31:0] ap_phi_mux_weight_tmp_offset_2_phi_fu_2253_p4;
reg   [31:0] ap_phi_mux_kc_phi_fu_2264_p4;
reg   [31:0] ap_phi_mux_weight_tmp_offset_3_phi_fu_2275_p4;
wire   [63:0] indvar3_fu_2318_p1;
wire  signed [63:0] tmp_11_fu_2716_p1;
wire    ap_block_pp1_stage1;
wire   [63:0] tmp_15_cast_fu_2730_p1;
wire  signed [63:0] sum_cast_fu_2296_p1;
reg    ap_reg_ioackin_m_axi_weight_ARREADY;
reg    ap_sig_ioackin_m_axi_weight_ARREADY;
wire   [7:0] tmp_19_fu_2861_p1;
wire  signed [32:0] tmp_cast_fu_2282_p1;
wire   [32:0] sext_cast_fu_2286_p1;
wire   [32:0] sum_fu_2290_p2;
wire  signed [31:0] cast_fu_2323_p0;
wire   [31:0] bound_fu_2326_p0;
wire   [63:0] cast_fu_2323_p1;
wire   [31:0] bound_fu_2326_p1;
wire   [0:0] tmp_6_fu_2332_p2;
wire   [30:0] tmp_2_fu_2337_p1;
wire   [63:0] grp_fu_2354_p0;
wire   [31:0] grp_fu_2354_p1;
wire  signed [31:0] tmp_4_fu_2360_p0;
wire  signed [31:0] tmp_fu_2365_p0;
wire   [30:0] tmp_fu_2365_p1;
wire   [30:0] smax_fu_2368_p3;
wire  signed [31:0] tmp_5_fu_2379_p0;
wire   [30:0] tmp_5_fu_2379_p1;
wire   [95:0] grp_fu_2390_p0;
wire   [31:0] grp_fu_2390_p1;
wire   [30:0] tmp_8_fu_2399_p1;
wire  signed [31:0] exitcond_mid_fu_2404_p0;
wire   [0:0] exitcond_flatten_fu_2436_p2;
wire   [31:0] weight_tmp_offset_4_s_fu_2431_p2;
wire   [30:0] tm_1_fu_2425_p2;
wire   [1:0] tmp_9_fu_2485_p1;
wire  signed [31:0] exitcond_fu_2497_p1;
wire   [0:0] exitcond_fu_2497_p2;
wire   [0:0] exitcond_flatten1_fu_2509_p2;
wire   [30:0] tn_mid_fu_2441_p3;
wire   [31:0] weight_tmp_offset_1_s_fu_2449_p3;
wire   [0:0] exitcond_flatten_mid_2_fu_2514_p3;
wire   [0:0] tmp_1_fu_2540_p2;
wire   [31:0] tmp_2_dup_fu_2535_p2;
wire   [31:0] weight_tmp_offset_2_s_fu_2457_p3;
wire   [31:0] weight_tmp_offset_3_s_fu_2465_p3;
wire   [30:0] tn_1_fu_2529_p2;
wire   [1:0] tmp_10_fu_2570_p1;
wire   [1:0] tn_t_mid_fu_2489_p3;
wire   [0:0] exitcond_mid1_fu_2502_p3;
wire   [31:0] weight_tmp_offset_2_1_fu_2554_p3;
wire  signed [31:0] tmp_3_dup_fu_2605_p1;
wire   [0:0] tmp_3_fu_2610_p2;
wire   [0:0] tmp_13_fu_2616_p2;
wire   [31:0] tmp_3_dup_fu_2605_p2;
wire   [31:0] weight_tmp_offset_3_1_fu_2562_p3;
wire   [63:0] indvar_flatten_op_fu_2650_p2;
wire   [95:0] indvar_flatten23_op_fu_2664_p2;
wire   [30:0] kr_1_fu_2678_p2;
wire   [3:0] tmp_17_fu_2693_p1;
wire   [5:0] p_shl_cast_fu_2697_p3;
wire   [5:0] tmp_16_fu_2689_p1;
wire   [5:0] tmp_14_fu_2705_p2;
wire    ap_CS_fsm_state20;
reg   [16:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_idle_pp1;
wire    ap_enable_pp1;
wire   [95:0] grp_fu_2354_p00;
wire   [95:0] grp_fu_2354_p10;
wire   [127:0] grp_fu_2390_p00;
wire   [127:0] grp_fu_2390_p10;
wire   [31:0] tmp_5_fu_2379_p10;
wire   [31:0] tmp_8_fu_2399_p10;

// power-on initialization
initial begin
#0 ap_CS_fsm = 17'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_reg_ioackin_m_axi_weight_ARREADY = 1'b0;
end

weight_load_weighdEe #(
    .DataWidth( 32 ),
    .AddressRange( 3200 ),
    .AddressWidth( 12 ))
weight_tmp_buffer_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weight_tmp_buffer_address0),
    .ce0(weight_tmp_buffer_ce0),
    .we0(weight_tmp_buffer_we0),
    .d0(weight_addr_read_reg_3035),
    .q0(weight_tmp_buffer_q0)
);

detection_acc_mulcud #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 96 ))
detection_acc_mulcud_U15(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_2354_p0),
    .din1(grp_fu_2354_p1),
    .ce(1'b1),
    .dout(grp_fu_2354_p2)
);

detection_acc_muleOg #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 96 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 128 ))
detection_acc_muleOg_U16(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_2390_p0),
    .din1(grp_fu_2390_p1),
    .ce(1'b1),
    .dout(grp_fu_2390_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp0_exit_iter0_state9) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state8)) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state9)) begin
                ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state9);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end else if ((1'b1 == ap_CS_fsm_state8)) begin
            ap_enable_reg_pp0_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp1_exit_iter0_state17) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_subdone))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state16)) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if ((((1'b1 == ap_CS_fsm_pp1_stage1) & (1'b0 == ap_block_pp1_stage1_subdone)) | ((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_subdone)))) begin
            ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
        end else if ((1'b1 == ap_CS_fsm_state16)) begin
            ap_enable_reg_pp1_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_reg_ioackin_m_axi_weight_ARREADY <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state2)) begin
            if ((ap_sig_ioackin_m_axi_weight_ARREADY == 1'b1)) begin
                ap_reg_ioackin_m_axi_weight_ARREADY <= 1'b0;
            end else if ((m_axi_weight_ARREADY == 1'b1)) begin
                ap_reg_ioackin_m_axi_weight_ARREADY <= 1'b1;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten2_reg_3110 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        indvar_flatten1_reg_2161 <= indvar_flatten_next2_reg_3114;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        indvar_flatten1_reg_2161 <= 128'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten2_reg_3110 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        indvar_flatten2_reg_2194 <= indvar_flatten_next1_reg_3184;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        indvar_flatten2_reg_2194 <= 96'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten2_reg_3110 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        indvar_flatten_reg_2227 <= indvar_flatten_next_reg_3179;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        indvar_flatten_reg_2227 <= 64'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond2_reg_3026 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        indvar_reg_2149 <= indvar_next_reg_3030;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        indvar_reg_2149 <= 12'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten2_reg_3110 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        kc_reg_2260 <= kc_1_reg_3209;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        kc_reg_2260 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten2_reg_3110 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        kr_reg_2238 <= tmp_7_mid2_reg_3189;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        kr_reg_2238 <= 31'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten2_reg_3110 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        tm_reg_2172 <= tm_t_mid2_v_reg_3119;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        tm_reg_2172 <= 31'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten2_reg_3110 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        tn_reg_2205 <= tn_mid2_reg_3148;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        tn_reg_2205 <= 31'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten2_reg_3110 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_tmp_offset_1_reg_2216 <= weight_tmp_offset_1_1_reg_3153;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        weight_tmp_offset_1_reg_2216 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten2_reg_3110 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_tmp_offset_2_reg_2249 <= weight_tmp_offset_2_2_reg_3169;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        weight_tmp_offset_2_reg_2249 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten2_reg_3110 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_tmp_offset_3_reg_2271 <= tmp_12_reg_3204;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        weight_tmp_offset_3_reg_2271 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten2_reg_3110 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_tmp_offset_reg_2183 <= weight_tmp_offset_mi_reg_3128;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        weight_tmp_offset_reg_2183 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        bound1_reg_3094 <= grp_fu_2390_p2;
        exitcond_flatten_mid_reg_3105 <= exitcond_flatten_mid_fu_2409_p2;
        exitcond_mid_reg_3099 <= exitcond_mid_fu_2404_p2;
        tmp_8_reg_3089 <= tmp_8_fu_2399_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        bound4_reg_3067 <= grp_fu_2354_p2;
        tmp_4_reg_3062 <= tmp_4_fu_2360_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        bound_reg_3040 <= bound_fu_2326_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        exitcond2_reg_3026 <= exitcond2_fu_2306_p2;
        exitcond2_reg_3026_pp0_iter1_reg <= exitcond2_reg_3026;
        indvar_reg_2149_pp0_iter1_reg <= indvar_reg_2149;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        exitcond_flatten2_reg_3110 <= exitcond_flatten2_fu_2414_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten2_fu_2414_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        exitcond_mid2_reg_3143 <= exitcond_mid2_fu_2582_p3;
        kc_mid2_reg_3158 <= kc_mid2_fu_2622_p3;
        kr_mid_reg_3133 <= kr_mid_fu_2546_p3;
        tmp_18_reg_3174 <= tmp_18_fu_2646_p1;
        tmp_7_reg_3124 <= tmp_7_fu_2481_p1;
        tn_t_mid2_reg_3139 <= tn_t_mid2_fu_2574_p3;
        weight_tmp_offset_3_2_reg_3163 <= weight_tmp_offset_3_2_fu_2630_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten2_fu_2414_p2 == 1'd0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        indvar_flatten_next1_reg_3184 <= indvar_flatten_next1_fu_2670_p3;
        indvar_flatten_next_reg_3179 <= indvar_flatten_next_fu_2656_p3;
        tm_t_mid2_v_reg_3119 <= tm_t_mid2_v_fu_2473_p3;
        tn_mid2_reg_3148 <= tn_mid2_fu_2589_p3;
        weight_tmp_offset_1_1_reg_3153 <= weight_tmp_offset_1_1_fu_2597_p3;
        weight_tmp_offset_2_2_reg_3169 <= weight_tmp_offset_2_2_fu_2638_p3;
        weight_tmp_offset_mi_reg_3128 <= weight_tmp_offset_mi_fu_2521_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        indvar_flatten_next2_reg_3114 <= indvar_flatten_next2_fu_2419_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        indvar_next_reg_3030 <= indvar_next_fu_2312_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten2_reg_3110 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage1) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage1_11001))) begin
        kc_1_reg_3209 <= kc_1_fu_2725_p2;
        tmp_12_reg_3204 <= tmp_12_fu_2720_p2;
        tmp_7_mid2_reg_3189 <= tmp_7_mid2_fu_2683_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        smax1_reg_3047 <= smax1_fu_2340_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond_flatten2_reg_3110 == 1'd0) & (1'b1 == ap_CS_fsm_pp1_stage1) & (1'b0 == ap_block_pp1_stage1_11001))) begin
        tmp_15_reg_3194 <= tmp_15_fu_2711_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        tmp_5_reg_3073 <= tmp_5_fu_2379_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond2_reg_3026 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        weight_addr_read_reg_3035 <= m_axi_weight_RDATA;
    end
end

always @ (posedge ap_clk) begin
    if (((enable_read_read_fu_416_p2 == 1'd0) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        weight_addr_reg_3020 <= sum_cast_fu_2296_p1;
    end
end

always @ (*) begin
    if ((exitcond2_fu_2306_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state9 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state9 = 1'b0;
    end
end

always @ (*) begin
    if ((exitcond_flatten2_fu_2414_p2 == 1'd1)) begin
        ap_condition_pp1_exit_iter0_state17 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter0_state17 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state20) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b0))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond_flatten2_reg_3110 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0))) begin
        ap_phi_mux_indvar_flatten1_phi_fu_2165_p4 = indvar_flatten_next2_reg_3114;
    end else begin
        ap_phi_mux_indvar_flatten1_phi_fu_2165_p4 = indvar_flatten1_reg_2161;
    end
end

always @ (*) begin
    if (((exitcond_flatten2_reg_3110 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0))) begin
        ap_phi_mux_indvar_flatten2_phi_fu_2198_p4 = indvar_flatten_next1_reg_3184;
    end else begin
        ap_phi_mux_indvar_flatten2_phi_fu_2198_p4 = indvar_flatten2_reg_2194;
    end
end

always @ (*) begin
    if (((exitcond_flatten2_reg_3110 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0))) begin
        ap_phi_mux_indvar_flatten_phi_fu_2231_p4 = indvar_flatten_next_reg_3179;
    end else begin
        ap_phi_mux_indvar_flatten_phi_fu_2231_p4 = indvar_flatten_reg_2227;
    end
end

always @ (*) begin
    if (((exitcond2_reg_3026 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        ap_phi_mux_indvar_phi_fu_2153_p4 = indvar_next_reg_3030;
    end else begin
        ap_phi_mux_indvar_phi_fu_2153_p4 = indvar_reg_2149;
    end
end

always @ (*) begin
    if (((exitcond_flatten2_reg_3110 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0))) begin
        ap_phi_mux_kc_phi_fu_2264_p4 = kc_1_reg_3209;
    end else begin
        ap_phi_mux_kc_phi_fu_2264_p4 = kc_reg_2260;
    end
end

always @ (*) begin
    if (((exitcond_flatten2_reg_3110 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0))) begin
        ap_phi_mux_kr_phi_fu_2242_p4 = tmp_7_mid2_reg_3189;
    end else begin
        ap_phi_mux_kr_phi_fu_2242_p4 = kr_reg_2238;
    end
end

always @ (*) begin
    if (((exitcond_flatten2_reg_3110 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0))) begin
        ap_phi_mux_tm_phi_fu_2176_p4 = tm_t_mid2_v_reg_3119;
    end else begin
        ap_phi_mux_tm_phi_fu_2176_p4 = tm_reg_2172;
    end
end

always @ (*) begin
    if (((exitcond_flatten2_reg_3110 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0))) begin
        ap_phi_mux_tn_phi_fu_2209_p4 = tn_mid2_reg_3148;
    end else begin
        ap_phi_mux_tn_phi_fu_2209_p4 = tn_reg_2205;
    end
end

always @ (*) begin
    if (((exitcond_flatten2_reg_3110 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0))) begin
        ap_phi_mux_weight_tmp_offset_1_phi_fu_2220_p4 = weight_tmp_offset_1_1_reg_3153;
    end else begin
        ap_phi_mux_weight_tmp_offset_1_phi_fu_2220_p4 = weight_tmp_offset_1_reg_2216;
    end
end

always @ (*) begin
    if (((exitcond_flatten2_reg_3110 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0))) begin
        ap_phi_mux_weight_tmp_offset_2_phi_fu_2253_p4 = weight_tmp_offset_2_2_reg_3169;
    end else begin
        ap_phi_mux_weight_tmp_offset_2_phi_fu_2253_p4 = weight_tmp_offset_2_reg_2249;
    end
end

always @ (*) begin
    if (((exitcond_flatten2_reg_3110 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0))) begin
        ap_phi_mux_weight_tmp_offset_3_phi_fu_2275_p4 = tmp_12_reg_3204;
    end else begin
        ap_phi_mux_weight_tmp_offset_3_phi_fu_2275_p4 = weight_tmp_offset_3_reg_2271;
    end
end

always @ (*) begin
    if (((exitcond_flatten2_reg_3110 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0))) begin
        ap_phi_mux_weight_tmp_offset_phi_fu_2187_p4 = weight_tmp_offset_mi_reg_3128;
    end else begin
        ap_phi_mux_weight_tmp_offset_phi_fu_2187_p4 = weight_tmp_offset_reg_2183;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((ap_reg_ioackin_m_axi_weight_ARREADY == 1'b0)) begin
        ap_sig_ioackin_m_axi_weight_ARREADY = m_axi_weight_ARREADY;
    end else begin
        ap_sig_ioackin_m_axi_weight_ARREADY = 1'b1;
    end
end

always @ (*) begin
    if (((ap_reg_ioackin_m_axi_weight_ARREADY == 1'b0) & (1'b1 == ap_CS_fsm_state2))) begin
        m_axi_weight_ARVALID = 1'b1;
    end else begin
        m_axi_weight_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond2_reg_3026 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        m_axi_weight_RREADY = 1'b1;
    end else begin
        m_axi_weight_RREADY = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        weight_blk_n_AR = m_axi_weight_ARREADY;
    end else begin
        weight_blk_n_AR = 1'b1;
    end
end

always @ (*) begin
    if (((exitcond2_reg_3026 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0))) begin
        weight_blk_n_R = m_axi_weight_RVALID;
    end else begin
        weight_blk_n_R = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_buffer_0_0_V_ce0 = 1'b1;
    end else begin
        weight_buffer_0_0_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tn_t_mid2_reg_3139 == 2'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_7_reg_3124 == 5'd0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_buffer_0_0_V_we0 = 1'b1;
    end else begin
        weight_buffer_0_0_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_buffer_0_10_V_ce0 = 1'b1;
    end else begin
        weight_buffer_0_10_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tn_t_mid2_reg_3139 == 2'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_7_reg_3124 == 5'd10) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_buffer_0_10_V_we0 = 1'b1;
    end else begin
        weight_buffer_0_10_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_buffer_0_11_V_ce0 = 1'b1;
    end else begin
        weight_buffer_0_11_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tn_t_mid2_reg_3139 == 2'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_7_reg_3124 == 5'd11) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_buffer_0_11_V_we0 = 1'b1;
    end else begin
        weight_buffer_0_11_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_buffer_0_12_V_ce0 = 1'b1;
    end else begin
        weight_buffer_0_12_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tn_t_mid2_reg_3139 == 2'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_7_reg_3124 == 5'd12) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_buffer_0_12_V_we0 = 1'b1;
    end else begin
        weight_buffer_0_12_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_buffer_0_13_V_ce0 = 1'b1;
    end else begin
        weight_buffer_0_13_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tn_t_mid2_reg_3139 == 2'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_7_reg_3124 == 5'd13) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_buffer_0_13_V_we0 = 1'b1;
    end else begin
        weight_buffer_0_13_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_buffer_0_14_V_ce0 = 1'b1;
    end else begin
        weight_buffer_0_14_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tn_t_mid2_reg_3139 == 2'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_7_reg_3124 == 5'd14) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_buffer_0_14_V_we0 = 1'b1;
    end else begin
        weight_buffer_0_14_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_buffer_0_15_V_ce0 = 1'b1;
    end else begin
        weight_buffer_0_15_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tn_t_mid2_reg_3139 == 2'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_7_reg_3124 == 5'd15) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_buffer_0_15_V_we0 = 1'b1;
    end else begin
        weight_buffer_0_15_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_buffer_0_16_V_ce0 = 1'b1;
    end else begin
        weight_buffer_0_16_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tn_t_mid2_reg_3139 == 2'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_7_reg_3124 == 5'd16) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_buffer_0_16_V_we0 = 1'b1;
    end else begin
        weight_buffer_0_16_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_buffer_0_17_V_ce0 = 1'b1;
    end else begin
        weight_buffer_0_17_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tn_t_mid2_reg_3139 == 2'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_7_reg_3124 == 5'd17) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_buffer_0_17_V_we0 = 1'b1;
    end else begin
        weight_buffer_0_17_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_buffer_0_18_V_ce0 = 1'b1;
    end else begin
        weight_buffer_0_18_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tn_t_mid2_reg_3139 == 2'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_7_reg_3124 == 5'd18) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_buffer_0_18_V_we0 = 1'b1;
    end else begin
        weight_buffer_0_18_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_buffer_0_19_V_ce0 = 1'b1;
    end else begin
        weight_buffer_0_19_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tn_t_mid2_reg_3139 == 2'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_7_reg_3124 == 5'd19) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_buffer_0_19_V_we0 = 1'b1;
    end else begin
        weight_buffer_0_19_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_buffer_0_1_V_ce0 = 1'b1;
    end else begin
        weight_buffer_0_1_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tn_t_mid2_reg_3139 == 2'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_7_reg_3124 == 5'd1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_buffer_0_1_V_we0 = 1'b1;
    end else begin
        weight_buffer_0_1_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_buffer_0_20_V_ce0 = 1'b1;
    end else begin
        weight_buffer_0_20_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tn_t_mid2_reg_3139 == 2'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_7_reg_3124 == 5'd20) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_buffer_0_20_V_we0 = 1'b1;
    end else begin
        weight_buffer_0_20_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_buffer_0_21_V_ce0 = 1'b1;
    end else begin
        weight_buffer_0_21_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tn_t_mid2_reg_3139 == 2'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_7_reg_3124 == 5'd21) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_buffer_0_21_V_we0 = 1'b1;
    end else begin
        weight_buffer_0_21_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_buffer_0_22_V_ce0 = 1'b1;
    end else begin
        weight_buffer_0_22_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tn_t_mid2_reg_3139 == 2'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_7_reg_3124 == 5'd22) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_buffer_0_22_V_we0 = 1'b1;
    end else begin
        weight_buffer_0_22_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_buffer_0_23_V_ce0 = 1'b1;
    end else begin
        weight_buffer_0_23_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tn_t_mid2_reg_3139 == 2'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_7_reg_3124 == 5'd23) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_buffer_0_23_V_we0 = 1'b1;
    end else begin
        weight_buffer_0_23_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_buffer_0_24_V_ce0 = 1'b1;
    end else begin
        weight_buffer_0_24_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tn_t_mid2_reg_3139 == 2'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_7_reg_3124 == 5'd24) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_buffer_0_24_V_we0 = 1'b1;
    end else begin
        weight_buffer_0_24_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_buffer_0_25_V_ce0 = 1'b1;
    end else begin
        weight_buffer_0_25_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tn_t_mid2_reg_3139 == 2'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_7_reg_3124 == 5'd25) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_buffer_0_25_V_we0 = 1'b1;
    end else begin
        weight_buffer_0_25_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_buffer_0_26_V_ce0 = 1'b1;
    end else begin
        weight_buffer_0_26_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tn_t_mid2_reg_3139 == 2'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_7_reg_3124 == 5'd26) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_buffer_0_26_V_we0 = 1'b1;
    end else begin
        weight_buffer_0_26_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_buffer_0_27_V_ce0 = 1'b1;
    end else begin
        weight_buffer_0_27_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tn_t_mid2_reg_3139 == 2'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_7_reg_3124 == 5'd27) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_buffer_0_27_V_we0 = 1'b1;
    end else begin
        weight_buffer_0_27_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_buffer_0_28_V_ce0 = 1'b1;
    end else begin
        weight_buffer_0_28_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tn_t_mid2_reg_3139 == 2'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_7_reg_3124 == 5'd28) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_buffer_0_28_V_we0 = 1'b1;
    end else begin
        weight_buffer_0_28_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_buffer_0_29_V_ce0 = 1'b1;
    end else begin
        weight_buffer_0_29_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tn_t_mid2_reg_3139 == 2'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_7_reg_3124 == 5'd29) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_buffer_0_29_V_we0 = 1'b1;
    end else begin
        weight_buffer_0_29_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_buffer_0_2_V_ce0 = 1'b1;
    end else begin
        weight_buffer_0_2_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tn_t_mid2_reg_3139 == 2'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_7_reg_3124 == 5'd2) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_buffer_0_2_V_we0 = 1'b1;
    end else begin
        weight_buffer_0_2_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_buffer_0_30_V_ce0 = 1'b1;
    end else begin
        weight_buffer_0_30_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tn_t_mid2_reg_3139 == 2'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_7_reg_3124 == 5'd30) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_buffer_0_30_V_we0 = 1'b1;
    end else begin
        weight_buffer_0_30_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_buffer_0_31_V_ce0 = 1'b1;
    end else begin
        weight_buffer_0_31_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tn_t_mid2_reg_3139 == 2'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_7_reg_3124 == 5'd31) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_buffer_0_31_V_we0 = 1'b1;
    end else begin
        weight_buffer_0_31_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_buffer_0_3_V_ce0 = 1'b1;
    end else begin
        weight_buffer_0_3_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tn_t_mid2_reg_3139 == 2'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_7_reg_3124 == 5'd3) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_buffer_0_3_V_we0 = 1'b1;
    end else begin
        weight_buffer_0_3_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_buffer_0_4_V_ce0 = 1'b1;
    end else begin
        weight_buffer_0_4_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tn_t_mid2_reg_3139 == 2'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_7_reg_3124 == 5'd4) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_buffer_0_4_V_we0 = 1'b1;
    end else begin
        weight_buffer_0_4_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_buffer_0_5_V_ce0 = 1'b1;
    end else begin
        weight_buffer_0_5_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tn_t_mid2_reg_3139 == 2'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_7_reg_3124 == 5'd5) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_buffer_0_5_V_we0 = 1'b1;
    end else begin
        weight_buffer_0_5_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_buffer_0_6_V_ce0 = 1'b1;
    end else begin
        weight_buffer_0_6_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tn_t_mid2_reg_3139 == 2'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_7_reg_3124 == 5'd6) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_buffer_0_6_V_we0 = 1'b1;
    end else begin
        weight_buffer_0_6_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_buffer_0_7_V_ce0 = 1'b1;
    end else begin
        weight_buffer_0_7_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tn_t_mid2_reg_3139 == 2'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_7_reg_3124 == 5'd7) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_buffer_0_7_V_we0 = 1'b1;
    end else begin
        weight_buffer_0_7_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_buffer_0_8_V_ce0 = 1'b1;
    end else begin
        weight_buffer_0_8_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tn_t_mid2_reg_3139 == 2'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_7_reg_3124 == 5'd8) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_buffer_0_8_V_we0 = 1'b1;
    end else begin
        weight_buffer_0_8_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_buffer_0_9_V_ce0 = 1'b1;
    end else begin
        weight_buffer_0_9_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tn_t_mid2_reg_3139 == 2'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tmp_7_reg_3124 == 5'd9) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_buffer_0_9_V_we0 = 1'b1;
    end else begin
        weight_buffer_0_9_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_buffer_1_0_V_ce0 = 1'b1;
    end else begin
        weight_buffer_1_0_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tn_t_mid2_reg_3139 == 2'd1) & (tmp_7_reg_3124 == 5'd0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_buffer_1_0_V_we0 = 1'b1;
    end else begin
        weight_buffer_1_0_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_buffer_1_10_V_ce0 = 1'b1;
    end else begin
        weight_buffer_1_10_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tn_t_mid2_reg_3139 == 2'd1) & (tmp_7_reg_3124 == 5'd10) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_buffer_1_10_V_we0 = 1'b1;
    end else begin
        weight_buffer_1_10_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_buffer_1_11_V_ce0 = 1'b1;
    end else begin
        weight_buffer_1_11_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tn_t_mid2_reg_3139 == 2'd1) & (tmp_7_reg_3124 == 5'd11) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_buffer_1_11_V_we0 = 1'b1;
    end else begin
        weight_buffer_1_11_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_buffer_1_12_V_ce0 = 1'b1;
    end else begin
        weight_buffer_1_12_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tn_t_mid2_reg_3139 == 2'd1) & (tmp_7_reg_3124 == 5'd12) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_buffer_1_12_V_we0 = 1'b1;
    end else begin
        weight_buffer_1_12_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_buffer_1_13_V_ce0 = 1'b1;
    end else begin
        weight_buffer_1_13_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tn_t_mid2_reg_3139 == 2'd1) & (tmp_7_reg_3124 == 5'd13) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_buffer_1_13_V_we0 = 1'b1;
    end else begin
        weight_buffer_1_13_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_buffer_1_14_V_ce0 = 1'b1;
    end else begin
        weight_buffer_1_14_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tn_t_mid2_reg_3139 == 2'd1) & (tmp_7_reg_3124 == 5'd14) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_buffer_1_14_V_we0 = 1'b1;
    end else begin
        weight_buffer_1_14_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_buffer_1_15_V_ce0 = 1'b1;
    end else begin
        weight_buffer_1_15_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tn_t_mid2_reg_3139 == 2'd1) & (tmp_7_reg_3124 == 5'd15) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_buffer_1_15_V_we0 = 1'b1;
    end else begin
        weight_buffer_1_15_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_buffer_1_16_V_ce0 = 1'b1;
    end else begin
        weight_buffer_1_16_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tn_t_mid2_reg_3139 == 2'd1) & (tmp_7_reg_3124 == 5'd16) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_buffer_1_16_V_we0 = 1'b1;
    end else begin
        weight_buffer_1_16_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_buffer_1_17_V_ce0 = 1'b1;
    end else begin
        weight_buffer_1_17_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tn_t_mid2_reg_3139 == 2'd1) & (tmp_7_reg_3124 == 5'd17) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_buffer_1_17_V_we0 = 1'b1;
    end else begin
        weight_buffer_1_17_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_buffer_1_18_V_ce0 = 1'b1;
    end else begin
        weight_buffer_1_18_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tn_t_mid2_reg_3139 == 2'd1) & (tmp_7_reg_3124 == 5'd18) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_buffer_1_18_V_we0 = 1'b1;
    end else begin
        weight_buffer_1_18_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_buffer_1_19_V_ce0 = 1'b1;
    end else begin
        weight_buffer_1_19_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tn_t_mid2_reg_3139 == 2'd1) & (tmp_7_reg_3124 == 5'd19) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_buffer_1_19_V_we0 = 1'b1;
    end else begin
        weight_buffer_1_19_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_buffer_1_1_V_ce0 = 1'b1;
    end else begin
        weight_buffer_1_1_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tn_t_mid2_reg_3139 == 2'd1) & (tmp_7_reg_3124 == 5'd1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_buffer_1_1_V_we0 = 1'b1;
    end else begin
        weight_buffer_1_1_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_buffer_1_20_V_ce0 = 1'b1;
    end else begin
        weight_buffer_1_20_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tn_t_mid2_reg_3139 == 2'd1) & (tmp_7_reg_3124 == 5'd20) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_buffer_1_20_V_we0 = 1'b1;
    end else begin
        weight_buffer_1_20_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_buffer_1_21_V_ce0 = 1'b1;
    end else begin
        weight_buffer_1_21_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tn_t_mid2_reg_3139 == 2'd1) & (tmp_7_reg_3124 == 5'd21) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_buffer_1_21_V_we0 = 1'b1;
    end else begin
        weight_buffer_1_21_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_buffer_1_22_V_ce0 = 1'b1;
    end else begin
        weight_buffer_1_22_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tn_t_mid2_reg_3139 == 2'd1) & (tmp_7_reg_3124 == 5'd22) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_buffer_1_22_V_we0 = 1'b1;
    end else begin
        weight_buffer_1_22_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_buffer_1_23_V_ce0 = 1'b1;
    end else begin
        weight_buffer_1_23_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tn_t_mid2_reg_3139 == 2'd1) & (tmp_7_reg_3124 == 5'd23) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_buffer_1_23_V_we0 = 1'b1;
    end else begin
        weight_buffer_1_23_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_buffer_1_24_V_ce0 = 1'b1;
    end else begin
        weight_buffer_1_24_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tn_t_mid2_reg_3139 == 2'd1) & (tmp_7_reg_3124 == 5'd24) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_buffer_1_24_V_we0 = 1'b1;
    end else begin
        weight_buffer_1_24_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_buffer_1_25_V_ce0 = 1'b1;
    end else begin
        weight_buffer_1_25_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tn_t_mid2_reg_3139 == 2'd1) & (tmp_7_reg_3124 == 5'd25) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_buffer_1_25_V_we0 = 1'b1;
    end else begin
        weight_buffer_1_25_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_buffer_1_26_V_ce0 = 1'b1;
    end else begin
        weight_buffer_1_26_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tn_t_mid2_reg_3139 == 2'd1) & (tmp_7_reg_3124 == 5'd26) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_buffer_1_26_V_we0 = 1'b1;
    end else begin
        weight_buffer_1_26_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_buffer_1_27_V_ce0 = 1'b1;
    end else begin
        weight_buffer_1_27_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tn_t_mid2_reg_3139 == 2'd1) & (tmp_7_reg_3124 == 5'd27) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_buffer_1_27_V_we0 = 1'b1;
    end else begin
        weight_buffer_1_27_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_buffer_1_28_V_ce0 = 1'b1;
    end else begin
        weight_buffer_1_28_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tn_t_mid2_reg_3139 == 2'd1) & (tmp_7_reg_3124 == 5'd28) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_buffer_1_28_V_we0 = 1'b1;
    end else begin
        weight_buffer_1_28_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_buffer_1_29_V_ce0 = 1'b1;
    end else begin
        weight_buffer_1_29_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tn_t_mid2_reg_3139 == 2'd1) & (tmp_7_reg_3124 == 5'd29) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_buffer_1_29_V_we0 = 1'b1;
    end else begin
        weight_buffer_1_29_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_buffer_1_2_V_ce0 = 1'b1;
    end else begin
        weight_buffer_1_2_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tn_t_mid2_reg_3139 == 2'd1) & (tmp_7_reg_3124 == 5'd2) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_buffer_1_2_V_we0 = 1'b1;
    end else begin
        weight_buffer_1_2_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_buffer_1_30_V_ce0 = 1'b1;
    end else begin
        weight_buffer_1_30_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tn_t_mid2_reg_3139 == 2'd1) & (tmp_7_reg_3124 == 5'd30) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_buffer_1_30_V_we0 = 1'b1;
    end else begin
        weight_buffer_1_30_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_buffer_1_31_V_ce0 = 1'b1;
    end else begin
        weight_buffer_1_31_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tn_t_mid2_reg_3139 == 2'd1) & (tmp_7_reg_3124 == 5'd31) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_buffer_1_31_V_we0 = 1'b1;
    end else begin
        weight_buffer_1_31_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_buffer_1_3_V_ce0 = 1'b1;
    end else begin
        weight_buffer_1_3_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tn_t_mid2_reg_3139 == 2'd1) & (tmp_7_reg_3124 == 5'd3) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_buffer_1_3_V_we0 = 1'b1;
    end else begin
        weight_buffer_1_3_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_buffer_1_4_V_ce0 = 1'b1;
    end else begin
        weight_buffer_1_4_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tn_t_mid2_reg_3139 == 2'd1) & (tmp_7_reg_3124 == 5'd4) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_buffer_1_4_V_we0 = 1'b1;
    end else begin
        weight_buffer_1_4_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_buffer_1_5_V_ce0 = 1'b1;
    end else begin
        weight_buffer_1_5_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tn_t_mid2_reg_3139 == 2'd1) & (tmp_7_reg_3124 == 5'd5) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_buffer_1_5_V_we0 = 1'b1;
    end else begin
        weight_buffer_1_5_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_buffer_1_6_V_ce0 = 1'b1;
    end else begin
        weight_buffer_1_6_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tn_t_mid2_reg_3139 == 2'd1) & (tmp_7_reg_3124 == 5'd6) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_buffer_1_6_V_we0 = 1'b1;
    end else begin
        weight_buffer_1_6_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_buffer_1_7_V_ce0 = 1'b1;
    end else begin
        weight_buffer_1_7_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tn_t_mid2_reg_3139 == 2'd1) & (tmp_7_reg_3124 == 5'd7) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_buffer_1_7_V_we0 = 1'b1;
    end else begin
        weight_buffer_1_7_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_buffer_1_8_V_ce0 = 1'b1;
    end else begin
        weight_buffer_1_8_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tn_t_mid2_reg_3139 == 2'd1) & (tmp_7_reg_3124 == 5'd8) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_buffer_1_8_V_we0 = 1'b1;
    end else begin
        weight_buffer_1_8_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_buffer_1_9_V_ce0 = 1'b1;
    end else begin
        weight_buffer_1_9_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tn_t_mid2_reg_3139 == 2'd1) & (tmp_7_reg_3124 == 5'd9) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_buffer_1_9_V_we0 = 1'b1;
    end else begin
        weight_buffer_1_9_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_buffer_2_0_V_ce0 = 1'b1;
    end else begin
        weight_buffer_2_0_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tn_t_mid2_reg_3139 == 2'd2) & (tmp_7_reg_3124 == 5'd0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_buffer_2_0_V_we0 = 1'b1;
    end else begin
        weight_buffer_2_0_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_buffer_2_10_V_ce0 = 1'b1;
    end else begin
        weight_buffer_2_10_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tn_t_mid2_reg_3139 == 2'd2) & (tmp_7_reg_3124 == 5'd10) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_buffer_2_10_V_we0 = 1'b1;
    end else begin
        weight_buffer_2_10_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_buffer_2_11_V_ce0 = 1'b1;
    end else begin
        weight_buffer_2_11_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tn_t_mid2_reg_3139 == 2'd2) & (tmp_7_reg_3124 == 5'd11) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_buffer_2_11_V_we0 = 1'b1;
    end else begin
        weight_buffer_2_11_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_buffer_2_12_V_ce0 = 1'b1;
    end else begin
        weight_buffer_2_12_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tn_t_mid2_reg_3139 == 2'd2) & (tmp_7_reg_3124 == 5'd12) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_buffer_2_12_V_we0 = 1'b1;
    end else begin
        weight_buffer_2_12_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_buffer_2_13_V_ce0 = 1'b1;
    end else begin
        weight_buffer_2_13_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tn_t_mid2_reg_3139 == 2'd2) & (tmp_7_reg_3124 == 5'd13) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_buffer_2_13_V_we0 = 1'b1;
    end else begin
        weight_buffer_2_13_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_buffer_2_14_V_ce0 = 1'b1;
    end else begin
        weight_buffer_2_14_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tn_t_mid2_reg_3139 == 2'd2) & (tmp_7_reg_3124 == 5'd14) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_buffer_2_14_V_we0 = 1'b1;
    end else begin
        weight_buffer_2_14_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_buffer_2_15_V_ce0 = 1'b1;
    end else begin
        weight_buffer_2_15_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tn_t_mid2_reg_3139 == 2'd2) & (tmp_7_reg_3124 == 5'd15) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_buffer_2_15_V_we0 = 1'b1;
    end else begin
        weight_buffer_2_15_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_buffer_2_16_V_ce0 = 1'b1;
    end else begin
        weight_buffer_2_16_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tn_t_mid2_reg_3139 == 2'd2) & (tmp_7_reg_3124 == 5'd16) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_buffer_2_16_V_we0 = 1'b1;
    end else begin
        weight_buffer_2_16_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_buffer_2_17_V_ce0 = 1'b1;
    end else begin
        weight_buffer_2_17_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tn_t_mid2_reg_3139 == 2'd2) & (tmp_7_reg_3124 == 5'd17) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_buffer_2_17_V_we0 = 1'b1;
    end else begin
        weight_buffer_2_17_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_buffer_2_18_V_ce0 = 1'b1;
    end else begin
        weight_buffer_2_18_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tn_t_mid2_reg_3139 == 2'd2) & (tmp_7_reg_3124 == 5'd18) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_buffer_2_18_V_we0 = 1'b1;
    end else begin
        weight_buffer_2_18_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_buffer_2_19_V_ce0 = 1'b1;
    end else begin
        weight_buffer_2_19_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tn_t_mid2_reg_3139 == 2'd2) & (tmp_7_reg_3124 == 5'd19) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_buffer_2_19_V_we0 = 1'b1;
    end else begin
        weight_buffer_2_19_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_buffer_2_1_V_ce0 = 1'b1;
    end else begin
        weight_buffer_2_1_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tn_t_mid2_reg_3139 == 2'd2) & (tmp_7_reg_3124 == 5'd1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_buffer_2_1_V_we0 = 1'b1;
    end else begin
        weight_buffer_2_1_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_buffer_2_20_V_ce0 = 1'b1;
    end else begin
        weight_buffer_2_20_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tn_t_mid2_reg_3139 == 2'd2) & (tmp_7_reg_3124 == 5'd20) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_buffer_2_20_V_we0 = 1'b1;
    end else begin
        weight_buffer_2_20_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_buffer_2_21_V_ce0 = 1'b1;
    end else begin
        weight_buffer_2_21_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tn_t_mid2_reg_3139 == 2'd2) & (tmp_7_reg_3124 == 5'd21) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_buffer_2_21_V_we0 = 1'b1;
    end else begin
        weight_buffer_2_21_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_buffer_2_22_V_ce0 = 1'b1;
    end else begin
        weight_buffer_2_22_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tn_t_mid2_reg_3139 == 2'd2) & (tmp_7_reg_3124 == 5'd22) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_buffer_2_22_V_we0 = 1'b1;
    end else begin
        weight_buffer_2_22_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_buffer_2_23_V_ce0 = 1'b1;
    end else begin
        weight_buffer_2_23_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tn_t_mid2_reg_3139 == 2'd2) & (tmp_7_reg_3124 == 5'd23) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_buffer_2_23_V_we0 = 1'b1;
    end else begin
        weight_buffer_2_23_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_buffer_2_24_V_ce0 = 1'b1;
    end else begin
        weight_buffer_2_24_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tn_t_mid2_reg_3139 == 2'd2) & (tmp_7_reg_3124 == 5'd24) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_buffer_2_24_V_we0 = 1'b1;
    end else begin
        weight_buffer_2_24_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_buffer_2_25_V_ce0 = 1'b1;
    end else begin
        weight_buffer_2_25_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tn_t_mid2_reg_3139 == 2'd2) & (tmp_7_reg_3124 == 5'd25) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_buffer_2_25_V_we0 = 1'b1;
    end else begin
        weight_buffer_2_25_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_buffer_2_26_V_ce0 = 1'b1;
    end else begin
        weight_buffer_2_26_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tn_t_mid2_reg_3139 == 2'd2) & (tmp_7_reg_3124 == 5'd26) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_buffer_2_26_V_we0 = 1'b1;
    end else begin
        weight_buffer_2_26_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_buffer_2_27_V_ce0 = 1'b1;
    end else begin
        weight_buffer_2_27_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tn_t_mid2_reg_3139 == 2'd2) & (tmp_7_reg_3124 == 5'd27) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_buffer_2_27_V_we0 = 1'b1;
    end else begin
        weight_buffer_2_27_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_buffer_2_28_V_ce0 = 1'b1;
    end else begin
        weight_buffer_2_28_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tn_t_mid2_reg_3139 == 2'd2) & (tmp_7_reg_3124 == 5'd28) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_buffer_2_28_V_we0 = 1'b1;
    end else begin
        weight_buffer_2_28_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_buffer_2_29_V_ce0 = 1'b1;
    end else begin
        weight_buffer_2_29_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tn_t_mid2_reg_3139 == 2'd2) & (tmp_7_reg_3124 == 5'd29) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_buffer_2_29_V_we0 = 1'b1;
    end else begin
        weight_buffer_2_29_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_buffer_2_2_V_ce0 = 1'b1;
    end else begin
        weight_buffer_2_2_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tn_t_mid2_reg_3139 == 2'd2) & (tmp_7_reg_3124 == 5'd2) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_buffer_2_2_V_we0 = 1'b1;
    end else begin
        weight_buffer_2_2_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_buffer_2_30_V_ce0 = 1'b1;
    end else begin
        weight_buffer_2_30_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tn_t_mid2_reg_3139 == 2'd2) & (tmp_7_reg_3124 == 5'd30) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_buffer_2_30_V_we0 = 1'b1;
    end else begin
        weight_buffer_2_30_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_buffer_2_31_V_ce0 = 1'b1;
    end else begin
        weight_buffer_2_31_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tn_t_mid2_reg_3139 == 2'd2) & (tmp_7_reg_3124 == 5'd31) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_buffer_2_31_V_we0 = 1'b1;
    end else begin
        weight_buffer_2_31_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_buffer_2_3_V_ce0 = 1'b1;
    end else begin
        weight_buffer_2_3_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tn_t_mid2_reg_3139 == 2'd2) & (tmp_7_reg_3124 == 5'd3) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_buffer_2_3_V_we0 = 1'b1;
    end else begin
        weight_buffer_2_3_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_buffer_2_4_V_ce0 = 1'b1;
    end else begin
        weight_buffer_2_4_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tn_t_mid2_reg_3139 == 2'd2) & (tmp_7_reg_3124 == 5'd4) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_buffer_2_4_V_we0 = 1'b1;
    end else begin
        weight_buffer_2_4_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_buffer_2_5_V_ce0 = 1'b1;
    end else begin
        weight_buffer_2_5_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tn_t_mid2_reg_3139 == 2'd2) & (tmp_7_reg_3124 == 5'd5) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_buffer_2_5_V_we0 = 1'b1;
    end else begin
        weight_buffer_2_5_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_buffer_2_6_V_ce0 = 1'b1;
    end else begin
        weight_buffer_2_6_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tn_t_mid2_reg_3139 == 2'd2) & (tmp_7_reg_3124 == 5'd6) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_buffer_2_6_V_we0 = 1'b1;
    end else begin
        weight_buffer_2_6_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_buffer_2_7_V_ce0 = 1'b1;
    end else begin
        weight_buffer_2_7_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tn_t_mid2_reg_3139 == 2'd2) & (tmp_7_reg_3124 == 5'd7) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_buffer_2_7_V_we0 = 1'b1;
    end else begin
        weight_buffer_2_7_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_buffer_2_8_V_ce0 = 1'b1;
    end else begin
        weight_buffer_2_8_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tn_t_mid2_reg_3139 == 2'd2) & (tmp_7_reg_3124 == 5'd8) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_buffer_2_8_V_we0 = 1'b1;
    end else begin
        weight_buffer_2_8_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_buffer_2_9_V_ce0 = 1'b1;
    end else begin
        weight_buffer_2_9_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tn_t_mid2_reg_3139 == 2'd2) & (tmp_7_reg_3124 == 5'd9) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_buffer_2_9_V_we0 = 1'b1;
    end else begin
        weight_buffer_2_9_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_buffer_3_0_V_ce0 = 1'b1;
    end else begin
        weight_buffer_3_0_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tn_t_mid2_reg_3139 == 2'd3) & (tmp_7_reg_3124 == 5'd0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_buffer_3_0_V_we0 = 1'b1;
    end else begin
        weight_buffer_3_0_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_buffer_3_10_V_ce0 = 1'b1;
    end else begin
        weight_buffer_3_10_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tn_t_mid2_reg_3139 == 2'd3) & (tmp_7_reg_3124 == 5'd10) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_buffer_3_10_V_we0 = 1'b1;
    end else begin
        weight_buffer_3_10_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_buffer_3_11_V_ce0 = 1'b1;
    end else begin
        weight_buffer_3_11_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tn_t_mid2_reg_3139 == 2'd3) & (tmp_7_reg_3124 == 5'd11) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_buffer_3_11_V_we0 = 1'b1;
    end else begin
        weight_buffer_3_11_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_buffer_3_12_V_ce0 = 1'b1;
    end else begin
        weight_buffer_3_12_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tn_t_mid2_reg_3139 == 2'd3) & (tmp_7_reg_3124 == 5'd12) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_buffer_3_12_V_we0 = 1'b1;
    end else begin
        weight_buffer_3_12_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_buffer_3_13_V_ce0 = 1'b1;
    end else begin
        weight_buffer_3_13_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tn_t_mid2_reg_3139 == 2'd3) & (tmp_7_reg_3124 == 5'd13) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_buffer_3_13_V_we0 = 1'b1;
    end else begin
        weight_buffer_3_13_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_buffer_3_14_V_ce0 = 1'b1;
    end else begin
        weight_buffer_3_14_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tn_t_mid2_reg_3139 == 2'd3) & (tmp_7_reg_3124 == 5'd14) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_buffer_3_14_V_we0 = 1'b1;
    end else begin
        weight_buffer_3_14_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_buffer_3_15_V_ce0 = 1'b1;
    end else begin
        weight_buffer_3_15_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tn_t_mid2_reg_3139 == 2'd3) & (tmp_7_reg_3124 == 5'd15) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_buffer_3_15_V_we0 = 1'b1;
    end else begin
        weight_buffer_3_15_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_buffer_3_16_V_ce0 = 1'b1;
    end else begin
        weight_buffer_3_16_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tn_t_mid2_reg_3139 == 2'd3) & (tmp_7_reg_3124 == 5'd16) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_buffer_3_16_V_we0 = 1'b1;
    end else begin
        weight_buffer_3_16_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_buffer_3_17_V_ce0 = 1'b1;
    end else begin
        weight_buffer_3_17_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tn_t_mid2_reg_3139 == 2'd3) & (tmp_7_reg_3124 == 5'd17) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_buffer_3_17_V_we0 = 1'b1;
    end else begin
        weight_buffer_3_17_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_buffer_3_18_V_ce0 = 1'b1;
    end else begin
        weight_buffer_3_18_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tn_t_mid2_reg_3139 == 2'd3) & (tmp_7_reg_3124 == 5'd18) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_buffer_3_18_V_we0 = 1'b1;
    end else begin
        weight_buffer_3_18_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_buffer_3_19_V_ce0 = 1'b1;
    end else begin
        weight_buffer_3_19_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tn_t_mid2_reg_3139 == 2'd3) & (tmp_7_reg_3124 == 5'd19) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_buffer_3_19_V_we0 = 1'b1;
    end else begin
        weight_buffer_3_19_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_buffer_3_1_V_ce0 = 1'b1;
    end else begin
        weight_buffer_3_1_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tn_t_mid2_reg_3139 == 2'd3) & (tmp_7_reg_3124 == 5'd1) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_buffer_3_1_V_we0 = 1'b1;
    end else begin
        weight_buffer_3_1_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_buffer_3_20_V_ce0 = 1'b1;
    end else begin
        weight_buffer_3_20_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tn_t_mid2_reg_3139 == 2'd3) & (tmp_7_reg_3124 == 5'd20) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_buffer_3_20_V_we0 = 1'b1;
    end else begin
        weight_buffer_3_20_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_buffer_3_21_V_ce0 = 1'b1;
    end else begin
        weight_buffer_3_21_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tn_t_mid2_reg_3139 == 2'd3) & (tmp_7_reg_3124 == 5'd21) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_buffer_3_21_V_we0 = 1'b1;
    end else begin
        weight_buffer_3_21_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_buffer_3_22_V_ce0 = 1'b1;
    end else begin
        weight_buffer_3_22_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tn_t_mid2_reg_3139 == 2'd3) & (tmp_7_reg_3124 == 5'd22) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_buffer_3_22_V_we0 = 1'b1;
    end else begin
        weight_buffer_3_22_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_buffer_3_23_V_ce0 = 1'b1;
    end else begin
        weight_buffer_3_23_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tn_t_mid2_reg_3139 == 2'd3) & (tmp_7_reg_3124 == 5'd23) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_buffer_3_23_V_we0 = 1'b1;
    end else begin
        weight_buffer_3_23_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_buffer_3_24_V_ce0 = 1'b1;
    end else begin
        weight_buffer_3_24_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tn_t_mid2_reg_3139 == 2'd3) & (tmp_7_reg_3124 == 5'd24) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_buffer_3_24_V_we0 = 1'b1;
    end else begin
        weight_buffer_3_24_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_buffer_3_25_V_ce0 = 1'b1;
    end else begin
        weight_buffer_3_25_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tn_t_mid2_reg_3139 == 2'd3) & (tmp_7_reg_3124 == 5'd25) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_buffer_3_25_V_we0 = 1'b1;
    end else begin
        weight_buffer_3_25_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_buffer_3_26_V_ce0 = 1'b1;
    end else begin
        weight_buffer_3_26_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tn_t_mid2_reg_3139 == 2'd3) & (tmp_7_reg_3124 == 5'd26) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_buffer_3_26_V_we0 = 1'b1;
    end else begin
        weight_buffer_3_26_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_buffer_3_27_V_ce0 = 1'b1;
    end else begin
        weight_buffer_3_27_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tn_t_mid2_reg_3139 == 2'd3) & (tmp_7_reg_3124 == 5'd27) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_buffer_3_27_V_we0 = 1'b1;
    end else begin
        weight_buffer_3_27_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_buffer_3_28_V_ce0 = 1'b1;
    end else begin
        weight_buffer_3_28_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tn_t_mid2_reg_3139 == 2'd3) & (tmp_7_reg_3124 == 5'd28) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_buffer_3_28_V_we0 = 1'b1;
    end else begin
        weight_buffer_3_28_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_buffer_3_29_V_ce0 = 1'b1;
    end else begin
        weight_buffer_3_29_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tn_t_mid2_reg_3139 == 2'd3) & (tmp_7_reg_3124 == 5'd29) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_buffer_3_29_V_we0 = 1'b1;
    end else begin
        weight_buffer_3_29_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_buffer_3_2_V_ce0 = 1'b1;
    end else begin
        weight_buffer_3_2_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tn_t_mid2_reg_3139 == 2'd3) & (tmp_7_reg_3124 == 5'd2) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_buffer_3_2_V_we0 = 1'b1;
    end else begin
        weight_buffer_3_2_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_buffer_3_30_V_ce0 = 1'b1;
    end else begin
        weight_buffer_3_30_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tn_t_mid2_reg_3139 == 2'd3) & (tmp_7_reg_3124 == 5'd30) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_buffer_3_30_V_we0 = 1'b1;
    end else begin
        weight_buffer_3_30_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_buffer_3_31_V_ce0 = 1'b1;
    end else begin
        weight_buffer_3_31_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tn_t_mid2_reg_3139 == 2'd3) & (tmp_7_reg_3124 == 5'd31) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_buffer_3_31_V_we0 = 1'b1;
    end else begin
        weight_buffer_3_31_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_buffer_3_3_V_ce0 = 1'b1;
    end else begin
        weight_buffer_3_3_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tn_t_mid2_reg_3139 == 2'd3) & (tmp_7_reg_3124 == 5'd3) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_buffer_3_3_V_we0 = 1'b1;
    end else begin
        weight_buffer_3_3_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_buffer_3_4_V_ce0 = 1'b1;
    end else begin
        weight_buffer_3_4_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tn_t_mid2_reg_3139 == 2'd3) & (tmp_7_reg_3124 == 5'd4) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_buffer_3_4_V_we0 = 1'b1;
    end else begin
        weight_buffer_3_4_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_buffer_3_5_V_ce0 = 1'b1;
    end else begin
        weight_buffer_3_5_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tn_t_mid2_reg_3139 == 2'd3) & (tmp_7_reg_3124 == 5'd5) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_buffer_3_5_V_we0 = 1'b1;
    end else begin
        weight_buffer_3_5_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_buffer_3_6_V_ce0 = 1'b1;
    end else begin
        weight_buffer_3_6_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tn_t_mid2_reg_3139 == 2'd3) & (tmp_7_reg_3124 == 5'd6) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_buffer_3_6_V_we0 = 1'b1;
    end else begin
        weight_buffer_3_6_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_buffer_3_7_V_ce0 = 1'b1;
    end else begin
        weight_buffer_3_7_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tn_t_mid2_reg_3139 == 2'd3) & (tmp_7_reg_3124 == 5'd7) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_buffer_3_7_V_we0 = 1'b1;
    end else begin
        weight_buffer_3_7_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_buffer_3_8_V_ce0 = 1'b1;
    end else begin
        weight_buffer_3_8_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tn_t_mid2_reg_3139 == 2'd3) & (tmp_7_reg_3124 == 5'd8) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_buffer_3_8_V_we0 = 1'b1;
    end else begin
        weight_buffer_3_8_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_buffer_3_9_V_ce0 = 1'b1;
    end else begin
        weight_buffer_3_9_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (tn_t_mid2_reg_3139 == 2'd3) & (tmp_7_reg_3124 == 5'd9) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        weight_buffer_3_9_V_we0 = 1'b1;
    end else begin
        weight_buffer_3_9_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage1) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage1))) begin
        weight_tmp_buffer_address0 = tmp_11_fu_2716_p1;
    end else if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0))) begin
        weight_tmp_buffer_address0 = indvar3_fu_2318_p1;
    end else begin
        weight_tmp_buffer_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_pp1_stage1) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage1_11001)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001)))) begin
        weight_tmp_buffer_ce0 = 1'b1;
    end else begin
        weight_tmp_buffer_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond2_reg_3026_pp0_iter1_reg == 1'd0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        weight_tmp_buffer_we0 = 1'b1;
    end else begin
        weight_tmp_buffer_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (enable_read_read_fu_416_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end else if (((enable_read_read_fu_416_p2 == 1'd0) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (ap_sig_ioackin_m_axi_weight_ARREADY == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (exitcond2_fu_2306_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b0)) & ~((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter1 == 1'b0)) | ((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone) & (exitcond2_fu_2306_p2 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_pp1_stage0;
        end
        ap_ST_fsm_pp1_stage0 : begin
            if ((~((ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage0_subdone) & (exitcond_flatten2_fu_2414_p2 == 1'd1)) & (1'b0 == ap_block_pp1_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage1;
            end else if (((ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage0_subdone) & (exitcond_flatten2_fu_2414_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_pp1_stage1 : begin
            if ((1'b0 == ap_block_pp1_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage1;
            end
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_pp1_stage1 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((exitcond2_reg_3026 == 1'd0) & (m_axi_weight_RVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((exitcond2_reg_3026 == 1'd0) & (m_axi_weight_RVALID == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

assign ap_block_pp1_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage1_subdone = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state10_pp0_stage0_iter1 = ((exitcond2_reg_3026 == 1'd0) & (m_axi_weight_RVALID == 1'b0));
end

assign ap_block_state11_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp1_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp1_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

assign bound_fu_2326_p0 = cast_fu_2323_p1;

assign bound_fu_2326_p1 = cast_fu_2323_p1;

assign bound_fu_2326_p2 = (bound_fu_2326_p0 * bound_fu_2326_p1);

assign cast_fu_2323_p0 = k;

assign cast_fu_2323_p1 = $unsigned(cast_fu_2323_p0);

assign enable_read_read_fu_416_p2 = enable;

assign exitcond2_fu_2306_p2 = ((ap_phi_mux_indvar_phi_fu_2153_p4 == 12'd3200) ? 1'b1 : 1'b0);

assign exitcond_flatten1_fu_2509_p2 = ((ap_phi_mux_indvar_flatten_phi_fu_2231_p4 == bound_reg_3040) ? 1'b1 : 1'b0);

assign exitcond_flatten2_fu_2414_p2 = ((ap_phi_mux_indvar_flatten1_phi_fu_2165_p4 == bound1_reg_3094) ? 1'b1 : 1'b0);

assign exitcond_flatten_fu_2436_p2 = ((ap_phi_mux_indvar_flatten2_phi_fu_2198_p4 == bound4_reg_3067) ? 1'b1 : 1'b0);

assign exitcond_flatten_mid_2_fu_2514_p3 = ((exitcond_flatten_fu_2436_p2[0:0] === 1'b1) ? exitcond_flatten_mid_reg_3105 : exitcond_flatten1_fu_2509_p2);

assign exitcond_flatten_mid_fu_2409_p2 = ((bound_reg_3040 == 64'd0) ? 1'b1 : 1'b0);

assign exitcond_fu_2497_p1 = k;

assign exitcond_fu_2497_p2 = ((ap_phi_mux_kc_phi_fu_2264_p4 == exitcond_fu_2497_p1) ? 1'b1 : 1'b0);

assign exitcond_mid1_fu_2502_p3 = ((exitcond_flatten_fu_2436_p2[0:0] === 1'b1) ? exitcond_mid_reg_3099 : exitcond_fu_2497_p2);

assign exitcond_mid2_fu_2582_p3 = ((exitcond_flatten_mid_2_fu_2514_p3[0:0] === 1'b1) ? exitcond_mid_reg_3099 : exitcond_mid1_fu_2502_p3);

assign exitcond_mid_fu_2404_p0 = k;

assign exitcond_mid_fu_2404_p2 = ((exitcond_mid_fu_2404_p0 == 32'd0) ? 1'b1 : 1'b0);

assign grp_fu_2354_p0 = grp_fu_2354_p00;

assign grp_fu_2354_p00 = bound_reg_3040;

assign grp_fu_2354_p1 = grp_fu_2354_p10;

assign grp_fu_2354_p10 = TN;

assign grp_fu_2390_p0 = grp_fu_2390_p00;

assign grp_fu_2390_p00 = bound4_reg_3067;

assign grp_fu_2390_p1 = grp_fu_2390_p10;

assign grp_fu_2390_p10 = TM;

assign indvar3_fu_2318_p1 = indvar_reg_2149_pp0_iter1_reg;

assign indvar_flatten23_op_fu_2664_p2 = (ap_phi_mux_indvar_flatten2_phi_fu_2198_p4 + 96'd1);

assign indvar_flatten_next1_fu_2670_p3 = ((exitcond_flatten_fu_2436_p2[0:0] === 1'b1) ? 96'd1 : indvar_flatten23_op_fu_2664_p2);

assign indvar_flatten_next2_fu_2419_p2 = (ap_phi_mux_indvar_flatten1_phi_fu_2165_p4 + 128'd1);

assign indvar_flatten_next_fu_2656_p3 = ((tmp_1_fu_2540_p2[0:0] === 1'b1) ? 64'd1 : indvar_flatten_op_fu_2650_p2);

assign indvar_flatten_op_fu_2650_p2 = (ap_phi_mux_indvar_flatten_phi_fu_2231_p4 + 64'd1);

assign indvar_next_fu_2312_p2 = (ap_phi_mux_indvar_phi_fu_2153_p4 + 12'd1);

assign kc_1_fu_2725_p2 = (kc_mid2_reg_3158 + 32'd1);

assign kc_mid2_fu_2622_p3 = ((tmp_13_fu_2616_p2[0:0] === 1'b1) ? 32'd0 : ap_phi_mux_kc_phi_fu_2264_p4);

assign kr_1_fu_2678_p2 = (31'd1 + kr_mid_reg_3133);

assign kr_mid_fu_2546_p3 = ((tmp_1_fu_2540_p2[0:0] === 1'b1) ? 31'd0 : ap_phi_mux_kr_phi_fu_2242_p4);

assign m_axi_weight_ARADDR = weight_addr_reg_3020;

assign m_axi_weight_ARBURST = 2'd0;

assign m_axi_weight_ARCACHE = 4'd0;

assign m_axi_weight_ARID = 1'd0;

assign m_axi_weight_ARLEN = 32'd3200;

assign m_axi_weight_ARLOCK = 2'd0;

assign m_axi_weight_ARPROT = 3'd0;

assign m_axi_weight_ARQOS = 4'd0;

assign m_axi_weight_ARREGION = 4'd0;

assign m_axi_weight_ARSIZE = 3'd0;

assign m_axi_weight_ARUSER = 1'd0;

assign m_axi_weight_AWADDR = 32'd0;

assign m_axi_weight_AWBURST = 2'd0;

assign m_axi_weight_AWCACHE = 4'd0;

assign m_axi_weight_AWID = 1'd0;

assign m_axi_weight_AWLEN = 32'd0;

assign m_axi_weight_AWLOCK = 2'd0;

assign m_axi_weight_AWPROT = 3'd0;

assign m_axi_weight_AWQOS = 4'd0;

assign m_axi_weight_AWREGION = 4'd0;

assign m_axi_weight_AWSIZE = 3'd0;

assign m_axi_weight_AWUSER = 1'd0;

assign m_axi_weight_AWVALID = 1'b0;

assign m_axi_weight_BREADY = 1'b0;

assign m_axi_weight_WDATA = 32'd0;

assign m_axi_weight_WID = 1'd0;

assign m_axi_weight_WLAST = 1'b0;

assign m_axi_weight_WSTRB = 4'd0;

assign m_axi_weight_WUSER = 1'd0;

assign m_axi_weight_WVALID = 1'b0;

assign p_shl_cast_fu_2697_p3 = {{tmp_17_fu_2693_p1}, {2'd0}};

assign sext_cast_fu_2286_p1 = weight_offset;

assign smax1_fu_2340_p3 = ((tmp_6_fu_2332_p2[0:0] === 1'b1) ? tmp_2_fu_2337_p1 : 31'd0);

assign smax_fu_2368_p3 = ((tmp_4_reg_3062[0:0] === 1'b1) ? tmp_fu_2365_p1 : 31'd0);

assign sum_cast_fu_2296_p1 = $signed(sum_fu_2290_p2);

assign sum_fu_2290_p2 = ($signed(tmp_cast_fu_2282_p1) + $signed(sext_cast_fu_2286_p1));

assign tm_1_fu_2425_p2 = (31'd1 + ap_phi_mux_tm_phi_fu_2176_p4);

assign tm_t_mid2_v_fu_2473_p3 = ((exitcond_flatten_fu_2436_p2[0:0] === 1'b1) ? tm_1_fu_2425_p2 : ap_phi_mux_tm_phi_fu_2176_p4);

assign tmp_10_fu_2570_p1 = tn_1_fu_2529_p2[1:0];

assign tmp_11_fu_2716_p1 = weight_tmp_offset_3_2_reg_3163;

assign tmp_12_fu_2720_p2 = ($signed(weight_tmp_offset_3_2_reg_3163) + $signed(32'd1));

assign tmp_13_fu_2616_p2 = (tmp_3_fu_2610_p2 | exitcond_flatten_fu_2436_p2);

assign tmp_14_fu_2705_p2 = (p_shl_cast_fu_2697_p3 + tmp_16_fu_2689_p1);

assign tmp_15_cast_fu_2730_p1 = tmp_15_reg_3194;

assign tmp_15_fu_2711_p2 = (tmp_18_reg_3174 + tmp_14_fu_2705_p2);

assign tmp_16_fu_2689_p1 = tmp_7_mid2_fu_2683_p3[5:0];

assign tmp_17_fu_2693_p1 = tmp_7_mid2_fu_2683_p3[3:0];

assign tmp_18_fu_2646_p1 = kc_mid2_fu_2622_p3[5:0];

assign tmp_19_fu_2861_p1 = weight_tmp_buffer_q0[7:0];

assign tmp_1_fu_2540_p2 = (exitcond_flatten_mid_2_fu_2514_p3 | exitcond_flatten_fu_2436_p2);

assign tmp_2_dup_fu_2535_p2 = ($signed(tmp_5_reg_3073) + $signed(weight_tmp_offset_1_s_fu_2449_p3));

assign tmp_2_fu_2337_p1 = TN[30:0];

assign tmp_3_dup_fu_2605_p1 = k;

assign tmp_3_dup_fu_2605_p2 = ($signed(weight_tmp_offset_2_1_fu_2554_p3) + $signed(tmp_3_dup_fu_2605_p1));

assign tmp_3_fu_2610_p2 = (exitcond_mid2_fu_2582_p3 | exitcond_flatten_mid_2_fu_2514_p3);

assign tmp_4_fu_2360_p0 = k;

assign tmp_4_fu_2360_p2 = (($signed(tmp_4_fu_2360_p0) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign tmp_5_fu_2379_p0 = k;

assign tmp_5_fu_2379_p1 = tmp_5_fu_2379_p10;

assign tmp_5_fu_2379_p10 = smax_fu_2368_p3;

assign tmp_5_fu_2379_p2 = ($signed(tmp_5_fu_2379_p0) * $signed({{1'b0}, {tmp_5_fu_2379_p1}}));

assign tmp_6_fu_2332_p2 = (($signed(TN) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign tmp_7_fu_2481_p1 = tm_t_mid2_v_fu_2473_p3[4:0];

assign tmp_7_mid2_fu_2683_p3 = ((exitcond_mid2_reg_3143[0:0] === 1'b1) ? kr_1_fu_2678_p2 : kr_mid_reg_3133);

assign tmp_8_fu_2399_p1 = tmp_8_fu_2399_p10;

assign tmp_8_fu_2399_p10 = smax1_reg_3047;

assign tmp_8_fu_2399_p2 = ($signed(tmp_5_reg_3073) * $signed({{1'b0}, {tmp_8_fu_2399_p1}}));

assign tmp_9_fu_2485_p1 = ap_phi_mux_tn_phi_fu_2209_p4[1:0];

assign tmp_cast_fu_2282_p1 = $signed(offset);

assign tmp_fu_2365_p0 = k;

assign tmp_fu_2365_p1 = tmp_fu_2365_p0[30:0];

assign tn_1_fu_2529_p2 = (31'd1 + tn_mid_fu_2441_p3);

assign tn_mid2_fu_2589_p3 = ((exitcond_flatten_mid_2_fu_2514_p3[0:0] === 1'b1) ? tn_1_fu_2529_p2 : tn_mid_fu_2441_p3);

assign tn_mid_fu_2441_p3 = ((exitcond_flatten_fu_2436_p2[0:0] === 1'b1) ? 31'd0 : ap_phi_mux_tn_phi_fu_2209_p4);

assign tn_t_mid2_fu_2574_p3 = ((exitcond_flatten_mid_2_fu_2514_p3[0:0] === 1'b1) ? tmp_10_fu_2570_p1 : tn_t_mid_fu_2489_p3);

assign tn_t_mid_fu_2489_p3 = ((exitcond_flatten_fu_2436_p2[0:0] === 1'b1) ? 2'd0 : tmp_9_fu_2485_p1);

assign weight_buffer_0_0_V_address0 = tmp_15_cast_fu_2730_p1;

assign weight_buffer_0_0_V_d0 = tmp_19_fu_2861_p1;

assign weight_buffer_0_10_V_address0 = tmp_15_cast_fu_2730_p1;

assign weight_buffer_0_10_V_d0 = tmp_19_fu_2861_p1;

assign weight_buffer_0_11_V_address0 = tmp_15_cast_fu_2730_p1;

assign weight_buffer_0_11_V_d0 = tmp_19_fu_2861_p1;

assign weight_buffer_0_12_V_address0 = tmp_15_cast_fu_2730_p1;

assign weight_buffer_0_12_V_d0 = tmp_19_fu_2861_p1;

assign weight_buffer_0_13_V_address0 = tmp_15_cast_fu_2730_p1;

assign weight_buffer_0_13_V_d0 = tmp_19_fu_2861_p1;

assign weight_buffer_0_14_V_address0 = tmp_15_cast_fu_2730_p1;

assign weight_buffer_0_14_V_d0 = tmp_19_fu_2861_p1;

assign weight_buffer_0_15_V_address0 = tmp_15_cast_fu_2730_p1;

assign weight_buffer_0_15_V_d0 = tmp_19_fu_2861_p1;

assign weight_buffer_0_16_V_address0 = tmp_15_cast_fu_2730_p1;

assign weight_buffer_0_16_V_d0 = tmp_19_fu_2861_p1;

assign weight_buffer_0_17_V_address0 = tmp_15_cast_fu_2730_p1;

assign weight_buffer_0_17_V_d0 = tmp_19_fu_2861_p1;

assign weight_buffer_0_18_V_address0 = tmp_15_cast_fu_2730_p1;

assign weight_buffer_0_18_V_d0 = tmp_19_fu_2861_p1;

assign weight_buffer_0_19_V_address0 = tmp_15_cast_fu_2730_p1;

assign weight_buffer_0_19_V_d0 = tmp_19_fu_2861_p1;

assign weight_buffer_0_1_V_address0 = tmp_15_cast_fu_2730_p1;

assign weight_buffer_0_1_V_d0 = tmp_19_fu_2861_p1;

assign weight_buffer_0_20_V_address0 = tmp_15_cast_fu_2730_p1;

assign weight_buffer_0_20_V_d0 = tmp_19_fu_2861_p1;

assign weight_buffer_0_21_V_address0 = tmp_15_cast_fu_2730_p1;

assign weight_buffer_0_21_V_d0 = tmp_19_fu_2861_p1;

assign weight_buffer_0_22_V_address0 = tmp_15_cast_fu_2730_p1;

assign weight_buffer_0_22_V_d0 = tmp_19_fu_2861_p1;

assign weight_buffer_0_23_V_address0 = tmp_15_cast_fu_2730_p1;

assign weight_buffer_0_23_V_d0 = tmp_19_fu_2861_p1;

assign weight_buffer_0_24_V_address0 = tmp_15_cast_fu_2730_p1;

assign weight_buffer_0_24_V_d0 = tmp_19_fu_2861_p1;

assign weight_buffer_0_25_V_address0 = tmp_15_cast_fu_2730_p1;

assign weight_buffer_0_25_V_d0 = tmp_19_fu_2861_p1;

assign weight_buffer_0_26_V_address0 = tmp_15_cast_fu_2730_p1;

assign weight_buffer_0_26_V_d0 = tmp_19_fu_2861_p1;

assign weight_buffer_0_27_V_address0 = tmp_15_cast_fu_2730_p1;

assign weight_buffer_0_27_V_d0 = tmp_19_fu_2861_p1;

assign weight_buffer_0_28_V_address0 = tmp_15_cast_fu_2730_p1;

assign weight_buffer_0_28_V_d0 = tmp_19_fu_2861_p1;

assign weight_buffer_0_29_V_address0 = tmp_15_cast_fu_2730_p1;

assign weight_buffer_0_29_V_d0 = tmp_19_fu_2861_p1;

assign weight_buffer_0_2_V_address0 = tmp_15_cast_fu_2730_p1;

assign weight_buffer_0_2_V_d0 = tmp_19_fu_2861_p1;

assign weight_buffer_0_30_V_address0 = tmp_15_cast_fu_2730_p1;

assign weight_buffer_0_30_V_d0 = tmp_19_fu_2861_p1;

assign weight_buffer_0_31_V_address0 = tmp_15_cast_fu_2730_p1;

assign weight_buffer_0_31_V_d0 = tmp_19_fu_2861_p1;

assign weight_buffer_0_3_V_address0 = tmp_15_cast_fu_2730_p1;

assign weight_buffer_0_3_V_d0 = tmp_19_fu_2861_p1;

assign weight_buffer_0_4_V_address0 = tmp_15_cast_fu_2730_p1;

assign weight_buffer_0_4_V_d0 = tmp_19_fu_2861_p1;

assign weight_buffer_0_5_V_address0 = tmp_15_cast_fu_2730_p1;

assign weight_buffer_0_5_V_d0 = tmp_19_fu_2861_p1;

assign weight_buffer_0_6_V_address0 = tmp_15_cast_fu_2730_p1;

assign weight_buffer_0_6_V_d0 = tmp_19_fu_2861_p1;

assign weight_buffer_0_7_V_address0 = tmp_15_cast_fu_2730_p1;

assign weight_buffer_0_7_V_d0 = tmp_19_fu_2861_p1;

assign weight_buffer_0_8_V_address0 = tmp_15_cast_fu_2730_p1;

assign weight_buffer_0_8_V_d0 = tmp_19_fu_2861_p1;

assign weight_buffer_0_9_V_address0 = tmp_15_cast_fu_2730_p1;

assign weight_buffer_0_9_V_d0 = tmp_19_fu_2861_p1;

assign weight_buffer_1_0_V_address0 = tmp_15_cast_fu_2730_p1;

assign weight_buffer_1_0_V_d0 = tmp_19_fu_2861_p1;

assign weight_buffer_1_10_V_address0 = tmp_15_cast_fu_2730_p1;

assign weight_buffer_1_10_V_d0 = tmp_19_fu_2861_p1;

assign weight_buffer_1_11_V_address0 = tmp_15_cast_fu_2730_p1;

assign weight_buffer_1_11_V_d0 = tmp_19_fu_2861_p1;

assign weight_buffer_1_12_V_address0 = tmp_15_cast_fu_2730_p1;

assign weight_buffer_1_12_V_d0 = tmp_19_fu_2861_p1;

assign weight_buffer_1_13_V_address0 = tmp_15_cast_fu_2730_p1;

assign weight_buffer_1_13_V_d0 = tmp_19_fu_2861_p1;

assign weight_buffer_1_14_V_address0 = tmp_15_cast_fu_2730_p1;

assign weight_buffer_1_14_V_d0 = tmp_19_fu_2861_p1;

assign weight_buffer_1_15_V_address0 = tmp_15_cast_fu_2730_p1;

assign weight_buffer_1_15_V_d0 = tmp_19_fu_2861_p1;

assign weight_buffer_1_16_V_address0 = tmp_15_cast_fu_2730_p1;

assign weight_buffer_1_16_V_d0 = tmp_19_fu_2861_p1;

assign weight_buffer_1_17_V_address0 = tmp_15_cast_fu_2730_p1;

assign weight_buffer_1_17_V_d0 = tmp_19_fu_2861_p1;

assign weight_buffer_1_18_V_address0 = tmp_15_cast_fu_2730_p1;

assign weight_buffer_1_18_V_d0 = tmp_19_fu_2861_p1;

assign weight_buffer_1_19_V_address0 = tmp_15_cast_fu_2730_p1;

assign weight_buffer_1_19_V_d0 = tmp_19_fu_2861_p1;

assign weight_buffer_1_1_V_address0 = tmp_15_cast_fu_2730_p1;

assign weight_buffer_1_1_V_d0 = tmp_19_fu_2861_p1;

assign weight_buffer_1_20_V_address0 = tmp_15_cast_fu_2730_p1;

assign weight_buffer_1_20_V_d0 = tmp_19_fu_2861_p1;

assign weight_buffer_1_21_V_address0 = tmp_15_cast_fu_2730_p1;

assign weight_buffer_1_21_V_d0 = tmp_19_fu_2861_p1;

assign weight_buffer_1_22_V_address0 = tmp_15_cast_fu_2730_p1;

assign weight_buffer_1_22_V_d0 = tmp_19_fu_2861_p1;

assign weight_buffer_1_23_V_address0 = tmp_15_cast_fu_2730_p1;

assign weight_buffer_1_23_V_d0 = tmp_19_fu_2861_p1;

assign weight_buffer_1_24_V_address0 = tmp_15_cast_fu_2730_p1;

assign weight_buffer_1_24_V_d0 = tmp_19_fu_2861_p1;

assign weight_buffer_1_25_V_address0 = tmp_15_cast_fu_2730_p1;

assign weight_buffer_1_25_V_d0 = tmp_19_fu_2861_p1;

assign weight_buffer_1_26_V_address0 = tmp_15_cast_fu_2730_p1;

assign weight_buffer_1_26_V_d0 = tmp_19_fu_2861_p1;

assign weight_buffer_1_27_V_address0 = tmp_15_cast_fu_2730_p1;

assign weight_buffer_1_27_V_d0 = tmp_19_fu_2861_p1;

assign weight_buffer_1_28_V_address0 = tmp_15_cast_fu_2730_p1;

assign weight_buffer_1_28_V_d0 = tmp_19_fu_2861_p1;

assign weight_buffer_1_29_V_address0 = tmp_15_cast_fu_2730_p1;

assign weight_buffer_1_29_V_d0 = tmp_19_fu_2861_p1;

assign weight_buffer_1_2_V_address0 = tmp_15_cast_fu_2730_p1;

assign weight_buffer_1_2_V_d0 = tmp_19_fu_2861_p1;

assign weight_buffer_1_30_V_address0 = tmp_15_cast_fu_2730_p1;

assign weight_buffer_1_30_V_d0 = tmp_19_fu_2861_p1;

assign weight_buffer_1_31_V_address0 = tmp_15_cast_fu_2730_p1;

assign weight_buffer_1_31_V_d0 = tmp_19_fu_2861_p1;

assign weight_buffer_1_3_V_address0 = tmp_15_cast_fu_2730_p1;

assign weight_buffer_1_3_V_d0 = tmp_19_fu_2861_p1;

assign weight_buffer_1_4_V_address0 = tmp_15_cast_fu_2730_p1;

assign weight_buffer_1_4_V_d0 = tmp_19_fu_2861_p1;

assign weight_buffer_1_5_V_address0 = tmp_15_cast_fu_2730_p1;

assign weight_buffer_1_5_V_d0 = tmp_19_fu_2861_p1;

assign weight_buffer_1_6_V_address0 = tmp_15_cast_fu_2730_p1;

assign weight_buffer_1_6_V_d0 = tmp_19_fu_2861_p1;

assign weight_buffer_1_7_V_address0 = tmp_15_cast_fu_2730_p1;

assign weight_buffer_1_7_V_d0 = tmp_19_fu_2861_p1;

assign weight_buffer_1_8_V_address0 = tmp_15_cast_fu_2730_p1;

assign weight_buffer_1_8_V_d0 = tmp_19_fu_2861_p1;

assign weight_buffer_1_9_V_address0 = tmp_15_cast_fu_2730_p1;

assign weight_buffer_1_9_V_d0 = tmp_19_fu_2861_p1;

assign weight_buffer_2_0_V_address0 = tmp_15_cast_fu_2730_p1;

assign weight_buffer_2_0_V_d0 = tmp_19_fu_2861_p1;

assign weight_buffer_2_10_V_address0 = tmp_15_cast_fu_2730_p1;

assign weight_buffer_2_10_V_d0 = tmp_19_fu_2861_p1;

assign weight_buffer_2_11_V_address0 = tmp_15_cast_fu_2730_p1;

assign weight_buffer_2_11_V_d0 = tmp_19_fu_2861_p1;

assign weight_buffer_2_12_V_address0 = tmp_15_cast_fu_2730_p1;

assign weight_buffer_2_12_V_d0 = tmp_19_fu_2861_p1;

assign weight_buffer_2_13_V_address0 = tmp_15_cast_fu_2730_p1;

assign weight_buffer_2_13_V_d0 = tmp_19_fu_2861_p1;

assign weight_buffer_2_14_V_address0 = tmp_15_cast_fu_2730_p1;

assign weight_buffer_2_14_V_d0 = tmp_19_fu_2861_p1;

assign weight_buffer_2_15_V_address0 = tmp_15_cast_fu_2730_p1;

assign weight_buffer_2_15_V_d0 = tmp_19_fu_2861_p1;

assign weight_buffer_2_16_V_address0 = tmp_15_cast_fu_2730_p1;

assign weight_buffer_2_16_V_d0 = tmp_19_fu_2861_p1;

assign weight_buffer_2_17_V_address0 = tmp_15_cast_fu_2730_p1;

assign weight_buffer_2_17_V_d0 = tmp_19_fu_2861_p1;

assign weight_buffer_2_18_V_address0 = tmp_15_cast_fu_2730_p1;

assign weight_buffer_2_18_V_d0 = tmp_19_fu_2861_p1;

assign weight_buffer_2_19_V_address0 = tmp_15_cast_fu_2730_p1;

assign weight_buffer_2_19_V_d0 = tmp_19_fu_2861_p1;

assign weight_buffer_2_1_V_address0 = tmp_15_cast_fu_2730_p1;

assign weight_buffer_2_1_V_d0 = tmp_19_fu_2861_p1;

assign weight_buffer_2_20_V_address0 = tmp_15_cast_fu_2730_p1;

assign weight_buffer_2_20_V_d0 = tmp_19_fu_2861_p1;

assign weight_buffer_2_21_V_address0 = tmp_15_cast_fu_2730_p1;

assign weight_buffer_2_21_V_d0 = tmp_19_fu_2861_p1;

assign weight_buffer_2_22_V_address0 = tmp_15_cast_fu_2730_p1;

assign weight_buffer_2_22_V_d0 = tmp_19_fu_2861_p1;

assign weight_buffer_2_23_V_address0 = tmp_15_cast_fu_2730_p1;

assign weight_buffer_2_23_V_d0 = tmp_19_fu_2861_p1;

assign weight_buffer_2_24_V_address0 = tmp_15_cast_fu_2730_p1;

assign weight_buffer_2_24_V_d0 = tmp_19_fu_2861_p1;

assign weight_buffer_2_25_V_address0 = tmp_15_cast_fu_2730_p1;

assign weight_buffer_2_25_V_d0 = tmp_19_fu_2861_p1;

assign weight_buffer_2_26_V_address0 = tmp_15_cast_fu_2730_p1;

assign weight_buffer_2_26_V_d0 = tmp_19_fu_2861_p1;

assign weight_buffer_2_27_V_address0 = tmp_15_cast_fu_2730_p1;

assign weight_buffer_2_27_V_d0 = tmp_19_fu_2861_p1;

assign weight_buffer_2_28_V_address0 = tmp_15_cast_fu_2730_p1;

assign weight_buffer_2_28_V_d0 = tmp_19_fu_2861_p1;

assign weight_buffer_2_29_V_address0 = tmp_15_cast_fu_2730_p1;

assign weight_buffer_2_29_V_d0 = tmp_19_fu_2861_p1;

assign weight_buffer_2_2_V_address0 = tmp_15_cast_fu_2730_p1;

assign weight_buffer_2_2_V_d0 = tmp_19_fu_2861_p1;

assign weight_buffer_2_30_V_address0 = tmp_15_cast_fu_2730_p1;

assign weight_buffer_2_30_V_d0 = tmp_19_fu_2861_p1;

assign weight_buffer_2_31_V_address0 = tmp_15_cast_fu_2730_p1;

assign weight_buffer_2_31_V_d0 = tmp_19_fu_2861_p1;

assign weight_buffer_2_3_V_address0 = tmp_15_cast_fu_2730_p1;

assign weight_buffer_2_3_V_d0 = tmp_19_fu_2861_p1;

assign weight_buffer_2_4_V_address0 = tmp_15_cast_fu_2730_p1;

assign weight_buffer_2_4_V_d0 = tmp_19_fu_2861_p1;

assign weight_buffer_2_5_V_address0 = tmp_15_cast_fu_2730_p1;

assign weight_buffer_2_5_V_d0 = tmp_19_fu_2861_p1;

assign weight_buffer_2_6_V_address0 = tmp_15_cast_fu_2730_p1;

assign weight_buffer_2_6_V_d0 = tmp_19_fu_2861_p1;

assign weight_buffer_2_7_V_address0 = tmp_15_cast_fu_2730_p1;

assign weight_buffer_2_7_V_d0 = tmp_19_fu_2861_p1;

assign weight_buffer_2_8_V_address0 = tmp_15_cast_fu_2730_p1;

assign weight_buffer_2_8_V_d0 = tmp_19_fu_2861_p1;

assign weight_buffer_2_9_V_address0 = tmp_15_cast_fu_2730_p1;

assign weight_buffer_2_9_V_d0 = tmp_19_fu_2861_p1;

assign weight_buffer_3_0_V_address0 = tmp_15_cast_fu_2730_p1;

assign weight_buffer_3_0_V_d0 = tmp_19_fu_2861_p1;

assign weight_buffer_3_10_V_address0 = tmp_15_cast_fu_2730_p1;

assign weight_buffer_3_10_V_d0 = tmp_19_fu_2861_p1;

assign weight_buffer_3_11_V_address0 = tmp_15_cast_fu_2730_p1;

assign weight_buffer_3_11_V_d0 = tmp_19_fu_2861_p1;

assign weight_buffer_3_12_V_address0 = tmp_15_cast_fu_2730_p1;

assign weight_buffer_3_12_V_d0 = tmp_19_fu_2861_p1;

assign weight_buffer_3_13_V_address0 = tmp_15_cast_fu_2730_p1;

assign weight_buffer_3_13_V_d0 = tmp_19_fu_2861_p1;

assign weight_buffer_3_14_V_address0 = tmp_15_cast_fu_2730_p1;

assign weight_buffer_3_14_V_d0 = tmp_19_fu_2861_p1;

assign weight_buffer_3_15_V_address0 = tmp_15_cast_fu_2730_p1;

assign weight_buffer_3_15_V_d0 = tmp_19_fu_2861_p1;

assign weight_buffer_3_16_V_address0 = tmp_15_cast_fu_2730_p1;

assign weight_buffer_3_16_V_d0 = tmp_19_fu_2861_p1;

assign weight_buffer_3_17_V_address0 = tmp_15_cast_fu_2730_p1;

assign weight_buffer_3_17_V_d0 = tmp_19_fu_2861_p1;

assign weight_buffer_3_18_V_address0 = tmp_15_cast_fu_2730_p1;

assign weight_buffer_3_18_V_d0 = tmp_19_fu_2861_p1;

assign weight_buffer_3_19_V_address0 = tmp_15_cast_fu_2730_p1;

assign weight_buffer_3_19_V_d0 = tmp_19_fu_2861_p1;

assign weight_buffer_3_1_V_address0 = tmp_15_cast_fu_2730_p1;

assign weight_buffer_3_1_V_d0 = tmp_19_fu_2861_p1;

assign weight_buffer_3_20_V_address0 = tmp_15_cast_fu_2730_p1;

assign weight_buffer_3_20_V_d0 = tmp_19_fu_2861_p1;

assign weight_buffer_3_21_V_address0 = tmp_15_cast_fu_2730_p1;

assign weight_buffer_3_21_V_d0 = tmp_19_fu_2861_p1;

assign weight_buffer_3_22_V_address0 = tmp_15_cast_fu_2730_p1;

assign weight_buffer_3_22_V_d0 = tmp_19_fu_2861_p1;

assign weight_buffer_3_23_V_address0 = tmp_15_cast_fu_2730_p1;

assign weight_buffer_3_23_V_d0 = tmp_19_fu_2861_p1;

assign weight_buffer_3_24_V_address0 = tmp_15_cast_fu_2730_p1;

assign weight_buffer_3_24_V_d0 = tmp_19_fu_2861_p1;

assign weight_buffer_3_25_V_address0 = tmp_15_cast_fu_2730_p1;

assign weight_buffer_3_25_V_d0 = tmp_19_fu_2861_p1;

assign weight_buffer_3_26_V_address0 = tmp_15_cast_fu_2730_p1;

assign weight_buffer_3_26_V_d0 = tmp_19_fu_2861_p1;

assign weight_buffer_3_27_V_address0 = tmp_15_cast_fu_2730_p1;

assign weight_buffer_3_27_V_d0 = tmp_19_fu_2861_p1;

assign weight_buffer_3_28_V_address0 = tmp_15_cast_fu_2730_p1;

assign weight_buffer_3_28_V_d0 = tmp_19_fu_2861_p1;

assign weight_buffer_3_29_V_address0 = tmp_15_cast_fu_2730_p1;

assign weight_buffer_3_29_V_d0 = tmp_19_fu_2861_p1;

assign weight_buffer_3_2_V_address0 = tmp_15_cast_fu_2730_p1;

assign weight_buffer_3_2_V_d0 = tmp_19_fu_2861_p1;

assign weight_buffer_3_30_V_address0 = tmp_15_cast_fu_2730_p1;

assign weight_buffer_3_30_V_d0 = tmp_19_fu_2861_p1;

assign weight_buffer_3_31_V_address0 = tmp_15_cast_fu_2730_p1;

assign weight_buffer_3_31_V_d0 = tmp_19_fu_2861_p1;

assign weight_buffer_3_3_V_address0 = tmp_15_cast_fu_2730_p1;

assign weight_buffer_3_3_V_d0 = tmp_19_fu_2861_p1;

assign weight_buffer_3_4_V_address0 = tmp_15_cast_fu_2730_p1;

assign weight_buffer_3_4_V_d0 = tmp_19_fu_2861_p1;

assign weight_buffer_3_5_V_address0 = tmp_15_cast_fu_2730_p1;

assign weight_buffer_3_5_V_d0 = tmp_19_fu_2861_p1;

assign weight_buffer_3_6_V_address0 = tmp_15_cast_fu_2730_p1;

assign weight_buffer_3_6_V_d0 = tmp_19_fu_2861_p1;

assign weight_buffer_3_7_V_address0 = tmp_15_cast_fu_2730_p1;

assign weight_buffer_3_7_V_d0 = tmp_19_fu_2861_p1;

assign weight_buffer_3_8_V_address0 = tmp_15_cast_fu_2730_p1;

assign weight_buffer_3_8_V_d0 = tmp_19_fu_2861_p1;

assign weight_buffer_3_9_V_address0 = tmp_15_cast_fu_2730_p1;

assign weight_buffer_3_9_V_d0 = tmp_19_fu_2861_p1;

assign weight_tmp_offset_1_1_fu_2597_p3 = ((exitcond_flatten_mid_2_fu_2514_p3[0:0] === 1'b1) ? tmp_2_dup_fu_2535_p2 : weight_tmp_offset_1_s_fu_2449_p3);

assign weight_tmp_offset_1_s_fu_2449_p3 = ((exitcond_flatten_fu_2436_p2[0:0] === 1'b1) ? weight_tmp_offset_4_s_fu_2431_p2 : ap_phi_mux_weight_tmp_offset_1_phi_fu_2220_p4);

assign weight_tmp_offset_2_1_fu_2554_p3 = ((exitcond_flatten_mid_2_fu_2514_p3[0:0] === 1'b1) ? tmp_2_dup_fu_2535_p2 : weight_tmp_offset_2_s_fu_2457_p3);

assign weight_tmp_offset_2_2_fu_2638_p3 = ((exitcond_mid2_fu_2582_p3[0:0] === 1'b1) ? tmp_3_dup_fu_2605_p2 : weight_tmp_offset_2_1_fu_2554_p3);

assign weight_tmp_offset_2_s_fu_2457_p3 = ((exitcond_flatten_fu_2436_p2[0:0] === 1'b1) ? weight_tmp_offset_4_s_fu_2431_p2 : ap_phi_mux_weight_tmp_offset_2_phi_fu_2253_p4);

assign weight_tmp_offset_3_1_fu_2562_p3 = ((exitcond_flatten_mid_2_fu_2514_p3[0:0] === 1'b1) ? tmp_2_dup_fu_2535_p2 : weight_tmp_offset_3_s_fu_2465_p3);

assign weight_tmp_offset_3_2_fu_2630_p3 = ((exitcond_mid2_fu_2582_p3[0:0] === 1'b1) ? tmp_3_dup_fu_2605_p2 : weight_tmp_offset_3_1_fu_2562_p3);

assign weight_tmp_offset_3_s_fu_2465_p3 = ((exitcond_flatten_fu_2436_p2[0:0] === 1'b1) ? weight_tmp_offset_4_s_fu_2431_p2 : ap_phi_mux_weight_tmp_offset_3_phi_fu_2275_p4);

assign weight_tmp_offset_4_s_fu_2431_p2 = (tmp_8_reg_3089 + ap_phi_mux_weight_tmp_offset_phi_fu_2187_p4);

assign weight_tmp_offset_mi_fu_2521_p3 = ((exitcond_flatten_fu_2436_p2[0:0] === 1'b1) ? weight_tmp_offset_4_s_fu_2431_p2 : ap_phi_mux_weight_tmp_offset_phi_fu_2187_p4);

endmodule //weight_load
