// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.3
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module relu (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        input_0_address0,
        input_0_ce0,
        input_0_we0,
        input_0_d0,
        input_0_q0,
        input_1_address0,
        input_1_ce0,
        input_1_we0,
        input_1_d0,
        input_1_q0,
        input_2_address0,
        input_2_ce0,
        input_2_we0,
        input_2_d0,
        input_2_q0,
        input_3_address0,
        input_3_ce0,
        input_3_we0,
        input_3_d0,
        input_3_q0,
        input_4_address0,
        input_4_ce0,
        input_4_we0,
        input_4_d0,
        input_4_q0,
        input_5_address0,
        input_5_ce0,
        input_5_we0,
        input_5_d0,
        input_5_q0,
        input_6_address0,
        input_6_ce0,
        input_6_we0,
        input_6_d0,
        input_6_q0,
        input_7_address0,
        input_7_ce0,
        input_7_we0,
        input_7_d0,
        input_7_q0,
        input_8_address0,
        input_8_ce0,
        input_8_we0,
        input_8_d0,
        input_8_q0,
        input_9_address0,
        input_9_ce0,
        input_9_we0,
        input_9_d0,
        input_9_q0,
        input_10_address0,
        input_10_ce0,
        input_10_we0,
        input_10_d0,
        input_10_q0,
        input_11_address0,
        input_11_ce0,
        input_11_we0,
        input_11_d0,
        input_11_q0,
        input_12_address0,
        input_12_ce0,
        input_12_we0,
        input_12_d0,
        input_12_q0,
        input_13_address0,
        input_13_ce0,
        input_13_we0,
        input_13_d0,
        input_13_q0,
        input_14_address0,
        input_14_ce0,
        input_14_we0,
        input_14_d0,
        input_14_q0,
        input_15_address0,
        input_15_ce0,
        input_15_we0,
        input_15_d0,
        input_15_q0,
        input_16_address0,
        input_16_ce0,
        input_16_we0,
        input_16_d0,
        input_16_q0,
        input_17_address0,
        input_17_ce0,
        input_17_we0,
        input_17_d0,
        input_17_q0,
        input_18_address0,
        input_18_ce0,
        input_18_we0,
        input_18_d0,
        input_18_q0,
        input_19_address0,
        input_19_ce0,
        input_19_we0,
        input_19_d0,
        input_19_q0,
        input_20_address0,
        input_20_ce0,
        input_20_we0,
        input_20_d0,
        input_20_q0,
        input_21_address0,
        input_21_ce0,
        input_21_we0,
        input_21_d0,
        input_21_q0,
        input_22_address0,
        input_22_ce0,
        input_22_we0,
        input_22_d0,
        input_22_q0,
        input_23_address0,
        input_23_ce0,
        input_23_we0,
        input_23_d0,
        input_23_q0,
        input_24_address0,
        input_24_ce0,
        input_24_we0,
        input_24_d0,
        input_24_q0,
        input_25_address0,
        input_25_ce0,
        input_25_we0,
        input_25_d0,
        input_25_q0,
        input_26_address0,
        input_26_ce0,
        input_26_we0,
        input_26_d0,
        input_26_q0,
        input_27_address0,
        input_27_ce0,
        input_27_we0,
        input_27_d0,
        input_27_q0,
        input_28_address0,
        input_28_ce0,
        input_28_we0,
        input_28_d0,
        input_28_q0,
        input_29_address0,
        input_29_ce0,
        input_29_we0,
        input_29_d0,
        input_29_q0,
        input_30_address0,
        input_30_ce0,
        input_30_we0,
        input_30_d0,
        input_30_q0,
        input_31_address0,
        input_31_ce0,
        input_31_we0,
        input_31_d0,
        input_31_q0,
        TR,
        TC,
        enable,
        M
);

parameter    ap_ST_fsm_state1 = 6'd1;
parameter    ap_ST_fsm_pp0_stage0 = 6'd2;
parameter    ap_ST_fsm_pp0_stage1 = 6'd4;
parameter    ap_ST_fsm_pp0_stage2 = 6'd8;
parameter    ap_ST_fsm_pp0_stage3 = 6'd16;
parameter    ap_ST_fsm_state7 = 6'd32;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [9:0] input_0_address0;
output   input_0_ce0;
output   input_0_we0;
output  [31:0] input_0_d0;
input  [31:0] input_0_q0;
output  [9:0] input_1_address0;
output   input_1_ce0;
output   input_1_we0;
output  [31:0] input_1_d0;
input  [31:0] input_1_q0;
output  [9:0] input_2_address0;
output   input_2_ce0;
output   input_2_we0;
output  [31:0] input_2_d0;
input  [31:0] input_2_q0;
output  [9:0] input_3_address0;
output   input_3_ce0;
output   input_3_we0;
output  [31:0] input_3_d0;
input  [31:0] input_3_q0;
output  [9:0] input_4_address0;
output   input_4_ce0;
output   input_4_we0;
output  [31:0] input_4_d0;
input  [31:0] input_4_q0;
output  [9:0] input_5_address0;
output   input_5_ce0;
output   input_5_we0;
output  [31:0] input_5_d0;
input  [31:0] input_5_q0;
output  [9:0] input_6_address0;
output   input_6_ce0;
output   input_6_we0;
output  [31:0] input_6_d0;
input  [31:0] input_6_q0;
output  [9:0] input_7_address0;
output   input_7_ce0;
output   input_7_we0;
output  [31:0] input_7_d0;
input  [31:0] input_7_q0;
output  [9:0] input_8_address0;
output   input_8_ce0;
output   input_8_we0;
output  [31:0] input_8_d0;
input  [31:0] input_8_q0;
output  [9:0] input_9_address0;
output   input_9_ce0;
output   input_9_we0;
output  [31:0] input_9_d0;
input  [31:0] input_9_q0;
output  [9:0] input_10_address0;
output   input_10_ce0;
output   input_10_we0;
output  [31:0] input_10_d0;
input  [31:0] input_10_q0;
output  [9:0] input_11_address0;
output   input_11_ce0;
output   input_11_we0;
output  [31:0] input_11_d0;
input  [31:0] input_11_q0;
output  [9:0] input_12_address0;
output   input_12_ce0;
output   input_12_we0;
output  [31:0] input_12_d0;
input  [31:0] input_12_q0;
output  [9:0] input_13_address0;
output   input_13_ce0;
output   input_13_we0;
output  [31:0] input_13_d0;
input  [31:0] input_13_q0;
output  [9:0] input_14_address0;
output   input_14_ce0;
output   input_14_we0;
output  [31:0] input_14_d0;
input  [31:0] input_14_q0;
output  [9:0] input_15_address0;
output   input_15_ce0;
output   input_15_we0;
output  [31:0] input_15_d0;
input  [31:0] input_15_q0;
output  [9:0] input_16_address0;
output   input_16_ce0;
output   input_16_we0;
output  [31:0] input_16_d0;
input  [31:0] input_16_q0;
output  [9:0] input_17_address0;
output   input_17_ce0;
output   input_17_we0;
output  [31:0] input_17_d0;
input  [31:0] input_17_q0;
output  [9:0] input_18_address0;
output   input_18_ce0;
output   input_18_we0;
output  [31:0] input_18_d0;
input  [31:0] input_18_q0;
output  [9:0] input_19_address0;
output   input_19_ce0;
output   input_19_we0;
output  [31:0] input_19_d0;
input  [31:0] input_19_q0;
output  [9:0] input_20_address0;
output   input_20_ce0;
output   input_20_we0;
output  [31:0] input_20_d0;
input  [31:0] input_20_q0;
output  [9:0] input_21_address0;
output   input_21_ce0;
output   input_21_we0;
output  [31:0] input_21_d0;
input  [31:0] input_21_q0;
output  [9:0] input_22_address0;
output   input_22_ce0;
output   input_22_we0;
output  [31:0] input_22_d0;
input  [31:0] input_22_q0;
output  [9:0] input_23_address0;
output   input_23_ce0;
output   input_23_we0;
output  [31:0] input_23_d0;
input  [31:0] input_23_q0;
output  [9:0] input_24_address0;
output   input_24_ce0;
output   input_24_we0;
output  [31:0] input_24_d0;
input  [31:0] input_24_q0;
output  [9:0] input_25_address0;
output   input_25_ce0;
output   input_25_we0;
output  [31:0] input_25_d0;
input  [31:0] input_25_q0;
output  [9:0] input_26_address0;
output   input_26_ce0;
output   input_26_we0;
output  [31:0] input_26_d0;
input  [31:0] input_26_q0;
output  [9:0] input_27_address0;
output   input_27_ce0;
output   input_27_we0;
output  [31:0] input_27_d0;
input  [31:0] input_27_q0;
output  [9:0] input_28_address0;
output   input_28_ce0;
output   input_28_we0;
output  [31:0] input_28_d0;
input  [31:0] input_28_q0;
output  [9:0] input_29_address0;
output   input_29_ce0;
output   input_29_we0;
output  [31:0] input_29_d0;
input  [31:0] input_29_q0;
output  [9:0] input_30_address0;
output   input_30_ce0;
output   input_30_we0;
output  [31:0] input_30_d0;
input  [31:0] input_30_q0;
output  [9:0] input_31_address0;
output   input_31_ce0;
output   input_31_we0;
output  [31:0] input_31_d0;
input  [31:0] input_31_q0;
input  [31:0] TR;
input  [31:0] TC;
input   enable;
input  [31:0] M;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[9:0] input_0_address0;
reg input_0_ce0;
reg input_0_we0;
reg[9:0] input_1_address0;
reg input_1_ce0;
reg input_1_we0;
reg[9:0] input_2_address0;
reg input_2_ce0;
reg input_2_we0;
reg[9:0] input_3_address0;
reg input_3_ce0;
reg input_3_we0;
reg[9:0] input_4_address0;
reg input_4_ce0;
reg input_4_we0;
reg[9:0] input_5_address0;
reg input_5_ce0;
reg input_5_we0;
reg[9:0] input_6_address0;
reg input_6_ce0;
reg input_6_we0;
reg[9:0] input_7_address0;
reg input_7_ce0;
reg input_7_we0;
reg[9:0] input_8_address0;
reg input_8_ce0;
reg input_8_we0;
reg[9:0] input_9_address0;
reg input_9_ce0;
reg input_9_we0;
reg[9:0] input_10_address0;
reg input_10_ce0;
reg input_10_we0;
reg[9:0] input_11_address0;
reg input_11_ce0;
reg input_11_we0;
reg[9:0] input_12_address0;
reg input_12_ce0;
reg input_12_we0;
reg[9:0] input_13_address0;
reg input_13_ce0;
reg input_13_we0;
reg[9:0] input_14_address0;
reg input_14_ce0;
reg input_14_we0;
reg[9:0] input_15_address0;
reg input_15_ce0;
reg input_15_we0;
reg[9:0] input_16_address0;
reg input_16_ce0;
reg input_16_we0;
reg[9:0] input_17_address0;
reg input_17_ce0;
reg input_17_we0;
reg[9:0] input_18_address0;
reg input_18_ce0;
reg input_18_we0;
reg[9:0] input_19_address0;
reg input_19_ce0;
reg input_19_we0;
reg[9:0] input_20_address0;
reg input_20_ce0;
reg input_20_we0;
reg[9:0] input_21_address0;
reg input_21_ce0;
reg input_21_we0;
reg[9:0] input_22_address0;
reg input_22_ce0;
reg input_22_we0;
reg[9:0] input_23_address0;
reg input_23_ce0;
reg input_23_we0;
reg[9:0] input_24_address0;
reg input_24_ce0;
reg input_24_we0;
reg[9:0] input_25_address0;
reg input_25_ce0;
reg input_25_we0;
reg[9:0] input_26_address0;
reg input_26_ce0;
reg input_26_we0;
reg[9:0] input_27_address0;
reg input_27_ce0;
reg input_27_we0;
reg[9:0] input_28_address0;
reg input_28_ce0;
reg input_28_we0;
reg[9:0] input_29_address0;
reg input_29_ce0;
reg input_29_we0;
reg[9:0] input_30_address0;
reg input_30_ce0;
reg input_30_we0;
reg[9:0] input_31_address0;
reg input_31_ce0;
reg input_31_we0;

(* fsm_encoding = "none" *) reg   [5:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [65:0] indvar_flatten3_reg_578;
reg   [30:0] tr_reg_589;
reg   [34:0] indvar_flatten_reg_600;
reg   [30:0] tc_reg_611;
reg   [2:0] tm0_reg_622;
reg  signed [31:0] tmp_1_0_phi_reg_633;
wire   [0:0] enable_read_read_fu_144_p2;
wire   [34:0] bound_fu_659_p1;
reg   [34:0] bound_reg_1347;
wire   [65:0] bound2_fu_671_p2;
reg   [65:0] bound2_reg_1352;
wire   [0:0] exitcond_flatten3_fu_677_p2;
reg   [0:0] exitcond_flatten3_reg_1357;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state2_pp0_stage0_iter0;
wire    ap_block_state6_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_11001;
wire   [65:0] indvar_flatten_next3_fu_682_p2;
reg   [65:0] indvar_flatten_next3_reg_1361;
reg    ap_enable_reg_pp0_iter0;
wire   [0:0] exitcond_flatten_fu_694_p2;
reg   [0:0] exitcond_flatten_reg_1366;
wire   [30:0] tmp_mid2_v_fu_707_p3;
reg   [30:0] tmp_mid2_v_reg_1371;
wire   [2:0] tm0_mid2_fu_757_p3;
reg   [2:0] tm0_mid2_reg_1376;
wire   [11:0] tmp_16_fu_789_p2;
reg   [11:0] tmp_16_reg_1381;
wire   [30:0] tc_mid2_fu_795_p3;
reg   [30:0] tc_mid2_reg_1386;
wire   [1:0] tmp_35_fu_803_p1;
reg   [1:0] tmp_35_reg_1391;
wire   [34:0] indvar_flatten_op_fu_807_p2;
reg   [34:0] indvar_flatten_op_reg_1398;
reg   [9:0] input_0_addr_reg_1403;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_state3_pp0_stage1_iter0;
wire    ap_block_pp0_stage1_11001;
reg   [9:0] input_1_addr_reg_1408;
reg   [9:0] input_2_addr_reg_1413;
reg   [9:0] input_3_addr_reg_1418;
reg   [9:0] input_4_addr_reg_1423;
reg   [9:0] input_5_addr_reg_1428;
reg   [9:0] input_6_addr_reg_1433;
reg   [9:0] input_7_addr_reg_1438;
reg   [9:0] input_8_addr_reg_1443;
reg   [9:0] input_9_addr_reg_1448;
reg   [9:0] input_10_addr_reg_1453;
reg   [9:0] input_11_addr_reg_1458;
reg   [9:0] input_12_addr_reg_1463;
reg   [9:0] input_13_addr_reg_1468;
reg   [9:0] input_14_addr_reg_1473;
reg   [9:0] input_15_addr_reg_1478;
reg   [9:0] input_16_addr_reg_1483;
reg   [9:0] input_17_addr_reg_1488;
reg   [9:0] input_18_addr_reg_1493;
reg   [9:0] input_19_addr_reg_1498;
reg   [9:0] input_20_addr_reg_1503;
reg   [9:0] input_21_addr_reg_1508;
reg   [9:0] input_22_addr_reg_1513;
reg   [9:0] input_23_addr_reg_1518;
reg   [9:0] input_24_addr_reg_1523;
reg   [9:0] input_25_addr_reg_1528;
reg   [9:0] input_26_addr_reg_1533;
reg   [9:0] input_27_addr_reg_1538;
reg   [9:0] input_28_addr_reg_1543;
reg   [9:0] input_29_addr_reg_1548;
reg   [9:0] input_30_addr_reg_1553;
reg   [9:0] input_31_addr_reg_1558;
reg   [0:0] tmp_36_reg_1563;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_state4_pp0_stage2_iter0;
wire    ap_block_pp0_stage2_11001;
wire  signed [31:0] tmp_1_1_phi_fu_887_p3;
reg  signed [31:0] tmp_1_1_phi_reg_1568;
reg   [0:0] tmp_37_reg_1573;
wire  signed [31:0] tmp_1_2_phi_fu_919_p3;
reg  signed [31:0] tmp_1_2_phi_reg_1578;
reg   [0:0] tmp_38_reg_1583;
wire  signed [31:0] tmp_1_3_phi_fu_951_p3;
reg  signed [31:0] tmp_1_3_phi_reg_1588;
reg   [0:0] tmp_39_reg_1593;
wire  signed [31:0] tmp_1_4_phi_fu_983_p3;
reg  signed [31:0] tmp_1_4_phi_reg_1598;
reg   [0:0] tmp_40_reg_1603;
wire  signed [31:0] tmp_1_5_phi_fu_1015_p3;
reg  signed [31:0] tmp_1_5_phi_reg_1608;
reg   [0:0] tmp_41_reg_1613;
wire  signed [31:0] tmp_1_6_phi_fu_1047_p3;
reg  signed [31:0] tmp_1_6_phi_reg_1618;
reg   [0:0] tmp_42_reg_1623;
wire  signed [31:0] tmp_1_7_phi_fu_1079_p3;
reg  signed [31:0] tmp_1_7_phi_reg_1628;
reg   [0:0] tmp_43_reg_1633;
wire   [15:0] storemerge_fu_1110_p3;
reg   [15:0] storemerge_reg_1638;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_state5_pp0_stage3_iter0;
wire    ap_block_pp0_stage3_11001;
wire   [15:0] storemerge_1_fu_1131_p3;
reg   [15:0] storemerge_1_reg_1643;
wire   [15:0] storemerge_2_fu_1152_p3;
reg   [15:0] storemerge_2_reg_1648;
wire   [15:0] storemerge_3_fu_1173_p3;
reg   [15:0] storemerge_3_reg_1653;
wire   [15:0] storemerge_4_fu_1194_p3;
reg   [15:0] storemerge_4_reg_1658;
wire   [15:0] storemerge_5_fu_1215_p3;
reg   [15:0] storemerge_5_reg_1663;
wire   [15:0] storemerge_6_fu_1236_p3;
reg   [15:0] storemerge_6_reg_1668;
wire   [15:0] storemerge_7_fu_1257_p3;
reg   [15:0] storemerge_7_reg_1673;
wire   [2:0] tm0_1_fu_1264_p2;
reg   [2:0] tm0_1_reg_1678;
wire   [34:0] indvar_flatten_next_fu_1269_p3;
reg   [34:0] indvar_flatten_next_reg_1683;
wire    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state2;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage3_subdone;
reg   [65:0] ap_phi_mux_indvar_flatten3_phi_fu_582_p4;
wire    ap_block_pp0_stage0;
reg   [30:0] ap_phi_mux_tr_phi_fu_593_p4;
reg   [34:0] ap_phi_mux_indvar_flatten_phi_fu_604_p4;
reg   [30:0] ap_phi_mux_tc_phi_fu_615_p4;
reg   [2:0] ap_phi_mux_tm0_phi_fu_626_p4;
reg  signed [31:0] ap_phi_mux_tmp_1_0_phi_phi_fu_636_p8;
wire  signed [31:0] ap_phi_reg_pp0_iter0_tmp_1_0_phi_reg_633;
wire    ap_block_pp0_stage2;
wire   [63:0] tmp_26_cast_fu_813_p1;
wire    ap_block_pp0_stage1;
wire  signed [31:0] storemerge_cast_fu_1275_p1;
wire  signed [31:0] storemerge_1_cast_fu_1282_p1;
wire  signed [31:0] storemerge_2_cast_fu_1289_p1;
wire  signed [31:0] storemerge_3_cast_fu_1296_p1;
wire  signed [31:0] storemerge_4_cast_fu_1303_p1;
wire  signed [31:0] storemerge_5_cast_fu_1310_p1;
wire  signed [31:0] storemerge_6_cast_fu_1317_p1;
wire  signed [31:0] storemerge_7_cast_fu_1324_p1;
wire   [33:0] tmp_fu_651_p3;
wire   [31:0] bound2_fu_671_p0;
wire   [33:0] bound2_fu_671_p1;
wire   [30:0] tr_1_fu_688_p2;
wire   [6:0] tmp_30_fu_715_p1;
wire   [0:0] exitcond_fu_733_p2;
wire   [0:0] not_exitcond_flatten_fu_727_p2;
wire   [30:0] tc_mid_fu_699_p3;
wire   [0:0] exitcond1_mid_fu_739_p2;
wire   [0:0] tmp_s_fu_751_p2;
wire   [30:0] tc_1_fu_745_p2;
wire   [11:0] tmp_32_fu_769_p1;
wire   [11:0] tmp_31_fu_765_p1;
wire   [11:0] tmp_33_fu_773_p3;
wire   [11:0] tmp_22_cast_fu_719_p3;
wire   [11:0] tmp_34_fu_781_p3;
wire   [0:0] sel_tmp_fu_856_p2;
wire   [0:0] sel_tmp6_fu_869_p2;
wire   [31:0] sel_tmp5_fu_861_p3;
wire   [0:0] sel_tmp8_fu_882_p2;
wire   [31:0] sel_tmp7_fu_874_p3;
wire   [31:0] sel_tmp1_fu_903_p3;
wire   [31:0] sel_tmp2_fu_911_p3;
wire   [31:0] sel_tmp3_fu_935_p3;
wire   [31:0] sel_tmp4_fu_943_p3;
wire   [31:0] sel_tmp9_fu_967_p3;
wire   [31:0] sel_tmp10_fu_975_p3;
wire   [31:0] sel_tmp11_fu_999_p3;
wire   [31:0] sel_tmp12_fu_1007_p3;
wire   [31:0] sel_tmp13_fu_1031_p3;
wire   [31:0] sel_tmp14_fu_1039_p3;
wire   [31:0] sel_tmp15_fu_1063_p3;
wire   [31:0] sel_tmp16_fu_1071_p3;
wire  signed [31:0] tmp_17_fu_1095_p1;
wire    ap_block_pp0_stage3;
wire   [31:0] tmp_17_fu_1095_p2;
wire   [15:0] tmp_18_fu_1100_p4;
wire  signed [31:0] tmp_25_1_fu_1117_p1;
wire   [31:0] tmp_25_1_fu_1117_p2;
wire   [15:0] tmp_19_fu_1121_p4;
wire  signed [31:0] tmp_25_2_fu_1138_p1;
wire   [31:0] tmp_25_2_fu_1138_p2;
wire   [15:0] tmp_20_fu_1142_p4;
wire  signed [31:0] tmp_25_3_fu_1159_p1;
wire   [31:0] tmp_25_3_fu_1159_p2;
wire   [15:0] tmp_21_fu_1163_p4;
wire  signed [31:0] tmp_25_4_fu_1180_p1;
wire   [31:0] tmp_25_4_fu_1180_p2;
wire   [15:0] tmp_22_fu_1184_p4;
wire  signed [31:0] tmp_25_5_fu_1201_p1;
wire   [31:0] tmp_25_5_fu_1201_p2;
wire   [15:0] tmp_23_fu_1205_p4;
wire  signed [31:0] tmp_25_6_fu_1222_p1;
wire   [31:0] tmp_25_6_fu_1222_p2;
wire   [15:0] tmp_24_fu_1226_p4;
wire  signed [31:0] tmp_25_7_fu_1243_p1;
wire   [31:0] tmp_25_7_fu_1243_p2;
wire   [15:0] tmp_25_fu_1247_p4;
wire    ap_CS_fsm_state7;
reg   [5:0] ap_NS_fsm;
wire    ap_block_pp0_stage1_subdone;
wire    ap_block_pp0_stage2_subdone;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
wire   [65:0] bound2_fu_671_p00;
wire   [65:0] bound2_fu_671_p10;
reg    ap_condition_1002;
reg    ap_condition_536;

// power-on initialization
initial begin
#0 ap_CS_fsm = 6'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state2) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((enable_read_read_fu_144_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((((1'b0 == ap_block_pp0_stage3_subdone) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if (((enable_read_read_fu_144_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (exitcond_flatten3_reg_1357 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        indvar_flatten3_reg_578 <= indvar_flatten_next3_reg_1361;
    end else if (((enable_read_read_fu_144_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        indvar_flatten3_reg_578 <= 66'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (exitcond_flatten3_reg_1357 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        indvar_flatten_reg_600 <= indvar_flatten_next_reg_1683;
    end else if (((enable_read_read_fu_144_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        indvar_flatten_reg_600 <= 35'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (exitcond_flatten3_reg_1357 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tc_reg_611 <= tc_mid2_reg_1386;
    end else if (((enable_read_read_fu_144_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        tc_reg_611 <= 31'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (exitcond_flatten3_reg_1357 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tm0_reg_622 <= tm0_1_reg_1678;
    end else if (((enable_read_read_fu_144_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        tm0_reg_622 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_536)) begin
        if (((tmp_35_reg_1391 == 2'd3) & (exitcond_flatten3_reg_1357 == 1'd0))) begin
            tmp_1_0_phi_reg_633 <= input_24_q0;
        end else if (((tmp_35_reg_1391 == 2'd2) & (exitcond_flatten3_reg_1357 == 1'd0))) begin
            tmp_1_0_phi_reg_633 <= input_16_q0;
        end else if (((tmp_35_reg_1391 == 2'd1) & (exitcond_flatten3_reg_1357 == 1'd0))) begin
            tmp_1_0_phi_reg_633 <= input_8_q0;
        end else if (((tmp_35_reg_1391 == 2'd0) & (exitcond_flatten3_reg_1357 == 1'd0))) begin
            tmp_1_0_phi_reg_633 <= input_0_q0;
        end else if ((1'b1 == 1'b1)) begin
            tmp_1_0_phi_reg_633 <= ap_phi_reg_pp0_iter0_tmp_1_0_phi_reg_633;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (exitcond_flatten3_reg_1357 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tr_reg_589 <= tmp_mid2_v_reg_1371;
    end else if (((enable_read_read_fu_144_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        tr_reg_589 <= 31'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((enable_read_read_fu_144_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        bound2_reg_1352[65 : 2] <= bound2_fu_671_p2[65 : 2];
        bound_reg_1347[33 : 2] <= bound_fu_659_p1[33 : 2];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        exitcond_flatten3_reg_1357 <= exitcond_flatten3_fu_677_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (exitcond_flatten3_fu_677_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        exitcond_flatten_reg_1366 <= exitcond_flatten_fu_694_p2;
        indvar_flatten_op_reg_1398 <= indvar_flatten_op_fu_807_p2;
        tm0_mid2_reg_1376 <= tm0_mid2_fu_757_p3;
        tmp_16_reg_1381 <= tmp_16_fu_789_p2;
        tmp_35_reg_1391 <= tmp_35_fu_803_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        indvar_flatten_next3_reg_1361 <= indvar_flatten_next3_fu_682_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (exitcond_flatten3_reg_1357 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        indvar_flatten_next_reg_1683 <= indvar_flatten_next_fu_1269_p3;
        tm0_1_reg_1678 <= tm0_1_fu_1264_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (exitcond_flatten3_reg_1357 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        input_0_addr_reg_1403 <= tmp_26_cast_fu_813_p1;
        input_10_addr_reg_1453 <= tmp_26_cast_fu_813_p1;
        input_11_addr_reg_1458 <= tmp_26_cast_fu_813_p1;
        input_12_addr_reg_1463 <= tmp_26_cast_fu_813_p1;
        input_13_addr_reg_1468 <= tmp_26_cast_fu_813_p1;
        input_14_addr_reg_1473 <= tmp_26_cast_fu_813_p1;
        input_15_addr_reg_1478 <= tmp_26_cast_fu_813_p1;
        input_16_addr_reg_1483 <= tmp_26_cast_fu_813_p1;
        input_17_addr_reg_1488 <= tmp_26_cast_fu_813_p1;
        input_18_addr_reg_1493 <= tmp_26_cast_fu_813_p1;
        input_19_addr_reg_1498 <= tmp_26_cast_fu_813_p1;
        input_1_addr_reg_1408 <= tmp_26_cast_fu_813_p1;
        input_20_addr_reg_1503 <= tmp_26_cast_fu_813_p1;
        input_21_addr_reg_1508 <= tmp_26_cast_fu_813_p1;
        input_22_addr_reg_1513 <= tmp_26_cast_fu_813_p1;
        input_23_addr_reg_1518 <= tmp_26_cast_fu_813_p1;
        input_24_addr_reg_1523 <= tmp_26_cast_fu_813_p1;
        input_25_addr_reg_1528 <= tmp_26_cast_fu_813_p1;
        input_26_addr_reg_1533 <= tmp_26_cast_fu_813_p1;
        input_27_addr_reg_1538 <= tmp_26_cast_fu_813_p1;
        input_28_addr_reg_1543 <= tmp_26_cast_fu_813_p1;
        input_29_addr_reg_1548 <= tmp_26_cast_fu_813_p1;
        input_2_addr_reg_1413 <= tmp_26_cast_fu_813_p1;
        input_30_addr_reg_1553 <= tmp_26_cast_fu_813_p1;
        input_31_addr_reg_1558 <= tmp_26_cast_fu_813_p1;
        input_3_addr_reg_1418 <= tmp_26_cast_fu_813_p1;
        input_4_addr_reg_1423 <= tmp_26_cast_fu_813_p1;
        input_5_addr_reg_1428 <= tmp_26_cast_fu_813_p1;
        input_6_addr_reg_1433 <= tmp_26_cast_fu_813_p1;
        input_7_addr_reg_1438 <= tmp_26_cast_fu_813_p1;
        input_8_addr_reg_1443 <= tmp_26_cast_fu_813_p1;
        input_9_addr_reg_1448 <= tmp_26_cast_fu_813_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (exitcond_flatten3_reg_1357 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        storemerge_1_reg_1643 <= storemerge_1_fu_1131_p3;
        storemerge_2_reg_1648 <= storemerge_2_fu_1152_p3;
        storemerge_3_reg_1653 <= storemerge_3_fu_1173_p3;
        storemerge_4_reg_1658 <= storemerge_4_fu_1194_p3;
        storemerge_5_reg_1663 <= storemerge_5_fu_1215_p3;
        storemerge_6_reg_1668 <= storemerge_6_fu_1236_p3;
        storemerge_7_reg_1673 <= storemerge_7_fu_1257_p3;
        storemerge_reg_1638 <= storemerge_fu_1110_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (exitcond_flatten3_fu_677_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tc_mid2_reg_1386 <= tc_mid2_fu_795_p3;
        tmp_mid2_v_reg_1371 <= tmp_mid2_v_fu_707_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (exitcond_flatten3_reg_1357 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        tmp_1_1_phi_reg_1568 <= tmp_1_1_phi_fu_887_p3;
        tmp_1_2_phi_reg_1578 <= tmp_1_2_phi_fu_919_p3;
        tmp_1_3_phi_reg_1588 <= tmp_1_3_phi_fu_951_p3;
        tmp_1_4_phi_reg_1598 <= tmp_1_4_phi_fu_983_p3;
        tmp_1_5_phi_reg_1608 <= tmp_1_5_phi_fu_1015_p3;
        tmp_1_6_phi_reg_1618 <= tmp_1_6_phi_fu_1047_p3;
        tmp_1_7_phi_reg_1628 <= tmp_1_7_phi_fu_1079_p3;
        tmp_36_reg_1563 <= ap_phi_mux_tmp_1_0_phi_phi_fu_636_p8[32'd31];
        tmp_37_reg_1573 <= tmp_1_1_phi_fu_887_p3[32'd31];
        tmp_38_reg_1583 <= tmp_1_2_phi_fu_919_p3[32'd31];
        tmp_39_reg_1593 <= tmp_1_3_phi_fu_951_p3[32'd31];
        tmp_40_reg_1603 <= tmp_1_4_phi_fu_983_p3[32'd31];
        tmp_41_reg_1613 <= tmp_1_5_phi_fu_1015_p3[32'd31];
        tmp_42_reg_1623 <= tmp_1_6_phi_fu_1047_p3[32'd31];
        tmp_43_reg_1633 <= tmp_1_7_phi_fu_1079_p3[32'd31];
    end
end

always @ (*) begin
    if ((exitcond_flatten3_fu_677_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (exitcond_flatten3_reg_1357 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_indvar_flatten3_phi_fu_582_p4 = indvar_flatten_next3_reg_1361;
    end else begin
        ap_phi_mux_indvar_flatten3_phi_fu_582_p4 = indvar_flatten3_reg_578;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (exitcond_flatten3_reg_1357 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_indvar_flatten_phi_fu_604_p4 = indvar_flatten_next_reg_1683;
    end else begin
        ap_phi_mux_indvar_flatten_phi_fu_604_p4 = indvar_flatten_reg_600;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (exitcond_flatten3_reg_1357 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_tc_phi_fu_615_p4 = tc_mid2_reg_1386;
    end else begin
        ap_phi_mux_tc_phi_fu_615_p4 = tc_reg_611;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (exitcond_flatten3_reg_1357 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_tm0_phi_fu_626_p4 = tm0_1_reg_1678;
    end else begin
        ap_phi_mux_tm0_phi_fu_626_p4 = tm0_reg_622;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_1002)) begin
        if ((tmp_35_reg_1391 == 2'd3)) begin
            ap_phi_mux_tmp_1_0_phi_phi_fu_636_p8 = input_24_q0;
        end else if ((tmp_35_reg_1391 == 2'd2)) begin
            ap_phi_mux_tmp_1_0_phi_phi_fu_636_p8 = input_16_q0;
        end else if ((tmp_35_reg_1391 == 2'd1)) begin
            ap_phi_mux_tmp_1_0_phi_phi_fu_636_p8 = input_8_q0;
        end else if ((tmp_35_reg_1391 == 2'd0)) begin
            ap_phi_mux_tmp_1_0_phi_phi_fu_636_p8 = input_0_q0;
        end else begin
            ap_phi_mux_tmp_1_0_phi_phi_fu_636_p8 = ap_phi_reg_pp0_iter0_tmp_1_0_phi_reg_633;
        end
    end else begin
        ap_phi_mux_tmp_1_0_phi_phi_fu_636_p8 = ap_phi_reg_pp0_iter0_tmp_1_0_phi_reg_633;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (exitcond_flatten3_reg_1357 == 1'd0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_tr_phi_fu_593_p4 = tmp_mid2_v_reg_1371;
    end else begin
        ap_phi_mux_tr_phi_fu_593_p4 = tr_reg_589;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        input_0_address0 = input_0_addr_reg_1403;
    end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        input_0_address0 = tmp_26_cast_fu_813_p1;
    end else begin
        input_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        input_0_ce0 = 1'b1;
    end else begin
        input_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_35_reg_1391 == 2'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        input_0_we0 = 1'b1;
    end else begin
        input_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        input_10_address0 = input_10_addr_reg_1453;
    end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        input_10_address0 = tmp_26_cast_fu_813_p1;
    end else begin
        input_10_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        input_10_ce0 = 1'b1;
    end else begin
        input_10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_35_reg_1391 == 2'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        input_10_we0 = 1'b1;
    end else begin
        input_10_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        input_11_address0 = input_11_addr_reg_1458;
    end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        input_11_address0 = tmp_26_cast_fu_813_p1;
    end else begin
        input_11_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        input_11_ce0 = 1'b1;
    end else begin
        input_11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_35_reg_1391 == 2'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        input_11_we0 = 1'b1;
    end else begin
        input_11_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        input_12_address0 = input_12_addr_reg_1463;
    end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        input_12_address0 = tmp_26_cast_fu_813_p1;
    end else begin
        input_12_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        input_12_ce0 = 1'b1;
    end else begin
        input_12_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_35_reg_1391 == 2'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        input_12_we0 = 1'b1;
    end else begin
        input_12_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        input_13_address0 = input_13_addr_reg_1468;
    end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        input_13_address0 = tmp_26_cast_fu_813_p1;
    end else begin
        input_13_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        input_13_ce0 = 1'b1;
    end else begin
        input_13_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_35_reg_1391 == 2'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        input_13_we0 = 1'b1;
    end else begin
        input_13_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        input_14_address0 = input_14_addr_reg_1473;
    end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        input_14_address0 = tmp_26_cast_fu_813_p1;
    end else begin
        input_14_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        input_14_ce0 = 1'b1;
    end else begin
        input_14_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_35_reg_1391 == 2'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        input_14_we0 = 1'b1;
    end else begin
        input_14_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        input_15_address0 = input_15_addr_reg_1478;
    end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        input_15_address0 = tmp_26_cast_fu_813_p1;
    end else begin
        input_15_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        input_15_ce0 = 1'b1;
    end else begin
        input_15_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_35_reg_1391 == 2'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        input_15_we0 = 1'b1;
    end else begin
        input_15_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        input_16_address0 = input_16_addr_reg_1483;
    end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        input_16_address0 = tmp_26_cast_fu_813_p1;
    end else begin
        input_16_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        input_16_ce0 = 1'b1;
    end else begin
        input_16_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_35_reg_1391 == 2'd2) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        input_16_we0 = 1'b1;
    end else begin
        input_16_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        input_17_address0 = input_17_addr_reg_1488;
    end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        input_17_address0 = tmp_26_cast_fu_813_p1;
    end else begin
        input_17_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        input_17_ce0 = 1'b1;
    end else begin
        input_17_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_35_reg_1391 == 2'd2) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        input_17_we0 = 1'b1;
    end else begin
        input_17_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        input_18_address0 = input_18_addr_reg_1493;
    end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        input_18_address0 = tmp_26_cast_fu_813_p1;
    end else begin
        input_18_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        input_18_ce0 = 1'b1;
    end else begin
        input_18_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_35_reg_1391 == 2'd2) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        input_18_we0 = 1'b1;
    end else begin
        input_18_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        input_19_address0 = input_19_addr_reg_1498;
    end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        input_19_address0 = tmp_26_cast_fu_813_p1;
    end else begin
        input_19_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        input_19_ce0 = 1'b1;
    end else begin
        input_19_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_35_reg_1391 == 2'd2) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        input_19_we0 = 1'b1;
    end else begin
        input_19_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        input_1_address0 = input_1_addr_reg_1408;
    end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        input_1_address0 = tmp_26_cast_fu_813_p1;
    end else begin
        input_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        input_1_ce0 = 1'b1;
    end else begin
        input_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_35_reg_1391 == 2'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        input_1_we0 = 1'b1;
    end else begin
        input_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        input_20_address0 = input_20_addr_reg_1503;
    end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        input_20_address0 = tmp_26_cast_fu_813_p1;
    end else begin
        input_20_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        input_20_ce0 = 1'b1;
    end else begin
        input_20_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_35_reg_1391 == 2'd2) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        input_20_we0 = 1'b1;
    end else begin
        input_20_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        input_21_address0 = input_21_addr_reg_1508;
    end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        input_21_address0 = tmp_26_cast_fu_813_p1;
    end else begin
        input_21_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        input_21_ce0 = 1'b1;
    end else begin
        input_21_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_35_reg_1391 == 2'd2) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        input_21_we0 = 1'b1;
    end else begin
        input_21_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        input_22_address0 = input_22_addr_reg_1513;
    end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        input_22_address0 = tmp_26_cast_fu_813_p1;
    end else begin
        input_22_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        input_22_ce0 = 1'b1;
    end else begin
        input_22_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_35_reg_1391 == 2'd2) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        input_22_we0 = 1'b1;
    end else begin
        input_22_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        input_23_address0 = input_23_addr_reg_1518;
    end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        input_23_address0 = tmp_26_cast_fu_813_p1;
    end else begin
        input_23_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        input_23_ce0 = 1'b1;
    end else begin
        input_23_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_35_reg_1391 == 2'd2) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        input_23_we0 = 1'b1;
    end else begin
        input_23_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        input_24_address0 = input_24_addr_reg_1523;
    end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        input_24_address0 = tmp_26_cast_fu_813_p1;
    end else begin
        input_24_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        input_24_ce0 = 1'b1;
    end else begin
        input_24_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_35_reg_1391 == 2'd3) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        input_24_we0 = 1'b1;
    end else begin
        input_24_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        input_25_address0 = input_25_addr_reg_1528;
    end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        input_25_address0 = tmp_26_cast_fu_813_p1;
    end else begin
        input_25_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        input_25_ce0 = 1'b1;
    end else begin
        input_25_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_35_reg_1391 == 2'd3) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        input_25_we0 = 1'b1;
    end else begin
        input_25_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        input_26_address0 = input_26_addr_reg_1533;
    end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        input_26_address0 = tmp_26_cast_fu_813_p1;
    end else begin
        input_26_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        input_26_ce0 = 1'b1;
    end else begin
        input_26_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_35_reg_1391 == 2'd3) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        input_26_we0 = 1'b1;
    end else begin
        input_26_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        input_27_address0 = input_27_addr_reg_1538;
    end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        input_27_address0 = tmp_26_cast_fu_813_p1;
    end else begin
        input_27_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        input_27_ce0 = 1'b1;
    end else begin
        input_27_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_35_reg_1391 == 2'd3) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        input_27_we0 = 1'b1;
    end else begin
        input_27_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        input_28_address0 = input_28_addr_reg_1543;
    end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        input_28_address0 = tmp_26_cast_fu_813_p1;
    end else begin
        input_28_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        input_28_ce0 = 1'b1;
    end else begin
        input_28_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_35_reg_1391 == 2'd3) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        input_28_we0 = 1'b1;
    end else begin
        input_28_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        input_29_address0 = input_29_addr_reg_1548;
    end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        input_29_address0 = tmp_26_cast_fu_813_p1;
    end else begin
        input_29_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        input_29_ce0 = 1'b1;
    end else begin
        input_29_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_35_reg_1391 == 2'd3) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        input_29_we0 = 1'b1;
    end else begin
        input_29_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        input_2_address0 = input_2_addr_reg_1413;
    end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        input_2_address0 = tmp_26_cast_fu_813_p1;
    end else begin
        input_2_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        input_2_ce0 = 1'b1;
    end else begin
        input_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_35_reg_1391 == 2'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        input_2_we0 = 1'b1;
    end else begin
        input_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        input_30_address0 = input_30_addr_reg_1553;
    end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        input_30_address0 = tmp_26_cast_fu_813_p1;
    end else begin
        input_30_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        input_30_ce0 = 1'b1;
    end else begin
        input_30_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_35_reg_1391 == 2'd3) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        input_30_we0 = 1'b1;
    end else begin
        input_30_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        input_31_address0 = input_31_addr_reg_1558;
    end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        input_31_address0 = tmp_26_cast_fu_813_p1;
    end else begin
        input_31_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        input_31_ce0 = 1'b1;
    end else begin
        input_31_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_35_reg_1391 == 2'd3) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        input_31_we0 = 1'b1;
    end else begin
        input_31_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        input_3_address0 = input_3_addr_reg_1418;
    end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        input_3_address0 = tmp_26_cast_fu_813_p1;
    end else begin
        input_3_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        input_3_ce0 = 1'b1;
    end else begin
        input_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_35_reg_1391 == 2'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        input_3_we0 = 1'b1;
    end else begin
        input_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        input_4_address0 = input_4_addr_reg_1423;
    end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        input_4_address0 = tmp_26_cast_fu_813_p1;
    end else begin
        input_4_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        input_4_ce0 = 1'b1;
    end else begin
        input_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_35_reg_1391 == 2'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        input_4_we0 = 1'b1;
    end else begin
        input_4_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        input_5_address0 = input_5_addr_reg_1428;
    end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        input_5_address0 = tmp_26_cast_fu_813_p1;
    end else begin
        input_5_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        input_5_ce0 = 1'b1;
    end else begin
        input_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_35_reg_1391 == 2'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        input_5_we0 = 1'b1;
    end else begin
        input_5_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        input_6_address0 = input_6_addr_reg_1433;
    end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        input_6_address0 = tmp_26_cast_fu_813_p1;
    end else begin
        input_6_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        input_6_ce0 = 1'b1;
    end else begin
        input_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_35_reg_1391 == 2'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        input_6_we0 = 1'b1;
    end else begin
        input_6_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        input_7_address0 = input_7_addr_reg_1438;
    end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        input_7_address0 = tmp_26_cast_fu_813_p1;
    end else begin
        input_7_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        input_7_ce0 = 1'b1;
    end else begin
        input_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_35_reg_1391 == 2'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        input_7_we0 = 1'b1;
    end else begin
        input_7_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        input_8_address0 = input_8_addr_reg_1443;
    end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        input_8_address0 = tmp_26_cast_fu_813_p1;
    end else begin
        input_8_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        input_8_ce0 = 1'b1;
    end else begin
        input_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_35_reg_1391 == 2'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        input_8_we0 = 1'b1;
    end else begin
        input_8_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        input_9_address0 = input_9_addr_reg_1448;
    end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        input_9_address0 = tmp_26_cast_fu_813_p1;
    end else begin
        input_9_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        input_9_ce0 = 1'b1;
    end else begin
        input_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_35_reg_1391 == 2'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        input_9_we0 = 1'b1;
    end else begin
        input_9_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((enable_read_read_fu_144_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((enable_read_read_fu_144_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((1'b0 == ap_block_pp0_stage0_subdone) & (exitcond_flatten3_fu_677_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (exitcond_flatten3_fu_677_p2 == 1'd1) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd5];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_1002 = ((1'b0 == ap_block_pp0_stage2) & (exitcond_flatten3_reg_1357 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

always @ (*) begin
    ap_condition_536 = ((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_phi_reg_pp0_iter0_tmp_1_0_phi_reg_633 = 'bx;

assign bound2_fu_671_p0 = bound2_fu_671_p00;

assign bound2_fu_671_p00 = TR;

assign bound2_fu_671_p1 = bound2_fu_671_p10;

assign bound2_fu_671_p10 = tmp_fu_651_p3;

assign bound2_fu_671_p2 = (bound2_fu_671_p0 * bound2_fu_671_p1);

assign bound_fu_659_p1 = tmp_fu_651_p3;

assign enable_read_read_fu_144_p2 = enable;

assign exitcond1_mid_fu_739_p2 = (not_exitcond_flatten_fu_727_p2 & exitcond_fu_733_p2);

assign exitcond_flatten3_fu_677_p2 = ((ap_phi_mux_indvar_flatten3_phi_fu_582_p4 == bound2_reg_1352) ? 1'b1 : 1'b0);

assign exitcond_flatten_fu_694_p2 = ((ap_phi_mux_indvar_flatten_phi_fu_604_p4 == bound_reg_1347) ? 1'b1 : 1'b0);

assign exitcond_fu_733_p2 = ((ap_phi_mux_tm0_phi_fu_626_p4 == 3'd4) ? 1'b1 : 1'b0);

assign indvar_flatten_next3_fu_682_p2 = (ap_phi_mux_indvar_flatten3_phi_fu_582_p4 + 66'd1);

assign indvar_flatten_next_fu_1269_p3 = ((exitcond_flatten_reg_1366[0:0] === 1'b1) ? 35'd1 : indvar_flatten_op_reg_1398);

assign indvar_flatten_op_fu_807_p2 = (ap_phi_mux_indvar_flatten_phi_fu_604_p4 + 35'd1);

assign input_0_d0 = storemerge_cast_fu_1275_p1;

assign input_10_d0 = storemerge_2_cast_fu_1289_p1;

assign input_11_d0 = storemerge_3_cast_fu_1296_p1;

assign input_12_d0 = storemerge_4_cast_fu_1303_p1;

assign input_13_d0 = storemerge_5_cast_fu_1310_p1;

assign input_14_d0 = storemerge_6_cast_fu_1317_p1;

assign input_15_d0 = storemerge_7_cast_fu_1324_p1;

assign input_16_d0 = storemerge_cast_fu_1275_p1;

assign input_17_d0 = storemerge_1_cast_fu_1282_p1;

assign input_18_d0 = storemerge_2_cast_fu_1289_p1;

assign input_19_d0 = storemerge_3_cast_fu_1296_p1;

assign input_1_d0 = storemerge_1_cast_fu_1282_p1;

assign input_20_d0 = storemerge_4_cast_fu_1303_p1;

assign input_21_d0 = storemerge_5_cast_fu_1310_p1;

assign input_22_d0 = storemerge_6_cast_fu_1317_p1;

assign input_23_d0 = storemerge_7_cast_fu_1324_p1;

assign input_24_d0 = storemerge_cast_fu_1275_p1;

assign input_25_d0 = storemerge_1_cast_fu_1282_p1;

assign input_26_d0 = storemerge_2_cast_fu_1289_p1;

assign input_27_d0 = storemerge_3_cast_fu_1296_p1;

assign input_28_d0 = storemerge_4_cast_fu_1303_p1;

assign input_29_d0 = storemerge_5_cast_fu_1310_p1;

assign input_2_d0 = storemerge_2_cast_fu_1289_p1;

assign input_30_d0 = storemerge_6_cast_fu_1317_p1;

assign input_31_d0 = storemerge_7_cast_fu_1324_p1;

assign input_3_d0 = storemerge_3_cast_fu_1296_p1;

assign input_4_d0 = storemerge_4_cast_fu_1303_p1;

assign input_5_d0 = storemerge_5_cast_fu_1310_p1;

assign input_6_d0 = storemerge_6_cast_fu_1317_p1;

assign input_7_d0 = storemerge_7_cast_fu_1324_p1;

assign input_8_d0 = storemerge_cast_fu_1275_p1;

assign input_9_d0 = storemerge_1_cast_fu_1282_p1;

assign not_exitcond_flatten_fu_727_p2 = (exitcond_flatten_fu_694_p2 ^ 1'd1);

assign sel_tmp10_fu_975_p3 = ((sel_tmp6_fu_869_p2[0:0] === 1'b1) ? input_12_q0 : sel_tmp9_fu_967_p3);

assign sel_tmp11_fu_999_p3 = ((sel_tmp_fu_856_p2[0:0] === 1'b1) ? input_5_q0 : input_29_q0);

assign sel_tmp12_fu_1007_p3 = ((sel_tmp6_fu_869_p2[0:0] === 1'b1) ? input_13_q0 : sel_tmp11_fu_999_p3);

assign sel_tmp13_fu_1031_p3 = ((sel_tmp_fu_856_p2[0:0] === 1'b1) ? input_6_q0 : input_30_q0);

assign sel_tmp14_fu_1039_p3 = ((sel_tmp6_fu_869_p2[0:0] === 1'b1) ? input_14_q0 : sel_tmp13_fu_1031_p3);

assign sel_tmp15_fu_1063_p3 = ((sel_tmp_fu_856_p2[0:0] === 1'b1) ? input_7_q0 : input_31_q0);

assign sel_tmp16_fu_1071_p3 = ((sel_tmp6_fu_869_p2[0:0] === 1'b1) ? input_15_q0 : sel_tmp15_fu_1063_p3);

assign sel_tmp1_fu_903_p3 = ((sel_tmp_fu_856_p2[0:0] === 1'b1) ? input_2_q0 : input_26_q0);

assign sel_tmp2_fu_911_p3 = ((sel_tmp6_fu_869_p2[0:0] === 1'b1) ? input_10_q0 : sel_tmp1_fu_903_p3);

assign sel_tmp3_fu_935_p3 = ((sel_tmp_fu_856_p2[0:0] === 1'b1) ? input_3_q0 : input_27_q0);

assign sel_tmp4_fu_943_p3 = ((sel_tmp6_fu_869_p2[0:0] === 1'b1) ? input_11_q0 : sel_tmp3_fu_935_p3);

assign sel_tmp5_fu_861_p3 = ((sel_tmp_fu_856_p2[0:0] === 1'b1) ? input_1_q0 : input_25_q0);

assign sel_tmp6_fu_869_p2 = ((tmp_35_reg_1391 == 2'd1) ? 1'b1 : 1'b0);

assign sel_tmp7_fu_874_p3 = ((sel_tmp6_fu_869_p2[0:0] === 1'b1) ? input_9_q0 : sel_tmp5_fu_861_p3);

assign sel_tmp8_fu_882_p2 = ((tmp_35_reg_1391 == 2'd2) ? 1'b1 : 1'b0);

assign sel_tmp9_fu_967_p3 = ((sel_tmp_fu_856_p2[0:0] === 1'b1) ? input_4_q0 : input_28_q0);

assign sel_tmp_fu_856_p2 = ((tmp_35_reg_1391 == 2'd0) ? 1'b1 : 1'b0);

assign storemerge_1_cast_fu_1282_p1 = $signed(storemerge_1_reg_1643);

assign storemerge_1_fu_1131_p3 = ((tmp_37_reg_1573[0:0] === 1'b1) ? 16'd0 : tmp_19_fu_1121_p4);

assign storemerge_2_cast_fu_1289_p1 = $signed(storemerge_2_reg_1648);

assign storemerge_2_fu_1152_p3 = ((tmp_38_reg_1583[0:0] === 1'b1) ? 16'd0 : tmp_20_fu_1142_p4);

assign storemerge_3_cast_fu_1296_p1 = $signed(storemerge_3_reg_1653);

assign storemerge_3_fu_1173_p3 = ((tmp_39_reg_1593[0:0] === 1'b1) ? 16'd0 : tmp_21_fu_1163_p4);

assign storemerge_4_cast_fu_1303_p1 = $signed(storemerge_4_reg_1658);

assign storemerge_4_fu_1194_p3 = ((tmp_40_reg_1603[0:0] === 1'b1) ? 16'd0 : tmp_22_fu_1184_p4);

assign storemerge_5_cast_fu_1310_p1 = $signed(storemerge_5_reg_1663);

assign storemerge_5_fu_1215_p3 = ((tmp_41_reg_1613[0:0] === 1'b1) ? 16'd0 : tmp_23_fu_1205_p4);

assign storemerge_6_cast_fu_1317_p1 = $signed(storemerge_6_reg_1668);

assign storemerge_6_fu_1236_p3 = ((tmp_42_reg_1623[0:0] === 1'b1) ? 16'd0 : tmp_24_fu_1226_p4);

assign storemerge_7_cast_fu_1324_p1 = $signed(storemerge_7_reg_1673);

assign storemerge_7_fu_1257_p3 = ((tmp_43_reg_1633[0:0] === 1'b1) ? 16'd0 : tmp_25_fu_1247_p4);

assign storemerge_cast_fu_1275_p1 = $signed(storemerge_reg_1638);

assign storemerge_fu_1110_p3 = ((tmp_36_reg_1563[0:0] === 1'b1) ? 16'd0 : tmp_18_fu_1100_p4);

assign tc_1_fu_745_p2 = (31'd1 + tc_mid_fu_699_p3);

assign tc_mid2_fu_795_p3 = ((exitcond1_mid_fu_739_p2[0:0] === 1'b1) ? tc_1_fu_745_p2 : tc_mid_fu_699_p3);

assign tc_mid_fu_699_p3 = ((exitcond_flatten_fu_694_p2[0:0] === 1'b1) ? 31'd0 : ap_phi_mux_tc_phi_fu_615_p4);

assign tm0_1_fu_1264_p2 = (tm0_mid2_reg_1376 + 3'd1);

assign tm0_mid2_fu_757_p3 = ((tmp_s_fu_751_p2[0:0] === 1'b1) ? 3'd0 : ap_phi_mux_tm0_phi_fu_626_p4);

assign tmp_16_fu_789_p2 = (tmp_22_cast_fu_719_p3 + tmp_34_fu_781_p3);

assign tmp_17_fu_1095_p1 = M;

assign tmp_17_fu_1095_p2 = ($signed(tmp_1_0_phi_reg_633) * $signed(tmp_17_fu_1095_p1));

assign tmp_18_fu_1100_p4 = {{tmp_17_fu_1095_p2[31:16]}};

assign tmp_19_fu_1121_p4 = {{tmp_25_1_fu_1117_p2[31:16]}};

assign tmp_1_1_phi_fu_887_p3 = ((sel_tmp8_fu_882_p2[0:0] === 1'b1) ? input_17_q0 : sel_tmp7_fu_874_p3);

assign tmp_1_2_phi_fu_919_p3 = ((sel_tmp8_fu_882_p2[0:0] === 1'b1) ? input_18_q0 : sel_tmp2_fu_911_p3);

assign tmp_1_3_phi_fu_951_p3 = ((sel_tmp8_fu_882_p2[0:0] === 1'b1) ? input_19_q0 : sel_tmp4_fu_943_p3);

assign tmp_1_4_phi_fu_983_p3 = ((sel_tmp8_fu_882_p2[0:0] === 1'b1) ? input_20_q0 : sel_tmp10_fu_975_p3);

assign tmp_1_5_phi_fu_1015_p3 = ((sel_tmp8_fu_882_p2[0:0] === 1'b1) ? input_21_q0 : sel_tmp12_fu_1007_p3);

assign tmp_1_6_phi_fu_1047_p3 = ((sel_tmp8_fu_882_p2[0:0] === 1'b1) ? input_22_q0 : sel_tmp14_fu_1039_p3);

assign tmp_1_7_phi_fu_1079_p3 = ((sel_tmp8_fu_882_p2[0:0] === 1'b1) ? input_23_q0 : sel_tmp16_fu_1071_p3);

assign tmp_20_fu_1142_p4 = {{tmp_25_2_fu_1138_p2[31:16]}};

assign tmp_21_fu_1163_p4 = {{tmp_25_3_fu_1159_p2[31:16]}};

assign tmp_22_cast_fu_719_p3 = {{tmp_30_fu_715_p1}, {5'd0}};

assign tmp_22_fu_1184_p4 = {{tmp_25_4_fu_1180_p2[31:16]}};

assign tmp_23_fu_1205_p4 = {{tmp_25_5_fu_1201_p2[31:16]}};

assign tmp_24_fu_1226_p4 = {{tmp_25_6_fu_1222_p2[31:16]}};

assign tmp_25_1_fu_1117_p1 = M;

assign tmp_25_1_fu_1117_p2 = ($signed(tmp_1_1_phi_reg_1568) * $signed(tmp_25_1_fu_1117_p1));

assign tmp_25_2_fu_1138_p1 = M;

assign tmp_25_2_fu_1138_p2 = ($signed(tmp_1_2_phi_reg_1578) * $signed(tmp_25_2_fu_1138_p1));

assign tmp_25_3_fu_1159_p1 = M;

assign tmp_25_3_fu_1159_p2 = ($signed(tmp_1_3_phi_reg_1588) * $signed(tmp_25_3_fu_1159_p1));

assign tmp_25_4_fu_1180_p1 = M;

assign tmp_25_4_fu_1180_p2 = ($signed(tmp_1_4_phi_reg_1598) * $signed(tmp_25_4_fu_1180_p1));

assign tmp_25_5_fu_1201_p1 = M;

assign tmp_25_5_fu_1201_p2 = ($signed(tmp_1_5_phi_reg_1608) * $signed(tmp_25_5_fu_1201_p1));

assign tmp_25_6_fu_1222_p1 = M;

assign tmp_25_6_fu_1222_p2 = ($signed(tmp_1_6_phi_reg_1618) * $signed(tmp_25_6_fu_1222_p1));

assign tmp_25_7_fu_1243_p1 = M;

assign tmp_25_7_fu_1243_p2 = ($signed(tmp_1_7_phi_reg_1628) * $signed(tmp_25_7_fu_1243_p1));

assign tmp_25_fu_1247_p4 = {{tmp_25_7_fu_1243_p2[31:16]}};

assign tmp_26_cast_fu_813_p1 = tmp_16_reg_1381;

assign tmp_30_fu_715_p1 = tmp_mid2_v_fu_707_p3[6:0];

assign tmp_31_fu_765_p1 = tc_1_fu_745_p2[11:0];

assign tmp_32_fu_769_p1 = ap_phi_mux_tc_phi_fu_615_p4[11:0];

assign tmp_33_fu_773_p3 = ((exitcond_flatten_fu_694_p2[0:0] === 1'b1) ? 12'd0 : tmp_32_fu_769_p1);

assign tmp_34_fu_781_p3 = ((exitcond1_mid_fu_739_p2[0:0] === 1'b1) ? tmp_31_fu_765_p1 : tmp_33_fu_773_p3);

assign tmp_35_fu_803_p1 = tm0_mid2_fu_757_p3[1:0];

assign tmp_fu_651_p3 = {{TC}, {2'd0}};

assign tmp_mid2_v_fu_707_p3 = ((exitcond_flatten_fu_694_p2[0:0] === 1'b1) ? tr_1_fu_688_p2 : ap_phi_mux_tr_phi_fu_593_p4);

assign tmp_s_fu_751_p2 = (exitcond_flatten_fu_694_p2 | exitcond1_mid_fu_739_p2);

assign tr_1_fu_688_p2 = (31'd1 + ap_phi_mux_tr_phi_fu_593_p4);

always @ (posedge ap_clk) begin
    bound_reg_1347[1:0] <= 2'b00;
    bound_reg_1347[34] <= 1'b0;
    bound2_reg_1352[1:0] <= 2'b00;
end

endmodule //relu
